[{"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want a flight that leaves from city_name1 to city_name0 that leaves in the afternoon or evening", "question-split": "test", "variables": {"departure_time0": "1200", "departure_time1": "1800", "departure_time2": "2200", "city_name0": "NEWARK", "city_name1": "CHARLOTTE"}, "alignment": "NO_ALIGN NO_ALIGN leaves NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN the NO_ALIGN leaves NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN evening evening evening want evening NO_ALIGN that NO_ALIGN leaves NO_ALIGN evening evening evening want in NO_ALIGN NO_ALIGN want leaves NO_ALIGN want NO_ALIGN leaves NO_ALIGN want want leaves NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN want leaves NO_ALIGN flight NO_ALIGN leaves NO_ALIGN in NO_ALIGN want in NO_ALIGN want NO_ALIGN in NO_ALIGN want want in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want leaves NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [10, 17], [5, 6], [1, 17], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [12, 17], [3, 4], [4, 5], [5, 17], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [0, 1], [11, 17], [6, 8], [13, 14], [4, 17], [7, 8], [2, 4]]}, {"text": "what flights depart from city_name1 to city_name0 that leave in the afternoon or leave in the evening", "question-split": "test", "variables": {"departure_time0": "1200", "departure_time1": "1800", "departure_time2": "2200", "city_name0": "NEWARK", "city_name1": "CHARLOTTE"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN flights NO_ALIGN depart NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN depart NO_ALIGN evening evening evening depart evening NO_ALIGN that NO_ALIGN depart NO_ALIGN evening evening evening depart in NO_ALIGN NO_ALIGN depart leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave depart leave NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN depart depart NO_ALIGN in NO_ALIGN leave NO_ALIGN in NO_ALIGN depart leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave depart leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN depart depart NO_ALIGN from NO_ALIGN leave NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [14, 15], [8, 17], [11, 12], [2, 17], [3, 5], [0, 1], [15, 17], [8, 12], [13, 14], [5, 7], [7, 17], [7, 8], [0, 2], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) OR ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "NEWARK", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much is a airline_code0 city_name0 to city_name1 flight_days0 nonstop flight", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "PITTSBURGH", "airline_code0": "US", "stops0": "0", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN how NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name1 NO_ALIGN how NO_ALIGN airline_code0 NO_ALIGN flight_days0 NO_ALIGN city_name1 NO_ALIGN how NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN how NO_ALIGN flight NO_ALIGN how NO_ALIGN flight much how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN much flight_days0 NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN flight much flight_days0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN much flight_days0 NO_ALIGN flight NO_ALIGN how NO_ALIGN city_name0 much flight_days0 NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN much flight_days0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN much flight_days0 NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN much how NO_ALIGN how NO_ALIGN how NO_ALIGN how much flight_days0 NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN much flight_days0 NO_ALIGN a NO_ALIGN how NO_ALIGN a NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [6, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [2, 3], [3, 6], [7, 11], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how many airports does city_name0 have", "question-split": "train", "variables": {"city_name0": "OAKLAND"}, "alignment": "NO_ALIGN many NO_ALIGN does airports NO_ALIGN airports NO_ALIGN NO_ALIGN airports NO_ALIGN airports NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN airports NO_ALIGN airports NO_ALIGN how NO_ALIGN airports have how NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 have how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN does NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( DISTINCT AIRPORTalias0.AIRPORT_CODE ) FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "show me the flights that leave on day_name0 mornings from city_name0 to city_name1 and include whether meals are offered and what the prices are", "question-split": "train", "variables": {"city_name0": "ATLANTA", "city_name1": "WASHINGTON", "day_name0": "THURSDAY", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show prices NO_ALIGN prices NO_ALIGN leave NO_ALIGN show NO_ALIGN leave NO_ALIGN meals NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN prices NO_ALIGN show NO_ALIGN prices NO_ALIGN show NO_ALIGN prices NO_ALIGN flights NO_ALIGN leave NO_ALIGN show NO_ALIGN prices NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave mornings leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN mornings leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave mornings leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN mornings leave NO_ALIGN from NO_ALIGN leave NO_ALIGN the mornings leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN the NO_ALIGN mornings day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN mornings leave NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN mornings prices NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN mornings prices NO_ALIGN day_name0 NO_ALIGN prices NO_ALIGN day_name0 mornings prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices mornings prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices mornings leave NO_ALIGN that day_name0 flights mornings day_name0 mornings leave NO_ALIGN show NO_ALIGN prices NO_ALIGN show NO_ALIGN", "constituency_parser_spans": [[6, 9], [22, 23], [10, 11], [5, 6], [5, 13], [8, 9], [18, 19], [15, 19], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [4, 13], [2, 13], [9, 11], [3, 4], [11, 13], [17, 19], [4, 5], [21, 23], [14, 24], [9, 10], [14, 15], [2, 3], [16, 19], [19, 20], [23, 24], [11, 12], [7, 9], [0, 1], [17, 18], [7, 8], [15, 24], [20, 24], [13, 14], [21, 22], [0, 13], [15, 16], [2, 4], [21, 24]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.FLIGHT_ID , FLIGHTalias0.MEAL_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "THURSDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a flight on tuesday which leaves from city_name1 to city_name0 state_name0 and that leaves in the afternoon", "question-split": "train", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "city_name0": "INDIANAPOLIS", "state_name0": "INDIANA", "city_name1": "SAN DIEGO", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN leaves NO_ALIGN a NO_ALIGN which NO_ALIGN leaves NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN on NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday would tuesday NO_ALIGN tuesday NO_ALIGN tuesday would tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN would leaves NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN leaves NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN NO_ALIGN leaves NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN would leaves NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would leaves NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would leaves NO_ALIGN afternoon afternoon afternoon would afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [15, 20], [0, 14], [5, 6], [17, 20], [8, 9], [18, 19], [11, 14], [3, 14], [1, 2], [16, 17], [8, 14], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [18, 20], [7, 14], [12, 14], [4, 5], [9, 10], [14, 15], [2, 3], [2, 14], [19, 20], [11, 12], [3, 5], [0, 1], [17, 18], [7, 8], [13, 14], [5, 7], [16, 20], [15, 16]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "INDIANA", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "SAN DIEGO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "airline_code0 flight_number0 leaving city_name1 at departure_time0 what is the arrival time in city_name0", "question-split": "train", "variables": {"departure_time0": "1628", "flight_number0": "269", "city_name0": "BALTIMORE", "city_name1": "BOSTON", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN flight_number0 NO_ALIGN the NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN flight_number0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flight_number0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving flight_number0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leaving flight_number0 NO_ALIGN in NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN leaving at NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 leaving at NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flight_number0 NO_ALIGN leaving NO_ALIGN at NO_ALIGN at NO_ALIGN leaving flight_number0 NO_ALIGN flight_number0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [11, 13], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1628", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "269", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights from city_name1 to city_name0 on friday with meal_description0 served", "question-split": "train", "variables": {"day_number0": "25", "month_number0": "6", "year0": "1991", "meal_description0": "BREAKFAST", "city_name0": "KANSAS CITY", "city_name1": "ST. PAUL"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN served NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday served NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 friday served NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN friday city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 friday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN friday flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN friday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 friday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN friday flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 8], [2, 4]]}, {"text": "what flights from city_name1 to city_name0 on friday with meal_description0 served", "question-split": "exclude", "variables": {"day_number0": "25", "month_number0": "6", "year0": "1991", "meal_description0": "LUNCH", "city_name0": "KANSAS CITY", "city_name1": "ST. PAUL"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN served NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday served NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 friday served NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN friday city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 friday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN friday flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN friday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 friday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN friday flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 8], [2, 4]]}, {"text": "what are the meal_description0 flights from city_name1 to city_name0 on wednesday may twelfth", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "meal_description0": "DINNER", "city_name0": "SAN DIEGO", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN may NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday may flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on may meal_description0 NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 may meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN may may NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 may may NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN may flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN may city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 may city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN may flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [9, 11], [11, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [7, 8], [5, 7], [2, 11], [3, 4]]}, {"text": "what flights from city_name1 to city_name0 on friday with meal_description0 served", "question-split": "exclude", "variables": {"day_number0": "25", "month_number0": "6", "year0": "1991", "meal_description0": "DINNER", "city_name0": "KANSAS CITY", "city_name1": "ST. PAUL"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN served NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday served NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 friday served NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN friday city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 friday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN friday flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN friday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 friday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN friday flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 8], [2, 4]]}, {"text": "what flights from city_name1 to city_name0 on friday with supper served", "question-split": "train", "variables": {"day_number0": "25", "month_number0": "6", "year0": "1991", "meal_description0": "DINNER", "city_name0": "KANSAS CITY", "city_name1": "ST. PAUL"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN flights NO_ALIGN flights NO_ALIGN served NO_ALIGN served NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on supper friday NO_ALIGN on NO_ALIGN on supper friday NO_ALIGN on NO_ALIGN on supper friday NO_ALIGN on NO_ALIGN friday NO_ALIGN on supper flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on supper served NO_ALIGN served NO_ALIGN flights NO_ALIGN served supper served NO_ALIGN served NO_ALIGN NO_ALIGN served NO_ALIGN NO_ALIGN supper city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 supper city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN supper flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN supper city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 supper city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN supper flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "25", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "KANSAS CITY", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ST. PAUL", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what flights are there from city_name1 to city_name0 on airline_code0 that arrive in city_name0 before arrival_time0", "question-split": "train", "variables": {"city_name0": "MIAMI", "arrival_time0": "1600", "city_name1": "CLEVELAND", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN are NO_ALIGN before NO_ALIGN there NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN there NO_ALIGN before NO_ALIGN before NO_ALIGN airline_code0 NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before arrive before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arrive arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 arrive arrival_time0 NO_ALIGN in NO_ALIGN before NO_ALIGN in NO_ALIGN arrive there NO_ALIGN before NO_ALIGN there NO_ALIGN before arrive there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrive arrival_time0 NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN arrive arrival_time0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [2, 16], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [14, 16], [13, 14], [10, 16], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1600", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the lowest one way fares from city_name0 to city_name1", "question-split": "test", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN are NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN the NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN fares from lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN way from lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the from lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN from fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares from are NO_ALIGN way NO_ALIGN way NO_ALIGN way from are NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from are NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what 's the lowest one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 's city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 's city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's way NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN the NO_ALIGN 's NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 's lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 's lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN 's lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare 's 's NO_ALIGN way NO_ALIGN lowest NO_ALIGN way 's 's NO_ALIGN from NO_ALIGN lowest NO_ALIGN the 's 's NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN 's way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN 's way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare 's NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way 's NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the 's NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the cheapest one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare from NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}, {"text": "show me the cheapest one way fares from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "SAN DIEGO", "city_name1": "MIAMI", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN show NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show fares NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN fares show cheapest NO_ALIGN show NO_ALIGN cheapest NO_ALIGN show show cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the show cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN show fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares show show NO_ALIGN show NO_ALIGN way NO_ALIGN show show show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the show show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [7, 11], [3, 4], [7, 9]]}, {"text": "i would like to find the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "OAKLAND", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would i NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find would i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find would cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find would cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN would cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare would cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way would cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the would cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN would way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN would way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare would NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way would NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the would NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [10, 12], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [5, 10], [13, 14], [5, 14], [7, 8]]}, {"text": "what are the lowest one way fares from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN are NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN the NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN fares from lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN way from lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the from lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN from fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares from are NO_ALIGN way NO_ALIGN way NO_ALIGN way from are NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from are NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the least expensive one way fare between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "BOSTON", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN way NO_ALIGN the NO_ALIGN and NO_ALIGN expensive NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between way NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN between expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive between expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive between expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN the between expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN between way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN between way NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive between and NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive between and NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the between and NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [8, 12], [5, 6], [2, 8], [4, 5], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [7, 8], [9, 12], [3, 5]]}, {"text": "find the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare from NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [1, 6], [0, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "what are the lowest one way fares from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "ATLANTA", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN are NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN the NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 from lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN fares from lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN way from lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the from lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN from fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares from are NO_ALIGN way NO_ALIGN way NO_ALIGN way from are NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from are NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the cheapest one way fare from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare from NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "i'd like to find the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find i'd city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd city_name1 NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find i'd city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find i'd cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find i'd cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare i'd cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way i'd cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the i'd cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN i'd way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare i'd NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way i'd NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [10, 12], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [5, 10], [13, 14], [5, 14], [7, 8]]}, {"text": "show me the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN show way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN show NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare show cheapest NO_ALIGN show NO_ALIGN cheapest NO_ALIGN show show cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the show cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN show way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare show show NO_ALIGN show NO_ALIGN way NO_ALIGN show show show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the show show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [7, 9]]}, {"text": "can you tell me the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN me NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN city_name0 NO_ALIGN tell you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN you cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare you cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way you cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the you cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN you way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN you way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare you me NO_ALIGN way NO_ALIGN way NO_ALIGN way you me NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the you me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [4, 9], [6, 7], [12, 13], [4, 13], [2, 13], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 8]]}, {"text": "i'd like to find the least expensive one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "PHILADELPHIA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find i'd city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd city_name1 NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find i'd city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd way NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN find NO_ALIGN expensive NO_ALIGN find i'd expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd expensive NO_ALIGN find NO_ALIGN expensive NO_ALIGN find i'd expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive i'd expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive i'd expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the i'd expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN i'd way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd way NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive i'd NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive i'd NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [11, 13], [5, 11], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [6, 8], [13, 14], [4, 15], [2, 15], [3, 4]]}, {"text": "what is the cheapest fare for a one way flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight for a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN flight for cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN flight for cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN for cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare for cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way for cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the for cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN the NO_ALIGN for way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN for way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare for a NO_ALIGN way NO_ALIGN way NO_ALIGN way for a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the for a NO_ALIGN flight NO_ALIGN a NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [6, 14], [1, 2], [6, 7], [12, 13], [6, 10], [1, 14], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 14], [7, 8]]}, {"text": "find the cheapest one way fare from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare from NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [1, 6], [0, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "i would like the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "DALLAS", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would i NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 would i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 would cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 would cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN would cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare would cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way would cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the would cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN would way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN would way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare would NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way would NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the would NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [6, 7], [1, 12], [10, 11], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [3, 8], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4]]}, {"text": "show me the cheapest fares from city_name0 to city_name1 one way", "question-split": "train", "variables": {"city_name0": "SAN DIEGO", "city_name1": "MIAMI", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN show NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show fares NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN fares show cheapest NO_ALIGN show NO_ALIGN cheapest NO_ALIGN show show cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the show cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN show fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares show show NO_ALIGN show NO_ALIGN way NO_ALIGN show show show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the show show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [2, 11], [8, 9], [9, 10], [0, 11], [2, 3], [7, 11], [2, 5], [3, 4]]}, {"text": "what is the least expensive one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the from expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive from NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [2, 8], [8, 9], [2, 12], [1, 2], [6, 7], [8, 10], [10, 12], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [7, 8], [1, 12], [8, 12], [3, 4]]}, {"text": "what is the cheapest one way ticket from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN ticket NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 ticket city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 ticket city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket ticket NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 ticket cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 ticket cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN ticket cheapest NO_ALIGN ticket NO_ALIGN cheapest NO_ALIGN ticket ticket cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way ticket cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the ticket cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN ticket ticket NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN ticket way NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket ticket NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way ticket NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the ticket NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "show me the cheapest one way fares from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "SAN DIEGO", "city_name1": "MIAMI", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN show NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show fares NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 show cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN fares show cheapest NO_ALIGN show NO_ALIGN cheapest NO_ALIGN show show cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the show cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN show fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares show show NO_ALIGN show NO_ALIGN way NO_ALIGN show show show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the show show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [7, 11], [3, 4], [7, 9]]}, {"text": "again i will repeat i want to make a one way flight from city_name0 to city_name1 will you tell me how much the fares are i would like the cheapest fare", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN want NO_ALIGN way NO_ALIGN way NO_ALIGN how NO_ALIGN want NO_ALIGN how NO_ALIGN want much how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN much a NO_ALIGN want NO_ALIGN a NO_ALIGN want much a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN much fares NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN want NO_ALIGN cheapest NO_ALIGN want much cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN much cheapest NO_ALIGN want NO_ALIGN cheapest NO_ALIGN want much cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN much cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN much cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN fares much cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way much cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the much cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN the NO_ALIGN much fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN much way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares much want NO_ALIGN way NO_ALIGN way NO_ALIGN way much want NO_ALIGN from NO_ALIGN how NO_ALIGN the much want NO_ALIGN flight NO_ALIGN a NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[5, 31], [22, 23], [10, 11], [5, 6], [28, 29], [22, 26], [8, 9], [15, 16], [18, 19], [7, 16], [30, 31], [4, 31], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [25, 26], [3, 31], [18, 31], [8, 16], [27, 28], [28, 31], [20, 22], [22, 24], [12, 14], [2, 31], [4, 5], [20, 31], [29, 30], [9, 10], [2, 3], [14, 15], [27, 31], [19, 20], [23, 24], [11, 12], [0, 1], [17, 18], [7, 8], [26, 27], [14, 16], [5, 16], [8, 12], [21, 22], [13, 14], [24, 25], [3, 4], [6, 16]]}, {"text": "would you tell me the cheapest one way fare from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "OAKLAND", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN me NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN city_name0 NO_ALIGN tell you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN you cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare you cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way you cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the you cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN you way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN you way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare you me NO_ALIGN way NO_ALIGN way NO_ALIGN way you me NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the you me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [4, 9], [6, 7], [10, 11], [4, 5], [5, 6], [12, 13], [11, 12], [4, 13], [8, 9], [2, 13], [9, 11], [2, 3], [9, 10], [3, 4], [11, 13]]}, {"text": "find me the cheapest one way fare i can get from city_name0 to city_name1", "question-split": "test", "variables": {"city_name0": "BOSTON", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN me NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN find NO_ALIGN city_name0 NO_ALIGN find can city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN can i NO_ALIGN find NO_ALIGN city_name1 NO_ALIGN find can i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN can way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find can cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN can cheapest NO_ALIGN find NO_ALIGN cheapest NO_ALIGN find can cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN can cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN can cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare can cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way can cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN get can cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN get NO_ALIGN can way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN can way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare can me NO_ALIGN way NO_ALIGN way NO_ALIGN way can me NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN get can me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [8, 9], [1, 2], [8, 14], [6, 7], [12, 13], [10, 12], [3, 4], [7, 14], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [2, 7], [13, 14], [7, 8]]}, {"text": "what is the cheapest one way fare from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare from NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the lowest cost for a one way ticket from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN ticket NO_ALIGN the NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 cost city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cost a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 cost a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cost ticket NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN the NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 cost lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cost lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 cost lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cost lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN cost lowest NO_ALIGN ticket NO_ALIGN lowest NO_ALIGN ticket cost lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN way cost lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the cost lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN cost ticket NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN cost way NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket cost a NO_ALIGN way NO_ALIGN way NO_ALIGN way cost a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the cost a NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [6, 10], [1, 14], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [7, 8]]}, {"text": "what're the lowest one way fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 what're city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN what're city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 what're city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN what're fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN the NO_ALIGN lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 what're lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN what're lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 what're lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN what're lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN what're lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN fares what're lowest NO_ALIGN way NO_ALIGN lowest NO_ALIGN way what're lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the what're lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN what're fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN what're way NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares what're NO_ALIGN NO_ALIGN way NO_ALIGN way NO_ALIGN way what're NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the what're NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the least expensive one way fare from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "BOSTON", "city_name1": "PITTSBURGH", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN way NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the from expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive from NO_ALIGN NO_ALIGN expensive NO_ALIGN way NO_ALIGN expensive from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [2, 8], [8, 9], [2, 12], [1, 2], [6, 7], [8, 10], [10, 12], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [7, 8], [1, 12], [8, 12], [3, 4]]}, {"text": "i'd like the cheapest one way fare from city_name0 to city_name1 please", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN the NO_ALIGN please NO_ALIGN way NO_ALIGN way NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 i'd please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 i'd city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd way NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN the NO_ALIGN cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 i'd cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 i'd cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare i'd cheapest NO_ALIGN way NO_ALIGN cheapest NO_ALIGN way i'd cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the i'd cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN i'd way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare i'd please NO_ALIGN way NO_ALIGN way NO_ALIGN way i'd please NO_ALIGN from NO_ALIGN please NO_ALIGN the i'd please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [12, 13], [1, 13], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [3, 8], [8, 9], [2, 13], [9, 10], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what type of aircraft leaves from city_name1 to city_name0 at departure_time0", "question-split": "train", "variables": {"city_name0": "WASHINGTON", "departure_time0": "900", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 of departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of leaves NO_ALIGN departure_time0 NO_ALIGN departure_time0 of leaves NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN of at NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 of at NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft of leaves NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft of leaves NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 4], [2, 3], [0, 4], [3, 4], [7, 8], [0, 2], [7, 9]]}, {"text": "on the departure_time0 flight from city_name1 to city_name0 what type of aircraft is used", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "800", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN the NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 used departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN used departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 used departure_time0 NO_ALIGN flight NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN used departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 used departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN used aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft used departure_time0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft used departure_time0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [8, 10], [10, 12], [3, 4], [12, 14], [4, 5], [1, 4], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [8, 12], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "WASHINGTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "900", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights go from city_name1 to city_name0 on tuesday morning", "question-split": "train", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "city_name0": "ST. LOUIS", "city_name1": "DENVER", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN on NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN go flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN go flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN go flights NO_ALIGN morning morning morning go morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}, {"text": "i need to fly from city_name1 to city_name0 on wednesday afternoon", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "MILWAUKEE", "city_name1": "ST. LOUIS", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday fly wednesday NO_ALIGN wednesday NO_ALIGN wednesday fly wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN fly fly NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN i NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN fly fly NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN fly NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN fly fly NO_ALIGN afternoon afternoon afternoon fly afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4]]}, {"text": "list flights from city_name1 to city_name0 on monday morning", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "NEWARK", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN morning morning morning from morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}, {"text": "give me the flights from city_name1 to city_name0 thursday evening", "question-split": "exclude", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "city_name0": "LOS ANGELES", "city_name1": "PITTSBURGH", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday from thursday NO_ALIGN thursday NO_ALIGN thursday from thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN evening evening evening from evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 6], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4], [7, 8], [2, 4]]}, {"text": "give me the flights from city_name1 to city_name0 on wednesday evening", "question-split": "test", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "MILWAUKEE", "city_name1": "PHOENIX", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN evening evening evening from evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [2, 4]]}, {"text": "give me a flight from city_name1 to city_name0 on tuesday morning", "question-split": "exclude", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "city_name0": "BALTIMORE", "city_name1": "CHARLOTTE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN me NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN on NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday a tuesday NO_ALIGN tuesday NO_ALIGN tuesday a tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN a a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a a NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a a NO_ALIGN morning morning morning a morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [2, 4]]}, {"text": "city_name1 to city_name0 sunday morning", "question-split": "train", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "CHARLOTTE", "city_name1": "TAMPA", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [1, 5], [2, 3], [3, 4]]}, {"text": "city_name1 to city_name0 wednesday morning", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "NEWARK", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday city_name1 wednesday NO_ALIGN wednesday NO_ALIGN wednesday city_name1 wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [0, 5], [2, 3], [3, 4]]}, {"text": "city_name1 to city_name0 sunday afternoon", "question-split": "train", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "CLEVELAND", "city_name1": "MIAMI", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN afternoon afternoon afternoon city_name1 afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"text": "city_name1 to city_name0 sunday afternoon", "question-split": "exclude", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "NEW YORK", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN afternoon afternoon afternoon city_name1 afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4]]}, {"text": "city_name1 to city_name0 sunday afternoon", "question-split": "exclude", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "MEMPHIS", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday city_name1 sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN afternoon afternoon afternoon city_name1 afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4]]}, {"text": "city_name1 to city_name0 on sunday afternoon", "question-split": "train", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "NEW YORK", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN on city_name1 sunday NO_ALIGN on NO_ALIGN on city_name1 sunday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 afternoon NO_ALIGN afternoon afternoon afternoon city_name1 afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4]]}, {"text": "city_name1 to city_name0 saturday morning", "question-split": "train", "variables": {"day_number0": "26", "month_number0": "7", "year0": "1991", "city_name0": "SEATTLE", "city_name1": "CHICAGO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN to NO_ALIGN to NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday city_name1 saturday NO_ALIGN saturday NO_ALIGN saturday city_name1 saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [0, 5], [2, 3], [3, 4]]}, {"text": "city_name1 to city_name0 saturday morning", "question-split": "exclude", "variables": {"day_number0": "26", "month_number0": "7", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "CHICAGO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN to NO_ALIGN to NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday city_name1 saturday NO_ALIGN saturday NO_ALIGN saturday city_name1 saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"text": "city_name1 to city_name0 thursday evening", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "city_name0": "LOS ANGELES", "city_name1": "PITTSBURGH", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday city_name1 thursday NO_ALIGN thursday NO_ALIGN thursday city_name1 thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN evening evening evening city_name1 evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4]]}, {"text": "please list all flights from city_name1 to city_name0 on monday morning", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "MEMPHIS", "city_name1": "NASHVILLE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday all monday NO_ALIGN monday NO_ALIGN monday all monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN all all NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all all NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all all NO_ALIGN morning morning morning all morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4]]}, {"text": "please list the flights from city_name1 to city_name0 on monday morning", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "MEMPHIS", "city_name1": "NASHVILLE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN morning morning morning from morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4]]}, {"text": "i would like to leave thursday morning from city_name1 to city_name0", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "city_name0": "TORONTO", "city_name1": "INDIANAPOLIS", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday would thursday NO_ALIGN thursday NO_ALIGN thursday would thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN would leave NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would leave NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would leave NO_ALIGN morning morning morning would morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [4, 11], [7, 9]]}, {"text": "i would like a flight on friday morning from city_name1 to city_name0", "question-split": "train", "variables": {"day_number0": "25", "month_number0": "6", "year0": "1991", "city_name0": "MONTREAL", "city_name1": "TORONTO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on NO_ALIGN friday NO_ALIGN friday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN friday NO_ALIGN on NO_ALIGN on NO_ALIGN friday NO_ALIGN friday NO_ALIGN on NO_ALIGN on would friday NO_ALIGN on NO_ALIGN on would friday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN would a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would a NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would a NO_ALIGN morning morning morning would morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [5, 8], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [6, 8], [1, 12], [7, 8]]}, {"text": "i need a morning flight from city_name1 to city_name0 on next monday", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "MILWAUKEE", "city_name1": "BURBANK", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN next NO_ALIGN on NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN next need next NO_ALIGN next NO_ALIGN next need next NO_ALIGN next NO_ALIGN next NO_ALIGN NO_ALIGN need a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN need a NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN need a NO_ALIGN morning morning morning need morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [2, 5], [7, 8], [9, 12]]}, {"text": "and a flight from city_name1 to city_name0 that leaves tuesday afternoon", "question-split": "train", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "city_name0": "BURBANK", "city_name1": "ST. LOUIS", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN leaves NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN a NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday a tuesday NO_ALIGN tuesday NO_ALIGN tuesday a tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN NO_ALIGN a leaves NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN leaves NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN leaves NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a leaves NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a leaves NO_ALIGN afternoon afternoon afternoon a afternoon NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [3, 5]]}, {"text": "find flight from city_name1 to city_name0 on monday am", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "PHOENIX", "city_name1": "SAN DIEGO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN am NO_ALIGN find NO_ALIGN NO_ALIGN NO_ALIGN am NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN am NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN am NO_ALIGN on NO_ALIGN monday NO_ALIGN am NO_ALIGN am NO_ALIGN monday NO_ALIGN monday am am NO_ALIGN monday NO_ALIGN monday am am NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN am am NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN am am NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN am am NO_ALIGN flight flight flight am flight NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ST. LOUIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "are meals ever served on airline_code0", "question-split": "train", "variables": {"airline_code0": "FF"}, "alignment": "NO_ALIGN NO_ALIGN ever NO_ALIGN ever NO_ALIGN ever NO_ALIGN meals NO_ALIGN ever NO_ALIGN ever NO_ALIGN served NO_ALIGN ever NO_ALIGN ever NO_ALIGN meals NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN meals NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_CODE IN ( SELECT FLIGHTalias0.MEAL_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) ;"], "variables": [{"example": "FF", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights depart city_name2 after departure_time0 and fly to city_name1 via city_name0", "question-split": "train", "variables": {"city_name0": "INDIANAPOLIS", "departure_time0": "1600", "city_name1": "WASHINGTON", "city_name2": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN city_name2 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN city_name2 NO_ALIGN flights NO_ALIGN depart NO_ALIGN city_name2 NO_ALIGN via NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN departure_time0 NO_ALIGN city_name2 NO_ALIGN departure_time0 fly city_name2 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN fly via NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN fly fly depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly depart NO_ALIGN flights NO_ALIGN via NO_ALIGN flights NO_ALIGN fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly depart NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN fly NO_ALIGN fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN fly depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN fly NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [8, 10], [7, 10], [3, 4], [2, 6], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "INDIANAPOLIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1600", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the restriction_code0 restriction", "question-split": "test", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"text": "explain restriction ap80", "question-split": "train", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN restriction ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [2, 3], [0, 3]]}, {"text": "what does ap57 mean", "question-split": "train", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN mean NO_ALIGN mean NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN NO_ALIGN mean NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "what does restriction restriction_code0 mean", "question-split": "train", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN mean NO_ALIGN mean NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4], [2, 4]]}, {"text": "what does restriction restriction_code0 mean", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN mean NO_ALIGN mean NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4], [2, 4]]}, {"text": "what 's restriction ap68", "question-split": "train", "variables": {"restriction_code0": "AP/68"}, "alignment": "NO_ALIGN restriction ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap68 NO_ALIGN ap68 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what is restriction restriction_code0", "question-split": "train", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what does restriction restriction_code0", "question-split": "dev", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what is restriction ap80", "question-split": "train", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN restriction ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap80 NO_ALIGN ap80 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what does restriction restriction_code0 mean", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN mean NO_ALIGN mean NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4], [2, 4]]}, {"text": "what is the meaning of restriction ap80", "question-split": "train", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN restriction meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN meaning NO_ALIGN meaning NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"text": "explain the restriction restriction_code0", "question-split": "dev", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [0, 4], [3, 4]]}, {"text": "what is restriction restriction_code0", "question-split": "exclude", "variables": {"restriction_code0": "AP/55"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "explain restriction restriction_code0", "question-split": "train", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [2, 3], [0, 3]]}, {"text": "what does restriction restriction_code0 mean", "question-split": "exclude", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN does mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN mean NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN mean NO_ALIGN mean NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4]]}, {"text": "what is the ap57 restriction", "question-split": "train", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"text": "explain the restriction restriction_code0", "question-split": "exclude", "variables": {"restriction_code0": "AP/80"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [0, 4], [3, 4]]}, {"text": "explain restriction restriction_code0 please", "question-split": "train", "variables": {"restriction_code0": "AP"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 4], [3, 4]]}, {"text": "what are restrictions restriction_code0", "question-split": "test", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restrictions NO_ALIGN restrictions NO_ALIGN restriction_code0 NO_ALIGN NO_ALIGN restriction_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "what does the restriction ap58 mean", "question-split": "dev", "variables": {"restriction_code0": "AP/58"}, "alignment": "NO_ALIGN does ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "what is restriction ap57", "question-split": "train", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what is restriction ap57", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap57 NO_ALIGN ap57 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what is restriction restriction_code0", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "what is restriction restriction_code0", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "what is restriction restriction_code0", "question-split": "exclude", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN restriction restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT RESTRICTIONalias0.ADVANCE_PURCHASE , RESTRICTIONalias0.APPLICATION , RESTRICTIONalias0.MAXIMUM_STAY , RESTRICTIONalias0.MINIMUM_STAY , RESTRICTIONalias0.NO_DISCOUNTS , RESTRICTIONalias0.RESTRICTION_CODE , RESTRICTIONalias0.SATURDAY_STAY_REQUIRED , RESTRICTIONalias0.STOPOVERS FROM RESTRICTION AS RESTRICTIONalias0 WHERE RESTRICTIONalias0.RESTRICTION_CODE = \"restriction_code0\" ;"], "variables": [{"example": "AP/57", "location": "unk", "name": "restriction_code0", "type": "restriction_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need information on flights from city_name0 state_name0 to city_name1 state_name1 i am interested in only those flights on airline_code0", "question-split": "train", "variables": {"city_name0": "KANSAS CITY", "city_name1": "SALT LAKE CITY", "state_name0": "MISSOURI", "state_name1": "UTAH", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN airline_code0 NO_ALIGN only NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name1 NO_ALIGN NO_ALIGN information NO_ALIGN in NO_ALIGN information NO_ALIGN in interested information NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN interested i NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in interested i NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN interested only NO_ALIGN from NO_ALIGN information NO_ALIGN information interested only NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN information interested state_name0 NO_ALIGN state_name1 NO_ALIGN information NO_ALIGN state_name1 interested state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN interested state_name1 NO_ALIGN state_name1 NO_ALIGN i NO_ALIGN state_name1 interested state_name1 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN interested only NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [15, 20], [8, 9], [15, 16], [18, 19], [5, 8], [1, 20], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [15, 18], [18, 20], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [14, 20], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [6, 8], [13, 14], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = \"state_name1\" ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "KANSAS CITY", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MISSOURI", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "UTAH", "location": "unk", "name": "state_name1", "type": "state_name"}, {"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list flights from city_name1 to city_name0 with fares on monday", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "MEMPHIS", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN fares NO_ALIGN fares NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday from monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from fares NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN with NO_ALIGN with NO_ALIGN with NO_ALIGN with NO_ALIGN with NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN monday from on NO_ALIGN monday NO_ALIGN monday from on NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN from fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares from flights NO_ALIGN with NO_ALIGN fares NO_ALIGN with NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [4, 6], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [2, 4], [3, 4], [7, 8], [0, 2]]}, {"text": "give me the flights and fares for a trip to city_name0 from city_name1 on wednesday", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "CLEVELAND", "city_name1": "MIAMI"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday for wednesday NO_ALIGN wednesday NO_ALIGN wednesday for wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN for flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN for flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN for fares NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN trip NO_ALIGN trip NO_ALIGN flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN for NO_ALIGN on NO_ALIGN on NO_ALIGN for NO_ALIGN for NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN for NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN for NO_ALIGN for NO_ALIGN wednesday NO_ALIGN wednesday for for NO_ALIGN wednesday NO_ALIGN wednesday for for NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN for trip NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares for flights NO_ALIGN flights NO_ALIGN trip NO_ALIGN flights NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [7, 15], [12, 13], [9, 11], [3, 4], [11, 13], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MEMPHIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list seating capacities of airline_code0 flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "SEATTLE", "city_name1": "SALT LAKE CITY", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN NO_ALIGN NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN seating NO_ALIGN airline_code0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN of flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN of flights NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE IN ( SELECT EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE FROM EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE IN ( SELECT FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) ) ;"], "variables": [{"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "can you show me economy class one way fares for flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "DALLAS", "day_number0": "16", "month_number0": "12", "year0": "1991", "city_name1": "OAKLAND", "economy0": "YES", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN class NO_ALIGN flights NO_ALIGN flights NO_ALIGN class NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you for NO_ALIGN month_number0 NO_ALIGN day_number0 you for NO_ALIGN month_number0 NO_ALIGN month_number0 you for NO_ALIGN month_number0 NO_ALIGN month_number0 you day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 you flights NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on you flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN you city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you class NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you fares NO_ALIGN class NO_ALIGN class NO_ALIGN class you economy NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares you flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show you flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN you day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 you day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 you day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 you on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 you economy NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on you fares NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN you fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [4, 18], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [15, 18], [3, 4], [16, 18], [11, 13], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [13, 14], [11, 15], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FARE_BASISalias1.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "16", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a connecting flight on airline_code0 on month_number0 day_number0 from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "SEATTLE", "day_number0": "5", "month_number0": "6", "year0": "1991", "city_name1": "CHICAGO", "airline_code0": "CO", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight need a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 need day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 need day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 need on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 need airline_code0 NO_ALIGN on NO_ALIGN on NO_ALIGN on need airline_code0 NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN need city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN need airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN need airline_code0 NO_ALIGN need NO_ALIGN need NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [5, 10], [13, 14], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.CONNECTIONS > connections0 ;"], "variables": [{"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "5", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CHICAGO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": ["Incorect SQL"], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all flights that go from city_name1 to city_name0 on tuesday and go from city_name0 to city_name1 on sunday", "question-split": "train", "variables": {"city_name0": "MIAMI", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 go city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday go all NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on go all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN go all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 go all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN that NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 go city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday go tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday go all NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on go all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN go all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 go all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [5, 12], [14, 18], [8, 10], [10, 12], [13, 20], [18, 20], [16, 18], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [6, 8], [14, 16], [13, 14], [5, 20], [3, 4], [2, 4]]}, {"text": "i need to fly from city_name1 to city_name0 leaving next wednesday and returning the following day", "question-split": "train", "variables": {"city_name0": "CHICAGO", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN and NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN wednesday NO_ALIGN returning NO_ALIGN wednesday NO_ALIGN returning NO_ALIGN the NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN i NO_ALIGN day NO_ALIGN city_name1 NO_ALIGN day following i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN returning NO_ALIGN next following fly NO_ALIGN next NO_ALIGN returning NO_ALIGN next following fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN following city_name0 NO_ALIGN day NO_ALIGN city_name0 NO_ALIGN day following city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN following fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN and NO_ALIGN NO_ALIGN i NO_ALIGN day NO_ALIGN city_name1 NO_ALIGN day following i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN returning NO_ALIGN next following fly NO_ALIGN next NO_ALIGN returning NO_ALIGN next following fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN following city_name0 NO_ALIGN day NO_ALIGN city_name0 NO_ALIGN day following city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN following fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [15, 16], [12, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [9, 11], [3, 4], [3, 16], [2, 16], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8]]}, {"text": "what flights from city_name1 to city_name0 leave next wednesday returning the following day", "question-split": "train", "variables": {"city_name0": "CHICAGO", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN wednesday NO_ALIGN returning NO_ALIGN wednesday NO_ALIGN returning NO_ALIGN flights NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN day NO_ALIGN leave NO_ALIGN day following leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN returning NO_ALIGN next following leave NO_ALIGN next NO_ALIGN returning NO_ALIGN next following leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN the NO_ALIGN following leave NO_ALIGN day NO_ALIGN leave NO_ALIGN day following leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN following leave NO_ALIGN from NO_ALIGN leave NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN leave NO_ALIGN day NO_ALIGN leave NO_ALIGN day following leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN next following returning NO_ALIGN next NO_ALIGN returning NO_ALIGN next following leave NO_ALIGN next NO_ALIGN returning NO_ALIGN next following leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN the NO_ALIGN following leave NO_ALIGN day NO_ALIGN leave NO_ALIGN day following leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN following leave NO_ALIGN from NO_ALIGN leave NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [12, 13], [2, 6], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [7, 8], [4, 6], [0, 6], [6, 13], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the cheapest flights round trip from city_name1 to city_name0 arriving in city_name0 before arrival_time0", "question-split": "train", "variables": {"city_name0": "SAN JOSE", "arrival_time0": "1900", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show arrival_time0 NO_ALIGN show NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN cheapest NO_ALIGN round NO_ALIGN flights NO_ALIGN arrival_time0 NO_ALIGN cheapest NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before arriving before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arriving NO_ALIGN arrival_time0 arriving arrival_time0 NO_ALIGN in NO_ALIGN before NO_ALIGN in NO_ALIGN arriving before NO_ALIGN before NO_ALIGN before NO_ALIGN before arriving before NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arrival_time0 NO_ALIGN from NO_ALIGN before NO_ALIGN in NO_ALIGN arriving round NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN round NO_ALIGN NO_ALIGN before NO_ALIGN cheapest NO_ALIGN before NO_ALIGN cheapest NO_ALIGN before NO_ALIGN cheapest NO_ALIGN before NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN cheapest NO_ALIGN before NO_ALIGN cheapest NO_ALIGN before arriving cheapest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving cheapest NO_ALIGN arriving NO_ALIGN arrival_time0 arriving cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in NO_ALIGN arriving cheapest NO_ALIGN before NO_ALIGN cheapest NO_ALIGN before arriving cheapest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving cheapest NO_ALIGN round NO_ALIGN cheapest NO_ALIGN round arriving cheapest NO_ALIGN show NO_ALIGN cheapest NO_ALIGN show arriving cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN in NO_ALIGN arriving round NO_ALIGN round NO_ALIGN round NO_ALIGN round arriving arrival_time0 NO_ALIGN show NO_ALIGN round NO_ALIGN show NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [15, 16], [8, 9], [0, 16], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [2, 16], [7, 14], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "SAN JOSE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1900", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "of all airlines which airline has the most arrivals in city_name0", "question-split": "train", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN airlines airline NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrivals NO_ALIGN airlines NO_ALIGN city_name0 NO_ALIGN arrivals NO_ALIGN city_name0 NO_ALIGN arrivals NO_ALIGN airline NO_ALIGN arrivals NO_ALIGN arrivals NO_ALIGN in NO_ALIGN arrivals NO_ALIGN in which arrivals NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN which arrivals NO_ALIGN in NO_ALIGN arrivals NO_ALIGN in airline airline arrivals NO_ALIGN airlines NO_ALIGN", "constituency_parser_spans": [[6, 9], [1, 3], [10, 11], [5, 6], [3, 11], [8, 9], [0, 3], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [9, 10], [2, 3], [4, 11], [0, 1], [7, 8]]}, {"text": "which airline has the most arrivals in city_name0", "question-split": "train", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN airline airline NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrivals NO_ALIGN airline NO_ALIGN city_name0 NO_ALIGN arrivals NO_ALIGN city_name0 NO_ALIGN arrivals NO_ALIGN airline NO_ALIGN arrivals NO_ALIGN arrivals NO_ALIGN in NO_ALIGN arrivals NO_ALIGN in which arrivals NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN which arrivals NO_ALIGN in NO_ALIGN arrivals NO_ALIGN in airline airline arrivals NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE GROUP BY FLIGHTalias0.AIRLINE_CODE ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all right would you let me know type of aircraft airline_code0 is using on the flights from city_name1 to city_name0 i would like to know the type of aircraft that they use on these flights before departure_time0 in the morning", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before know before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know all NO_ALIGN departure_time0 NO_ALIGN departure_time0 know all NO_ALIGN in NO_ALIGN before NO_ALIGN in NO_ALIGN know departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before know departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN know aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft know all NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft know all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[22, 23], [10, 11], [29, 40], [31, 40], [5, 6], [28, 29], [36, 37], [8, 9], [15, 16], [25, 27], [30, 31], [22, 40], [18, 19], [34, 35], [31, 32], [27, 29], [1, 2], [7, 20], [16, 17], [12, 20], [6, 7], [32, 33], [38, 40], [20, 21], [12, 13], [23, 40], [8, 10], [25, 26], [35, 40], [3, 4], [13, 20], [27, 28], [16, 18], [18, 20], [35, 36], [39, 40], [33, 35], [4, 5], [29, 30], [37, 38], [9, 10], [2, 3], [14, 15], [14, 20], [32, 35], [23, 24], [11, 12], [19, 20], [37, 40], [0, 1], [17, 18], [33, 34], [24, 40], [26, 27], [14, 16], [38, 39], [4, 40], [21, 22], [13, 14], [30, 40], [24, 25], [6, 20], [5, 20], [11, 20], [16, 20], [25, 40], [7, 8], [0, 2]]}, {"text": "what type of aircraft does airline_code0 fly from city_name1 to city_name0 before departure_time0", "question-split": "train", "variables": {"city_name0": "DENVER", "departure_time0": "1800", "city_name1": "ATLANTA", "airline_code0": "EA"}, "alignment": "NO_ALIGN does aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before fly before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN does NO_ALIGN fly fly NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly fly NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN fly NO_ALIGN fly departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly fly NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN fly NO_ALIGN fly aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft fly fly NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft fly fly NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 4], [1, 2], [6, 7], [12, 13], [4, 13], [9, 11], [0, 4], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [6, 13], [7, 8], [0, 2]]}, {"text": "airline_code0 flies from city_name1 to city_name0 what type of aircraft do you use before departure_time0", "question-split": "train", "variables": {"city_name0": "DENVER", "departure_time0": "1800", "city_name1": "ATLANTA", "airline_code0": "EA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before do before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN do airline_code0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 do airline_code0 NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN do departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before do departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN do airline_code0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN do aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft do airline_code0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft do airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [3, 4], [6, 15], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8], [2, 4]]}, {"text": "on airline_code0 flying from city_name1 to city_name0 before departure_time0 what type of aircraft is used", "question-split": "test", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before flying before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying airline_code0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 flying airline_code0 NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN flying departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before flying departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying airline_code0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN flying aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft flying airline_code0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft flying airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [7, 15], [9, 15], [12, 13], [9, 11], [3, 4], [8, 15], [11, 13], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [9, 13], [13, 14], [5, 7], [2, 15], [7, 8], [0, 2]]}, {"text": "well i'll try last time tell me the kind of aircraft airline_code0 flies from city_name1 to city_name0 before departure_time0 o'clock in the morning", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN time NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN tell NO_ALIGN before NO_ALIGN tell o'clock before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN o'clock time NO_ALIGN last NO_ALIGN departure_time0 o'clock time NO_ALIGN in NO_ALIGN before NO_ALIGN in NO_ALIGN o'clock departure_time0 NO_ALIGN tell NO_ALIGN departure_time0 NO_ALIGN tell o'clock departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock time NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN o'clock aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft o'clock time NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft o'clock time NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [5, 6], [8, 9], [15, 16], [18, 19], [6, 24], [3, 24], [1, 2], [16, 17], [8, 24], [6, 7], [12, 13], [20, 21], [8, 10], [10, 12], [3, 4], [16, 18], [19, 21], [22, 24], [13, 24], [4, 5], [18, 24], [9, 10], [19, 24], [2, 3], [14, 15], [2, 24], [11, 12], [19, 20], [23, 24], [0, 1], [17, 18], [4, 6], [14, 16], [13, 14], [21, 22], [7, 8], [21, 24]]}, {"text": "what type of aircraft does airline_code0 fly from city_name1 to city_name0 before departure_time0", "question-split": "exclude", "variables": {"city_name0": "DENVER", "departure_time0": "1800", "city_name1": "ATLANTA", "airline_code0": "EA"}, "alignment": "NO_ALIGN does aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before fly before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN does NO_ALIGN fly fly NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly fly NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN fly NO_ALIGN fly departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before fly departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly fly NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN fly NO_ALIGN fly aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft fly fly NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft fly fly NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 4], [1, 2], [6, 7], [12, 13], [4, 13], [9, 11], [0, 4], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [6, 13], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "shortest morning flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "CINCINNATI", "city_name1": "TAMPA", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN morning morning morning from morning NO_ALIGN from flights NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN flights NO_ALIGN shortest NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from shortest NO_ALIGN from NO_ALIGN shortest NO_ALIGN city_name0 from shortest NO_ALIGN city_name1 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN morning morning morning from morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [3, 5]]}, {"text": "shortest evening flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "TAMPA", "city_name1": "CINCINNATI", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from NO_ALIGN NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from NO_ALIGN NO_ALIGN evening evening evening from evening NO_ALIGN from NO_ALIGN NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from shortest NO_ALIGN from NO_ALIGN shortest NO_ALIGN city_name0 from shortest NO_ALIGN flight NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN evening evening evening from evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "CINCINNATI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "TAMPA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "on airline_code0 flight flight_number0 from city_name1 to city_name0 can you tell me what type of aircraft used before departure_time0", "question-split": "train", "variables": {"departure_time0": "1200", "flight_number0": "825", "city_name0": "DENVER", "city_name1": "ATLANTA", "airline_code0": "EA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN flight_number0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flight_number0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 you flight_number0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN you before NO_ALIGN tell NO_ALIGN before NO_ALIGN tell you before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you flight_number0 NO_ALIGN flight NO_ALIGN before NO_ALIGN me NO_ALIGN you departure_time0 NO_ALIGN tell NO_ALIGN departure_time0 NO_ALIGN tell you departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flight_number0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN you aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft you flight_number0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft you flight_number0 NO_ALIGN flight_number0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [8, 19], [18, 19], [12, 16], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [17, 19], [12, 14], [4, 5], [10, 19], [1, 4], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [0, 1], [17, 18], [6, 8], [4, 6], [14, 16], [13, 14], [0, 19], [12, 19], [7, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "825", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "EA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cheapest class_type0 class fare from city_name1 to city_name0 on airline_code0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "MIAMI", "day_number0": "24", "month_number0": "2", "year0": "1991", "city_name1": "CLEVELAND", "airline_code0": "US", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN class_type0 NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 from day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 from airline_code0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on from airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN from day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 from day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 from class NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on from class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class from class_type0 NO_ALIGN fare NO_ALIGN class_type0 NO_ALIGN fare from airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN from airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN from class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN from class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN from class_type0 NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN class NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN cheapest NO_ALIGN class NO_ALIGN class NO_ALIGN class NO_ALIGN class NO_ALIGN airline_code0 NO_ALIGN cheapest NO_ALIGN class_type0 NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from class NO_ALIGN month_number0 NO_ALIGN day_number0 from class NO_ALIGN month_number0 NO_ALIGN month_number0 from class NO_ALIGN month_number0 NO_ALIGN month_number0 from class NO_ALIGN month_number0 NO_ALIGN class NO_ALIGN month_number0 from cheapest NO_ALIGN on NO_ALIGN class NO_ALIGN on from cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 from cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the NO_ALIGN from month_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 from month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 from class NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN on from cheapest NO_ALIGN class NO_ALIGN class NO_ALIGN class from cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare from cheapest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN from cheapest NO_ALIGN class_type0 NO_ALIGN cheapest NO_ALIGN class_type0 NO_ALIGN from class NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN from cheapest NO_ALIGN class NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [9, 11], [3, 4], [11, 13], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [2, 7], [14, 16], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FARE_BASISalias2.CLASS_TYPE = \"class_type0\" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i am looking to get one air fare from city_name1 to city_name0 on a basic_type0 leaving month_number0 day_number0", "question-split": "train", "variables": {"basic_type0": "747", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "SAN FRANCISCO", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN on NO_ALIGN basic_type0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN month_number0 NO_ALIGN am NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN basic_type0 NO_ALIGN one NO_ALIGN one NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN leaving NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN NO_ALIGN basic_type0 NO_ALIGN air day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 air day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 air day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 air day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 air basic_type0 NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN basic_type0 air leaving NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN basic_type0 air leaving NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN air a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 air a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN air leaving NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN get NO_ALIGN air city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 air city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN air am NO_ALIGN month_number0 NO_ALIGN day_number0 air am NO_ALIGN month_number0 NO_ALIGN month_number0 air am NO_ALIGN month_number0 NO_ALIGN month_number0 air on NO_ALIGN month_number0 NO_ALIGN am NO_ALIGN month_number0 air month_number0 NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on air one NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 air one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare air leaving NO_ALIGN one NO_ALIGN one NO_ALIGN one air leaving NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [4, 18], [8, 9], [15, 16], [5, 8], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [10, 12], [15, 18], [3, 4], [16, 18], [4, 5], [13, 15], [9, 10], [12, 18], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [12, 15], [13, 14], [1, 18], [3, 18], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( AIRCRAFTalias0.BASIC_TYPE = \"basic_type0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "747", "location": "unk", "name": "basic_type0", "type": "basic_type"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "are there any airline_code0 flights flying into city_name0 between arrival_time1 and arrival_time0 in the afternoon", "question-split": "train", "variables": {"arrival_time0": "1600", "arrival_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time1 NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN airline_code0 NO_ALIGN arrival_time1 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time1 NO_ALIGN arrival_time1 arrival_time0 arrival_time0 into arrival_time1 NO_ALIGN arrival_time1 afternoon afternoon NO_ALIGN into there NO_ALIGN there NO_ALIGN there NO_ALIGN there into there NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN into arrival_time1 NO_ALIGN in NO_ALIGN there NO_ALIGN in NO_ALIGN into arrival_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [3, 4], [8, 15], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [6, 8], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}, {"text": "show me the flights on airline_code0 to city_name0 in the morning", "question-split": "train", "variables": {"arrival_time0": "1200", "arrival_time1": "0", "city_name0": "ATLANTA", "airline_code0": "TW"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN airline_code0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN in in in show flights NO_ALIGN in in in NO_ALIGN show in NO_ALIGN in NO_ALIGN in NO_ALIGN in show in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN show flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN show flights NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [2, 4]]}, {"text": "what about the airline_code0 flights arriving in city_name0 between arrival_time1 and arrival_time0 in the afternoon", "question-split": "train", "variables": {"arrival_time0": "1600", "arrival_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "EA"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time1 NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN airline_code0 NO_ALIGN arrival_time1 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time1 NO_ALIGN arrival_time1 arriving arrival_time0 about arrival_time1 NO_ALIGN arrival_time1 arriving arriving NO_ALIGN about in NO_ALIGN in NO_ALIGN in NO_ALIGN in about in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN about arrival_time1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN about arrival_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [3, 4], [8, 15], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [6, 8], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}, {"text": "show me all the airline_code0 flights to city_name0 between arrival_time1 and arrival_time0 in the afternoon", "question-split": "test", "variables": {"arrival_time0": "1600", "arrival_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "US"}, "alignment": "NO_ALIGN show arrival_time1 NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN airline_code0 NO_ALIGN arrival_time1 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time1 NO_ALIGN arrival_time1 arrival_time0 arrival_time0 between arrival_time1 NO_ALIGN arrival_time1 afternoon afternoon NO_ALIGN between in NO_ALIGN in NO_ALIGN in NO_ALIGN in between in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN between arrival_time1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN between arrival_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [0, 15], [12, 13], [3, 4], [8, 15], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [6, 8], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1600", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1200", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "do you have a flight from city_name1 to city_name0 nonstop on a manufacturer0 basic_type0 arriving city_name0 around 7pm", "question-split": "train", "variables": {"arrival_time0": "1930", "arrival_time1": "1830", "basic_type0": "757", "manufacturer0": "BOEING", "city_name0": "BALTIMORE", "city_name1": "ATLANTA", "stops0": "0"}, "alignment": "NO_ALIGN have around NO_ALIGN a NO_ALIGN you NO_ALIGN manufacturer0 NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN basic_type0 NO_ALIGN have NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN arriving around arriving do around NO_ALIGN arriving around arriving NO_ALIGN do manufacturer0 NO_ALIGN basic_type0 NO_ALIGN NO_ALIGN basic_type0 NO_ALIGN do manufacturer0 NO_ALIGN manufacturer0 NO_ALIGN NO_ALIGN manufacturer0 NO_ALIGN do basic_type0 NO_ALIGN basic_type0 NO_ALIGN manufacturer0 NO_ALIGN basic_type0 do around NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN do a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight do a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN do around NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN do do NO_ALIGN flight NO_ALIGN do NO_ALIGN flight do do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN do around NO_ALIGN from NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do around NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [11, 14], [11, 19], [1, 2], [16, 17], [2, 19], [6, 7], [12, 13], [3, 4], [4, 5], [14, 19], [10, 19], [9, 10], [2, 3], [14, 15], [16, 19], [19, 20], [11, 12], [3, 5], [0, 1], [17, 18], [13, 14], [5, 7], [7, 8]]}, {"text": "could you please find me a nonstop flight from city_name1 to city_name0 on a manufacturer0 basic_type0 arriving at 7pm", "question-split": "train", "variables": {"arrival_time0": "1930", "arrival_time1": "1830", "basic_type0": "757", "manufacturer0": "BOEING", "city_name0": "BALTIMORE", "city_name1": "ATLANTA", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN could NO_ALIGN me NO_ALIGN you NO_ALIGN manufacturer0 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN basic_type0 NO_ALIGN NO_ALIGN NO_ALIGN could NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN could NO_ALIGN arriving arriving arriving could could NO_ALIGN arriving arriving arriving NO_ALIGN could manufacturer0 NO_ALIGN basic_type0 NO_ALIGN NO_ALIGN basic_type0 NO_ALIGN could manufacturer0 NO_ALIGN manufacturer0 NO_ALIGN NO_ALIGN manufacturer0 NO_ALIGN could basic_type0 NO_ALIGN basic_type0 NO_ALIGN manufacturer0 NO_ALIGN basic_type0 could could NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN basic_type0 NO_ALIGN could a NO_ALIGN at NO_ALIGN a NO_ALIGN at could a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN could could NO_ALIGN flight NO_ALIGN a NO_ALIGN at NO_ALIGN could at NO_ALIGN at NO_ALIGN at NO_ALIGN at could at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could could NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN could could NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [5, 8], [1, 2], [16, 17], [12, 20], [6, 7], [20, 21], [12, 13], [3, 20], [8, 10], [10, 12], [13, 16], [3, 4], [13, 20], [18, 20], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [0, 1], [17, 18], [13, 14], [5, 20], [16, 20], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND AIRCRAFTalias0.BASIC_TYPE = \"basic_type0\" AND AIRCRAFTalias0.MANUFACTURER = \"manufacturer0\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "1930", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1830", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "757", "location": "unk", "name": "basic_type0", "type": "basic_type"}, {"example": "BOEING", "location": "unk", "name": "manufacturer0", "type": "manufacturer"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what kind of aircraft is used on the class_type0 class airline_code0 flight from city_name2 to city_name1 with a city_name0 stopover", "question-split": "train", "variables": {"city_name0": "DALLAS", "class_type0": "FIRST", "city_name1": "SAN FRANCISCO", "city_name2": "PHILADELPHIA", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN flight NO_ALIGN city_name2 NO_ALIGN flight stopover city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN stopover class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN stopover class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class stopover class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 stopover stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN the stopover airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 stopover airline_code0 NO_ALIGN class_type0 NO_ALIGN stopover NO_ALIGN class_type0 NO_ALIGN stopover a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight stopover a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN stopover airline_code0 NO_ALIGN flight NO_ALIGN a NO_ALIGN the NO_ALIGN stopover city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight stopover city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN stopover airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN stopover aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft stopover airline_code0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft stopover airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [7, 12], [17, 20], [8, 9], [15, 16], [7, 16], [18, 19], [2, 4], [1, 2], [16, 17], [6, 7], [12, 13], [0, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [4, 20], [19, 20], [11, 12], [0, 1], [17, 18], [7, 8], [14, 16], [13, 14], [5, 20], [16, 20], [3, 4], [6, 16]]}, {"text": "what kind of aircraft is used on the class_type0 class airline_code0 flight from city_name2 to city_name1 stopping in city_name0", "question-split": "train", "variables": {"city_name0": "DALLAS", "class_type0": "FIRST", "city_name1": "SAN FRANCISCO", "city_name2": "PHILADELPHIA", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in used city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN used class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN used class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class used class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 used city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in used airline_code0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 used airline_code0 NO_ALIGN class_type0 NO_ALIGN city_name2 NO_ALIGN class_type0 NO_ALIGN used city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in used city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN used airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN used in NO_ALIGN in NO_ALIGN in NO_ALIGN in used in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN used airline_code0 NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN used aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft used airline_code0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft used airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [7, 12], [5, 19], [8, 9], [15, 16], [18, 19], [2, 4], [1, 2], [16, 17], [6, 7], [4, 19], [12, 13], [0, 4], [17, 19], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [7, 8], [14, 16], [13, 14], [3, 4], [6, 16]]}, {"text": "i'm going to leave city_name2 and i want to go to city_name1 and i want to fly class_type0 class airline_code0 and i want a stop in city_name0 can you please tell me what type of aircraft you will be flying", "question-split": "train", "variables": {"city_name0": "DALLAS", "class_type0": "FIRST", "city_name1": "SAN FRANCISCO", "city_name2": "PHILADELPHIA", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline_code0 NO_ALIGN i'm NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN i'm NO_ALIGN city_name2 NO_ALIGN i'm going city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN going class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN going class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class going class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 going city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in going i'm NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 going i'm NO_ALIGN class_type0 NO_ALIGN city_name2 NO_ALIGN class_type0 NO_ALIGN going leave NO_ALIGN i'm NO_ALIGN leave NO_ALIGN i'm going leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going i'm NO_ALIGN in NO_ALIGN leave NO_ALIGN in NO_ALIGN going leave NO_ALIGN i'm NO_ALIGN leave NO_ALIGN i'm going leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN going i'm NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN in NO_ALIGN going aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft going i'm NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft going i'm NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[3, 6], [33, 37], [21, 22], [9, 10], [17, 21], [4, 5], [27, 28], [35, 36], [33, 41], [7, 8], [14, 15], [39, 40], [24, 26], [29, 30], [33, 34], [10, 13], [17, 18], [30, 31], [26, 28], [1, 2], [7, 13], [31, 32], [15, 16], [5, 6], [35, 37], [11, 12], [19, 20], [39, 41], [24, 25], [15, 21], [2, 3], [26, 27], [33, 35], [30, 41], [38, 39], [34, 35], [0, 21], [14, 21], [24, 28], [8, 13], [11, 13], [18, 20], [28, 29], [3, 4], [36, 37], [22, 28], [8, 9], [40, 41], [1, 2], [31, 41], [13, 14], [16, 21], [22, 23], [10, 11], [18, 19], [0, 1], [32, 33], [16, 17], [23, 28], [37, 38], [25, 26], [20, 21], [7, 21], [12, 13], [4, 6], [23, 24], [9, 13], [38, 41], [6, 7]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please list fares for all the flights from city_name1 to city_name0 on month_number0 the day_number0", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA", "day_number0": "1", "month_number0": "8", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN flights NO_ALIGN all NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for for NO_ALIGN month_number0 NO_ALIGN day_number0 for for NO_ALIGN month_number0 NO_ALIGN month_number0 for for NO_ALIGN month_number0 NO_ALIGN month_number0 for day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 for all NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on for all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN for please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 for please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 for day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 for day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 for on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 for for NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on for fares NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 for fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares for all NO_ALIGN flights NO_ALIGN fares NO_ALIGN flights for all NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[3, 15], [4, 7], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [4, 15], [11, 15], [7, 8]]}, {"text": "i would like your rates between city_name1 and city_name0 on month_number0 day_number0", "question-split": "test", "variables": {"city_name0": "BOSTON", "day_number0": "3", "month_number0": "9", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN would NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN rates NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN between NO_ALIGN would NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN i NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 rates i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN rates rates NO_ALIGN month_number0 NO_ALIGN day_number0 rates rates NO_ALIGN month_number0 NO_ALIGN month_number0 rates rates NO_ALIGN month_number0 NO_ALIGN month_number0 rates day_number0 NO_ALIGN month_number0 NO_ALIGN rates NO_ALIGN month_number0 rates and NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on rates and NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN rates city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 rates city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN rates day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 rates day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 rates day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 rates on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 rates month_number0 NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on rates would NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 rates between NO_ALIGN between NO_ALIGN would NO_ALIGN between rates and NO_ALIGN between NO_ALIGN between NO_ALIGN between rates and NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[5, 9], [6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [1, 12], [7, 8], [9, 12]]}, {"text": "show me fares for flights from city_name1 to city_name0 on month_number0 day_number0 year0", "question-split": "train", "variables": {"city_name0": "SEATTLE", "day_number0": "1", "month_number0": "7", "year0": "1991", "city_name1": "MINNEAPOLIS"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 year0 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN year0 for NO_ALIGN month_number0 NO_ALIGN day_number0 year0 for NO_ALIGN month_number0 NO_ALIGN month_number0 year0 for NO_ALIGN month_number0 NO_ALIGN month_number0 year0 day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 year0 flights NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on year0 flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN year0 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 year0 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN year0 day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 year0 day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 year0 for NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on year0 fares NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 year0 fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares year0 flights NO_ALIGN show NO_ALIGN fares NO_ALIGN show year0 flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [5, 7], [0, 13], [7, 8]]}, {"text": "show prices for all flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "DALLAS", "day_number0": "29", "month_number0": "7", "year0": "1991", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show prices NO_ALIGN prices NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN prices NO_ALIGN show NO_ALIGN prices NO_ALIGN month_number0 NO_ALIGN prices NO_ALIGN flights NO_ALIGN all NO_ALIGN show NO_ALIGN prices NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for for NO_ALIGN month_number0 NO_ALIGN day_number0 for for NO_ALIGN month_number0 NO_ALIGN month_number0 for for NO_ALIGN month_number0 NO_ALIGN month_number0 for prices NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 for all NO_ALIGN on NO_ALIGN prices NO_ALIGN on for all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN for all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 for all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 for day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 for day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 for on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 for prices NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on for prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices for prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices for all NO_ALIGN show NO_ALIGN prices NO_ALIGN show for all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [3, 5], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [0, 2], [9, 12], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "month_number0 day_number0 what is the cost of a round trip ticket traveling class_type0 class on airline_code0 leaving from city_name1 going to city_name0", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "day_number0": "7", "month_number0": "7", "year0": "1991", "city_name1": "DENVER", "airline_code0": "UA", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN round NO_ALIGN round NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN month_number0 NO_ALIGN going NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN going NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN class_type0 NO_ALIGN round NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN class_type0 NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 traveling a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN traveling day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 traveling day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 traveling day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 traveling day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 traveling airline_code0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on traveling airline_code0 NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN traveling city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 traveling city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN traveling airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN traveling going NO_ALIGN month_number0 NO_ALIGN day_number0 traveling going NO_ALIGN month_number0 NO_ALIGN month_number0 traveling going NO_ALIGN month_number0 NO_ALIGN month_number0 traveling going NO_ALIGN month_number0 NO_ALIGN going NO_ALIGN month_number0 traveling class NO_ALIGN trip NO_ALIGN going NO_ALIGN on traveling round NO_ALIGN class NO_ALIGN class NO_ALIGN class traveling round NO_ALIGN round NO_ALIGN round NO_ALIGN round traveling airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN traveling airline_code0 NO_ALIGN class_type0 NO_ALIGN round NO_ALIGN class_type0 NO_ALIGN traveling class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN traveling round NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN traveling round NO_ALIGN round round round NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [2, 22], [18, 19], [4, 22], [19, 22], [7, 11], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [11, 22], [16, 22], [6, 22], [3, 4], [17, 19], [12, 14], [20, 22], [4, 5], [9, 10], [2, 3], [17, 22], [14, 15], [7, 22], [11, 12], [19, 20], [0, 1], [17, 18], [4, 6], [3, 22], [14, 16], [13, 14], [21, 22], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "7", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights are there on wednesday evening from city_name0 to airport_code0", "question-split": "dev", "variables": {"airport_code0": "SFO", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "DENVER", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN airport_code0 there NO_ALIGN are NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN airport_code0 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN there wednesday NO_ALIGN wednesday NO_ALIGN wednesday there wednesday NO_ALIGN wednesday NO_ALIGN wednesday there wednesday NO_ALIGN wednesday NO_ALIGN wednesday there wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday there there NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on there there NO_ALIGN city_name0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN there there NO_ALIGN there NO_ALIGN there NO_ALIGN there there there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN airport_code0 NO_ALIGN there NO_ALIGN airport_code0 NO_ALIGN there there NO_ALIGN evening evening evening there evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "SFO", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "i would like a list of round trip flights between city_name1 and city_name0 state_name0 for the day_number0 and the day_number1 of month_number0", "question-split": "train", "variables": {"day_number0": "27", "month_number0": "12", "year0": "1991", "day_number1": "28", "city_name0": "ORLANDO", "state_name0": "FLORIDA", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN for NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN like NO_ALIGN month_number0 NO_ALIGN trip NO_ALIGN flights NO_ALIGN flights NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN like NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between for NO_ALIGN month_number0 NO_ALIGN day_number0 between for NO_ALIGN month_number0 NO_ALIGN month_number0 between for NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN day_number1 NO_ALIGN day_number0 NO_ALIGN day_number1 between day_number0 NO_ALIGN day_number1 NO_ALIGN for NO_ALIGN day_number1 between trip NO_ALIGN trip NO_ALIGN day_number0 NO_ALIGN month_number0 between round NO_ALIGN day_number1 NO_ALIGN trip NO_ALIGN day_number1 between round NO_ALIGN round round round NO_ALIGN between round NO_ALIGN round NO_ALIGN round NO_ALIGN round between flights NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 between flights NO_ALIGN between NO_ALIGN round NO_ALIGN between NO_ALIGN and NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number1 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between for NO_ALIGN month_number0 NO_ALIGN day_number1 between for NO_ALIGN month_number0 NO_ALIGN month_number0 between for NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN day_number1 NO_ALIGN day_number0 NO_ALIGN day_number1 between day_number0 NO_ALIGN day_number1 NO_ALIGN for NO_ALIGN day_number1 between trip NO_ALIGN trip NO_ALIGN day_number0 NO_ALIGN month_number0 between round NO_ALIGN day_number1 NO_ALIGN trip NO_ALIGN day_number1 between round NO_ALIGN round round round NO_ALIGN between round NO_ALIGN round NO_ALIGN round NO_ALIGN round between flights NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 between flights NO_ALIGN between NO_ALIGN round NO_ALIGN between NO_ALIGN NO_ALIGN between like NO_ALIGN round round round NO_ALIGN between like NO_ALIGN round NO_ALIGN like NO_ALIGN round between flights NO_ALIGN between NO_ALIGN like NO_ALIGN between NO_ALIGN between a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 between a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the between state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 between state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN between city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between flights NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[6, 9], [18, 22], [10, 11], [5, 6], [8, 9], [15, 16], [2, 22], [18, 19], [14, 22], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [6, 22], [5, 22], [3, 4], [18, 20], [15, 22], [9, 14], [12, 14], [20, 22], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [3, 5], [0, 1], [15, 17], [17, 18], [1, 22], [3, 22], [13, 14], [21, 22], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 , STATE AS STATEalias0 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FAREalias1.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "28", "location": "unk", "name": "day_number1", "type": "day_number"}, {"example": "ORLANDO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FLORIDA", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "find airline_code0 flight from city_name1 to city_name0 around 630pm", "question-split": "train", "variables": {"departure_time0": "1900", "departure_time1": "1800", "city_name0": "NASHVILLE", "city_name1": "NEWARK", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN around NO_ALIGN find NO_ALIGN airline_code0 NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN around around flight from around NO_ALIGN around around around NO_ALIGN from around NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from around NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN around NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from around NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "1900", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "NASHVILLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEWARK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "does airline_code0 serve city_name0", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "MONTREAL", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "INDIANAPOLIS", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "PHILADELPHIA", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "what are all the flights on airline_code0 in and out of city_name0", "question-split": "test", "variables": {"city_name0": "FORT WORTH", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN out NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN airline_code0 NO_ALIGN out NO_ALIGN NO_ALIGN NO_ALIGN out NO_ALIGN in NO_ALIGN in NO_ALIGN out out in NO_ALIGN in NO_ALIGN in NO_ALIGN in out in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN and NO_ALIGN out NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN out out city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in out city_name0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN out out NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [1, 12], [7, 12], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [2, 5], [3, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "CLEVELAND", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "CHARLOTTE", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "BALTIMORE", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "NASHVILLE", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "does airline_code0 serve city_name0", "question-split": "exclude", "variables": {"city_name0": "INDIANAPOLIS", "airline_code0": "YX"}, "alignment": "NO_ALIGN does airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN serve NO_ALIGN airline_code0 NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 city_name0 serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve city_name0 serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN NO_ALIGN NO_ALIGN city_name0 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "YX", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show all day_name0 morning flights from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "DENVER", "day_name0": "TUESDAY", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 all city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN all all NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 all all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 all all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN morning morning morning all morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [1, 5], [2, 3], [1, 9], [3, 4], [7, 9]]}, {"text": "what flights are there from city_name1 to city_name0 early on day_name0 mornings", "question-split": "test", "variables": {"city_name0": "WASHINGTON", "day_name0": "THURSDAY", "city_name1": "ATLANTA", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there mornings city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN mornings day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN mornings there NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 mornings there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN early NO_ALIGN mornings there NO_ALIGN there NO_ALIGN there NO_ALIGN there mornings there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN mornings there NO_ALIGN from NO_ALIGN there NO_ALIGN early NO_ALIGN mornings there NO_ALIGN early early early mornings early NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [10, 11], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [6, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [0, 2]]}, {"text": "show me the evening flights from city_name1 to city_name0 on day_name0", "question-split": "train", "variables": {"city_name0": "WASHINGTON", "day_name0": "WEDNESDAY", "city_name1": "ATLANTA", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN show flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN show flights NO_ALIGN evening evening evening show evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "show all day_name0 morning flights from city_name1 to city_name0", "question-split": "exclude", "variables": {"city_name0": "BOSTON", "day_name0": "WEDNESDAY", "city_name1": "DENVER", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 all city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN all all NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 all all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 all all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN morning morning morning all morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [1, 5], [2, 3], [1, 9], [0, 9], [3, 4], [7, 9]]}, {"text": "are there day_name0 morning flights between city_name1 and city_name0", "question-split": "train", "variables": {"city_name0": "BOSTON", "day_name0": "WEDNESDAY", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN between there NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 between there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN between there NO_ALIGN there NO_ALIGN there NO_ALIGN there between there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between there NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN between there NO_ALIGN morning morning morning between morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [3, 4]]}, {"text": "please list the day_name0 morning flights from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "ATLANTA", "day_name0": "MONDAY", "city_name1": "KANSAS CITY", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN from flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 from please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN from flights NO_ALIGN morning morning morning from morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [1, 10], [3, 4]]}, {"text": "show the flights from city_name1 to city_name0 on a day_name0 morning", "question-split": "train", "variables": {"city_name0": "ORLANDO", "day_name0": "THURSDAY", "city_name1": "MILWAUKEE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 a a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN a day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN a flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 a flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN a city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 a city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN a flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN a flights NO_ALIGN morning morning morning a morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [0, 11], [2, 3], [7, 11], [3, 4], [3, 5]]}, {"text": "please list the day_name0 morning flights from city_name1 to city_name0", "question-split": "exclude", "variables": {"city_name0": "ST. PAUL", "day_name0": "THURSDAY", "city_name1": "ST. LOUIS", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN from flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 from please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN from flights NO_ALIGN morning morning morning from morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "what afternoon flights are available from city_name1 to city_name0 on day_name0", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "day_name0": "WEDNESDAY", "city_name1": "DENVER", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 available city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN available flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 available flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN available available NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available flights NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN available flights NO_ALIGN afternoon afternoon afternoon available afternoon NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [0, 3], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights does airline_code0 have from city_name1 to city_name0 after departure_time0 o'clock", "question-split": "train", "variables": {"city_name0": "DENVER", "departure_time0": "500", "city_name1": "DALLAS", "airline_code0": "DL"}, "alignment": "NO_ALIGN does o'clock NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN does NO_ALIGN o'clock o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock o'clock NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock o'clock NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [7, 8], [0, 2], [9, 12]]}, {"text": "is there a flight from city_name1 to city_name0 on airline_code0 leaving after departure_time0 o'clock in the afternoon", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1200", "city_name1": "DENVER", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN there o'clock departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN o'clock o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock o'clock NO_ALIGN flight NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN o'clock there NO_ALIGN there NO_ALIGN there NO_ALIGN there o'clock there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock o'clock NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN o'clock o'clock NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [11, 14], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [4, 6], [13, 14], [7, 8], [2, 4]]}, {"text": "what airline_code0 flights from city_name1 to city_name0 depart city_name1 after departure_time0 on wednesday", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "departure_time0": "1800", "city_name1": "PHOENIX", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN depart NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 depart departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN depart depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 depart depart NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN depart departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 depart departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN depart depart NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN depart depart NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [4, 5], [5, 6], [12, 13], [5, 7], [11, 12], [8, 9], [9, 10], [9, 11], [2, 3], [11, 13], [3, 4], [7, 8], [3, 5]]}, {"text": "list all flights on airline_code0 from city_name1 to city_name0 which depart after departure_time0", "question-split": "train", "variables": {"city_name0": "CHICAGO", "departure_time0": "2134", "city_name1": "DENVER", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN depart NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 which departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 which depart NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN which departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 which departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which depart NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN which depart NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [3, 7], [1, 2], [6, 7], [12, 13], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [9, 13], [7, 8], [7, 9], [5, 7], [0, 13], [3, 4]]}, {"text": "all right what airline_code0 flights leave from city_name1 to city_name0 after departure_time0 in the afternoon", "question-split": "train", "variables": {"city_name0": "SAN DIEGO", "departure_time0": "1330", "city_name1": "INDIANAPOLIS", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN airline_code0 NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN leave all leave NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN all leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 all leave NO_ALIGN in NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN all leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave all leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all leave NO_ALIGN from NO_ALIGN leave NO_ALIGN in NO_ALIGN all leave NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [12, 15], [6, 8], [13, 14], [7, 8], [0, 2]]}, {"text": "i'd like a flight on airline_code0 from city_name1 to city_name0 that leaves after departure_time0", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "815", "city_name1": "DALLAS", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN after NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN after NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 i'd departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd after NO_ALIGN departure_time0 NO_ALIGN departure_time0 i'd after NO_ALIGN flight NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN i'd departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 i'd departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd after NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN i'd after NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[3, 15], [5, 9], [10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [1, 2], [6, 7], [9, 15], [12, 13], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [3, 5], [12, 15], [13, 14], [5, 7], [2, 15], [11, 15], [7, 8]]}, {"text": "which airline_code0 flights depart from city_name1 heading toward city_name0 after departure_time0", "question-split": "train", "variables": {"city_name0": "BOSTON", "departure_time0": "1200", "city_name1": "SAN FRANCISCO", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN depart NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 which departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 which depart NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN which departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 which departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which depart NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN which depart NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 6], [10, 11], [4, 5], [5, 6], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [0, 3], [3, 4], [7, 9]]}, {"text": "what flights does airline_code0 have from city_name1 to city_name0 after departure_time0", "question-split": "train", "variables": {"city_name0": "DALLAS", "departure_time0": "500", "city_name1": "DENVER", "airline_code0": "DL"}, "alignment": "NO_ALIGN does have NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN have NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 have departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN does NO_ALIGN have have NO_ALIGN departure_time0 NO_ALIGN departure_time0 have have NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN have departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 have departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN have have NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN have have NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2], [7, 9]]}, {"text": "show flights leaving city_name1 to city_name0 on airline_code0 that leave after departure_time0", "question-split": "train", "variables": {"city_name0": "CLEVELAND", "departure_time0": "1200", "city_name1": "MIAMI", "airline_code0": "US"}, "alignment": "NO_ALIGN show leave NO_ALIGN show NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN airline_code0 NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN leave leaving leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving leave NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN leaving leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave leaving leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving leave NO_ALIGN leaving NO_ALIGN leave NO_ALIGN leaving NO_ALIGN leaving leave NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [8, 12], [4, 5], [5, 6], [10, 11], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [0, 2], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "500", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list flight_days0 flights from city_name1 to city_name0 with class_type0 class service", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "class_type0": "FIRST", "city_name1": "DENVER", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class NO_ALIGN service NO_ALIGN flights NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 from flight_days0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from service NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN from service NO_ALIGN class NO_ALIGN service NO_ALIGN class from service NO_ALIGN service NO_ALIGN service NO_ALIGN service from flights NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class_type0 from flights NO_ALIGN city_name1 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN from flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 from flight_days0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [0, 11], [2, 3], [7, 11], [3, 4], [3, 7], [0, 3], [7, 8], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all flights from city_name0 to anywhere on airline_code0 around 1pm", "question-split": "train", "variables": {"departure_time0": "1330", "departure_time1": "1230", "city_name0": "CHARLOTTE", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN 1pm NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN airline_code0 NO_ALIGN 1pm NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN 1pm NO_ALIGN 1pm around flights all 1pm NO_ALIGN 1pm around around NO_ALIGN all to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 all 1pm NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN all around NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN city_name0 all around NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all 1pm NO_ALIGN from NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN all 1pm NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [2, 3], [2, 4], [3, 4], [11, 12], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1330", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1230", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the number of flights arriving in city_name0 city_name1 from city_name2 before arrival_time0", "question-split": "train", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "arrival_time0": "1200", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN flights NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN flights NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN city_name2 NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN city_name2 NO_ALIGN flights NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before arriving before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving city_name2 NO_ALIGN before NO_ALIGN city_name2 NO_ALIGN before arriving city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arrival_time0 NO_ALIGN in NO_ALIGN before NO_ALIGN in arriving arrival_time0 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arriving NO_ALIGN arrival_time0 NO_ALIGN arriving before NO_ALIGN before NO_ALIGN before NO_ALIGN before arriving before NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN arriving arrival_time0 NO_ALIGN from NO_ALIGN before NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[6, 9], [1, 3], [10, 11], [5, 6], [3, 11], [8, 9], [1, 11], [1, 2], [6, 7], [12, 13], [9, 11], [5, 11], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [7, 8], [3, 4]]}], "sql": ["SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the flights from city_name1 to city_name0 after departure_time0 on a day_name0", "question-split": "train", "variables": {"day_name0": "MONDAY", "departure_time0": "1400", "city_name0": "SAN FRANCISCO", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN a flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 a flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN a departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 a departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN a flights NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN a departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 a departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN a flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [3, 5], [5, 7], [7, 8], [9, 12]]}, {"text": "show me flights leaving from city_name1 colorado to city_name0 pennsylvania on day_name0 after departure_time0", "question-split": "train", "variables": {"day_name0": "WEDNESDAY", "departure_time0": "1700", "city_name0": "PITTSBURGH", "city_name1": "DENVER"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [0, 14], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [8, 10], [7, 10], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 7], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "MONDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "1400", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "are there any nonstop flights from city_name1 to city_name0 that arrive before arrival_time0", "question-split": "test", "variables": {"city_name0": "DENVER", "arrival_time0": "1700", "city_name1": "PHILADELPHIA", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN are NO_ALIGN before NO_ALIGN there NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN there NO_ALIGN before NO_ALIGN before NO_ALIGN flights NO_ALIGN any NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before nonstop before NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop any NO_ALIGN arrive arrival_time0 arrival_time0 nonstop any NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN nonstop there NO_ALIGN before NO_ALIGN there NO_ALIGN before nonstop there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN nonstop any NO_ALIGN from NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN nonstop any NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [7, 8]]}, {"text": "list nonstop flights from city_name1 to city_name0 which arrive before arrival_time0", "question-split": "train", "variables": {"city_name0": "DALLAS", "arrival_time0": "0", "city_name1": "HOUSTON", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN flights NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN which NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before which before NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which arrival_time0 NO_ALIGN arrive arrival_time0 arrival_time0 which arrival_time0 NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN which before NO_ALIGN before NO_ALIGN before NO_ALIGN before which before NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which arrival_time0 NO_ALIGN from NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN which arrival_time0 NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [3, 5], [0, 1], [7, 8]]}, {"text": "list nonstop flights from city_name1 to city_name0 arriving by arrival_time0", "question-split": "train", "variables": {"city_name0": "DENVER", "arrival_time0": "1800", "city_name1": "BURBANK", "stops0": "0"}, "alignment": "NO_ALIGN by by NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN arrival_time0 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN arrival_time0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN by NO_ALIGN by NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 arriving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving by NO_ALIGN arriving arriving arrival_time0 arriving by NO_ALIGN city_name1 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN arriving arrival_time0 NO_ALIGN city_name0 NO_ALIGN arrival_time0 NO_ALIGN city_name0 arriving arrival_time0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving by NO_ALIGN from NO_ALIGN arrival_time0 NO_ALIGN city_name0 NO_ALIGN arriving by NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [5, 6], [4, 5], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1700", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all flights from city_name1 to city_name0 that arrive at arrival_time0 o'clock next tuesday", "question-split": "test", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "arrival_time0": "1800", "city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock NO_ALIGN o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrival_time0 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN that NO_ALIGN tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrival_time0 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrive NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN o'clock arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN at o'clock city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock arrival_time0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN o'clock at NO_ALIGN at NO_ALIGN at NO_ALIGN at o'clock at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock arrival_time0 NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [6, 13], [7, 8], [2, 4]]}, {"text": "all flights from city_name1 to city_name0 that arrive at arrival_time0 o'clock next tuesday", "question-split": "exclude", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "arrival_time0": "1800", "city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock NO_ALIGN o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrival_time0 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN that NO_ALIGN tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN next o'clock tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrival_time0 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next o'clock arrive NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN o'clock arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN o'clock city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN at o'clock city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock arrival_time0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN o'clock at NO_ALIGN at NO_ALIGN at NO_ALIGN at o'clock at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock arrival_time0 NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [6, 13], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME = arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1800", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight from city_name1 to city_name0 state_name0 next monday", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "NORTH CAROLINA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight need a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need next NO_ALIGN next NO_ALIGN next need next NO_ALIGN next NO_ALIGN next need next NO_ALIGN next NO_ALIGN next need next NO_ALIGN next NO_ALIGN next NO_ALIGN next need a NO_ALIGN next NO_ALIGN next NO_ALIGN next need a NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 need state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 need state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN need city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [10, 11], [4, 5], [5, 6], [9, 10], [8, 9], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4], [7, 9]]}, {"text": "on monday i'd like to travel from city_name1 to city_name0 state_name0", "question-split": "train", "variables": {"city_name0": "DETROIT", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "MICHIGAN", "city_name1": "LAS VEGAS"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 travel city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN travel monday NO_ALIGN monday NO_ALIGN monday travel monday NO_ALIGN monday NO_ALIGN monday travel monday NO_ALIGN monday NO_ALIGN monday travel monday NO_ALIGN on NO_ALIGN monday NO_ALIGN on travel NO_ALIGN NO_ALIGN on NO_ALIGN monday NO_ALIGN on travel NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 travel state_name0 NO_ALIGN state_name0 NO_ALIGN city_name1 NO_ALIGN state_name0 travel state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN travel city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 travel city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [7, 9], [0, 1], [3, 12], [7, 8], [0, 2], [9, 12]]}, {"text": "may i have a listing of flights on monday from city_name1 to city_name0 state_name0 please", "question-split": "test", "variables": {"city_name0": "LONG BEACH", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "CALIFORNIA", "city_name1": "MINNEAPOLIS"}, "alignment": "NO_ALIGN have have NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN flights NO_ALIGN have NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 listing a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN listing monday NO_ALIGN monday NO_ALIGN monday listing monday NO_ALIGN monday NO_ALIGN monday listing monday NO_ALIGN monday NO_ALIGN monday listing monday NO_ALIGN on NO_ALIGN monday NO_ALIGN on listing have NO_ALIGN on NO_ALIGN monday NO_ALIGN on listing have NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN city_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN listing please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 listing please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing have NO_ALIGN from NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [3, 5], [12, 15], [13, 14], [5, 7], [2, 15], [11, 15], [7, 8]]}, {"text": "may i have a listing of flights from city_name1 to city_name0 state_name0 on tuesday", "question-split": "train", "variables": {"city_name0": "LONG BEACH", "day_number0": "22", "month_number0": "3", "year0": "1991", "state_name0": "CALIFORNIA", "city_name1": "MINNEAPOLIS"}, "alignment": "NO_ALIGN have have NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN have NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 listing a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing have NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on listing have NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN city_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN listing city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 listing city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing have NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [7, 8], [9, 12]]}, {"text": "list all the flights from city_name1 to city_name0 state_name0 that leave next monday", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "NORTH CAROLINA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN flights NO_ALIGN leave NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave all leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all next NO_ALIGN next NO_ALIGN next all next NO_ALIGN next NO_ALIGN next all next NO_ALIGN next NO_ALIGN next all next NO_ALIGN next NO_ALIGN next NO_ALIGN next all leave NO_ALIGN next NO_ALIGN next NO_ALIGN next all leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN the all state_name0 NO_ALIGN state_name0 NO_ALIGN leave NO_ALIGN state_name0 all state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN all leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave all leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all leave NO_ALIGN from NO_ALIGN leave NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [1, 4], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [4, 6], [0, 13], [6, 13], [7, 8]]}, {"text": "may i have a listing of flights from city_name1 to city_name0 state_name0 on tuesday", "question-split": "exclude", "variables": {"city_name0": "COLUMBUS", "day_number0": "22", "month_number0": "3", "year0": "1991", "state_name0": "OHIO", "city_name1": "LONG BEACH"}, "alignment": "NO_ALIGN have have NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN have NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 listing a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday listing have NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on listing have NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN city_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN listing city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 listing city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing have NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [7, 8], [9, 12]]}, {"text": "do you have a flight from city_name1 to city_name0 state_name0 next monday", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "NORTH CAROLINA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN have have NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN have NO_ALIGN have NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight do a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN do next NO_ALIGN next NO_ALIGN next do next NO_ALIGN next NO_ALIGN next do next NO_ALIGN next NO_ALIGN next do next NO_ALIGN next NO_ALIGN next NO_ALIGN next do have NO_ALIGN next NO_ALIGN next NO_ALIGN next do have NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 do state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 do state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN do do NO_ALIGN flight NO_ALIGN do NO_ALIGN flight do do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN do have NO_ALIGN from NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [3, 10], [10, 12], [8, 10], [7, 10], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [5, 7], [7, 8]]}, {"text": "i need to fly from city_name1 to city_name0 state_name0 next monday", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "NORTH CAROLINA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN i NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 fly i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN fly next NO_ALIGN next NO_ALIGN next fly next NO_ALIGN next NO_ALIGN next fly next NO_ALIGN next NO_ALIGN next fly next NO_ALIGN next NO_ALIGN next NO_ALIGN next fly fly NO_ALIGN next NO_ALIGN next NO_ALIGN next fly fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN fly fly state_name0 NO_ALIGN state_name0 NO_ALIGN i NO_ALIGN state_name0 fly state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN fly city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 fly city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN fly NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [10, 11], [4, 5], [5, 6], [2, 11], [3, 11], [9, 10], [8, 9], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "may i have a listing of flights from city_name1 to city_name0 state_name0 on wednesday", "question-split": "train", "variables": {"city_name0": "LONG BEACH", "day_number0": "23", "month_number0": "4", "year0": "1991", "state_name0": "CALIFORNIA", "city_name1": "MINNEAPOLIS"}, "alignment": "NO_ALIGN have have NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN have NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 listing a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN listing wednesday NO_ALIGN wednesday NO_ALIGN wednesday listing wednesday NO_ALIGN wednesday NO_ALIGN wednesday listing wednesday NO_ALIGN wednesday NO_ALIGN wednesday listing wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday listing have NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on listing have NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN city_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN listing city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 listing city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing have NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [7, 8], [9, 12]]}, {"text": "tell me about flights from city_name1 to city_name0 state_name0 leaving on monday and arriving in city_name0", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "state_name0": "NORTH CAROLINA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN flights NO_ALIGN flights NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell about city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN about monday NO_ALIGN monday NO_ALIGN monday about monday NO_ALIGN monday NO_ALIGN monday about monday NO_ALIGN monday NO_ALIGN monday about monday NO_ALIGN on NO_ALIGN monday NO_ALIGN on about flights NO_ALIGN on NO_ALIGN monday NO_ALIGN on about flights NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in about state_name0 NO_ALIGN state_name0 NO_ALIGN city_name1 NO_ALIGN state_name0 about state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN about in NO_ALIGN tell NO_ALIGN in NO_ALIGN tell about in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN about flights NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [0, 16], [1, 2], [6, 7], [12, 13], [10, 12], [13, 16], [3, 16], [3, 4], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [4, 6], [14, 16], [13, 14], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "CHARLOTTE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NORTH CAROLINA", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i am interested in a flight from city_name0 to city_name1 the flight should be airline_code0 and leave in the afternoon i need to know the aircraft and flight number", "question-split": "train", "variables": {"city_name0": "CINCINNATI", "city_name1": "BURBANK", "airline_code0": "AA", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN leave NO_ALIGN airline_code0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave interested leave NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN interested leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave interested leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN interested leave NO_ALIGN from NO_ALIGN leave NO_ALIGN in interested leave NO_ALIGN flight NO_ALIGN leave NO_ALIGN in NO_ALIGN interested leave NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN interested aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft interested leave NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft interested leave NO_ALIGN afternoon afternoon afternoon interested afternoon NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [5, 6], [28, 29], [17, 20], [15, 16], [8, 9], [18, 19], [1, 29], [1, 20], [1, 2], [16, 17], [12, 20], [6, 7], [20, 21], [12, 13], [6, 10], [10, 12], [8, 10], [25, 26], [27, 28], [18, 20], [4, 5], [23, 29], [13, 15], [2, 20], [9, 10], [2, 3], [14, 15], [22, 29], [11, 12], [23, 24], [19, 20], [0, 1], [7, 8], [12, 15], [17, 18], [24, 29], [4, 6], [6, 8], [26, 27], [21, 22], [13, 14], [21, 29], [24, 25], [16, 20], [3, 4]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "CINCINNATI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BURBANK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the smallest plane that flies from city_name1 to city_name0 on eight day_number0", "question-split": "test", "variables": {"city_name0": "BALTIMORE", "day_number0": "16", "month_number0": "8", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN plane NO_ALIGN plane NO_ALIGN the NO_ALIGN that NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 eight city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight on NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight that NO_ALIGN on NO_ALIGN on NO_ALIGN on eight that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN eight plane NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN plane NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN plane NO_ALIGN smallest NO_ALIGN the NO_ALIGN 's NO_ALIGN NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 eight 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 eight 's NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on eight 's NO_ALIGN city_name1 NO_ALIGN 's NO_ALIGN the NO_ALIGN eight 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 eight 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN eight smallest NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane eight 's NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane eight 's NO_ALIGN from NO_ALIGN 's NO_ALIGN the NO_ALIGN eight city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 eight city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN eight plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane eight that NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane eight that NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [2, 5], [6, 14], [1, 2], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 14], [7, 8]]}, {"text": "what 's the smallest plane flying from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "day_number0": "17", "month_number0": "12", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN plane NO_ALIGN plane NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 flying city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 flying NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on flying NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN flying plane NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN plane NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN plane NO_ALIGN smallest NO_ALIGN the NO_ALIGN 's NO_ALIGN NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 flying 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 flying 's NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on flying 's NO_ALIGN city_name1 NO_ALIGN 's NO_ALIGN the NO_ALIGN flying 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 flying 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying smallest NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane flying 's NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane flying 's NO_ALIGN from NO_ALIGN 's NO_ALIGN the NO_ALIGN flying city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 flying city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane flying NO_ALIGN NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane flying NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "16", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much is an economy ticket from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "30", "month_number0": "9", "year0": "1991", "city_name1": "WASHINGTON", "economy0": "YES"}, "alignment": "NO_ALIGN NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN economy NO_ALIGN ticket NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN ticket NO_ALIGN NO_ALIGN NO_ALIGN an NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 an city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 an an NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on an an NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN an how NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 an how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 an ticket NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN on an ticket NO_ALIGN economy NO_ALIGN ticket NO_ALIGN economy an economy NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket an an NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy an an NO_ALIGN from NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN an economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN an ticket NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [2, 13], [3, 6], [3, 4], [11, 13], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "30", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "9", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "only show airline_code0 flights", "question-split": "test", "variables": {"airline_code0": "CO"}, "alignment": "NO_ALIGN show only NO_ALIGN show NO_ALIGN airline_code0 NO_ALIGN only NO_ALIGN only NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"text": "show me all airline_code0 flights please", "question-split": "dev", "variables": {"airline_code0": "TW"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN airline_code0 NO_ALIGN all NO_ALIGN all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4]]}, {"text": "what flights are provided by airline_code0", "question-split": "train", "variables": {"airline_code0": "DL"}, "alignment": "NO_ALIGN by provided NO_ALIGN are NO_ALIGN by NO_ALIGN provided NO_ALIGN provided NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"text": "which flights are serviced by airline_code0", "question-split": "train", "variables": {"airline_code0": "AA"}, "alignment": "NO_ALIGN by serviced NO_ALIGN are NO_ALIGN by NO_ALIGN serviced NO_ALIGN serviced NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"text": "what flights are provided by airline_code0", "question-split": "exclude", "variables": {"airline_code0": "AA"}, "alignment": "NO_ALIGN by provided NO_ALIGN are NO_ALIGN by NO_ALIGN provided NO_ALIGN provided NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"text": "does airline_code0 have any flights", "question-split": "train", "variables": {"airline_code0": "YX"}, "alignment": "NO_ALIGN does any NO_ALIGN flights NO_ALIGN airline_code0 NO_ALIGN any NO_ALIGN any NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "in economy class from city_name1 to city_name0 arriving month_number0 day_number1 i'd like to know what 's the cheapest ticket possible", "question-split": "train", "variables": {"day_number0": "6", "month_number0": "7", "year0": "1991", "city_name0": "BALTIMORE", "city_name1": "DALLAS", "day_number1": "7", "economy0": "YES"}, "alignment": "NO_ALIGN NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN class NO_ALIGN ticket NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN class NO_ALIGN the NO_ALIGN in NO_ALIGN class NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN arriving NO_ALIGN in NO_ALIGN in NO_ALIGN know day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 know day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 know day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN day_number1 NO_ALIGN day_number1 know in NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN know city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in know city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN know in NO_ALIGN in NO_ALIGN in NO_ALIGN in know in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN month_number0 NO_ALIGN day_number1 know class NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know ticket NO_ALIGN class NO_ALIGN class NO_ALIGN class know economy NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket know in NO_ALIGN class NO_ALIGN economy NO_ALIGN class know in NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in know city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know day_number1 NO_ALIGN month_number0 NO_ALIGN day_number1 know day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 know day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN day_number1 NO_ALIGN day_number1 know in NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN know in NO_ALIGN in NO_ALIGN in NO_ALIGN in know in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know month_number0 NO_ALIGN month_number0 NO_ALIGN day_number1 know month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN month_number0 NO_ALIGN day_number1 know class NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know ticket NO_ALIGN class NO_ALIGN class NO_ALIGN class know economy NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket know in NO_ALIGN class NO_ALIGN economy NO_ALIGN class know in NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN know economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN know ticket NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN know ticket NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN possible NO_ALIGN month_number0 NO_ALIGN possible NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN possible NO_ALIGN class NO_ALIGN cheapest NO_ALIGN class NO_ALIGN class NO_ALIGN class NO_ALIGN possible NO_ALIGN the NO_ALIGN 's NO_ALIGN class NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN 's NO_ALIGN arriving NO_ALIGN 's NO_ALIGN in NO_ALIGN know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN day_number1 NO_ALIGN possible NO_ALIGN day_number1 know 's NO_ALIGN month_number0 NO_ALIGN possible NO_ALIGN month_number0 NO_ALIGN know cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in know cheapest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know 's NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in NO_ALIGN know cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in know cheapest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN possible NO_ALIGN day_number1 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know cheapest NO_ALIGN class NO_ALIGN possible NO_ALIGN class know cheapest NO_ALIGN ticket NO_ALIGN cheapest NO_ALIGN ticket know 's NO_ALIGN class NO_ALIGN cheapest NO_ALIGN class know 's NO_ALIGN from NO_ALIGN cheapest NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN NO_ALIGN cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in know cheapest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know possible NO_ALIGN month_number0 NO_ALIGN day_number1 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN day_number1 NO_ALIGN possible NO_ALIGN day_number1 know 's NO_ALIGN month_number0 NO_ALIGN possible NO_ALIGN month_number0 know 's NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in NO_ALIGN know cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in know cheapest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know possible NO_ALIGN month_number0 NO_ALIGN day_number1 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 know month_number0 NO_ALIGN day_number1 NO_ALIGN possible NO_ALIGN day_number1 know possible NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 know cheapest NO_ALIGN class NO_ALIGN possible NO_ALIGN class know cheapest NO_ALIGN ticket NO_ALIGN cheapest NO_ALIGN ticket know 's NO_ALIGN class NO_ALIGN cheapest NO_ALIGN class know 's NO_ALIGN from NO_ALIGN cheapest NO_ALIGN in NO_ALIGN NO_ALIGN know class NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN know cheapest NO_ALIGN class NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [17, 20], [8, 9], [15, 16], [16, 21], [18, 19], [13, 21], [1, 2], [16, 17], [0, 21], [6, 7], [12, 13], [20, 21], [8, 10], [7, 10], [3, 4], [12, 21], [4, 5], [9, 10], [2, 3], [14, 15], [11, 21], [11, 12], [19, 20], [3, 5], [0, 1], [17, 18], [5, 10], [13, 14], [15, 21], [17, 21], [14, 21], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) OR ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias3.DAY_NUMBER = day_number1 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND DATE_DAYalias2.DAY_NUMBER = day_number1 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND FARE_BASISalias2.ECONOMY = \"economy0\" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) ;"], "variables": [{"example": "6", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "7", "location": "unk", "name": "day_number1", "type": "day_number"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "in flight meal city_name1 to city_name0 saturday", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN meal NO_ALIGN meal NO_ALIGN meal NO_ALIGN meal NO_ALIGN meal NO_ALIGN meal NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN to NO_ALIGN saturday NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in in city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN in saturday NO_ALIGN saturday NO_ALIGN saturday in saturday NO_ALIGN saturday NO_ALIGN saturday in saturday NO_ALIGN saturday NO_ALIGN saturday in saturday NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN saturday in in NO_ALIGN to NO_ALIGN saturday NO_ALIGN to in in NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in in NO_ALIGN in NO_ALIGN in NO_ALIGN in in in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in in NO_ALIGN flight NO_ALIGN in NO_ALIGN in in meal NO_ALIGN meal NO_ALIGN in NO_ALIGN meal NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ;"], "variables": [{"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to fly from city_name1 at departure_time0 and arrive in city_name0 at arrival_time0 in the morning", "question-split": "dev", "variables": {"arrival_time0": "1110", "departure_time0": "838", "city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN and NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 fly arrival_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN fly departure_time0 NO_ALIGN want NO_ALIGN departure_time0 NO_ALIGN want fly departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN fly arrival_time0 NO_ALIGN in NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN fly at NO_ALIGN want NO_ALIGN at NO_ALIGN want fly at NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly arrival_time0 NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [3, 17], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [12, 17], [9, 17], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [4, 6], [6, 8], [13, 14], [3, 8], [7, 8]]}, {"text": "i want to leave city_name1 at departure_time0 and arrive in city_name0 at arrival_time0 in the morning", "question-split": "train", "variables": {"arrival_time0": "1110", "departure_time0": "838", "city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN and NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN the NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 want arrival_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN want leave NO_ALIGN want NO_ALIGN departure_time0 NO_ALIGN want want leave NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN want arrival_time0 NO_ALIGN in NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN want at NO_ALIGN want NO_ALIGN at NO_ALIGN want want at NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want arrival_time0 NO_ALIGN departure_time0 NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [3, 7], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [9, 11], [3, 16], [8, 16], [11, 13], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [14, 16], [13, 14], [5, 7], [3, 4]]}, {"text": "i would like a flight from city_name1 to city_name0 at one in the afternoon arriving at arrival_time0", "question-split": "test", "variables": {"arrival_time0": "1700", "departure_time0": "1300", "city_name0": "PHILADELPHIA", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN one NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN arriving NO_ALIGN arrival_time0 would arrival_time0 NO_ALIGN afternoon NO_ALIGN afternoon NO_ALIGN would a NO_ALIGN in NO_ALIGN a NO_ALIGN in would a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN would arrival_time0 NO_ALIGN flight NO_ALIGN a NO_ALIGN at NO_ALIGN would at NO_ALIGN in NO_ALIGN at NO_ALIGN in would at NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would arrival_time0 NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [11, 14], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [7, 9], [0, 1], [3, 5], [15, 17], [13, 14], [5, 7], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "1110", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "838", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "the cheapest flights from city_name1 to city_name0 that arrive after 12pm on a day_name1", "question-split": "train", "variables": {"day_name0": "MONDAY", "day_name1": "TUESDAY", "arrival_time0": "1200", "city_name0": "PHILADELPHIA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN after NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN after NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN on NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN flights NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN arrive NO_ALIGN flights NO_ALIGN after NO_ALIGN arrive on NO_ALIGN on NO_ALIGN NO_ALIGN a NO_ALIGN arrive flights NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN that NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN day_name1 NO_ALIGN arrive flights NO_ALIGN on NO_ALIGN on NO_ALIGN on arrive arrive NO_ALIGN flights NO_ALIGN arrive NO_ALIGN flights NO_ALIGN after NO_ALIGN NO_ALIGN NO_ALIGN arrive flights NO_ALIGN arrive NO_ALIGN arrive NO_ALIGN arrive a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 arrive a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arrive flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN arrive after NO_ALIGN city_name0 NO_ALIGN after NO_ALIGN city_name0 arrive after NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrive flights NO_ALIGN from NO_ALIGN after NO_ALIGN the NO_ALIGN arrive cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN on NO_ALIGN day_name1 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN flights NO_ALIGN 12pm NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN 12pm NO_ALIGN arrive NO_ALIGN 12pm NO_ALIGN after NO_ALIGN arrive day_name1 NO_ALIGN on NO_ALIGN NO_ALIGN a NO_ALIGN arrive 12pm NO_ALIGN on NO_ALIGN day_name1 NO_ALIGN on NO_ALIGN that NO_ALIGN day_name1 NO_ALIGN on NO_ALIGN NO_ALIGN day_name1 NO_ALIGN arrive 12pm NO_ALIGN on NO_ALIGN day_name1 NO_ALIGN on arrive arrive NO_ALIGN 12pm NO_ALIGN arrive NO_ALIGN 12pm NO_ALIGN after NO_ALIGN NO_ALIGN NO_ALIGN arrive 12pm NO_ALIGN arrive NO_ALIGN arrive NO_ALIGN arrive cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 arrive cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arrive 12pm NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN arrive cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 arrive cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrive cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest arrive 12pm NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN flights arrive 12pm NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the NO_ALIGN arrive cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest arrive flights NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN flights NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [0, 3], [1, 2], [6, 7], [12, 13], [10, 12], [8, 15], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 8], [13, 14], [5, 7], [3, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DAYSalias0.DAY_NAME = \"day_name1\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) OR ( DAYSalias1.DAY_NAME = \"day_name1\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.ARRIVAL_TIME < FLIGHTalias1.DEPARTURE_TIME ) ) ) AND FLIGHTalias1.ARRIVAL_TIME > arrival_time0 ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "MONDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "TUESDAY", "location": "unk", "name": "day_name1", "type": "day_name"}, {"example": "1200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "show me all the airline_code0 flights leaving city_name0 between departure_time1 and departure_time0 in the afternoon", "question-split": "train", "variables": {"departure_time0": "1600", "departure_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "DL"}, "alignment": "NO_ALIGN show departure_time1 NO_ALIGN between NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time0 between departure_time1 NO_ALIGN departure_time1 afternoon afternoon NO_ALIGN between departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 between departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN leaving NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [0, 15], [12, 13], [3, 4], [6, 15], [8, 15], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}, {"text": "show me all the airline_code0 flights leaving city_name0 between departure_time1 and departure_time0 in the afternoon", "question-split": "exclude", "variables": {"departure_time0": "1600", "departure_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "US"}, "alignment": "NO_ALIGN show departure_time1 NO_ALIGN between NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time0 between departure_time1 NO_ALIGN departure_time1 afternoon afternoon NO_ALIGN between departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 between departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN leaving NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [0, 15], [12, 13], [3, 4], [6, 15], [8, 15], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}, {"text": "airline_code0 flights departing from city_name0 around 1pm", "question-split": "train", "variables": {"departure_time0": "1330", "departure_time1": "1230", "city_name0": "CHARLOTTE", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN 1pm NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN airline_code0 NO_ALIGN 1pm NO_ALIGN NO_ALIGN NO_ALIGN 1pm NO_ALIGN 1pm around flights departing 1pm NO_ALIGN 1pm around around NO_ALIGN departing around NO_ALIGN city_name0 NO_ALIGN around NO_ALIGN city_name0 departing around NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departing 1pm NO_ALIGN from NO_ALIGN around NO_ALIGN city_name0 NO_ALIGN departing 1pm NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [8, 9], [2, 3], [3, 4], [0, 2], [5, 8], [3, 5]]}, {"text": "show me all the airline_code0 flights leaving city_name0 between departure_time1 and departure_time0 in the afternoon", "question-split": "exclude", "variables": {"departure_time0": "1600", "departure_time1": "1200", "city_name0": "PITTSBURGH", "airline_code0": "EA"}, "alignment": "NO_ALIGN show departure_time1 NO_ALIGN between NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airline_code0 NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time0 between departure_time1 NO_ALIGN departure_time1 afternoon afternoon NO_ALIGN between departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 between departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN leaving NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN between departure_time1 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [0, 15], [12, 13], [3, 4], [6, 15], [8, 15], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [8, 12], [13, 14], [2, 15], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1600", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "and from city_name1 to city_name0 before departure_time0 flight_days0", "question-split": "train", "variables": {"departure_time0": "1000", "city_name0": "ATLANTA", "city_name1": "MILWAUKEE", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 from flight_days0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flight_days0 NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flight_days0 NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [6, 8], [5, 6], [4, 5], [1, 5], [2, 3], [3, 4], [5, 8], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" ) ;"], "variables": [{"example": "1000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which flight between city_name1 and city_name0 on month_number0 day_number0 has the smallest seating capacity", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "19", "month_number0": "7", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN which NO_ALIGN between NO_ALIGN smallest NO_ALIGN seating NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN smallest NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN smallest NO_ALIGN which NO_ALIGN which NO_ALIGN which NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 between which NO_ALIGN on NO_ALIGN on NO_ALIGN on between which NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN between city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between which NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN between NO_ALIGN smallest NO_ALIGN flight NO_ALIGN smallest NO_ALIGN flight between smallest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 between day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 between smallest NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on between smallest NO_ALIGN flight NO_ALIGN smallest NO_ALIGN the NO_ALIGN between seating NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN month_number0 NO_ALIGN capacity NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN seating NO_ALIGN has NO_ALIGN which NO_ALIGN has NO_ALIGN NO_ALIGN has NO_ALIGN flight NO_ALIGN has NO_ALIGN flight between has NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between capacity NO_ALIGN month_number0 NO_ALIGN day_number0 between capacity NO_ALIGN month_number0 NO_ALIGN month_number0 between capacity NO_ALIGN month_number0 NO_ALIGN month_number0 between month_number0 NO_ALIGN month_number0 NO_ALIGN capacity NO_ALIGN month_number0 between has NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN on between has NO_ALIGN flight NO_ALIGN has NO_ALIGN the NO_ALIGN between has NO_ALIGN flight NO_ALIGN has NO_ALIGN flight between has NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between has NO_ALIGN seating NO_ALIGN smallest NO_ALIGN seating between has NO_ALIGN seating NO_ALIGN has NO_ALIGN seating between has NO_ALIGN flight NO_ALIGN has NO_ALIGN the NO_ALIGN between the NO_ALIGN flight NO_ALIGN the NO_ALIGN flight between the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between seating NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating between smallest NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating between which NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating between smallest NO_ALIGN seating NO_ALIGN smallest NO_ALIGN seating between smallest NO_ALIGN flight NO_ALIGN the NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [9, 14], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [13, 14], [10, 14], [0, 9], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "19", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "may i have a listing of flights from city_name0 to city_name1 state_name0 departing in the evening", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "city_name1": "TACOMA", "state_name0": "WASHINGTON", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN have departing NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN flights NO_ALIGN departing NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in listing in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN listing a NO_ALIGN in NO_ALIGN a NO_ALIGN in listing a NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing departing NO_ALIGN from NO_ALIGN in NO_ALIGN in listing departing NO_ALIGN in NO_ALIGN a NO_ALIGN in listing state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 listing state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN listing departing NO_ALIGN evening evening evening listing evening NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [10, 12], [13, 16], [3, 16], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [3, 5], [7, 8], [14, 16], [13, 14], [3, 4], [9, 12]]}, {"text": "i would like a morning flight from city_name0 to city_name1 state_name0 please", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "city_name1": "DENVER", "state_name0": "COLORADO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN please NO_ALIGN flight NO_ALIGN please NO_ALIGN flight would please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight would a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would a NO_ALIGN from NO_ALIGN please NO_ALIGN city_name0 would a NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 would state_name0 NO_ALIGN state_name0 NO_ALIGN a NO_ALIGN state_name0 would state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN would a NO_ALIGN morning morning morning would morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [1, 12], [10, 11], [4, 5], [5, 6], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 6], [3, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "MILWAUKEE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "TACOMA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how many airline_code0 flights leave city_name0 month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "DENVER", "day_number0": "10", "month_number0": "6", "year0": "1991", "airline_code0": "AA"}, "alignment": "NO_ALIGN many NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN airline_code0 NO_ALIGN leave NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave how leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN how day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 how day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 how leave NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 how leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN how leave NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "10", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me the flights from airport_code0 to city_name0 leaving after departure_time0", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1800", "airport_code0": "IAD"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving flights NO_ALIGN city_name0 NO_ALIGN departure_time0 NO_ALIGN airport_code0 NO_ALIGN leaving airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN leaving flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "IAD", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "i am interested in booking an early morning flight from city_name0 into city_name1 on month_number0 day_number0 and returning late in the evening of month_number0 day_number0", "question-split": "train", "variables": {"departure_time0": "2200", "departure_time1": "2000", "day_number0": "22", "month_number0": "2", "year0": "1991", "city_name0": "DALLAS", "city_name1": "HOUSTON", "departure_time2": "0", "departure_time3": "800"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN and NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN month_number0 NO_ALIGN returning NO_ALIGN on NO_ALIGN returning NO_ALIGN the NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN early in evening into early NO_ALIGN early in evening NO_ALIGN into returning NO_ALIGN month_number0 NO_ALIGN day_number0 into returning NO_ALIGN month_number0 NO_ALIGN month_number0 into returning NO_ALIGN month_number0 NO_ALIGN month_number0 into returning NO_ALIGN month_number0 NO_ALIGN returning NO_ALIGN month_number0 into early NO_ALIGN on NO_ALIGN returning NO_ALIGN on NO_ALIGN into i NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in into i NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN into early NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN into in NO_ALIGN in NO_ALIGN in NO_ALIGN in into in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into early NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN early evening in into an NO_ALIGN into returning NO_ALIGN month_number0 NO_ALIGN day_number0 into returning NO_ALIGN month_number0 NO_ALIGN month_number0 into returning NO_ALIGN month_number0 NO_ALIGN month_number0 into returning NO_ALIGN month_number0 NO_ALIGN returning NO_ALIGN month_number0 into early NO_ALIGN on NO_ALIGN returning NO_ALIGN on NO_ALIGN into i NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in into i NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into early NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN into in NO_ALIGN in NO_ALIGN in NO_ALIGN in into in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN into early NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[5, 9], [3, 25], [10, 11], [20, 25], [22, 23], [5, 6], [8, 9], [15, 16], [18, 19], [17, 25], [1, 2], [16, 17], [6, 7], [1, 25], [12, 13], [20, 21], [13, 16], [9, 11], [11, 13], [23, 25], [20, 22], [4, 5], [4, 16], [9, 10], [2, 3], [4, 25], [14, 15], [11, 12], [19, 20], [23, 24], [0, 1], [17, 18], [7, 8], [22, 25], [14, 16], [18, 25], [13, 14], [21, 22], [24, 25], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;"], "variables": [{"example": "2200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2000", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "HOUSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "800", "location": "unk", "name": "departure_time3", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list flights from city_name1 to city_name0 that serve only meal_code0", "question-split": "dev", "variables": {"meal_code0": "B", "meal_code1": "BB", "meal_description0": "BREAKFAST", "city_name0": "SAN FRANCISCO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN serve NO_ALIGN flights NO_ALIGN only NO_ALIGN city_name0 NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN meal_code0 NO_ALIGN serve only NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN from meal_code0 NO_ALIGN meal_code0 NO_ALIGN only NO_ALIGN meal_code0 from meal_code0 NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN from serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve from serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN serve NO_ALIGN from only NO_ALIGN city_name1 NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN from serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve from serve NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from only NO_ALIGN from NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [9, 10], [2, 3], [7, 10], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.MEAL_CODE = \"meal_code0\" OR FLIGHTalias0.MEAL_CODE = \"meal_code1\" ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "B", "location": "unk", "name": "meal_code0", "type": "meal_code"}, {"example": "BB", "location": "unk", "name": "meal_code1", "type": "meal_code"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights go from city_name1 to city_name0 before departure_time0 o'clock sunday afternoon", "question-split": "test", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "departure_time0": "1800", "city_name0": "SAN FRANCISCO", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN flights NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday go sunday NO_ALIGN sunday NO_ALIGN sunday go sunday NO_ALIGN sunday NO_ALIGN sunday go sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday go o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 go o'clock NO_ALIGN o'clock NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN go before NO_ALIGN before NO_ALIGN before NO_ALIGN before go before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go o'clock NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN go departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before go departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [8, 12], [5, 7], [7, 8], [0, 2]]}, {"text": "list all flights going from city_name1 to city_name0 before departure_time0 on thursday", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "700", "city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN going NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN on NO_ALIGN on going thursday NO_ALIGN on NO_ALIGN going NO_ALIGN on going all NO_ALIGN departure_time0 NO_ALIGN departure_time0 going all NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN going before NO_ALIGN before NO_ALIGN before NO_ALIGN before going before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN going departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before going departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [1, 12], [6, 8], [8, 12], [7, 8]]}, {"text": "a listing of all flights from city_name1 to city_name0 before departure_time0 on thursday", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "1000", "city_name0": "BALTIMORE", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on listing thursday NO_ALIGN thursday NO_ALIGN on listing thursday NO_ALIGN on NO_ALIGN on listing thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN on listing all NO_ALIGN departure_time0 NO_ALIGN departure_time0 listing all NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN listing before NO_ALIGN before NO_ALIGN before NO_ALIGN before listing before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN listing all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN listing departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before listing departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN listing all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [9, 13], [7, 9], [5, 7], [7, 8], [0, 2]]}, {"text": "all flights from city_name1 to city_name0 on month_number0 day_number0 before departure_time0", "question-split": "test", "variables": {"day_number0": "11", "month_number0": "11", "year0": "1991", "departure_time0": "1000", "city_name0": "WASHINGTON", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 all day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 all day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 all on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 all all NO_ALIGN departure_time0 NO_ALIGN departure_time0 all all NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN all before NO_ALIGN before NO_ALIGN before NO_ALIGN before all before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN all departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before all departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [4, 6], [10, 11], [7, 8], [4, 5], [5, 6], [9, 10], [8, 9], [9, 11], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}, {"text": "list all flights going from city_name1 to city_name0 before departure_time0 o'clock am on thursday", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "700", "city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN going NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN on NO_ALIGN on going thursday NO_ALIGN on NO_ALIGN going NO_ALIGN on going o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 going o'clock NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN going before NO_ALIGN before NO_ALIGN before NO_ALIGN before going before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going o'clock NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN going departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before going departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [0, 14], [8, 9], [3, 14], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8], [9, 12]]}, {"text": "information on flights from city_name1 to city_name0 departing on thursday before departure_time0", "question-split": "test", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "900", "city_name0": "WASHINGTON", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN departing NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN information NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN information NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN departing NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on departing thursday NO_ALIGN thursday NO_ALIGN on departing thursday NO_ALIGN on NO_ALIGN on departing thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN on departing departing NO_ALIGN departure_time0 NO_ALIGN departure_time0 departing departing NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN departing before NO_ALIGN before NO_ALIGN before NO_ALIGN before departing before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departing departing NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN information NO_ALIGN departing information NO_ALIGN before NO_ALIGN information NO_ALIGN before departing information NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN departing departing NO_ALIGN from NO_ALIGN information NO_ALIGN information NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [10, 11], [6, 7], [4, 5], [5, 6], [5, 7], [11, 12], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4], [7, 8], [3, 5]]}, {"text": "i need a flight on thursday before departure_time0 from city_name1 to city_name0", "question-split": "train", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "800", "city_name0": "SALT LAKE CITY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on need thursday NO_ALIGN thursday NO_ALIGN on need thursday NO_ALIGN on NO_ALIGN on need thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN on need departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 need departure_time0 NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN need before NO_ALIGN before NO_ALIGN before NO_ALIGN before need before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need departure_time0 NO_ALIGN flight NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN need departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before need departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need departure_time0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 6], [1, 12], [8, 12], [4, 5], [5, 6], [10, 11], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [7, 8], [2, 4]]}, {"text": "list all flights going from city_name1 to city_name0 before departure_time0 o'clock am on thursday", "question-split": "exclude", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "500", "city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN going NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN thursday NO_ALIGN on going going NO_ALIGN on NO_ALIGN on going thursday NO_ALIGN on NO_ALIGN going NO_ALIGN on going o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 going o'clock NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN going before NO_ALIGN before NO_ALIGN before NO_ALIGN before going before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going o'clock NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN going departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before going departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [0, 14], [8, 9], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [3, 8], [7, 8], [9, 12]]}, {"text": "now i need a flight leaving city_name1 and arriving in city_name0 no later than 2pm next monday", "question-split": "train", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "departure_time0": "1401", "city_name0": "DENVER", "city_name1": "FORT WORTH"}, "alignment": "NO_ALIGN NO_ALIGN 2pm NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN 2pm NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN next NO_ALIGN next 2pm next NO_ALIGN next NO_ALIGN next 2pm next NO_ALIGN next NO_ALIGN next 2pm next NO_ALIGN next NO_ALIGN next NO_ALIGN next 2pm 2pm NO_ALIGN flight NO_ALIGN in 2pm 2pm NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN 2pm a NO_ALIGN in NO_ALIGN a NO_ALIGN in 2pm a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN 2pm 2pm NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN 2pm in NO_ALIGN in NO_ALIGN in NO_ALIGN in 2pm in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 2pm 2pm NO_ALIGN leaving NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [13, 16], [9, 11], [16, 18], [11, 13], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 8], [17, 18], [14, 16], [13, 14], [5, 7], [13, 18], [8, 18], [3, 4]]}, {"text": "are there any flights before departure_time0 on month_number0 day_number0 from city_name1 to city_name0", "question-split": "train", "variables": {"day_number0": "15", "month_number0": "6", "year0": "1991", "departure_time0": "1200", "city_name0": "COLUMBUS", "city_name1": "LONG BEACH"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN are NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN flights NO_ALIGN any NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 there day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 there day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 there on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 there any NO_ALIGN departure_time0 NO_ALIGN departure_time0 there any NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN there before NO_ALIGN before NO_ALIGN before NO_ALIGN before there before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there any NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN before NO_ALIGN there NO_ALIGN before there there NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there any NO_ALIGN from NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [5, 6], [4, 5], [12, 13], [11, 12], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 8], [2, 4], [11, 13]]}, {"text": "flights from city_name1 to city_name0 on wednesday before departure_time0", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "departure_time0": "1700", "city_name0": "CLEVELAND", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday from flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 from flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on NO_ALIGN from before NO_ALIGN before NO_ALIGN before NO_ALIGN before from before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN from departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before from departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [5, 9], [1, 2], [1, 3], [6, 7], [7, 8], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [3, 5]]}, {"text": "i would like to book a flight from city_name1 to city_name0 before departure_time0 o'clock on tuesday", "question-split": "train", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "departure_time0": "1200", "city_name0": "SAN FRANCISCO", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday o'clock tuesday NO_ALIGN tuesday NO_ALIGN tuesday o'clock tuesday NO_ALIGN tuesday NO_ALIGN tuesday o'clock tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday o'clock o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock o'clock NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN o'clock before NO_ALIGN before NO_ALIGN before NO_ALIGN before o'clock before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock o'clock NO_ALIGN flight NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN o'clock departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [1, 2], [6, 7], [12, 13], [1, 16], [9, 11], [3, 16], [3, 4], [2, 16], [12, 14], [4, 5], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [13, 14], [5, 7], [7, 8]]}, {"text": "list all flights from city_name1 to city_name0 before departure_time0 o'clock am on thursday", "question-split": "test", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "500", "city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN thursday NO_ALIGN am NO_ALIGN on NO_ALIGN thursday NO_ALIGN flights NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN am NO_ALIGN thursday NO_ALIGN on am am NO_ALIGN thursday NO_ALIGN on am am NO_ALIGN on NO_ALIGN on am thursday NO_ALIGN on NO_ALIGN am NO_ALIGN on am o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 am o'clock NO_ALIGN on NO_ALIGN thursday NO_ALIGN on NO_ALIGN am before NO_ALIGN before NO_ALIGN before NO_ALIGN before am before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN am o'clock NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN am departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before am departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN am o'clock NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [11, 13], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [5, 7], [0, 13], [7, 13], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "morning flights out of city_name1 arriving city_name0 afternoon", "question-split": "train", "variables": {"arrival_time0": "1800", "arrival_time1": "1200", "city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN out NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN out NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN out NO_ALIGN arriving arriving arriving arriving out NO_ALIGN arriving arriving arriving NO_ALIGN arriving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 arriving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving out NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN out NO_ALIGN arriving city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 arriving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving out NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN out NO_ALIGN arriving out NO_ALIGN morning morning morning arriving morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [5, 8], [3, 5]]}, {"text": "is there a flight from city_name1 to city_name0 which leaves city_name1 in the afternoon and arrives close to 5pm", "question-split": "train", "variables": {"arrival_time0": "1715", "arrival_time1": "1645", "city_name0": "ATLANTA", "city_name1": "BOSTON", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN arrives NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN which NO_ALIGN arrives NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrives NO_ALIGN arrives afternoon in arrives arrives NO_ALIGN arrives afternoon arrives NO_ALIGN arrives leaves NO_ALIGN there NO_ALIGN leaves NO_ALIGN there arrives leaves NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN flight NO_ALIGN leaves NO_ALIGN in NO_ALIGN arrives there NO_ALIGN there NO_ALIGN there NO_ALIGN there arrives there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrives arrives NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN afternoon afternoon afternoon arrives afternoon NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [15, 20], [17, 20], [8, 9], [15, 16], [18, 19], [11, 14], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [8, 20], [3, 4], [18, 20], [9, 14], [12, 14], [9, 20], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [0, 1], [17, 18], [4, 6], [6, 8], [13, 14], [16, 20], [7, 8], [2, 4]]}, {"text": "can i get from city_name1 to city_name0 leaving in the morning and arriving in the morning", "question-split": "train", "variables": {"arrival_time0": "1200", "arrival_time1": "0", "city_name0": "SAN FRANCISCO", "city_name1": "DALLAS", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN leaving NO_ALIGN and NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN the NO_ALIGN leaving NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN leaving NO_ALIGN arriving arriving arriving can leaving NO_ALIGN arriving arriving arriving NO_ALIGN can i NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in can i NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN can leaving NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN can in NO_ALIGN in NO_ALIGN in NO_ALIGN in can in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN can leaving NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN can leaving NO_ALIGN morning morning morning can morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [7, 11], [1, 2], [6, 7], [12, 13], [13, 16], [9, 11], [3, 4], [2, 16], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [14, 16], [13, 14], [7, 8]]}, {"text": "show me the flight that leaves city_name1 in the afternoon and arrives in the evening in city_name0", "question-split": "train", "variables": {"arrival_time0": "2200", "arrival_time1": "1800", "city_name0": "DENVER", "city_name1": "PHILADELPHIA", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN show arrives NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN leaves NO_ALIGN the NO_ALIGN arrives NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrives NO_ALIGN arrives afternoon in arrives arrives NO_ALIGN arrives afternoon arrives NO_ALIGN arrives leaves NO_ALIGN in NO_ALIGN leaves NO_ALIGN in arrives leaves NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN flight NO_ALIGN leaves NO_ALIGN in NO_ALIGN arrives in NO_ALIGN in NO_ALIGN in NO_ALIGN in arrives in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrives arrives NO_ALIGN flight NO_ALIGN in NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN evening evening evening arrives evening NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [15, 16], [8, 9], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [7, 10], [3, 4], [4, 5], [5, 17], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [12, 15], [11, 17], [5, 10], [13, 14], [4, 17], [7, 8], [2, 4]]}, {"text": "i need a flight from city_name1 to city_name0 leaving in the afternoon and arriving in the evening thank you", "question-split": "train", "variables": {"arrival_time0": "2200", "arrival_time1": "1800", "city_name0": "SAN FRANCISCO", "city_name1": "BOSTON", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN arriving arriving arriving you afternoon NO_ALIGN arriving arriving arriving NO_ALIGN you a NO_ALIGN in NO_ALIGN a NO_ALIGN in you a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN you afternoon NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN you in NO_ALIGN in NO_ALIGN in NO_ALIGN in you in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you afternoon NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN you afternoon NO_ALIGN evening evening evening you evening NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [17, 19], [4, 5], [9, 10], [1, 19], [2, 3], [14, 15], [13, 19], [11, 12], [15, 17], [0, 1], [7, 8], [17, 18], [4, 6], [8, 12], [13, 14], [3, 4], [2, 4], [9, 12]]}, {"text": "is there a flight in the afternoon from city_name1 that arrives in the evening in city_name0", "question-split": "train", "variables": {"arrival_time0": "2200", "arrival_time1": "1800", "city_name0": "DENVER", "city_name1": "PHILADELPHIA", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN arrives NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN arrives NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrives NO_ALIGN arrives afternoon in arrives arrives NO_ALIGN arrives afternoon arrives NO_ALIGN arrives a NO_ALIGN there NO_ALIGN a NO_ALIGN there arrives a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN arrives there NO_ALIGN there NO_ALIGN there NO_ALIGN there arrives there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arrives arrives NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN arrives arrives NO_ALIGN evening evening evening arrives evening NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [15, 16], [11, 14], [1, 2], [6, 7], [12, 13], [3, 4], [2, 16], [12, 14], [4, 5], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [13, 14], [10, 16], [5, 7], [7, 8], [2, 4]]}, {"text": "i want a flight from city_name1 to city_name0 leaving city_name1 in the afternoon arriving city_name0 around 5 in the afternoon", "question-split": "train", "variables": {"arrival_time0": "1730", "arrival_time1": "1630", "city_name0": "DENVER", "city_name1": "SAN FRANCISCO", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN around NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN arriving around arriving leaving around NO_ALIGN arriving around arriving NO_ALIGN leaving a NO_ALIGN want NO_ALIGN a NO_ALIGN want leaving a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leaving around NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN leaving in NO_ALIGN want NO_ALIGN in NO_ALIGN want leaving in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving around NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN leaving around NO_ALIGN around afternoon afternoon leaving afternoon NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [16, 17], [6, 7], [12, 13], [18, 20], [11, 13], [4, 5], [10, 13], [2, 20], [9, 10], [14, 15], [2, 3], [11, 12], [19, 20], [15, 17], [0, 1], [7, 8], [17, 18], [4, 6], [13, 14], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "1800", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1200", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list airline_code0 flights from city_name1 to city_name0 on day_name0 or day_name1", "question-split": "train", "variables": {"day_name0": "TUESDAY", "day_name1": "WEDNESDAY", "city_name0": "SAN FRANCISCO", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name1 NO_ALIGN airline_code0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 from day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN NO_ALIGN on NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name1 NO_ALIGN day_name0 from day_name1 NO_ALIGN on NO_ALIGN NO_ALIGN day_name1 NO_ALIGN NO_ALIGN NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND DAYSalias0.DAY_NAME = \"day_name0\" ) OR ( FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND DAYSalias1.DAY_NAME = \"day_name1\" ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "WEDNESDAY", "location": "unk", "name": "day_name1", "type": "day_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need the cheapest direct flight from city_name0 to city_name1 leaving on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "ATLANTA", "city_name1": "DENVER", "day_number0": "7", "month_number0": "5", "year0": "1991", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN leaving NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN the NO_ALIGN leaving NO_ALIGN the NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN flight direct cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN direct cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN flight direct cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN direct day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 direct day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 direct month_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on direct cheapest NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest direct cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest direct cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the direct cheapest NO_ALIGN flight NO_ALIGN cheapest NO_ALIGN the NO_ALIGN direct day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 direct day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 direct cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN day_number0 NO_ALIGN city_name0 NO_ALIGN day_number0 NO_ALIGN city_name0 NO_ALIGN day_number0 NO_ALIGN city_name0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN the NO_ALIGN day_number0 NO_ALIGN cheapest NO_ALIGN direct NO_ALIGN day_number0 NO_ALIGN flight NO_ALIGN day_number0 NO_ALIGN flight direct day_number0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN direct day_number0 NO_ALIGN flight NO_ALIGN day_number0 NO_ALIGN flight direct day_number0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN direct month_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 direct month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN on direct cheapest NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 direct direct NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest direct day_number0 NO_ALIGN cheapest NO_ALIGN direct NO_ALIGN cheapest direct day_number0 NO_ALIGN from NO_ALIGN day_number0 NO_ALIGN the direct day_number0 NO_ALIGN flight NO_ALIGN day_number0 NO_ALIGN the NO_ALIGN direct cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest direct leaving NO_ALIGN on NO_ALIGN on NO_ALIGN on direct leaving NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN direct i NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight direct i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN direct leaving NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN direct city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight direct city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN direct leaving NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN direct leaving NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [3, 4], [2, 6], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "7", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "flight from state_code0 to city_name0", "question-split": "test", "variables": {"state_code0": "DC", "city_name0": "SALT LAKE CITY"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight from city_name0 NO_ALIGN from NO_ALIGN NO_ALIGN state_code0 NO_ALIGN from to NO_ALIGN flight NO_ALIGN to NO_ALIGN flight from to NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from NO_ALIGN NO_ALIGN flight NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.STATE_CODE = \"state_code0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "DC", "location": "unk", "name": "state_code0", "type": "state_code"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "show me the costs and times for flights from city_name0 to city_name1", "question-split": "test", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN show for NO_ALIGN for NO_ALIGN times NO_ALIGN and NO_ALIGN times NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN show NO_ALIGN for NO_ALIGN flights NO_ALIGN times NO_ALIGN show NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for show NO_ALIGN for NO_ALIGN for NO_ALIGN for for times NO_ALIGN show NO_ALIGN show NO_ALIGN show for times NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the for times NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [7, 12], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list nonstop flights on sunday from city_name1 to city_name0 and list nonstop flights on sunday from city_name2 to city_name0", "question-split": "dev", "variables": {"city_name0": "LAS VEGAS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "NEW YORK", "city_name2": "MEMPHIS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN on NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 nonstop city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN on nonstop flights NO_ALIGN on NO_ALIGN sunday NO_ALIGN on nonstop flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN NO_ALIGN flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 nonstop city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 nonstop city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN and NO_ALIGN flights NO_ALIGN from NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN nonstop flights NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [15, 19], [3, 7], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [11, 13], [17, 19], [4, 5], [13, 15], [10, 19], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 9], [15, 17], [17, 18], [13, 14], [5, 7], [0, 9], [7, 8]]}, {"text": "list all flights from city_name1 to city_name0 that fly nonstop on sunday and list flights from city_name2 to city_name0 that fly nonstop on sunday", "question-split": "train", "variables": {"city_name0": "LAS VEGAS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "NEW YORK", "city_name2": "MEMPHIS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN on NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 fly city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN fly sunday NO_ALIGN on NO_ALIGN on fly sunday NO_ALIGN on NO_ALIGN on fly sunday NO_ALIGN on NO_ALIGN on fly sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN on fly all NO_ALIGN on NO_ALIGN sunday NO_ALIGN on fly all NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN fly NO_ALIGN fly NO_ALIGN NO_ALIGN all NO_ALIGN from NO_ALIGN all NO_ALIGN fly fly all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 fly all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN that NO_ALIGN all NO_ALIGN from NO_ALIGN nonstop NO_ALIGN fly fly city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 fly city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN fly all NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [22, 23], [5, 6], [8, 9], [15, 16], [18, 19], [3, 7], [15, 19], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [0, 24], [10, 12], [1, 24], [17, 19], [22, 24], [13, 24], [4, 5], [14, 24], [9, 10], [19, 24], [2, 3], [14, 15], [11, 12], [19, 20], [23, 24], [3, 5], [0, 1], [7, 8], [15, 17], [17, 18], [8, 12], [13, 14], [20, 24], [21, 22], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "LAS VEGAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MEMPHIS", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what airlines have flights from city_name1 to city_name0 that leave before departure_time0", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA", "departure_time0": "630", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN have NO_ALIGN NO_ALIGN before NO_ALIGN leave NO_ALIGN before NO_ALIGN leave have before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN have have NO_ALIGN departure_time0 NO_ALIGN departure_time0 have have NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN have leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave have leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN have have NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines have have NO_ALIGN from NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [0, 2], [9, 12]]}, {"text": "are there any airlines that have flights from city_name1 to city_name0 that leave before departure_time0", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA", "departure_time0": "630", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN any NO_ALIGN NO_ALIGN before NO_ALIGN leave NO_ALIGN before NO_ALIGN leave have before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN have any NO_ALIGN departure_time0 NO_ALIGN departure_time0 have any NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN have leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave have leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN have any NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines have any NO_ALIGN from NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [4, 15], [2, 15], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "630", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list flights from city_name1 to city_name0 on saturday of fare basis code of fare_basis_code0", "question-split": "train", "variables": {"day_number0": "26", "month_number0": "7", "year0": "1991", "fare_basis_code0": "Q", "city_name0": "TACOMA", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN on NO_ALIGN on NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN on NO_ALIGN on NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN on NO_ALIGN on of saturday NO_ALIGN on NO_ALIGN on of saturday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN of flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN flights NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN fare NO_ALIGN of NO_ALIGN NO_ALIGN of NO_ALIGN of fare NO_ALIGN of NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN of NO_ALIGN flights NO_ALIGN of NO_ALIGN of NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN basis NO_ALIGN on NO_ALIGN on NO_ALIGN basis NO_ALIGN basis NO_ALIGN on NO_ALIGN on of basis NO_ALIGN on NO_ALIGN on of basis NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN of flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN of flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [6, 14], [1, 2], [8, 14], [6, 7], [12, 13], [3, 4], [7, 14], [2, 6], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [13, 14], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE = \"fare_basis_code0\" AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "Q", "location": "unk", "name": "fare_basis_code0", "type": "fare_basis_code"}, {"example": "TACOMA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ORLANDO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a to know the type of aircraft leaving from city_name1 bound to city_name0 on friday this week", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN the NO_ALIGN leaving NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 know a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know friday NO_ALIGN on NO_ALIGN on know friday NO_ALIGN on NO_ALIGN on know friday NO_ALIGN on NO_ALIGN on know friday NO_ALIGN on NO_ALIGN friday NO_ALIGN on know leaving NO_ALIGN on NO_ALIGN friday NO_ALIGN on know leaving NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN know city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 know city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft know leaving NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft know leaving NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [16, 18], [18, 20], [11, 13], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [6, 8], [14, 16], [13, 14], [6, 20], [5, 20], [16, 20], [3, 4]]}, {"text": "what kind of aircraft do you have flying from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN have aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN have NO_ALIGN have NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 flying city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 flying have NO_ALIGN on NO_ALIGN on NO_ALIGN on flying have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flying do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 flying do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft flying have NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft flying have NO_ALIGN from NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 4], [1, 2], [6, 7], [7, 15], [12, 13], [8, 10], [10, 12], [0, 4], [3, 4], [6, 15], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [13, 14], [4, 15], [7, 8], [0, 2]]}, {"text": "sure i'd like to determine what aircraft are use on month_number0 day_number0 leaving from city_name1 and arriving in city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "ATLANTA", "day_number0": "7", "month_number0": "7", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN NO_ALIGN NO_ALIGN leaving NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in i'd city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN i'd day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 i'd day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 i'd day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 i'd on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 i'd leaving NO_ALIGN on NO_ALIGN on NO_ALIGN on i'd leaving NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN i'd in NO_ALIGN in NO_ALIGN in NO_ALIGN in i'd in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft i'd leaving NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft i'd leaving NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [8, 23], [5, 6], [8, 9], [15, 16], [18, 19], [5, 23], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [13, 16], [2, 23], [4, 23], [17, 23], [3, 4], [18, 20], [11, 13], [1, 23], [4, 5], [3, 23], [10, 13], [21, 23], [9, 10], [2, 3], [6, 23], [14, 15], [19, 20], [11, 12], [0, 1], [17, 18], [20, 23], [6, 8], [14, 16], [13, 14], [10, 16], [21, 22], [7, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "25", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "city_name1 to city_name0 and city_name2 to city_name0 on sunday", "question-split": "train", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "NEW YORK", "city_name2": "MEMPHIS"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN on and sunday NO_ALIGN on NO_ALIGN on and sunday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN and and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN and and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 7], [3, 4], [2, 5], [7, 8], [7, 9]]}, {"text": "city_name1 to city_name0 and city_name2 to city_name0 on sunday", "question-split": "exclude", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "LAS VEGAS", "city_name1": "NEW YORK", "city_name2": "MEMPHIS"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN sunday NO_ALIGN on NO_ALIGN on NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN on and sunday NO_ALIGN on NO_ALIGN on and sunday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN and and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN and NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN and and NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name0\" ) ) ) AND ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) OR FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name2\" ) ) ) ) ;"], "variables": [{"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "LAS VEGAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MEMPHIS", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me airline_code0 fares for next sunday from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "CLEVELAND", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "MIAMI", "airline_code0": "US"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN for NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN for NO_ALIGN fares NO_ALIGN fares NO_ALIGN show NO_ALIGN for NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for for NO_ALIGN next NO_ALIGN next for for NO_ALIGN next NO_ALIGN next for for NO_ALIGN next NO_ALIGN next for for NO_ALIGN next NO_ALIGN for NO_ALIGN next for airline_code0 NO_ALIGN next NO_ALIGN for NO_ALIGN next for airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN for city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN for next NO_ALIGN next NO_ALIGN next for next NO_ALIGN next NO_ALIGN next for next NO_ALIGN next NO_ALIGN next for next NO_ALIGN next NO_ALIGN next NO_ALIGN next for for NO_ALIGN for NO_ALIGN next NO_ALIGN next for fares NO_ALIGN for NO_ALIGN for NO_ALIGN for for fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares for airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN for airline_code0 NO_ALIGN show NO_ALIGN fares NO_ALIGN show NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "CLEVELAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MIAMI", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me airline abbreviations", "question-split": "test", "variables": {}, "alignment": "NO_ALIGN abbreviations abbreviations NO_ALIGN airline NO_ALIGN abbreviations NO_ALIGN abbreviations NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 4], [3, 4], [2, 4]]}, {"text": "show me airline abbreviations", "question-split": "exclude", "variables": {}, "alignment": "NO_ALIGN abbreviations abbreviations NO_ALIGN airline NO_ALIGN abbreviations NO_ALIGN abbreviations NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 4], [3, 4], [2, 4]]}, {"text": "which airlines are represented in the database", "question-split": "train", "variables": {}, "alignment": "NO_ALIGN airlines represented NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN represented NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"text": "show me the airlines", "question-split": "train", "variables": {}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 4], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 ;"], "variables": []}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all class_type0 class fares from city_name1 to city_name0 leaving on a day_name0", "question-split": "test", "variables": {"city_name0": "MIAMI", "day_name0": "TUESDAY", "city_name1": "NEW YORK", "class_type0": "FIRST"}, "alignment": "NO_ALIGN show fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class_type0 NO_ALIGN fares NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 leaving a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving all NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving all NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN leaving all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 leaving all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving class NO_ALIGN class NO_ALIGN day_name0 NO_ALIGN day_name0 leaving fares NO_ALIGN class NO_ALIGN class NO_ALIGN class leaving class_type0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares leaving all NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 leaving all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN leaving class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN leaving fares NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights do you have in the morning of month_number0 day_number0 on airline_code0 from city_name2 to city_name1 and a stopover in city_name0", "question-split": "train", "variables": {"departure_time0": "0", "departure_time1": "1200", "city_name0": "DENVER", "day_number0": "20", "month_number0": "9", "year0": "1991", "city_name1": "SAN FRANCISCO", "city_name2": "PITTSBURGH", "airline_code0": "UA"}, "alignment": "NO_ALIGN have have NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN have NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN have NO_ALIGN morning morning morning stopover morning NO_ALIGN stopover city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in stopover city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN stopover stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in stopover have NO_ALIGN flights NO_ALIGN stopover NO_ALIGN flights NO_ALIGN stopover day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 stopover day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 stopover day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 stopover on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 stopover have NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN stopover a NO_ALIGN in NO_ALIGN a NO_ALIGN in stopover a NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN stopover have NO_ALIGN in NO_ALIGN a NO_ALIGN in NO_ALIGN stopover in NO_ALIGN in NO_ALIGN in NO_ALIGN in stopover in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN stopover have NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN stopover have NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[18, 22], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [18, 20], [20, 22], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [15, 17], [17, 18], [0, 1], [7, 8], [6, 8], [21, 22], [13, 14], [4, 17], [11, 15], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "9", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "when do planes leave city_name0 for city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN when NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN leave NO_ALIGN when NO_ALIGN leave NO_ALIGN when do leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN do leave NO_ALIGN when NO_ALIGN leave NO_ALIGN when do leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN do leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name0 do leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the latest meal_description0 flight from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "OAKLAND", "meal_description0": "DINNER", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show show NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN show NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight latest city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest show NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the latest meal_description0 NO_ALIGN meal_description0 NO_ALIGN show NO_ALIGN meal_description0 latest meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN latest city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight latest city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN latest show NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN latest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN the NO_ALIGN latest NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the latest meal_description0 NO_ALIGN meal_description0 NO_ALIGN latest NO_ALIGN meal_description0 latest meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE AND FOOD_SERVICEalias1.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;"], "variables": [{"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DINNER", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all flights departing from airport_code0", "question-split": "test", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN airport_code0 departing NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN departing NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN departing departing NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 6], [4, 5], [5, 6], [0, 6], [1, 6], [2, 3], [3, 6], [3, 4]]}, {"text": "show me the flights out of airport_code0", "question-split": "train", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 out NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN out NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN out out NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0", "question-split": "train", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights leaving from airport_code0", "question-split": "train", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN leaving flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights out of airport_code0", "question-split": "exclude", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 out NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN out NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN out out NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0", "question-split": "exclude", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0", "question-split": "exclude", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights leaving from airport_code0", "question-split": "exclude", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN leaving flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0", "question-split": "exclude", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 flights NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "list all the flights that takeoff from airport_code0", "question-split": "train", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN airport_code0 all NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN takeoff NO_ALIGN airport_code0 NO_ALIGN all NO_ALIGN takeoff NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN all all NO_ALIGN airport_code0 NO_ALIGN takeoff NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"text": "list all the flights that depart from airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN airport_code0 depart NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN depart NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN all depart NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"text": "show me the flights from airport_code0 to all other airports", "question-split": "test", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 other NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airports NO_ALIGN airport_code0 NO_ALIGN other NO_ALIGN airports NO_ALIGN airports NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN all other NO_ALIGN airport_code0 NO_ALIGN airports NO_ALIGN airports NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0 to any other airport", "question-split": "train", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 any NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN any NO_ALIGN airport_code0 NO_ALIGN airport NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show any NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [2, 4]]}, {"text": "show me the flights from airport_code0 to other airports", "question-split": "dev", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 other NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airports NO_ALIGN airport_code0 NO_ALIGN other NO_ALIGN airports NO_ALIGN airports NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show other NO_ALIGN airport_code0 NO_ALIGN airports NO_ALIGN airports NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ;"], "variables": [{"example": "MKE", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the last flight from city_name0 to city_name1 in the evening", "question-split": "train", "variables": {"city_name0": "DALLAS", "city_name1": "BOSTON", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN in NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in from in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN from city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in from city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from in NO_ALIGN from NO_ALIGN in NO_ALIGN in from in NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN from in NO_ALIGN evening evening evening from evening NO_ALIGN from in NO_ALIGN evening NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN evening NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN the NO_ALIGN last NO_ALIGN NO_ALIGN the NO_ALIGN in NO_ALIGN the NO_ALIGN in from the NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN from is NO_ALIGN in NO_ALIGN is NO_ALIGN in from is NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from last NO_ALIGN from NO_ALIGN the NO_ALIGN in from last NO_ALIGN flight NO_ALIGN is NO_ALIGN in NO_ALIGN from last NO_ALIGN evening evening evening from evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 5], [3, 4], [9, 12], [7, 9]]}, {"text": "what is the latest evening flight leaving city_name0 for city_name1", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "WASHINGTON", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN leaving NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving leaving NO_ALIGN leaving NO_ALIGN city_name0 NO_ALIGN the leaving leaving NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving leaving NO_ALIGN evening evening evening leaving evening NO_ALIGN leaving leaving NO_ALIGN evening NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN evening NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN the NO_ALIGN latest NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight leaving latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight leaving latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving latest NO_ALIGN leaving NO_ALIGN latest NO_ALIGN the leaving latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the NO_ALIGN leaving latest NO_ALIGN evening evening evening leaving evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there a day_name0 night flight from city_name1 to city_name0 on airline_code0", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "day_name0": "THURSDAY", "city_name1": "PITTSBURGH", "airline_code0": "US", "departure_time0": "601", "departure_time1": "1759"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN airline_code0 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN there NO_ALIGN a NO_ALIGN there there a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN there there NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 there there NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN there NO_ALIGN there NO_ALIGN there there there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there there NO_ALIGN from NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN there there NO_ALIGN flight a day_name0 there there day_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [10, 11], [6, 8], [6, 7], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [11, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME NOT BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "THURSDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "601", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1759", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the cheapest of the city_name1 to city_name0 flights which are after departure_time0 in the afternoon", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "1400", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN which NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 's departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN 's flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 's flights NO_ALIGN in NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN 's departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 's departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN 's cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN which NO_ALIGN 's NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN cheapest NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN departure_time0 's cheapest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN 's 's NO_ALIGN departure_time0 NO_ALIGN departure_time0 's 's NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in NO_ALIGN 's cheapest NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN departure_time0 's cheapest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest 's 's NO_ALIGN are NO_ALIGN cheapest NO_ALIGN are 's 's NO_ALIGN departure_time0 NO_ALIGN cheapest NO_ALIGN in NO_ALIGN 's cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest 's flights NO_ALIGN are NO_ALIGN cheapest NO_ALIGN are NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [10, 17], [5, 6], [1, 17], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [12, 17], [3, 4], [4, 10], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [11, 17], [5, 10], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1400", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the earliest flight in the morning from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN in NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in earliest in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN earliest city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in earliest city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest in NO_ALIGN from NO_ALIGN in NO_ALIGN in earliest in NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN earliest in NO_ALIGN earliest morning morning earliest morning NO_ALIGN earliest in NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN the NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in earliest earliest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN earliest earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in earliest earliest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN in earliest earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest earliest NO_ALIGN earliest morning morning earliest morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [7, 8]]}, {"text": "what is the earliest morning flight leaving city_name0 for city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN leaving NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving leaving NO_ALIGN leaving NO_ALIGN city_name0 NO_ALIGN the leaving leaving NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving leaving NO_ALIGN earliest morning morning leaving morning NO_ALIGN leaving leaving NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN the NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight leaving earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight leaving earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving earliest NO_ALIGN leaving NO_ALIGN earliest NO_ALIGN the leaving earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN the NO_ALIGN leaving earliest NO_ALIGN earliest morning morning leaving morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "what is the earliest morning flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight earliest city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight earliest city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest morning NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the earliest morning NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN earliest morning NO_ALIGN earliest morning morning earliest morning NO_ALIGN earliest morning NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN the NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight earliest earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight earliest earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the earliest earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN the NO_ALIGN earliest earliest NO_ALIGN earliest morning morning earliest morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "i'd like a flight from city_name0 to city_name1 as early in the morning as i can", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "city_name1": "BOSTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in as in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN as a NO_ALIGN in NO_ALIGN a NO_ALIGN in as a NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN as early NO_ALIGN from NO_ALIGN in NO_ALIGN in as early NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN as early NO_ALIGN early morning morning as morning NO_ALIGN as early NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN as NO_ALIGN early NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN the NO_ALIGN as NO_ALIGN NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN in as i'd NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN as i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN in as i'd NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN as as NO_ALIGN from NO_ALIGN i'd NO_ALIGN in as as NO_ALIGN flight NO_ALIGN i'd NO_ALIGN in NO_ALIGN as as NO_ALIGN early morning morning as morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [11, 14], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [9, 17], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [7, 9], [0, 1], [3, 5], [15, 17], [13, 14], [5, 7], [7, 8]]}, {"text": "i need to fly from city_name0 to city_name1 first thing in the morning what is there", "question-split": "train", "variables": {"city_name0": "NASHVILLE", "city_name1": "TACOMA", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN the NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN there NO_ALIGN there thing there NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN thing i NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there thing i NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN thing there NO_ALIGN from NO_ALIGN there NO_ALIGN in thing there NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN thing there NO_ALIGN first morning morning thing morning NO_ALIGN thing there NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN the NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN there NO_ALIGN first NO_ALIGN there thing first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN thing first NO_ALIGN there NO_ALIGN first NO_ALIGN there thing first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN thing first NO_ALIGN from NO_ALIGN first NO_ALIGN in thing first NO_ALIGN in NO_ALIGN first NO_ALIGN in NO_ALIGN thing first NO_ALIGN first morning morning thing morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [1, 16], [8, 10], [13, 16], [3, 16], [11, 13], [2, 16], [4, 5], [10, 13], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [4, 6], [6, 8], [14, 16], [13, 14], [3, 4]]}, {"text": "i'd like the first flight in the morning from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN in NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in i'd in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN i'd city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in i'd city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd in NO_ALIGN from NO_ALIGN in NO_ALIGN in i'd in NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN i'd in NO_ALIGN first morning morning i'd morning NO_ALIGN i'd in NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN the NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN in i'd first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN i'd first NO_ALIGN in NO_ALIGN first NO_ALIGN in i'd first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd first NO_ALIGN from NO_ALIGN first NO_ALIGN in i'd first NO_ALIGN flight NO_ALIGN first NO_ALIGN in NO_ALIGN i'd first NO_ALIGN first morning morning i'd morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [9, 11], [3, 6], [11, 13], [3, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [7, 8], [3, 4]]}, {"text": "i want to travel from city_name0 to city_name1 early in the morning first flight", "question-split": "train", "variables": {"city_name0": "ATLANTA", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN the NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN want NO_ALIGN in NO_ALIGN want travel in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN travel i NO_ALIGN want NO_ALIGN want NO_ALIGN want travel i NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel early NO_ALIGN from NO_ALIGN in NO_ALIGN in travel early NO_ALIGN flight NO_ALIGN want NO_ALIGN in NO_ALIGN travel early NO_ALIGN early morning morning travel morning NO_ALIGN travel early NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN early NO_ALIGN NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN the NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN want NO_ALIGN first NO_ALIGN want travel first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN travel first NO_ALIGN want NO_ALIGN first NO_ALIGN want travel first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel first NO_ALIGN from NO_ALIGN first NO_ALIGN in travel first NO_ALIGN flight NO_ALIGN first NO_ALIGN in NO_ALIGN travel first NO_ALIGN early morning morning travel morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [3, 4], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [10, 14], [7, 8]]}, {"text": "when is the first flight in the morning from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "DENVER", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN in NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN when NO_ALIGN in NO_ALIGN when when in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN when city_name1 NO_ALIGN when NO_ALIGN city_name1 NO_ALIGN when when city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN when in NO_ALIGN from NO_ALIGN in NO_ALIGN in when in NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN when in NO_ALIGN first morning morning when morning NO_ALIGN when in NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN the NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN when NO_ALIGN first NO_ALIGN when when first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN when first NO_ALIGN when NO_ALIGN first NO_ALIGN when when first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN when first NO_ALIGN from NO_ALIGN first NO_ALIGN in when first NO_ALIGN flight NO_ALIGN first NO_ALIGN in NO_ALIGN when first NO_ALIGN first morning morning when morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which airline has the most class_type0 class flights", "question-split": "train", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN airline airline NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN airline NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN which class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class which class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 which flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 airline airline flights NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2]]}, {"text": "how many flights does each airline have with class_type0 class service", "question-split": "train", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN does many NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN have NO_ALIGN airline NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class NO_ALIGN each NO_ALIGN airline NO_ALIGN have NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN each NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN have service NO_ALIGN class NO_ALIGN each NO_ALIGN class have service NO_ALIGN service NO_ALIGN service NO_ALIGN service have have NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class_type0 airline airline have NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [10, 11], [6, 11], [4, 5], [5, 6], [8, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [0, 3], [3, 4]]}, {"text": "which airline has more class_type0 class flights than any other airline", "question-split": "train", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN airline airline NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN any NO_ALIGN airline NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline NO_ALIGN any NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN than class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class than class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 than any NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 airline airline any NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 7], [3, 4], [0, 2]]}, {"text": "how many flights does each airline have with class_type0 class service", "question-split": "exclude", "variables": {"class_type0": "FIRST"}, "alignment": "NO_ALIGN does many NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN have NO_ALIGN airline NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class NO_ALIGN each NO_ALIGN airline NO_ALIGN have NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN each NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN have service NO_ALIGN class NO_ALIGN each NO_ALIGN class have service NO_ALIGN service NO_ALIGN service NO_ALIGN service have have NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class_type0 airline airline have NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [10, 11], [6, 11], [4, 5], [5, 6], [8, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [0, 3], [3, 4]]}], "sql": ["SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID GROUP BY FLIGHTalias0.AIRLINE_CODE ;"], "variables": [{"example": "BUSINESS", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show all flights from city_name1 to city_name0 on monday evening and the cost of each flight", "question-split": "train", "variables": {"city_name0": "DALLAS", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "BALTIMORE", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN monday NO_ALIGN on NO_ALIGN on NO_ALIGN show NO_ALIGN each NO_ALIGN show NO_ALIGN each NO_ALIGN flights NO_ALIGN all NO_ALIGN show NO_ALIGN each NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight cost city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cost monday NO_ALIGN monday NO_ALIGN monday cost monday NO_ALIGN monday NO_ALIGN monday cost monday NO_ALIGN monday NO_ALIGN monday cost monday NO_ALIGN on NO_ALIGN monday NO_ALIGN on cost all NO_ALIGN on NO_ALIGN monday NO_ALIGN on cost all NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN cost all NO_ALIGN flight NO_ALIGN all NO_ALIGN flight cost all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cost all NO_ALIGN from NO_ALIGN all NO_ALIGN the NO_ALIGN cost on NO_ALIGN monday NO_ALIGN monday cost on NO_ALIGN monday NO_ALIGN monday cost on NO_ALIGN monday NO_ALIGN monday cost on NO_ALIGN on NO_ALIGN on NO_ALIGN on cost each NO_ALIGN on NO_ALIGN on NO_ALIGN on cost each NO_ALIGN each NO_ALIGN each NO_ALIGN each cost each NO_ALIGN show NO_ALIGN each NO_ALIGN show cost all NO_ALIGN evening evening evening cost evening cost all NO_ALIGN show NO_ALIGN each NO_ALIGN show NO_ALIGN", "constituency_parser_spans": [[11, 16], [1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [0, 16], [3, 7], [1, 2], [6, 7], [12, 13], [8, 10], [13, 16], [7, 10], [11, 13], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 8], [14, 16], [13, 14], [5, 7], [3, 4]]}, {"text": "what are the flights and prices from city_name1 to city_name0 for monday morning", "question-split": "train", "variables": {"city_name0": "CHARLOTTE", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "LOS ANGELES", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN for NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN prices NO_ALIGN are NO_ALIGN prices NO_ALIGN flights NO_ALIGN prices NO_ALIGN flights NO_ALIGN flights NO_ALIGN the NO_ALIGN prices NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for monday NO_ALIGN monday NO_ALIGN monday for monday NO_ALIGN monday NO_ALIGN monday for monday NO_ALIGN monday NO_ALIGN monday for monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday for flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday for flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN for city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN for for NO_ALIGN monday NO_ALIGN monday for for NO_ALIGN monday NO_ALIGN monday for for NO_ALIGN monday NO_ALIGN monday for prices NO_ALIGN monday NO_ALIGN for NO_ALIGN monday for prices NO_ALIGN for NO_ALIGN prices NO_ALIGN monday for prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices for prices NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices for flights NO_ALIGN morning morning morning for morning for flights NO_ALIGN are NO_ALIGN prices NO_ALIGN are NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [3, 4], [11, 13], [2, 6], [4, 5], [1, 13], [10, 13], [2, 10], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "give me the latest flight tomorrow on airline_code0 from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "MILWAUKEE", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight latest city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest on NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest airline_code0 NO_ALIGN on NO_ALIGN on NO_ALIGN on latest airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN latest city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight latest city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN latest airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN latest airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN latest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest latest NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN on latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "what is airline_code0 's last flight from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "WASHINGTON", "day_number0": "21", "month_number0": "7", "year0": "1991", "city_name1": "BOSTON", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight 's city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 's day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 's day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 's on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 's airline_code0 NO_ALIGN on NO_ALIGN on NO_ALIGN on 's airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN 's city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight 's city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN 's airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN 's airline_code0 NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN airline_code0 NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN 's NO_ALIGN flight NO_ALIGN 's NO_ALIGN flight 's 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 's day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 's day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 's day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 's last NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on 's last NO_ALIGN flight NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's 's NO_ALIGN flight NO_ALIGN 's NO_ALIGN flight 's 's NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's last NO_ALIGN from NO_ALIGN 's NO_ALIGN city_name0 NO_ALIGN 's last NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [11, 13], [2, 6], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [7, 8], [6, 8], [3, 4], [2, 4]]}, {"text": "give me the latest flight tomorrow on airline_code0 from city_name1 to city_name0", "question-split": "exclude", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "MILWAUKEE", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight latest city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest on NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest airline_code0 NO_ALIGN on NO_ALIGN on NO_ALIGN on latest airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN latest city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight latest city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN latest airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN latest airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN latest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest latest NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN on latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [8, 12], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "give me the latest airline_code0 flight from city_name1 to city_name0 tomorrow", "question-split": "train", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "MILWAUKEE", "airline_code0": "NW"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight latest city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest airline_code0 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN latest city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight latest city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN latest airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN latest airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN latest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest latest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight latest latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN latest latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the NO_ALIGN latest latest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [10, 11], [6, 8], [6, 7], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "now please give me the latest flight tomorrow on airline_code0 from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "MILWAUKEE", "airline_code0": "TW"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN now NO_ALIGN on NO_ALIGN on NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight now city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN now now NO_ALIGN tomorrow NO_ALIGN tomorrow now now NO_ALIGN tomorrow NO_ALIGN tomorrow now now NO_ALIGN tomorrow NO_ALIGN tomorrow now on NO_ALIGN tomorrow NO_ALIGN now NO_ALIGN tomorrow now airline_code0 NO_ALIGN on NO_ALIGN on NO_ALIGN on now airline_code0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN now please NO_ALIGN flight NO_ALIGN please NO_ALIGN flight now please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN now airline_code0 NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN now airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN now airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN latest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN airline_code0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight now latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN now tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow now tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow now tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow now tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow now latest NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN on now latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN the NO_ALIGN now latest NO_ALIGN flight NO_ALIGN latest NO_ALIGN flight now latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN now latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the NO_ALIGN now latest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "TACOMA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "and flight from city_name1 to city_name0 leaving after departure_time1", "question-split": "train", "variables": {"departure_time0": "600", "departure_time1": "0", "city_name0": "BOSTON", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN and NO_ALIGN city_name0 NO_ALIGN departure_time1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN departure_time1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 departure_time1 after leaving departure_time1 NO_ALIGN departure_time1 NO_ALIGN flight NO_ALIGN leaving city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving departure_time1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN leaving NO_ALIGN leaving departure_time1 NO_ALIGN flight NO_ALIGN departure_time1 NO_ALIGN flight leaving departure_time1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving departure_time1 NO_ALIGN from NO_ALIGN departure_time1 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [0, 9], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME > departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "600", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "can you give me information on transportation from the airport in city_name0 to downtown city_name0", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA"}, "alignment": "NO_ALIGN transportation downtown NO_ALIGN transportation NO_ALIGN airport NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN information NO_ALIGN downtown you information NO_ALIGN in NO_ALIGN information NO_ALIGN in you information NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN you downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [8, 9], [1, 2], [6, 7], [12, 13], [5, 12], [8, 10], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [13, 14], [2, 15], [7, 8]]}, {"text": "what ground transportation is available at the city_name0 airport", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at available ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4]]}, {"text": "please give grounds transportation at city_name0 airport", "question-split": "test", "variables": {"city_name0": "DALLAS"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN transportation NO_ALIGN at NO_ALIGN transportation at at NO_ALIGN at NO_ALIGN at NO_ALIGN at at at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN at transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN transportation NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"text": "what ground transportation is available at city_name0 airport", "question-split": "train", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at available ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [5, 8]]}, {"text": "what ground transportation is available at the city_name0 airport", "question-split": "exclude", "variables": {"city_name0": "BOSTON"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at available ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4]]}, {"text": "what ground transportation is available at the city_name0 airport", "question-split": "exclude", "variables": {"city_name0": "BALTIMORE"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at available ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4]]}, {"text": "fine can you give me information on ground transportation in city_name0 to downtown", "question-split": "train", "variables": {"city_name0": "WASHINGTON"}, "alignment": "NO_ALIGN transportation downtown NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN information NO_ALIGN downtown you information NO_ALIGN in NO_ALIGN information NO_ALIGN in you information NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN you downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [3, 13], [4, 5], [1, 13], [6, 11], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [7, 8]]}, {"text": "show me the ground transportation in the city_name0 airport", "question-split": "dev", "variables": {"city_name0": "SALT LAKE CITY"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground show ground NO_ALIGN in NO_ALIGN ground NO_ALIGN in show ground NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN show transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [2, 5], [3, 4]]}, {"text": "tell me about ground transportation in city_name0 airport", "question-split": "train", "variables": {"city_name0": "ST. PETERSBURG"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground about ground NO_ALIGN tell NO_ALIGN ground NO_ALIGN tell about ground NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN about transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [0, 8], [3, 4], [5, 8], [3, 5]]}, {"text": "show me a list of ground transportation at city_name0 airport", "question-split": "train", "variables": {"city_name0": "BOSTON"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground of ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at of ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN of transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [2, 4]]}, {"text": "i need your help with information on ground transportation from the airport in city_name0 to downtown", "question-split": "test", "variables": {"city_name0": "PHILADELPHIA"}, "alignment": "NO_ALIGN transportation downtown NO_ALIGN transportation NO_ALIGN airport NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN information NO_ALIGN downtown your information NO_ALIGN in NO_ALIGN information NO_ALIGN in your information NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN your downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [2, 4], [1, 2], [6, 7], [12, 13], [1, 16], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [5, 16], [13, 14], [7, 8], [6, 16]]}, {"text": "show me the ground transportation to city_name0", "question-split": "train", "variables": {"city_name0": "WESTCHESTER COUNTY"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground show ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 show ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN show transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4]]}, {"text": "i need information on ground transportation from the airport in city_name0", "question-split": "train", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN information NO_ALIGN ground need information NO_ALIGN in NO_ALIGN information NO_ALIGN in need information NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN need transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [10, 11], [6, 11], [4, 5], [5, 6], [3, 11], [9, 10], [8, 9], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what type of ground transportation is available at city_name0 airport", "question-split": "train", "variables": {"city_name0": "BOSTON"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at available ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [5, 6], [4, 5], [8, 10], [8, 9], [9, 10], [0, 5], [2, 3], [7, 10], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"text": "what kind of ground transportation is available in city_name0", "question-split": "exclude", "variables": {"city_name0": "LAS VEGAS"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground available ground NO_ALIGN in NO_ALIGN ground NO_ALIGN in available ground NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [3, 5], [6, 7], [5, 6], [4, 5], [8, 9], [0, 5], [2, 3], [3, 4], [2, 5], [7, 8], [0, 2], [7, 9]]}, {"text": "can you help me with ground transportation information i need to get from the airport in city_name0 to downtown city_name0", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA"}, "alignment": "NO_ALIGN transportation downtown NO_ALIGN transportation NO_ALIGN airport NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN information NO_ALIGN downtown you information NO_ALIGN in NO_ALIGN information NO_ALIGN in you information NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN you downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [5, 8], [1, 2], [16, 17], [6, 7], [12, 13], [12, 17], [3, 4], [18, 20], [4, 5], [13, 15], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [11, 12], [19, 20], [15, 17], [0, 1], [17, 18], [12, 15], [13, 14], [5, 20], [11, 20], [7, 8]]}, {"text": "how do i get downtown from the city_name0 airport", "question-split": "train", "variables": {"city_name0": "TORONTO"}, "alignment": "NO_ALIGN airport downtown NO_ALIGN airport NO_ALIGN airport NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN airport NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown do downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN city_name0 do downtown NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN do downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4]]}, {"text": "please give ground transportation at city_name0 airport", "question-split": "test", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN transportation transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN airport NO_ALIGN ground NO_ALIGN ground NO_ALIGN ground at ground NO_ALIGN at NO_ALIGN ground NO_ALIGN at at ground NO_ALIGN city_name0 NO_ALIGN NO_ALIGN ground NO_ALIGN at transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "when does airline_code0 fly from city_name1 to city_name0 on day_name0", "question-split": "train", "variables": {"city_name0": "DENVER", "day_name0": "SUNDAY", "city_name1": "PHILADELPHIA", "airline_code0": "CO"}, "alignment": "NO_ALIGN does fly NO_ALIGN when NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN airline_code0 NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN when NO_ALIGN city_name1 NO_ALIGN when fly city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN does NO_ALIGN fly day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN fly fly NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 fly fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN fly NO_ALIGN fly city_name0 NO_ALIGN when NO_ALIGN city_name0 NO_ALIGN when fly city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN fly NO_ALIGN fly fly NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [3, 10], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SUNDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what are the lowest fares from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "WASHINGTON", "state_code0": "DC", "city_name1": "SALT LAKE CITY"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN fares NO_ALIGN fares NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN are NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN are NO_ALIGN the NO_ALIGN lowest NO_ALIGN NO_ALIGN lowest NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from lowest NO_ALIGN from NO_ALIGN NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from lowest NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN fares NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN are NO_ALIGN NO_ALIGN NO_ALIGN are NO_ALIGN are NO_ALIGN the NO_ALIGN are NO_ALIGN NO_ALIGN are NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name0 NO_ALIGN from NO_ALIGN NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from are NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE ( CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias2.STATE_CODE = \"state_code0\" ) ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = \"city_name1\" ) ) ) ) ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias0.STATE_CODE = \"state_code0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ) ) ) ) ;"], "variables": [{"example": "WASHINGTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DC", "location": "unk", "name": "state_code0", "type": "state_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "get last flight from city_name1 to city_name0 on wednesday or first flight from city_name1 to city_name0 on thursday", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "SALT LAKE CITY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday from wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN from first NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN first NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from first NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN first NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from NO_ALIGN NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN on NO_ALIGN on NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN wednesday NO_ALIGN wednesday from thursday NO_ALIGN wednesday NO_ALIGN wednesday from thursday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN last NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN or NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN or NO_ALIGN or NO_ALIGN wednesday NO_ALIGN wednesday from or NO_ALIGN wednesday NO_ALIGN wednesday from or NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN from last NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN last NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from last NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN last NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from NO_ALIGN NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN on NO_ALIGN on NO_ALIGN flight NO_ALIGN flight NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN last NO_ALIGN last NO_ALIGN wednesday NO_ALIGN wednesday from last NO_ALIGN wednesday NO_ALIGN wednesday from last NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from NO_ALIGN NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from NO_ALIGN NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [3, 4], [16, 18], [12, 14], [4, 5], [0, 18], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [3, 5], [17, 18], [14, 16], [13, 14], [5, 7], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name1\" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) OR ( FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias2.DEPARTURE_TIME ) FROM FLIGHT AS FLIGHTalias2 WHERE ( ( FLIGHTalias2.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = \"city_name1\" ) ) ) ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cost of transport_type0 service at city_name0 airport", "question-split": "train", "variables": {"city_name0": "BOSTON", "transport_type0": "LIMOUSINE"}, "alignment": "NO_ALIGN airport transport_type0 NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN airport NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN at NO_ALIGN airport cost at NO_ALIGN at NO_ALIGN at NO_ALIGN at cost at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN cost transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport cost transport_type0 NO_ALIGN airport NO_ALIGN NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [2, 4]]}, {"text": "how much does it cost to get downtown from the city_name0 airport by transport_type0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "transport_type0": "LIMOUSINE"}, "alignment": "NO_ALIGN by transport_type0 NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN airport NO_ALIGN transport_type0 NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown cost downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN city_name0 cost downtown NO_ALIGN city_name0 NO_ALIGN NO_ALIGN does NO_ALIGN cost transport_type0 NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown cost transport_type0 NO_ALIGN airport NO_ALIGN NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [6, 14], [1, 2], [6, 7], [12, 13], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [8, 12], [13, 14], [5, 14], [7, 8], [0, 2], [9, 12]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;", "SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ) AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "LIMOUSINE", "location": "unk", "name": "transport_type0", "type": "transport_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the most expensive flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN most NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN most NO_ALIGN expensive NO_ALIGN most NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from most NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from most NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the from expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the NO_ALIGN from most NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from most NO_ALIGN expensive NO_ALIGN most NO_ALIGN expensive NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [4, 5], [8, 10], [2, 10], [8, 9], [9, 10], [3, 4], [2, 3], [1, 10], [7, 8], [3, 5]]}, {"text": "what is the most expensive flight from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "DALLAS", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN most NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN most NO_ALIGN expensive NO_ALIGN most NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from most NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from most NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight from expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the from expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the NO_ALIGN from most NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive from most NO_ALIGN expensive NO_ALIGN most NO_ALIGN expensive NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [4, 5], [8, 10], [2, 10], [8, 9], [9, 10], [3, 4], [2, 3], [1, 10], [7, 8], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there a direct flight from city_name1 to city_name0 that arrives in city_name0 around 12 noon", "question-split": "train", "variables": {"arrival_time0": "1230", "arrival_time1": "1130", "city_name0": "PHILADELPHIA", "city_name1": "ATLANTA", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN arrives NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN arrives NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN arrives NO_ALIGN arrives around in 12 arrives NO_ALIGN arrives around arrives NO_ALIGN 12 a NO_ALIGN there NO_ALIGN a NO_ALIGN there 12 a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN 12 arrives NO_ALIGN flight NO_ALIGN a NO_ALIGN in NO_ALIGN 12 there NO_ALIGN there NO_ALIGN there NO_ALIGN there 12 there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 12 arrives NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN 12 arrives NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [2, 5], [1, 2], [6, 7], [12, 13], [13, 16], [3, 4], [11, 13], [2, 16], [4, 5], [13, 15], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [13, 14], [10, 16], [5, 7], [7, 8]]}, {"text": "are there any direct flights from city_name1 to city_name0 arriving in city_name0 about 12 noon", "question-split": "train", "variables": {"arrival_time0": "1230", "arrival_time1": "1130", "city_name0": "PHILADELPHIA", "city_name1": "ATLANTA", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN any NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN any NO_ALIGN arriving arriving arriving 12 any NO_ALIGN arriving noon arriving NO_ALIGN 12 city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there 12 city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN 12 any NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN 12 there NO_ALIGN there NO_ALIGN there NO_ALIGN there 12 there NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 12 any NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN 12 any NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [5, 7], [2, 15], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;"], "variables": [{"example": "1230", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1130", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all flights from city_name1 to city_name0 on a day_name0 with round trip fares under round_trip_cost0 dollars", "question-split": "train", "variables": {"day_name0": "TUESDAY", "round_trip_cost0": "932", "city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN fares NO_ALIGN dollars NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN flights NO_ALIGN all NO_ALIGN fares NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN dollars round_trip_cost0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN dollars round_trip_cost0 NO_ALIGN trip NO_ALIGN round_trip_cost0 NO_ALIGN day_name0 dollars dollars NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN with dollars dollars NO_ALIGN round NO_ALIGN round_trip_cost0 dollars round NO_ALIGN fares NO_ALIGN dollars NO_ALIGN fares dollars all NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 dollars all NO_ALIGN show NO_ALIGN round NO_ALIGN show NO_ALIGN dollars a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 dollars a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN dollars all NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN dollars all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 dollars all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN dollars all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [8, 9], [15, 16], [9, 18], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [15, 18], [3, 4], [11, 18], [16, 18], [4, 5], [9, 10], [12, 18], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [12, 15], [4, 6], [6, 8], [13, 14], [8, 18], [7, 8], [2, 4]]}, {"text": "show me flights from city_name1 to city_name0 on a day_name0 with a round trip fare less than round_trip_cost0 dollars", "question-split": "train", "variables": {"day_name0": "TUESDAY", "round_trip_cost0": "466", "city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN fare NO_ALIGN less NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN fare NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN than round_trip_cost0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN than round_trip_cost0 NO_ALIGN trip NO_ALIGN round_trip_cost0 NO_ALIGN day_name0 than less NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN with than less NO_ALIGN round NO_ALIGN round_trip_cost0 than round NO_ALIGN round NO_ALIGN less NO_ALIGN round than flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 than flights NO_ALIGN show NO_ALIGN round NO_ALIGN show NO_ALIGN than a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 than a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN than city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 than city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [8, 19], [18, 19], [11, 14], [3, 7], [11, 19], [1, 2], [16, 17], [2, 19], [6, 7], [12, 13], [8, 10], [17, 19], [4, 5], [10, 19], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [3, 5], [0, 1], [7, 8], [17, 18], [13, 14], [0, 19], [5, 7], [11, 15], [3, 4]]}, {"text": "show me all flights from city_name1 to city_name0 on a day_name0 with round trip fare less than round_trip_cost0 dollars", "question-split": "train", "variables": {"day_name0": "TUESDAY", "round_trip_cost0": "932", "city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN fare NO_ALIGN less NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN flights NO_ALIGN all NO_ALIGN fare NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN than round_trip_cost0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN than round_trip_cost0 NO_ALIGN trip NO_ALIGN round_trip_cost0 NO_ALIGN day_name0 than less NO_ALIGN with NO_ALIGN round_trip_cost0 NO_ALIGN with than less NO_ALIGN round NO_ALIGN round_trip_cost0 than round NO_ALIGN round NO_ALIGN less NO_ALIGN round than all NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 than all NO_ALIGN show NO_ALIGN round NO_ALIGN show NO_ALIGN than a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 than a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than all NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN than all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 than all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [18, 19], [11, 19], [1, 2], [16, 17], [2, 19], [6, 7], [12, 13], [9, 11], [3, 4], [17, 19], [4, 5], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [0, 1], [17, 18], [12, 15], [4, 6], [6, 8], [13, 14], [12, 19], [9, 19], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = \"day_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "932", "location": "unk", "name": "round_trip_cost0", "type": "round_trip_cost"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "could you give me the schedule of flights for airline_code0 and airline_code1 to airport_code0 on month_number0 day_number0", "question-split": "train", "variables": {"airline_code0": "AA", "airline_code1": "DL", "day_number0": "15", "month_number0": "8", "year0": "1991", "airport_code0": "DFW"}, "alignment": "NO_ALIGN airport_code0 could NO_ALIGN and NO_ALIGN could NO_ALIGN the NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN airport_code0 NO_ALIGN could NO_ALIGN airport_code0 NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN schedule NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN and NO_ALIGN schedule NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN NO_ALIGN could day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 could day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 could day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 could on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 could schedule NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN could airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN could could NO_ALIGN flights NO_ALIGN schedule NO_ALIGN schedule could schedule NO_ALIGN flights NO_ALIGN schedule NO_ALIGN flights could schedule NO_ALIGN to NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [7, 12], [15, 16], [8, 9], [6, 14], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [4, 6], [13, 14], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT AS AIRPORTalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( ( FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" ) OR ( FLIGHTalias1.AIRLINE_CODE = \"airline_code1\" ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "DL", "location": "unk", "name": "airline_code1", "type": "airline_code"}, {"example": "15", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DFW", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please tell me which airline has the most departures from city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN airline airline NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN which NO_ALIGN airline NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN airline NO_ALIGN which NO_ALIGN please NO_ALIGN tell NO_ALIGN please NO_ALIGN tell tell please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN tell which NO_ALIGN from NO_ALIGN please NO_ALIGN the airline airline which NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [3, 11], [8, 9], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [9, 10], [2, 3], [3, 5], [0, 1], [7, 8]]}], "sql": ["SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE GROUP BY FLIGHTalias0.AIRLINE_CODE ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the least expensive class_type0 class flight between city_name0 and city_name1", "question-split": "train", "variables": {"city_name0": "ATLANTA", "city_name1": "DALLAS", "class_type0": "BUSINESS"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN and NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between and NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN the between and NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN between class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN between expensive NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class between expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive between and NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN between class_type0 NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN least NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class NO_ALIGN class NO_ALIGN the NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between class NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN between least NO_ALIGN class NO_ALIGN class NO_ALIGN class between least NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between least NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the NO_ALIGN between class_type0 NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN expensive between and NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [8, 12], [5, 6], [2, 8], [4, 5], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [7, 8], [9, 12], [3, 5]]}, {"text": "what is the least expensive class_type0 class flight between city_name0 and city_name1", "question-split": "exclude", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "class_type0": "BUSINESS"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN and NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between and NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN the between and NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN between class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN between expensive NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class between expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive between and NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN between class_type0 NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN least NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class NO_ALIGN class NO_ALIGN the NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN flight between expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between class NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN between least NO_ALIGN class NO_ALIGN class NO_ALIGN class between least NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between least NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the between expensive NO_ALIGN flight NO_ALIGN expensive NO_ALIGN the NO_ALIGN between class_type0 NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN expensive between and NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN expensive NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [8, 12], [5, 6], [2, 8], [4, 5], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [7, 8], [9, 12], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias2.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias2 , FARE AS FAREalias3 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias2 , FLIGHT_FARE AS FLIGHT_FAREalias3 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FARE_BASISalias1.CLASS_TYPE = \"class_type0\" AND FAREalias3.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias2.FARE_ID AND FLIGHT_FAREalias3.FARE_ID = FAREalias3.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias3.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "BUSINESS", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all fares between city_name1 and city_name0 that are less than one_direction_cost0 dollars one way", "question-split": "train", "variables": {"one_direction_cost0": "200", "round_trip_required0": "NO", "city_name0": "SAN FRANCISCO", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN show less NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN less NO_ALIGN NO_ALIGN NO_ALIGN less NO_ALIGN way NO_ALIGN one_direction_cost0 than less NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN NO_ALIGN than city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 than city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than less NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN than all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 than all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than less NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [0, 16], [12, 16], [5, 8], [1, 2], [6, 7], [12, 13], [3, 4], [8, 16], [2, 16], [12, 14], [4, 5], [4, 16], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [0, 1], [14, 16], [13, 14], [10, 16], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( ( FAREalias0.ONE_DIRECTION_COST < one_direction_cost0 AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "200", "location": "unk", "name": "one_direction_cost0", "type": "one_direction_cost"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": ["repeated city name?"], "old-name": "", "query-split": "train", "sentences": [{"text": "is there one airline that flies from city_name1 to city_name2 milwaukee to city_name0 and from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "ST. LOUIS", "city_name1": "BURBANK", "city_name2": "MILWAUKEE"}, "alignment": "NO_ALIGN airline airline NO_ALIGN airline NO_ALIGN airline NO_ALIGN airline NO_ALIGN NO_ALIGN NO_ALIGN airline NO_ALIGN airline NO_ALIGN NO_ALIGN NO_ALIGN is NO_ALIGN airline NO_ALIGN airline NO_ALIGN is NO_ALIGN NO_ALIGN is NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN there is NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN is NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN is NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN there airline NO_ALIGN airline NO_ALIGN NO_ALIGN NO_ALIGN milwaukee NO_ALIGN airline NO_ALIGN airline NO_ALIGN milwaukee NO_ALIGN NO_ALIGN milwaukee NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN there milwaukee NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN there airline NO_ALIGN airline NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN airline NO_ALIGN airline NO_ALIGN there NO_ALIGN NO_ALIGN there NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN there NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN there there NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [2, 18], [5, 6], [4, 18], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [14, 18], [5, 18], [9, 11], [3, 4], [16, 18], [11, 13], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [6, 8], [14, 16], [13, 14], [1, 18], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE ( ( AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias1.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = \"city_name1\" ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias2.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias2 WHERE ( FLIGHTalias2.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias4.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 WHERE AIRPORT_SERVICEalias4.CITY_CODE IN ( SELECT CITYalias4.CITY_CODE FROM CITY AS CITYalias4 WHERE CITYalias4.CITY_NAME = \"city_name1\" ) ) AND FLIGHTalias2.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias5.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 WHERE AIRPORT_SERVICEalias5.CITY_CODE IN ( SELECT CITYalias5.CITY_CODE FROM CITY AS CITYalias5 WHERE CITYalias5.CITY_NAME = \"city_name2\" ) ) ) ) ) AND AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name2\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) ) ) ;"], "variables": [{"example": "ST. LOUIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BURBANK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how many flights does airline_code0 have leaving airport_code0", "question-split": "train", "variables": {"airline_code0": "NW", "airport_code0": "IAD"}, "alignment": "NO_ALIGN does many NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN have NO_ALIGN NO_ALIGN have NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN leaving have NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT DISTINCT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" ) ) ;"], "variables": [{"example": "NW", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "IAD", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the last flight from city_name2 to city_name0 city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "city_name2": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name2 NO_ALIGN flight NO_ALIGN city_name2 NO_ALIGN flight from city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from NO_ALIGN NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the from NO_ALIGN NO_ALIGN flight NO_ALIGN city_name2 NO_ALIGN the NO_ALIGN from city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN from NO_ALIGN NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN the NO_ALIGN last NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN last NO_ALIGN flight from last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from last NO_ALIGN flight NO_ALIGN last NO_ALIGN flight from last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from last NO_ALIGN flight NO_ALIGN last NO_ALIGN the from last NO_ALIGN flight NO_ALIGN last NO_ALIGN the NO_ALIGN from is NO_ALIGN flight NO_ALIGN is NO_ALIGN flight from is NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN from last NO_ALIGN from NO_ALIGN is NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name2\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "flight_days0 flights from city_name1 to city_name0 departing departure_time0 o'clock pm", "question-split": "train", "variables": {"city_name0": "CLEVELAND", "departure_time0": "1700", "city_name1": "NEWARK", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN departing NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN flights NO_ALIGN departing NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock departing NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departing NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock departing NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock departing NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [10, 11], [4, 6], [6, 7], [4, 5], [5, 6], [6, 10], [8, 9], [9, 10], [2, 3], [7, 10], [2, 4], [3, 4], [0, 2]]}, {"text": "flights from city_name1 to city_name0 departure_time0 o'clock pm flight_days0", "question-split": "train", "variables": {"city_name0": "CLEVELAND", "departure_time0": "1700", "city_name1": "NEWARK", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN pm NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN flights NO_ALIGN pm NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock pm NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock pm NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock pm NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock pm NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [1, 3], [4, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [7, 9]]}, {"text": "flights from city_name1 to city_name0 flight_days0 departure_time0 o'clock pm", "question-split": "train", "variables": {"city_name0": "CLEVELAND", "departure_time0": "1700", "city_name1": "NEWARK", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN pm NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN flights NO_ALIGN pm NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN o'clock pm NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock pm NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 o'clock departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN o'clock pm NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN o'clock pm NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [4, 9], [6, 7], [4, 5], [5, 6], [9, 10], [8, 9], [3, 9], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" ;"], "variables": [{"example": "CLEVELAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1700", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "NEWARK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "on a flight from city_name1 to city_name0 that leaves before departure_time0 is there such a flight", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "800", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before there before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN departure_time0 NO_ALIGN departure_time0 there there NO_ALIGN flight NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN there there NO_ALIGN before NO_ALIGN there NO_ALIGN before there there NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there there NO_ALIGN from NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [7, 16], [12, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [9, 11], [3, 4], [8, 16], [4, 5], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [5, 16], [13, 14], [7, 8], [6, 16]]}, {"text": "hi i need to get a flight from city_name1 to city_name0 departing before departure_time0", "question-split": "dev", "variables": {"city_name0": "SALT LAKE CITY", "departure_time0": "1000", "city_name1": "MEMPHIS"}, "alignment": "NO_ALIGN NO_ALIGN departing NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN departing NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before need before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need departing NO_ALIGN departure_time0 NO_ALIGN departure_time0 need departing NO_ALIGN flight NO_ALIGN before NO_ALIGN get NO_ALIGN need departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before need departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need departing NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [7, 8], [9, 12]]}, {"text": "all flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "train", "variables": {"city_name0": "BOSTON", "departure_time0": "1200", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before leaving before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving all NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN leaving NO_ALIGN leaving departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [4, 6], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}, {"text": "please give me a flight from city_name1 to city_name0 before departure_time0 in the morning", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN the NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before a before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN a departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 a departure_time0 NO_ALIGN flight NO_ALIGN before NO_ALIGN in NO_ALIGN a departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before a departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN a departure_time0 NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [1, 14], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [3, 9], [2, 3], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "all flights before departure_time0 city_name1 city_name0", "question-split": "test", "variables": {"city_name0": "DENVER", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before all before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN departure_time0 NO_ALIGN departure_time0 all all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN all departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before all departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all all NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"text": "what flights go from city_name1 to city_name0 before departure_time0", "question-split": "train", "variables": {"city_name0": "DENVER", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before go before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 go flights NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN go departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before go departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "show me all flights from city_name1 to city_name0 which leave before departure_time0", "question-split": "train", "variables": {"city_name0": "BOSTON", "departure_time0": "1200", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN show leave NO_ALIGN show NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN which NO_ALIGN leave NO_ALIGN NO_ALIGN before NO_ALIGN leave NO_ALIGN before NO_ALIGN leave which before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 which leave NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN me NO_ALIGN which leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave which leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which leave NO_ALIGN from NO_ALIGN leave NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [7, 8], [2, 4], [9, 12]]}, {"text": "i want to leave before departure_time0 in the morning what flight should i take to city_name0 from city_name1", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "800", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN the NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN the NO_ALIGN leave NO_ALIGN NO_ALIGN before NO_ALIGN want NO_ALIGN before NO_ALIGN want want before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN want leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 want leave NO_ALIGN flight NO_ALIGN before NO_ALIGN in NO_ALIGN want leave NO_ALIGN want NO_ALIGN leave NO_ALIGN want want leave NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want leave NO_ALIGN from NO_ALIGN leave NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [2, 18], [5, 6], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [16, 18], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [7, 8], [17, 18], [14, 16], [13, 14], [1, 18], [3, 18], [13, 18], [3, 4]]}, {"text": "please list all the flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before leaving before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving all NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN the NO_ALIGN leaving departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [9, 10], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "show me flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "train", "variables": {"city_name0": "ST. LOUIS", "departure_time0": "1000", "city_name1": "TAMPA"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before leaving before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving flights NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN me NO_ALIGN leaving departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4], [3, 7], [7, 8], [3, 5]]}, {"text": "please give me all flights from city_name1 to city_name0 before departure_time0", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "departure_time0": "1200", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before all before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN departure_time0 NO_ALIGN departure_time0 all all NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN me NO_ALIGN all departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before all departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all all NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [4, 5], [9, 10], [3, 9], [2, 3], [7, 9], [0, 1], [3, 5], [5, 7], [7, 8]]}, {"text": "are there any flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS FORT WORTH", "departure_time0": "1000"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN are NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN there NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN any NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before leaving before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving any NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving any NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN leaving NO_ALIGN leaving there NO_ALIGN before NO_ALIGN there NO_ALIGN before leaving there NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving any NO_ALIGN from NO_ALIGN there NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [2, 4]]}, {"text": "i'm looking for flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "train", "variables": {"city_name0": "ATLANTA", "city_name1": "OAKLAND", "departure_time0": "1045"}, "alignment": "NO_ALIGN NO_ALIGN i'm NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN i'm NO_ALIGN NO_ALIGN before NO_ALIGN i'm NO_ALIGN before NO_ALIGN i'm looking before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN looking i'm NO_ALIGN departure_time0 NO_ALIGN departure_time0 looking i'm NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN leaving NO_ALIGN looking departure_time0 NO_ALIGN i'm NO_ALIGN departure_time0 NO_ALIGN i'm looking departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN looking i'm NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[9, 10], [4, 5], [7, 8], [1, 2], [5, 6], [11, 12], [7, 9], [2, 3], [10, 12], [3, 9], [2, 12], [3, 4], [8, 9], [1, 2], [10, 11], [0, 1], [4, 9], [5, 7], [6, 7]]}, {"text": "i'm looking for flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "exclude", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH", "departure_time0": "900"}, "alignment": "NO_ALIGN NO_ALIGN i'm NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN i'm NO_ALIGN NO_ALIGN before NO_ALIGN i'm NO_ALIGN before NO_ALIGN i'm looking before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN looking i'm NO_ALIGN departure_time0 NO_ALIGN departure_time0 looking i'm NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN leaving NO_ALIGN looking departure_time0 NO_ALIGN i'm NO_ALIGN departure_time0 NO_ALIGN i'm looking departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN looking i'm NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [9, 10], [5, 7], [5, 6], [2, 12], [3, 4], [4, 5], [11, 12], [10, 11], [7, 9], [7, 8], [8, 9], [1, 2], [2, 3], [10, 12]]}, {"text": "okay i'm looking for a flight from city_name1 to city_name0 leaving before departure_time0 any day", "question-split": "train", "variables": {"departure_time0": "1000", "city_name0": "ST. LOUIS", "city_name1": "TAMPA"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN any NO_ALIGN NO_ALIGN before NO_ALIGN day NO_ALIGN before NO_ALIGN day day before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN day any NO_ALIGN departure_time0 NO_ALIGN departure_time0 day any NO_ALIGN flight NO_ALIGN before NO_ALIGN leaving NO_ALIGN day departure_time0 NO_ALIGN day NO_ALIGN departure_time0 NO_ALIGN day day departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN day any NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[9, 10], [4, 5], [7, 8], [14, 15], [5, 16], [1, 2], [15, 16], [5, 6], [11, 12], [7, 9], [9, 11], [2, 3], [3, 4], [12, 14], [8, 9], [2, 3], [13, 14], [10, 11], [14, 16], [0, 1], [5, 7], [12, 13], [3, 16], [6, 7]]}, {"text": "could you tell me what morning flights are available from city_name1 to city_name0 before departure_time0", "question-split": "train", "variables": {"city_name0": "DENVER", "departure_time0": "1000", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN could NO_ALIGN are NO_ALIGN departure_time0 NO_ALIGN available NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN available NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN could NO_ALIGN NO_ALIGN before NO_ALIGN tell NO_ALIGN before NO_ALIGN tell could before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN could could NO_ALIGN departure_time0 NO_ALIGN departure_time0 could could NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN available NO_ALIGN could available NO_ALIGN tell NO_ALIGN available NO_ALIGN tell could available NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could could NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [7, 15], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [13, 14], [2, 15], [7, 8]]}, {"text": "i need to fly from city_name1 to city_name0 please give me the times of your flights in the morning before departure_time0 o'clock", "question-split": "test", "variables": {"city_name0": "BALTIMORE", "departure_time0": "800", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN times NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN times NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before your before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN your times NO_ALIGN departure_time0 NO_ALIGN departure_time0 your times NO_ALIGN in NO_ALIGN before NO_ALIGN in NO_ALIGN your departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before your departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN your times NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[13, 22], [10, 11], [5, 6], [8, 9], [15, 16], [2, 22], [18, 19], [19, 22], [14, 22], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [11, 22], [16, 22], [11, 13], [17, 19], [20, 22], [4, 5], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [1, 22], [4, 6], [3, 22], [6, 8], [13, 14], [14, 16], [21, 22], [3, 8], [3, 4]]}, {"text": "please give me the flight times i would like to fly from city_name1 to city_name0 in the morning before departure_time0", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "departure_time0": "800", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN times NO_ALIGN me NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN the NO_ALIGN times NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before fly before NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN fly times NO_ALIGN departure_time0 NO_ALIGN departure_time0 fly times NO_ALIGN flight NO_ALIGN before NO_ALIGN in NO_ALIGN fly departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before fly departure_time0 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly times NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [0, 20], [5, 6], [15, 20], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [7, 20], [16, 17], [6, 7], [12, 13], [3, 20], [8, 20], [3, 6], [15, 18], [3, 4], [18, 20], [16, 18], [11, 13], [9, 20], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [0, 1], [17, 18], [13, 14], [6, 20], [10, 20], [7, 8]]}, {"text": "i need a flight from city_name1 to city_name0 that leaves before departure_time0 see if too much information", "question-split": "train", "variables": {"departure_time0": "1200", "city_name0": "DALLAS", "city_name1": "CLEVELAND"}, "alignment": "NO_ALIGN NO_ALIGN leaves NO_ALIGN a NO_ALIGN departure_time0 NO_ALIGN information NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN information NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN leaves NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before if before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN if leaves NO_ALIGN departure_time0 NO_ALIGN departure_time0 if leaves NO_ALIGN flight NO_ALIGN before NO_ALIGN information NO_ALIGN if information NO_ALIGN before NO_ALIGN information NO_ALIGN before if information NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN if leaves NO_ALIGN from NO_ALIGN information NO_ALIGN information NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [9, 17], [3, 4], [4, 5], [9, 10], [2, 3], [14, 15], [8, 17], [11, 12], [0, 1], [4, 6], [6, 8], [14, 16], [13, 14], [7, 8], [2, 4]]}, {"text": "please list only the flights from city_name1 to city_name0 that leave before departure_time0", "question-split": "train", "variables": {"departure_time0": "1200", "city_name0": "DALLAS", "city_name1": "CLEVELAND"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN only NO_ALIGN NO_ALIGN before NO_ALIGN leave NO_ALIGN before NO_ALIGN leave from before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from only NO_ALIGN departure_time0 NO_ALIGN departure_time0 from only NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN the NO_ALIGN from leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave from leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from only NO_ALIGN from NO_ALIGN leave NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [0, 13], [7, 8]]}, {"text": "list flights before departure_time0 from city_name1 to city_name0", "question-split": "train", "variables": {"departure_time0": "900", "city_name0": "TAMPA", "city_name1": "CINCINNATI"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before from before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 from flights NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN from departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before from departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"text": "list flights from city_name1 to city_name0 before departure_time0", "question-split": "train", "variables": {"departure_time0": "1200", "city_name0": "TAMPA", "city_name1": "CINCINNATI"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before from before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 from flights NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN from departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before from departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [7, 8], [0, 2]]}, {"text": "city_name1 to city_name0 before departure_time0", "question-split": "train", "variables": {"departure_time0": "0", "city_name0": "DALLAS", "city_name1": "HOUSTON"}, "alignment": "NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN before NO_ALIGN before NO_ALIGN before NO_ALIGN before city_name1 before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 city_name1 departure_time0 NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN city_name0 NO_ALIGN city_name1 departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN before city_name1 departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"text": "list the flights from city_name1 to city_name0 that leave before departure_time0", "question-split": "train", "variables": {"departure_time0": "1200", "city_name0": "MEMPHIS", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN leave NO_ALIGN departure_time0 NO_ALIGN before NO_ALIGN flights NO_ALIGN leave NO_ALIGN NO_ALIGN before NO_ALIGN leave NO_ALIGN before NO_ALIGN leave from before NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 from leave NO_ALIGN city_name1 NO_ALIGN before NO_ALIGN the NO_ALIGN from leave NO_ALIGN leave NO_ALIGN leave NO_ALIGN leave from leave NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from leave NO_ALIGN from NO_ALIGN leave NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [1, 11], [7, 8], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what is the total seating capacity of all aircraft of airline_code0", "question-split": "train", "variables": {"airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN total NO_ALIGN seating NO_ALIGN total NO_ALIGN capacity NO_ALIGN aircraft NO_ALIGN total NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN airline_code0 NO_ALIGN all NO_ALIGN aircraft NO_ALIGN seating NO_ALIGN total NO_ALIGN seating capacity all NO_ALIGN seating NO_ALIGN aircraft NO_ALIGN seating capacity all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [10, 11], [6, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE , AIRCRAFTalias0.CAPACITY FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me flights from city_name1 to city_name0 class_type0 on wednesday about 12 noon", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "class_type0": "COACH", "departure_time0": "1230", "departure_time1": "1130", "city_name0": "BALTIMORE", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN show noon NO_ALIGN class_type0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN flights NO_ALIGN noon NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 on NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday 12 class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN 12 class_type0 NO_ALIGN on NO_ALIGN on NO_ALIGN on 12 class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 12 class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 12 class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 12 noon NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on 12 noon NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN 12 NO_ALIGN noon NO_ALIGN from noon flights 12 noon NO_ALIGN from noon to NO_ALIGN NO_ALIGN 12 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 12 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 12 noon NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN 12 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 12 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 12 noon NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [9, 13], [6, 8], [0, 13], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "COACH", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "1230", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1130", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all the available flights from city_name1 to city_name0 with economy fares", "question-split": "train", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN all NO_ALIGN fares NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 available city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN available fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy available economy NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares available all NO_ALIGN show NO_ALIGN economy NO_ALIGN show available all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN available available NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available all NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [0, 13], [7, 8]]}, {"text": "show me the economy flights from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN show economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy show economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy show flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "can you show me flights that are economy class from city_name1 to city_name0", "question-split": "train", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN class NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you economy NO_ALIGN class NO_ALIGN economy NO_ALIGN class you economy NO_ALIGN class NO_ALIGN economy NO_ALIGN class you flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show you flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN you city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [9, 11], [3, 4], [11, 13], [3, 13], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [6, 13], [7, 8]]}, {"text": "show me what flights are available from city_name1 to city_name0 with economy fares", "question-split": "dev", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 available city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN available fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy available economy NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares available flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show available flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN available available NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available flights NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [4, 13], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [2, 4]]}, {"text": "can you show me the flights from city_name1 to city_name0 with economy fares", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "economy0": "YES", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy you economy NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares you flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show you flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN you city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [4, 13], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [7, 8]]}, {"text": "show me the flights from city_name1 to city_name0 at economy level", "question-split": "test", "variables": {"city_name0": "BALTIMORE", "economy0": "YES", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN at show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN show economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy show economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy show flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN show at NO_ALIGN at NO_ALIGN at NO_ALIGN at show at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show flights NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [8, 11], [10, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [2, 4]]}, {"text": "can you show me the economy fare flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN fare NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy you economy NO_ALIGN fare NO_ALIGN economy NO_ALIGN fare you flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show you flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN you city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 you city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 8], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [4, 12], [2, 3], [2, 12], [3, 4]]}, {"text": "can you show me the available flights from city_name1 to city_name0 with economy fares", "question-split": "train", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN fares NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 you city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy you economy NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares you flights NO_ALIGN show NO_ALIGN economy NO_ALIGN show you flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN you available NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 you available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flights NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [11, 14], [7, 11], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [7, 8]]}, {"text": "city_name1 to city_name0 economy", "question-split": "dev", "variables": {"economy0": "YES", "city_name0": "LAS VEGAS", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "city_name1 to city_name0 economy", "question-split": "exclude", "variables": {"economy0": "YES", "city_name0": "LAS VEGAS", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "city_name1 to city_name0 economy", "question-split": "exclude", "variables": {"economy0": "YES", "city_name0": "BALTIMORE", "city_name1": "LAS VEGAS"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "city_name1 to city_name0 economy", "question-split": "exclude", "variables": {"economy0": "YES", "city_name0": "BALTIMORE", "city_name1": "LAS VEGAS"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "city_name1 to city_name0 economy", "question-split": "exclude", "variables": {"economy0": "YES", "city_name0": "KANSAS CITY", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.ECONOMY = \"economy0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me the flight_days0 flight schedule between city_name0 and city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "PITTSBURGH", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN show flight_days0 NO_ALIGN and NO_ALIGN flight_days0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN city_name0 NO_ALIGN flight_days0 NO_ALIGN the NO_ALIGN flight_days0 NO_ALIGN the NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN flight between flight_days0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between flight_days0 NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN flight between flight_days0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between schedule NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN the between schedule NO_ALIGN flight NO_ALIGN flight_days0 NO_ALIGN the NO_ALIGN between flight_days0 NO_ALIGN between NO_ALIGN schedule NO_ALIGN schedule between schedule NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN between schedule NO_ALIGN between NO_ALIGN schedule NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_DAYS = \"flight_days0\" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like the day_number0 flight from city_name0 into city_name1 on month_number0 day_number0 and the last flight from city_name1 back to city_name0 on month_number0 day_number0", "question-split": "test", "variables": {"day_number0": "1", "month_number0": "3", "year0": "1991", "city_name0": "DALLAS", "city_name1": "HOUSTON"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN and NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN the NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 into and NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN month_number0 NO_ALIGN last NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN the NO_ALIGN last NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN last NO_ALIGN flight into last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN into last NO_ALIGN month_number0 NO_ALIGN day_number0 into last NO_ALIGN month_number0 NO_ALIGN month_number0 into last NO_ALIGN month_number0 NO_ALIGN month_number0 into month_number0 NO_ALIGN month_number0 NO_ALIGN last NO_ALIGN month_number0 into last NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN on into last NO_ALIGN flight NO_ALIGN last NO_ALIGN the NO_ALIGN into last NO_ALIGN flight NO_ALIGN last NO_ALIGN flight into last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into last NO_ALIGN from NO_ALIGN last NO_ALIGN the NO_ALIGN into and NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN into i NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight into i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN into and NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN into city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight into city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into and NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 into and NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN the NO_ALIGN last NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN last NO_ALIGN flight into last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 into day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 into last NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on into last NO_ALIGN flight NO_ALIGN last NO_ALIGN the NO_ALIGN into the NO_ALIGN flight NO_ALIGN the NO_ALIGN flight into the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN into last NO_ALIGN from NO_ALIGN the NO_ALIGN the NO_ALIGN into and NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN into i NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight into i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN into and NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN into city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight into city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN into and NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [22, 23], [5, 6], [8, 9], [15, 16], [18, 19], [19, 22], [1, 2], [16, 17], [6, 7], [1, 25], [12, 13], [20, 21], [3, 6], [3, 4], [11, 13], [23, 25], [17, 19], [20, 22], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [23, 24], [0, 1], [17, 18], [22, 25], [6, 8], [13, 14], [21, 22], [14, 25], [10, 25], [24, 25], [2, 25], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;"], "variables": [{"example": "1", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "HOUSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me round trip fares from city_name0 to city_name1 nonstop", "question-split": "train", "variables": {"city_name0": "LAS VEGAS", "city_name1": "HOUSTON", "stops0": "0"}, "alignment": "NO_ALIGN show round NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN fares NO_ALIGN round NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 nonstop city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN nonstop nonstop NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me nonstop nonstop NO_ALIGN city_name1 NO_ALIGN nonstop NO_ALIGN me NO_ALIGN nonstop round NO_ALIGN round round round NO_ALIGN nonstop round NO_ALIGN fares NO_ALIGN round NO_ALIGN fares nonstop nonstop NO_ALIGN show NO_ALIGN round NO_ALIGN show nonstop nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [2, 5], [3, 4]]}, {"text": "round trip city_name0 to city_name1 nonstop", "question-split": "train", "variables": {"city_name0": "HOUSTON", "city_name1": "LAS VEGAS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN round NO_ALIGN round NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN round NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN round NO_ALIGN round NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 nonstop city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN nonstop nonstop NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 nonstop nonstop NO_ALIGN city_name1 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN nonstop round NO_ALIGN round round round NO_ALIGN nonstop round NO_ALIGN round NO_ALIGN round NO_ALIGN round nonstop nonstop NO_ALIGN round NO_ALIGN round NO_ALIGN round nonstop nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "LAS VEGAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "HOUSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what economy flights are available from city_name1 to city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"day_number0": "17", "month_number0": "12", "year0": "1991", "economy0": "YES", "city_name0": "BALTIMORE", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN economy NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN flights NO_ALIGN flights NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 available on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 available day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 available economy NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on available economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN available economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy available economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy available economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy available flights NO_ALIGN on NO_ALIGN on NO_ALIGN on available flights NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN available city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 available city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN available available NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available flights NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4], [9, 12], [7, 9]]}, {"text": "what flights are there available from city_name1 to city_name0 on wednesday with economy class", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "economy0": "YES", "city_name0": "DENVER", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN class NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN class NO_ALIGN flights NO_ALIGN there NO_ALIGN class NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday available wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday available on NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday available economy NO_ALIGN class NO_ALIGN on NO_ALIGN on available class NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN available economy NO_ALIGN class NO_ALIGN economy NO_ALIGN class available economy NO_ALIGN class NO_ALIGN class NO_ALIGN class available economy NO_ALIGN class NO_ALIGN economy NO_ALIGN class available there NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on available there NO_ALIGN class NO_ALIGN economy NO_ALIGN class NO_ALIGN available city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there available city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN available NO_ALIGN available available NO_ALIGN there NO_ALIGN available NO_ALIGN there available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available there NO_ALIGN from NO_ALIGN available NO_ALIGN available NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [4, 9], [6, 7], [12, 13], [9, 11], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [7, 8], [13, 14], [5, 7], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FARE_BASISalias1.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "17", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all flights on thursday from city_name1 to city_name0 which arrive in city_name0 before arrival_time0 and serve a meal", "question-split": "dev", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "arrival_time0": "1700", "city_name0": "OAKLAND", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN show arrival_time0 NO_ALIGN show NO_ALIGN before NO_ALIGN serve NO_ALIGN before NO_ALIGN serve NO_ALIGN before NO_ALIGN serve NO_ALIGN before NO_ALIGN serve NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN which NO_ALIGN arrival_time0 NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on which thursday NO_ALIGN thursday NO_ALIGN on which thursday NO_ALIGN on NO_ALIGN on which thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN on which arrival_time0 NO_ALIGN on NO_ALIGN thursday NO_ALIGN on which meal NO_ALIGN meal NO_ALIGN arrival_time0 NO_ALIGN meal NO_ALIGN which arrival_time0 NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN which serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve which serve NO_ALIGN in NO_ALIGN NO_ALIGN serve NO_ALIGN which arrival_time0 NO_ALIGN in NO_ALIGN serve NO_ALIGN in NO_ALIGN which serve NO_ALIGN serve NO_ALIGN serve NO_ALIGN serve which serve NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which arrival_time0 NO_ALIGN from NO_ALIGN serve NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [0, 20], [4, 8], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [3, 4], [18, 20], [12, 14], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [0, 1], [17, 18], [4, 6], [6, 8], [14, 16], [13, 14], [11, 20], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1700", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what fare codes cover flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN codes NO_ALIGN codes NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN flights NO_ALIGN codes NO_ALIGN flights NO_ALIGN flights NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from fare NO_ALIGN codes NO_ALIGN codes NO_ALIGN codes from fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare from flights NO_ALIGN flights NO_ALIGN fare NO_ALIGN flights from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [4, 9], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which airline has the smallest plane leaving city_name1 and arriving in city_name0 on month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "BALTIMORE", "day_number0": "4", "month_number0": "7", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN airline airline NO_ALIGN airline NO_ALIGN plane NO_ALIGN plane NO_ALIGN airline NO_ALIGN airline NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN smallest NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN smallest NO_ALIGN airline NO_ALIGN which NO_ALIGN airline NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN in NO_ALIGN smallest NO_ALIGN in leaving smallest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leaving day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 leaving day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaving day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaving on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 leaving which NO_ALIGN on NO_ALIGN on NO_ALIGN on leaving which NO_ALIGN in NO_ALIGN smallest NO_ALIGN in NO_ALIGN leaving the NO_ALIGN in NO_ALIGN the NO_ALIGN in leaving the NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving which NO_ALIGN leaving NO_ALIGN the NO_ALIGN in NO_ALIGN leaving plane NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN plane NO_ALIGN smallest NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN city_name0 NO_ALIGN has NO_ALIGN plane NO_ALIGN has NO_ALIGN airline NO_ALIGN has NO_ALIGN has NO_ALIGN in NO_ALIGN has NO_ALIGN in leaving has NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving has NO_ALIGN in NO_ALIGN has NO_ALIGN in leaving has NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leaving has NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane leaving has NO_ALIGN plane NO_ALIGN has NO_ALIGN plane leaving has NO_ALIGN leaving NO_ALIGN has NO_ALIGN in leaving has NO_ALIGN in NO_ALIGN has NO_ALIGN in NO_ALIGN leaving in NO_ALIGN in NO_ALIGN in NO_ALIGN in leaving in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in leaving city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leaving plane NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane leaving smallest NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane leaving which NO_ALIGN plane NO_ALIGN plane NO_ALIGN plane leaving which NO_ALIGN airline NO_ALIGN airline NO_ALIGN airline leaving smallest NO_ALIGN plane NO_ALIGN smallest NO_ALIGN plane leaving smallest NO_ALIGN leaving NO_ALIGN in NO_ALIGN in leaving smallest NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [9, 15], [12, 13], [10, 12], [3, 6], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [6, 8], [13, 14], [3, 8], [2, 15], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "4", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "shortest flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "NASHVILLE", "city_name1": "ST. PETERSBURG"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN flights NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from shortest NO_ALIGN from NO_ALIGN shortest NO_ALIGN city_name0 from shortest NO_ALIGN city_name1 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "i'd like to know the shortest trip between city_name0 and city_name1", "question-split": "test", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN and NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN and NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest know city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest know city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know and NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the know and NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN know and NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN the NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest know shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest know shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know shortest NO_ALIGN the NO_ALIGN shortest NO_ALIGN the know shortest NO_ALIGN city_name1 NO_ALIGN shortest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [5, 8], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [1, 12], [8, 12], [7, 8], [9, 12]]}, {"text": "shortest flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from NO_ALIGN NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 from NO_ALIGN NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from NO_ALIGN NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from shortest NO_ALIGN from NO_ALIGN shortest NO_ALIGN city_name0 from shortest NO_ALIGN flight NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "list the shortest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN JOSE", "city_name1": "HOUSTON"}, "alignment": "NO_ALIGN NO_ALIGN list NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN list NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from city_name1 NO_ALIGN shortest NO_ALIGN city_name1 NO_ALIGN shortest from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from list NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the from list NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from list NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN city_name0 NO_ALIGN shortest NO_ALIGN the NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from shortest NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN shortest from shortest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from shortest NO_ALIGN from NO_ALIGN shortest NO_ALIGN the from shortest NO_ALIGN flight NO_ALIGN shortest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "NASHVILLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me class_type0 class flights from city_name1 to city_name0 leaving on a day_name0", "question-split": "train", "variables": {"day_name0": "TUESDAY", "class_type0": "FIRST", "city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN show flights NO_ALIGN class_type0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN flights NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN leaving class NO_ALIGN class NO_ALIGN day_name0 NO_ALIGN day_name0 leaving class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class leaving class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class leaving class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 leaving flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN leaving a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 leaving a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN leaving city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [0, 13], [7, 13], [7, 8]]}, {"text": "show me flights from city_name1 to city_name0 leaving on a day_name0 class_type0 class", "question-split": "dev", "variables": {"day_name0": "SUNDAY", "class_type0": "FIRST", "city_name0": "NEW YORK", "city_name1": "MIAMI"}, "alignment": "NO_ALIGN show flights NO_ALIGN class_type0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN flights NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN leaving class NO_ALIGN class NO_ALIGN day_name0 NO_ALIGN day_name0 leaving class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class leaving class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class leaving class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 leaving flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN leaving a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 leaving a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN leaving city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [9, 13], [0, 13], [6, 13], [7, 8]]}, {"text": "show me which flights from city_name1 to city_name0 on a day_name0 are class_type0 class", "question-split": "dev", "variables": {"day_name0": "MONDAY", "class_type0": "FIRST", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN show flights NO_ALIGN class_type0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN which NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN which day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN which class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN which class NO_ALIGN class NO_ALIGN day_name0 NO_ALIGN day_name0 which class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class which class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class which class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 which flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 which flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN which a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 which a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN me NO_ALIGN which city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 which city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [0, 14], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [8, 11], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = \"day_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all the flights on airline_code0 and airline_code1 that go to city_name0 in the morning", "question-split": "train", "variables": {"airline_code0": "DL", "airline_code1": "TW", "city_name0": "ATLANTA", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN airline_code0 NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN that NO_ALIGN all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN NO_ALIGN go in NO_ALIGN in NO_ALIGN in NO_ALIGN in go in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN go all NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go all NO_ALIGN morning morning morning go morning NO_ALIGN", "constituency_parser_spans": [[5, 9], [6, 9], [10, 11], [5, 6], [8, 9], [15, 16], [0, 16], [2, 5], [1, 2], [6, 7], [12, 13], [13, 16], [3, 4], [11, 13], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [14, 16], [13, 14], [10, 16], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) OR ( FLIGHTalias0.AIRLINE_CODE = \"airline_code1\" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "TW", "location": "unk", "name": "airline_code1", "type": "airline_code"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the price of a one way fare from city_name0 to city_name1 on airline_code0", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "DENVER", "round_trip_required0": "NO", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN way NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 of city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 of a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the of airline_code0 NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN of way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN of way NO_ALIGN fare NO_ALIGN way NO_ALIGN fare of airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN of airline_code0 NO_ALIGN way NO_ALIGN way NO_ALIGN way NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [13, 14], [4, 15], [2, 15], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the last flight from airport_code0", "question-split": "dev", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airport_code0 show NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show show NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN last NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN show last NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN show show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "DAL", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights are there arriving in city_name0 on airline_code0 after arrival_time0", "question-split": "train", "variables": {"city_name0": "CHICAGO", "arrival_time0": "2300", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN airline_code0 NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN there NO_ALIGN there arriving there NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arriving NO_ALIGN arrival_time0 arriving arrival_time0 NO_ALIGN in NO_ALIGN there NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [3, 4], [0, 2], [7, 9]]}, {"text": "what flights are there arriving in city_name0 after arrival_time0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "CHICAGO", "arrival_time0": "2100", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN airline_code0 NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN there NO_ALIGN there arriving there NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arriving NO_ALIGN arrival_time0 arriving arrival_time0 NO_ALIGN in NO_ALIGN there NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2], [4, 11], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "CHICAGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "2300", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "does airline_code0 fly early in the morning between airport_code0 and airport_code1", "question-split": "train", "variables": {"airport_code0": "BOS", "airport_code1": "BWI", "airline_code0": "EA", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN does fly NO_ALIGN between NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code1 NO_ALIGN airport_code0 NO_ALIGN fly NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN between airport_code1 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code1 NO_ALIGN between fly NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 between fly NO_ALIGN in NO_ALIGN airport_code1 NO_ALIGN airport_code0 NO_ALIGN between fly NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN between fly NO_ALIGN early morning morning between morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [2, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND AIRPORTalias1.AIRPORT_CODE = \"airport_code1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "BOS", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "BWI", "location": "unk", "name": "airport_code1", "type": "airport_code"}, {"example": "EA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all flights on sunday from city_name1 to city_name0 nonstop", "question-split": "train", "variables": {"stops0": "0", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN on nonstop sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN on nonstop all NO_ALIGN on NO_ALIGN sunday NO_ALIGN on NO_ALIGN nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop all NO_ALIGN city_name1 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN nonstop all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 nonstop all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN nonstop all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [3, 5]]}, {"text": "list all flights on saturday from city_name1 to city_name0 nonstop", "question-split": "train", "variables": {"stops0": "0", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name0": "SAN FRANCISCO", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN flights NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN nonstop saturday NO_ALIGN on NO_ALIGN on nonstop saturday NO_ALIGN on NO_ALIGN on nonstop saturday NO_ALIGN on NO_ALIGN on nonstop saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN on nonstop all NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN nonstop NO_ALIGN city_name0 nonstop city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN nonstop all NO_ALIGN city_name1 NO_ALIGN nonstop NO_ALIGN city_name0 NO_ALIGN nonstop all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 nonstop all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN nonstop all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.STOPS = stops0 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "0", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": ["roundtrip for unknown reasons"], "old-name": "", "query-split": "train", "sentences": [{"text": "list the flights from city_name1 to city_name0 on a day_name0 which are nonstop and cost less than round_trip_cost0 dollars", "question-split": "train", "variables": {"day_name0": "TUESDAY", "round_trip_cost0": "466", "city_name0": "MIAMI", "city_name1": "NEW YORK", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN are NO_ALIGN less NO_ALIGN flights NO_ALIGN round_trip_cost0 NO_ALIGN which NO_ALIGN flights NO_ALIGN the NO_ALIGN round_trip_cost0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN cost round_trip_cost0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN cost round_trip_cost0 NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN day_name0 cost less NO_ALIGN day_name0 NO_ALIGN round_trip_cost0 NO_ALIGN day_name0 cost less NO_ALIGN round_trip_cost0 NO_ALIGN round_trip_cost0 cost round_trip_cost0 NO_ALIGN are NO_ALIGN less NO_ALIGN are cost flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 cost flights NO_ALIGN are NO_ALIGN round_trip_cost0 NO_ALIGN are NO_ALIGN cost a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 cost a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN cost flights NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN the NO_ALIGN cost city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 cost city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cost flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN cost flights NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [15, 19], [11, 19], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [11, 13], [17, 19], [4, 5], [14, 19], [9, 10], [1, 19], [2, 3], [14, 15], [16, 19], [11, 12], [3, 5], [0, 1], [7, 8], [17, 18], [13, 14], [0, 19], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DAYSalias0.DAY_NAME = \"day_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "466", "location": "unk", "name": "round_trip_cost0", "type": "round_trip_cost"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what kind of plane flies from city_name1 to city_name0 after departure_time0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "BOSTON", "departure_time0": "1200"}, "alignment": "NO_ALIGN NO_ALIGN kind NO_ALIGN kind NO_ALIGN plane NO_ALIGN kind NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN plane NO_ALIGN kind NO_ALIGN NO_ALIGN NO_ALIGN after NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 of departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 of departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of kind NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind of after NO_ALIGN plane NO_ALIGN kind NO_ALIGN plane of after NO_ALIGN departure_time0 NO_ALIGN departure_time0 of after NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 of after NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [0, 2], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [0, 4], [3, 4], [2, 4], [4, 11], [7, 9]]}, {"text": "what type of aircraft leaving after departure_time0 from city_name1 to city_name0", "question-split": "test", "variables": {"city_name0": "OAKLAND", "departure_time0": "1400", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN NO_ALIGN NO_ALIGN after NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft leaving after NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft leaving after NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving after NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN leaving leaving after NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN leaving NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [2, 4], [3, 4], [0, 2], [4, 11], [7, 9]]}, {"text": "i'm traveling from city_name1 to city_name0 and i'd like to go sometime after departure_time0 but i want to know what kind of airplane it 's on", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "1700", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN kind NO_ALIGN kind NO_ALIGN of NO_ALIGN kind NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN kind NO_ALIGN kind NO_ALIGN NO_ALIGN NO_ALIGN i'm NO_ALIGN departure_time0 NO_ALIGN i'm NO_ALIGN departure_time0 NO_ALIGN i'm know departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know departure_time0 NO_ALIGN i'm NO_ALIGN departure_time0 NO_ALIGN i'm know departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know kind NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind know i'm NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind know i'm NO_ALIGN departure_time0 NO_ALIGN departure_time0 know i'm NO_ALIGN from NO_ALIGN departure_time0 NO_ALIGN city_name0 know i'm NO_ALIGN city_name1 NO_ALIGN departure_time0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[9, 10], [21, 22], [9, 16], [4, 5], [27, 28], [21, 25], [23, 25], [7, 8], [19, 28], [12, 16], [14, 15], [17, 18], [2, 16], [26, 28], [1, 2], [15, 16], [5, 6], [18, 28], [19, 20], [11, 12], [25, 28], [0, 16], [24, 25], [11, 16], [8, 16], [26, 27], [21, 23], [3, 4], [8, 9], [1, 2], [13, 14], [21, 28], [18, 19], [10, 11], [22, 23], [14, 16], [16, 17], [0, 1], [6, 7], [10, 16], [25, 26], [3, 5], [5, 7], [20, 21], [12, 13], [20, 28], [2, 7], [23, 24], [17, 28], [2, 3]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need to know if there are any direct flights from city_name1 state_name1 to city_name0 state_name0 leaving preferably tomorrow morning", "question-split": "dev", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "state_name0": "WASHINGTON", "city_name1": "ST. PETERSBURG", "state_name1": "FLORIDA", "departure_time0": "0", "departure_time1": "1200", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN any NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN state_name0 NO_ALIGN flights NO_ALIGN any NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN i NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there if i NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if state_name0 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if any NO_ALIGN tomorrow NO_ALIGN state_name0 NO_ALIGN tomorrow if any NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN leaving if state_name1 NO_ALIGN state_name1 NO_ALIGN i NO_ALIGN state_name1 if state_name1 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN if there NO_ALIGN there NO_ALIGN there NO_ALIGN there if there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN if any NO_ALIGN from NO_ALIGN there NO_ALIGN leaving if state_name0 NO_ALIGN state_name1 NO_ALIGN there NO_ALIGN state_name1 if state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN if any NO_ALIGN morning morning morning if morning NO_ALIGN if any NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [7, 20], [16, 17], [6, 7], [12, 13], [3, 20], [13, 16], [7, 10], [18, 20], [11, 13], [4, 5], [10, 13], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [19, 20], [11, 12], [0, 1], [17, 18], [7, 8], [14, 16], [13, 14], [6, 20], [5, 20], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name1\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;"], "variables": [{"example": "TACOMA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "WASHINGTON", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FLORIDA", "location": "unk", "name": "state_name1", "type": "state_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there an afternoon flight from city_name1 to city_name0 around 2pm", "question-split": "train", "variables": {"departure_time0": "1430", "departure_time1": "1330", "city_name0": "MINNEAPOLIS", "city_name1": "CHARLOTTE", "departure_time2": "1200", "departure_time3": "1800"}, "alignment": "NO_ALIGN NO_ALIGN 2pm NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN 2pm NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN 2pm NO_ALIGN around around afternoon 2pm 2pm NO_ALIGN around around afternoon NO_ALIGN 2pm city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN there 2pm city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 2pm 2pm NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN 2pm there NO_ALIGN there NO_ALIGN there NO_ALIGN there 2pm there NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 2pm 2pm NO_ALIGN from NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN 2pm 2pm NO_ALIGN around afternoon afternoon 2pm an NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [12, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ;"], "variables": [{"example": "1430", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1330", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "MINNEAPOLIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time3", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the first flight from city_name0 to airport_name0 airport for tomorrow", "question-split": "dev", "variables": {"airport_name0": "STAPLETON", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name0": "BOSTON"}, "alignment": "NO_ALIGN airport NO_ALIGN NO_ALIGN the NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airport NO_ALIGN airport_name0 airport_name0 NO_ALIGN airport_name0 NO_ALIGN for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for NO_ALIGN NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for NO_ALIGN NO_ALIGN flight NO_ALIGN airport NO_ALIGN airport NO_ALIGN for airport NO_ALIGN flight NO_ALIGN airport NO_ALIGN flight for airport NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN for NO_ALIGN NO_ALIGN from NO_ALIGN airport NO_ALIGN airport NO_ALIGN for NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN airport NO_ALIGN airport_name0 NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN the NO_ALIGN first NO_ALIGN NO_ALIGN airport_name0 NO_ALIGN airport_name0 airport_name0 NO_ALIGN airport_name0 NO_ALIGN for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for first NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for first NO_ALIGN flight NO_ALIGN airport_name0 NO_ALIGN airport NO_ALIGN for to NO_ALIGN flight NO_ALIGN to NO_ALIGN flight for to NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN for first NO_ALIGN from NO_ALIGN to NO_ALIGN airport NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [2, 5], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_NAME LIKE \"airport_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( AIRPORTalias1.AIRPORT_NAME LIKE \"airport_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;"], "variables": [{"example": "STAPLETON", "location": "unk", "name": "airport_name0", "type": "airport_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "give me the earliest flight tomorrow from city_name1 to city_name0 on a airline other than airline_code0", "question-split": "train", "variables": {"day_number0": "20", "month_number0": "1", "year0": "1991", "airline_code0": "TW", "city_name0": "MILWAUKEE", "city_name1": "ST. PETERSBURG"}, "alignment": "NO_ALIGN airline other NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN on NO_ALIGN airline NO_ALIGN other NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than on NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than other NO_ALIGN on NO_ALIGN on NO_ALIGN on than a NO_ALIGN other NO_ALIGN airline NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN than a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight than a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than other NO_ALIGN flight NO_ALIGN a NO_ALIGN the NO_ALIGN than city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight than city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than other NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN than other NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN airline NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow than earliest NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN on than a NO_ALIGN earliest NO_ALIGN airline NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN than earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight than earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN the NO_ALIGN than earliest NO_ALIGN flight NO_ALIGN earliest NO_ALIGN flight than earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [13, 16], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [14, 16], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND NOT ( FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" ) ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;"], "variables": [{"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "TW", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all the flights from city_name1 and all the flights from city_name2 that arrive at city_name0 around noon", "question-split": "train", "variables": {"arrival_time0": "1230", "arrival_time1": "1130", "city_name0": "BALTIMORE", "city_name1": "DENVER", "city_name2": "MIAMI"}, "alignment": "NO_ALIGN show around NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN flights NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN arrive around arrive noon around NO_ALIGN arrive around the NO_ALIGN noon city_name2 NO_ALIGN at NO_ALIGN city_name2 NO_ALIGN at noon city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN noon around NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN at NO_ALIGN noon NO_ALIGN NO_ALIGN around NO_ALIGN from NO_ALIGN at NO_ALIGN at noon at NO_ALIGN at NO_ALIGN at NO_ALIGN at noon at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN that NO_ALIGN around NO_ALIGN from NO_ALIGN city_name1 NO_ALIGN at noon city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN at noon city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [8, 19], [18, 19], [2, 5], [1, 2], [16, 17], [2, 19], [6, 7], [12, 13], [11, 13], [17, 19], [4, 5], [14, 19], [8, 11], [9, 10], [2, 3], [14, 15], [13, 19], [11, 12], [15, 17], [0, 1], [2, 7], [7, 8], [17, 18], [13, 14], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" ) ) ;"], "variables": [{"example": "1230", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1130", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MIAMI", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "okay for now i would like information on a flight on month_number0 day_number0 from city_name1 to city_name0 leaving early in the morning about departure_time3 o'clock", "question-split": "test", "variables": {"departure_time0": "830", "departure_time1": "730", "departure_time2": "0", "departure_time3": "800", "day_number0": "27", "month_number0": "4", "year0": "1991", "city_name0": "ATLANTA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN information NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN month_number0 NO_ALIGN now NO_ALIGN on NO_ALIGN on NO_ALIGN the NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN early in morning about o'clock NO_ALIGN early in morning NO_ALIGN about NO_ALIGN o'clock NO_ALIGN early morning in about flight NO_ALIGN NO_ALIGN about now NO_ALIGN month_number0 NO_ALIGN day_number0 about now NO_ALIGN month_number0 NO_ALIGN month_number0 about now NO_ALIGN month_number0 NO_ALIGN month_number0 about on NO_ALIGN month_number0 NO_ALIGN now NO_ALIGN month_number0 about o'clock NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN about a NO_ALIGN in NO_ALIGN a NO_ALIGN in about a NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN about o'clock NO_ALIGN flight NO_ALIGN a NO_ALIGN information NO_ALIGN about information NO_ALIGN in NO_ALIGN information NO_ALIGN in about information NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN about o'clock NO_ALIGN from NO_ALIGN information NO_ALIGN information NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [5, 6], [7, 25], [8, 9], [15, 16], [18, 19], [19, 22], [0, 3], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [8, 10], [5, 25], [6, 25], [3, 4], [11, 13], [8, 25], [20, 22], [22, 24], [4, 5], [10, 13], [13, 15], [9, 10], [4, 25], [2, 3], [14, 15], [19, 20], [11, 12], [23, 24], [15, 17], [0, 1], [17, 18], [22, 25], [13, 14], [21, 22], [24, 25], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "830", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "730", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "800", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the last flight out of city_name1 to city_name0 in the evening on day_name0", "question-split": "train", "variables": {"city_name0": "BOSTON", "day_name0": "TUESDAY", "city_name1": "PITTSBURGH", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN out NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN the NO_ALIGN out NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in out city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN out day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN out out NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 out out NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN out NO_ALIGN out in NO_ALIGN in NO_ALIGN in NO_ALIGN in out in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN out out NO_ALIGN flight NO_ALIGN in NO_ALIGN out NO_ALIGN out out NO_ALIGN evening evening evening out evening NO_ALIGN out out NO_ALIGN evening NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN evening NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN is NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN the NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN is NO_ALIGN in NO_ALIGN is NO_ALIGN in out is NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN out day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN out last NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 out last NO_ALIGN flight NO_ALIGN is NO_ALIGN out NO_ALIGN out the NO_ALIGN in NO_ALIGN the NO_ALIGN in out the NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN out last NO_ALIGN flight NO_ALIGN the NO_ALIGN out NO_ALIGN out last NO_ALIGN evening evening evening out evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [2, 5], [5, 8], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [11, 13], [4, 5], [10, 13], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need to spend much of a day on the ground in city_name0 find me an early flight from city_name1 and the lastest possible flight back from city_name0", "question-split": "train", "variables": {"city_name0": "ATLANTA", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN me NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN the NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN day NO_ALIGN a NO_ALIGN day an a NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN an early NO_ALIGN early NO_ALIGN in an early NO_ALIGN flight NO_ALIGN a NO_ALIGN ground NO_ALIGN an ground NO_ALIGN day NO_ALIGN ground NO_ALIGN day an ground NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an early NO_ALIGN from NO_ALIGN ground NO_ALIGN ground NO_ALIGN and NO_ALIGN NO_ALIGN a NO_ALIGN day NO_ALIGN a NO_ALIGN day an a NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an early NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN the NO_ALIGN early NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN the NO_ALIGN the NO_ALIGN the NO_ALIGN day NO_ALIGN the NO_ALIGN day an the NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN an the NO_ALIGN day NO_ALIGN the NO_ALIGN day an the NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an the NO_ALIGN from NO_ALIGN the NO_ALIGN ground an the NO_ALIGN flight NO_ALIGN the NO_ALIGN ground NO_ALIGN an early NO_ALIGN flight NO_ALIGN a NO_ALIGN ground NO_ALIGN an ground NO_ALIGN day NO_ALIGN ground NO_ALIGN day an ground NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN an early NO_ALIGN from NO_ALIGN ground NO_ALIGN ground NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[22, 23], [10, 11], [4, 8], [15, 20], [5, 6], [21, 28], [26, 28], [8, 9], [15, 16], [18, 19], [5, 8], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [25, 26], [2, 13], [9, 11], [1, 28], [15, 18], [27, 28], [18, 20], [11, 13], [14, 28], [3, 13], [4, 5], [1, 13], [8, 11], [9, 10], [13, 28], [14, 15], [2, 3], [11, 12], [19, 20], [25, 28], [23, 24], [0, 1], [21, 25], [17, 18], [7, 8], [26, 27], [6, 8], [13, 14], [21, 22], [15, 28], [24, 25], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what airline is airline_code0 flight_number0", "question-split": "train", "variables": {"airline_code0": "DL", "flight_number0": "98"}, "alignment": "NO_ALIGN airline airline NO_ALIGN airline NO_ALIGN airline NO_ALIGN airline NO_ALIGN airline NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN airline NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN what flight_number0 NO_ALIGN airline NO_ALIGN airline NO_ALIGN airline what flight_number0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ;"], "variables": [{"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "98", "location": "unk", "name": "flight_number0", "type": "flight_number"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the latest flights from city_name0 to city_name1 on the evening of month_number0 day_number0", "question-split": "train", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS", "day_number0": "7", "month_number0": "7", "year0": "1991", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN on NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 of city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 of city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the of flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN of day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of on NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 of flights NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN of flights NO_ALIGN evening evening evening of evening NO_ALIGN of flights NO_ALIGN evening NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN latest NO_ALIGN evening NO_ALIGN NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN flights NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 of latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of latest NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN city_name0 of latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of latest NO_ALIGN from NO_ALIGN latest NO_ALIGN the of latest NO_ALIGN city_name1 NO_ALIGN latest NO_ALIGN the NO_ALIGN of day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 of latest NO_ALIGN on NO_ALIGN day_number0 NO_ALIGN on NO_ALIGN of latest NO_ALIGN evening evening evening of evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [2, 5], [1, 2], [6, 7], [9, 15], [12, 13], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [5, 7], [2, 15], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "7", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what are the different classes of service and the prices for airline_code0", "question-split": "train", "variables": {"airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN different NO_ALIGN different NO_ALIGN service NO_ALIGN service NO_ALIGN different NO_ALIGN different NO_ALIGN are NO_ALIGN service NO_ALIGN service NO_ALIGN prices NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN the NO_ALIGN service NO_ALIGN prices NO_ALIGN different NO_ALIGN different NO_ALIGN different for service NO_ALIGN prices NO_ALIGN prices NO_ALIGN prices for service NO_ALIGN service NO_ALIGN service NO_ALIGN service for airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN for airline_code0 NO_ALIGN are NO_ALIGN service NO_ALIGN are NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [8, 10], [10, 12], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [2, 7], [7, 8], [1, 12], [8, 12], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT CLASS_OF_SERVICEalias0.BOOKING_CLASS , FAREalias0.FARE_ID FROM CLASS_OF_SERVICE AS CLASS_OF_SERVICEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.BOOKING_CLASS = CLASS_OF_SERVICEalias0.BOOKING_CLASS AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please show me flights from city_name1 to city_name0 on wednesday morning serving meal_description0", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "meal_description0": "BREAKFAST", "city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on serving meal_description0 NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 serving meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN serving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 serving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serving flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN serving please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 serving please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN serving flights NO_ALIGN from NO_ALIGN please NO_ALIGN me NO_ALIGN serving flights NO_ALIGN morning morning morning serving morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [4, 5], [1, 13], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [7, 8]]}, {"text": "please show me flights from city_name1 to city_name0 on wednesday morning serving meal_description0", "question-split": "exclude", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "meal_description0": "BREAKFAST", "city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday serving flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on serving meal_description0 NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 serving meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN serving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 serving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN serving flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN serving please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 serving please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN serving flights NO_ALIGN from NO_ALIGN please NO_ALIGN me NO_ALIGN serving flights NO_ALIGN morning morning morning serving morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [4, 5], [1, 13], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me a list of all the airlines that offer class_type0 class service", "question-split": "train", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class NO_ALIGN service NO_ALIGN the NO_ALIGN all NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN service NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN all service NO_ALIGN class NO_ALIGN service NO_ALIGN class all service NO_ALIGN service NO_ALIGN service NO_ALIGN service all all NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines all all NO_ALIGN class_type0 NO_ALIGN service NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [5, 8], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 8], [2, 4]]}, {"text": "show me the airlines with class_type0 class flights", "question-split": "train", "variables": {"class_type0": "FIRST"}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN show class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class show class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 show flights NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines show flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [0, 8], [3, 4], [2, 4], [5, 8]]}, {"text": "what airlines have class_type0 class", "question-split": "train", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN airlines airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN have NO_ALIGN have NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN have class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class have class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 have have NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines have have NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4], [3, 5]]}, {"text": "which airline provides class_type0 class flights", "question-split": "test", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN airline provides NO_ALIGN airline NO_ALIGN airline NO_ALIGN provides NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN airline NO_ALIGN flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN which class_type0 NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class which class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 which flights NO_ALIGN airline NO_ALIGN provides NO_ALIGN airline which flights NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BUSINESS", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me the one way flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "round_trip_required0": "NO", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN way NO_ALIGN way NO_ALIGN way show flights NO_ALIGN show NO_ALIGN way NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "i'd like to see all the one way flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "DENVER", "round_trip_required0": "NO", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN all NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 i'd city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN i'd way NO_ALIGN way NO_ALIGN way NO_ALIGN way i'd all NO_ALIGN way NO_ALIGN way NO_ALIGN way i'd all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN i'd all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 i'd all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd all NO_ALIGN from NO_ALIGN all NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [10, 12], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [5, 10], [13, 14], [5, 14], [10, 14], [7, 8]]}, {"text": "i would like to make a one way flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "BOSTON", "round_trip_required0": "NO", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight would a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN would way NO_ALIGN way NO_ALIGN way NO_ALIGN way would a NO_ALIGN way NO_ALIGN way NO_ALIGN way would a NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN would city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [9, 11], [3, 4], [11, 13], [3, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [7, 8]]}, {"text": "show me all flights from city_name0 to city_name1 one way", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN all NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 all city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN all way NO_ALIGN way NO_ALIGN way NO_ALIGN way all all NO_ALIGN show NO_ALIGN way NO_ALIGN show all all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN all all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 all all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [2, 4]]}, {"text": "now i need a one way flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "PITTSBURGH", "round_trip_required0": "NO", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN now NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN NO_ALIGN now NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight now a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN now way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN now way NO_ALIGN way NO_ALIGN way NO_ALIGN way now now NO_ALIGN way NO_ALIGN way NO_ALIGN way now now NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN now city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight now city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN now now NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 7], [3, 4], [7, 9]]}, {"text": "a one way flight from city_name0 to city_name1 please", "question-split": "dev", "variables": {"city_name0": "BOSTON", "round_trip_required0": "NO", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight a a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN a way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN a way NO_ALIGN way NO_ALIGN way NO_ALIGN way a a NO_ALIGN way NO_ALIGN way NO_ALIGN way a a NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a please NO_ALIGN flight NO_ALIGN please NO_ALIGN flight a please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN a a NO_ALIGN from NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 9], [2, 3], [0, 4], [3, 4]]}, {"text": "show me all flights from city_name0 to city_name1 one way", "question-split": "exclude", "variables": {"city_name0": "ONTARIO", "round_trip_required0": "NO", "city_name1": "TACOMA"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN all NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 all city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN all way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN all way NO_ALIGN way NO_ALIGN way NO_ALIGN way all all NO_ALIGN show NO_ALIGN way NO_ALIGN show all all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN all all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 all all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN all all NO_ALIGN from NO_ALIGN all NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [2, 4]]}, {"text": "show me the one way flights from city_name0 to city_name1", "question-split": "exclude", "variables": {"city_name0": "DETROIT", "round_trip_required0": "NO", "city_name1": "WESTCHESTER COUNTY"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN way NO_ALIGN way NO_ALIGN way show flights NO_ALIGN show NO_ALIGN way NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4]]}, {"text": "flights between city_name0 and city_name1 one way", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN between way NO_ALIGN way NO_ALIGN way NO_ALIGN way between flights NO_ALIGN between NO_ALIGN way NO_ALIGN between between flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN between city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 between city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between flights NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4]]}, {"text": "flights from city_name0 to city_name1 one way", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN way NO_ALIGN way NO_ALIGN way from flights NO_ALIGN way NO_ALIGN way NO_ALIGN way from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN from city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4]]}, {"text": "all one way flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "round_trip_required0": "NO", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN all NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN all NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 between city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN between way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN between way NO_ALIGN way NO_ALIGN way NO_ALIGN way between all NO_ALIGN between NO_ALIGN way NO_ALIGN between between all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN between all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 between all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN between all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [0, 3], [3, 4], [5, 8]]}, {"text": "show me one way flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN way NO_ALIGN way NO_ALIGN way show flights NO_ALIGN show NO_ALIGN way NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [3, 4], [2, 3], [0, 9], [2, 5], [7, 8], [2, 4], [7, 9]]}, {"text": "find travel arrangements for a one way flight from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "SAN FRANCISCO", "round_trip_required0": "NO", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN flight NO_ALIGN a NO_ALIGN flight travel a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN travel way NO_ALIGN way NO_ALIGN way NO_ALIGN way travel a NO_ALIGN way NO_ALIGN way NO_ALIGN way travel a NO_ALIGN flight NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN travel city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight travel city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN travel a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [4, 8], [5, 6], [8, 9], [4, 12], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [1, 12], [5, 7], [7, 8]]}, {"text": "give me the one way flights from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "PITTSBURGH", "round_trip_required0": "NO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 from city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN from way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN from way NO_ALIGN way NO_ALIGN way NO_ALIGN way from flights NO_ALIGN way NO_ALIGN way NO_ALIGN way from flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN from city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 from city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN from flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4]]}, {"text": "hi could i get a one way ticket from city_name0 to city_name1", "question-split": "train", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN could NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN ticket NO_ALIGN NO_ALIGN NO_ALIGN could NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 ticket a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket ticket NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN ticket way NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket ticket could NO_ALIGN way NO_ALIGN way NO_ALIGN way ticket could NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN get NO_ALIGN ticket city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 ticket city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket could NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [6, 7], [1, 12], [4, 8], [4, 5], [5, 6], [10, 11], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "i want a one way ticket from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "round_trip_required0": "NO", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN want NO_ALIGN way NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN a NO_ALIGN way NO_ALIGN ticket NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN a NO_ALIGN want NO_ALIGN a NO_ALIGN want ticket a NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket ticket NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN ticket way NO_ALIGN ticket NO_ALIGN ticket NO_ALIGN ticket ticket want NO_ALIGN way NO_ALIGN way NO_ALIGN way ticket want NO_ALIGN city_name1 NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN ticket city_name0 NO_ALIGN want NO_ALIGN city_name0 NO_ALIGN want ticket city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket want NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "show me flights from city_name0 to city_name1 one way", "question-split": "train", "variables": {"round_trip_required0": "NO", "city_name0": "MILWAUKEE", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN way NO_ALIGN way NO_ALIGN flights NO_ALIGN flights NO_ALIGN way NO_ALIGN way NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 show city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN show way NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN show way NO_ALIGN way NO_ALIGN way NO_ALIGN way show flights NO_ALIGN show NO_ALIGN way NO_ALIGN show show flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN show city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 show city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN show flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ) ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "give me the round trip flights from city_name1 to city_name0 next wednesday", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "MIAMI", "city_name1": "CLEVELAND"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN next NO_ALIGN wednesday NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN next NO_ALIGN wednesday NO_ALIGN next NO_ALIGN next NO_ALIGN next NO_ALIGN next from next NO_ALIGN next NO_ALIGN next from next NO_ALIGN next NO_ALIGN next NO_ALIGN NO_ALIGN from flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN round NO_ALIGN flights NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN round NO_ALIGN NO_ALIGN round NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN trip NO_ALIGN trip NO_ALIGN flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN trip NO_ALIGN next NO_ALIGN wednesday NO_ALIGN trip NO_ALIGN trip NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN give NO_ALIGN next NO_ALIGN wednesday NO_ALIGN give NO_ALIGN give NO_ALIGN next NO_ALIGN next from give NO_ALIGN next NO_ALIGN next from give NO_ALIGN next NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN from round NO_ALIGN round round round NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN from flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "now i need flights leaving from city_name1 and arriving in city_name0 on wednesday morning", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "arrival_time0": "1200", "arrival_time1": "0", "city_name0": "PHILADELPHIA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN in NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN wednesday NO_ALIGN now NO_ALIGN on NO_ALIGN wednesday NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN arriving NO_ALIGN flights NO_ALIGN morning NO_ALIGN now now NO_ALIGN wednesday NO_ALIGN wednesday now now NO_ALIGN wednesday NO_ALIGN wednesday now now NO_ALIGN wednesday NO_ALIGN wednesday now wednesday NO_ALIGN wednesday NO_ALIGN now NO_ALIGN wednesday now flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on NO_ALIGN and NO_ALIGN now NO_ALIGN wednesday NO_ALIGN wednesday now now NO_ALIGN wednesday NO_ALIGN wednesday now now NO_ALIGN wednesday NO_ALIGN wednesday now wednesday NO_ALIGN wednesday NO_ALIGN now NO_ALIGN wednesday now flights NO_ALIGN on NO_ALIGN wednesday NO_ALIGN on now flights NO_ALIGN flights NO_ALIGN arriving NO_ALIGN flights NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN now NO_ALIGN flights NO_ALIGN arriving arriving arriving now flights NO_ALIGN arriving arriving arriving NO_ALIGN NO_ALIGN now i NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in now i NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN now flights NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN now in NO_ALIGN in NO_ALIGN in NO_ALIGN in now in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN now flights NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [11, 14], [3, 7], [1, 2], [8, 14], [6, 7], [12, 13], [9, 11], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [7, 8], [13, 14], [5, 7], [3, 4]]}, {"text": "show me flights going from city_name1 to city_name0 arriving on wednesday morning", "question-split": "train", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "arrival_time0": "1200", "arrival_time1": "0", "city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN show flights NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN going NO_ALIGN on NO_ALIGN going NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN arriving NO_ALIGN flights NO_ALIGN morning NO_ALIGN going going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN going NO_ALIGN wednesday going flights NO_ALIGN on NO_ALIGN going NO_ALIGN on NO_ALIGN on NO_ALIGN going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN wednesday going going NO_ALIGN wednesday NO_ALIGN going NO_ALIGN wednesday going flights NO_ALIGN on NO_ALIGN going NO_ALIGN on going flights NO_ALIGN flights NO_ALIGN arriving NO_ALIGN flights NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN flights NO_ALIGN arriving arriving arriving going flights NO_ALIGN arriving arriving arriving NO_ALIGN NO_ALIGN going city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 going city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN me NO_ALIGN going city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 going city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going flights NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [4, 6], [6, 8], [7, 8], [9, 12]]}, {"text": "all flights from city_name1 to city_name0 which show up on tuesday afternoon", "question-split": "train", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "arrival_time0": "1800", "arrival_time1": "1200", "city_name0": "PHILADELPHIA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN show all NO_ALIGN show NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN up NO_ALIGN on NO_ALIGN tuesday NO_ALIGN which NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN up NO_ALIGN all NO_ALIGN afternoon NO_ALIGN up up NO_ALIGN tuesday NO_ALIGN tuesday up up NO_ALIGN tuesday NO_ALIGN tuesday up up NO_ALIGN tuesday NO_ALIGN tuesday up tuesday NO_ALIGN tuesday NO_ALIGN up NO_ALIGN tuesday up all NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN on NO_ALIGN up NO_ALIGN tuesday NO_ALIGN tuesday up up NO_ALIGN tuesday NO_ALIGN tuesday up up NO_ALIGN tuesday NO_ALIGN tuesday up tuesday NO_ALIGN tuesday NO_ALIGN up NO_ALIGN tuesday up all NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on up tuesday NO_ALIGN all NO_ALIGN up NO_ALIGN all NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN up NO_ALIGN all NO_ALIGN up afternoon afternoon up all NO_ALIGN up afternoon afternoon NO_ALIGN NO_ALIGN up city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 up city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN up all NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN up all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 up all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN up all NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [2, 6], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [4, 6], [7, 8], [2, 4], [9, 12]]}, {"text": "all flights from city_name1 to city_name0 next tuesday arriving near 6 o'clock", "question-split": "dev", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "arrival_time0": "1830", "arrival_time1": "1730", "city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN arriving NO_ALIGN o'clock NO_ALIGN o'clock NO_ALIGN near tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next near o'clock NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN city_name0 NO_ALIGN tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN next near tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next near o'clock NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next near tuesday NO_ALIGN o'clock NO_ALIGN arriving NO_ALIGN o'clock NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN near NO_ALIGN o'clock NO_ALIGN arriving arriving arriving near o'clock NO_ALIGN arriving arriving arriving NO_ALIGN NO_ALIGN near city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 near city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN near o'clock NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN near all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 near all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN near o'clock NO_ALIGN from NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [8, 12], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "0", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}]