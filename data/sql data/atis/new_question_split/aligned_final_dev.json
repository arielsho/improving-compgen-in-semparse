[{"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "describe city_name0 airport", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH"}, "alignment": "NO_ALIGN airport describe NO_ALIGN airport NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN airport NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN describe NO_ALIGN airport NO_ALIGN describe NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN describe NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport city_name0 airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 city_name0 airport NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [2, 3], [0, 3]]}], "sql": ["SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE , AIRPORTalias0.AIRPORT_LOCATION , AIRPORTalias0.AIRPORT_NAME , AIRPORTalias0.COUNTRY_NAME , AIRPORTalias0.MINIMUM_CONNECT_TIME , AIRPORTalias0.STATE_CODE , AIRPORTalias0.TIME_ZONE_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the last flight from airport_code0", "question-split": "dev", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN NO_ALIGN show NO_ALIGN me NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN from show NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN from last NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN from show NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias1 WHERE AIRPORTalias1.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "DAL", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "what class_type0 class flights are available from city_name1 to city_name0 on month_number0 day_number0 year0", "question-split": "dev", "variables": {"day_number0": "25", "month_number0": "7", "year0": "1991", "class_type0": "FIRST", "city_name0": "BALTIMORE", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN year0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN day_number0 NO_ALIGN year0 NO_ALIGN day_number0 year0 class_type0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 year0 class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN year0 class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN month_number0 year0 class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 year0 class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 year0 class NO_ALIGN class NO_ALIGN class NO_ALIGN class year0 flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 year0 flights NO_ALIGN are NO_ALIGN class NO_ALIGN are NO_ALIGN year0 flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available year0 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN year0 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN year0 available NO_ALIGN available NO_ALIGN flights NO_ALIGN available year0 available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN year0 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [0, 4], [3, 4], [11, 13], [4, 5], [4, 14], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [13, 14], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "25", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "airlines that fly to city_name0 from city_name1 on friday", "question-split": "dev", "variables": {"city_name0": "MIAMI", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 friday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday friday that NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN friday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 friday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN friday that NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines friday that NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "25", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please show me flights from city_name1 to city_name0 between departure_time1 and departure_time0", "question-split": "dev", "variables": {"departure_time0": "1400", "departure_time1": "1000", "city_name0": "BALTIMORE", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN me NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN please NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 and departure_time0 departure_time1 departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time1 NO_ALIGN departure_time1 between NO_ALIGN between NO_ALIGN between NO_ALIGN between departure_time1 between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departure_time1 departure_time1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN departure_time1 please NO_ALIGN between NO_ALIGN flights NO_ALIGN between departure_time1 please NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN departure_time1 departure_time1 NO_ALIGN from NO_ALIGN flights NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [1, 2], [6, 7], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [1, 12], [8, 12], [6, 8], [7, 8], [9, 12]]}, {"text": "are there any flights from city_name1 to city_name0 that leave between departure_time1 and departure_time0 o'clock", "question-split": "dev", "variables": {"departure_time0": "1700", "departure_time1": "1200", "city_name0": "BOSTON", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN that NO_ALIGN between NO_ALIGN leave NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN leave NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 o'clock departure_time0 departure_time1 departure_time1 NO_ALIGN departure_time1 o'clock departure_time1 NO_ALIGN departure_time1 between NO_ALIGN between NO_ALIGN between NO_ALIGN between departure_time1 between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departure_time1 departure_time1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN departure_time1 leave NO_ALIGN between NO_ALIGN leave NO_ALIGN between departure_time1 leave NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN departure_time1 departure_time1 NO_ALIGN from NO_ALIGN leave NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [10, 15], [1, 2], [6, 7], [9, 15], [12, 13], [3, 4], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [2, 15], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "1400", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1000", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "and what is the last flight from city_name1 to city_name0 for tomorrow evening", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "DENVER", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 evening city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening to NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN evening city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 evening city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN evening to NO_ALIGN last evening evening evening evening NO_ALIGN evening to NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 evening last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening last NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow evening last NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN the NO_ALIGN evening flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 evening flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening last NO_ALIGN from NO_ALIGN flight NO_ALIGN the NO_ALIGN evening last NO_ALIGN last evening evening evening evening NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 6], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "9", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "11", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the flights which depart from city_name2 fly to city_name1 via city_name0 and arrive by arrival_time0", "question-split": "dev", "variables": {"city_name0": "INDIANAPOLIS", "arrival_time0": "2100", "city_name1": "WASHINGTON", "city_name2": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN depart NO_ALIGN via NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN depart NO_ALIGN city_name2 NO_ALIGN via NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN which NO_ALIGN city_name2 NO_ALIGN which which city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which via NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN depart which depart NO_ALIGN arrival_time0 arrival_time0 arrival_time0 which depart NO_ALIGN via NO_ALIGN via NO_ALIGN via NO_ALIGN which flights NO_ALIGN which NO_ALIGN flights NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which depart NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN depart NO_ALIGN which flights NO_ALIGN which NO_ALIGN which NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN which depart NO_ALIGN from NO_ALIGN which NO_ALIGN depart NO_ALIGN", "constituency_parser_spans": [[14, 17], [8, 13], [10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [5, 17], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [6, 8], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "INDIANAPOLIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "2100", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "first flights and fares from city_name1 to city_name0 on a day_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_name0": "THURSDAY", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 and flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN and flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 and flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN and flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 and flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN and day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN and fares NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 and fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares and fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares and flights NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN day_name0 NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 and first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and and NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN and first NO_ALIGN day_name0 NO_ALIGN and NO_ALIGN day_name0 and first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN and first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 and first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and first NO_ALIGN from NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN and flights NO_ALIGN a NO_ALIGN fares NO_ALIGN a NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [0, 4], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias2 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DAYSalias2.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "THURSDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "flights from city_name0 to city_name1 and price", "question-split": "dev", "variables": {"city_name0": "KANSAS CITY", "city_name1": "CLEVELAND"}, "alignment": "NO_ALIGN NO_ALIGN city_name1 NO_ALIGN price NO_ALIGN flights NO_ALIGN and NO_ALIGN flights NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN price NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 and flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 and flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and price NO_ALIGN price NO_ALIGN city_name1 NO_ALIGN price and flights NO_ALIGN and NO_ALIGN price NO_ALIGN and and flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN and flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4]]}, {"text": "show me all flights from city_name0 to city_name1 with prices", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN all show NO_ALIGN show NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN me NO_ALIGN show NO_ALIGN all NO_ALIGN all NO_ALIGN me NO_ALIGN show NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 show NO_ALIGN show NO_ALIGN show NO_ALIGN show city_name1 all NO_ALIGN with NO_ALIGN show NO_ALIGN with city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID , FLIGHTalias0.AIRLINE_CODE , FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the takeoffs and landings at airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN at at NO_ALIGN and NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN takeoffs NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN at NO_ALIGN and NO_ALIGN airport_code0 NO_ALIGN takeoffs and airport_code0 NO_ALIGN takeoffs NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN takeoffs NO_ALIGN at NO_ALIGN list NO_ALIGN takeoffs NO_ALIGN takeoffs and takeoffs NO_ALIGN takeoffs NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [1, 5], [2, 3], [3, 4]]}, {"text": "list the flights that arrive and depart from airport_code0 airport", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN airport depart NO_ALIGN that NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN depart NO_ALIGN NO_ALIGN depart NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport arrive airport_code0 NO_ALIGN airport NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN list NO_ALIGN depart NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport arrive airport_code0 NO_ALIGN airport NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [1, 3], [6, 7], [7, 8], [4, 5], [5, 6], [3, 10], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [1, 10], [3, 4]]}, {"text": "please list all the arriving and departing flights from airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport_code0 arriving airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN list NO_ALIGN all NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport_code0 arriving airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [4, 5], [2, 8], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [1, 10], [3, 4]]}, {"text": "list all takeoffs and landings at airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN takeoffs NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN and NO_ALIGN airport_code0 NO_ALIGN takeoffs and airport_code0 NO_ALIGN takeoffs NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN takeoffs NO_ALIGN all NO_ALIGN list NO_ALIGN takeoffs NO_ALIGN takeoffs and takeoffs NO_ALIGN takeoffs NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [1, 5], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = \"airport_code0\" ) ;"], "variables": [{"example": "MKE", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list flights from city_name1 to city_name0 that serve only meal_code0", "question-split": "dev", "variables": {"meal_code0": "B", "meal_code1": "BB", "meal_description0": "BREAKFAST", "city_name0": "SAN FRANCISCO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN that NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN serve NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN meal_code0 NO_ALIGN list only NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN that meal_code0 NO_ALIGN meal_code0 NO_ALIGN only NO_ALIGN meal_code0 that meal_code0 NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN that flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 that flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN that only NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN that flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 that flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN that only NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [9, 10], [2, 3], [7, 10], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( FLIGHTalias0.MEAL_CODE = \"meal_code0\" OR FLIGHTalias0.MEAL_CODE = \"meal_code1\" ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "B", "location": "unk", "name": "meal_code0", "type": "meal_code"}, {"example": "BB", "location": "unk", "name": "meal_code1", "type": "meal_code"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the lowest one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN one NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 's city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 's city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's one NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN 's NO_ALIGN fare NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 's lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 's lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN 's lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare 's 's NO_ALIGN one NO_ALIGN lowest NO_ALIGN one 's 's NO_ALIGN from NO_ALIGN lowest NO_ALIGN the 's 's NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN 's one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN 's one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare 's to NO_ALIGN one NO_ALIGN one NO_ALIGN one 's to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the 's to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the cheapest one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN one NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 one NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare city_name1 cheapest NO_ALIGN one NO_ALIGN cheapest NO_ALIGN one city_name1 cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the city_name1 cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN city_name1 one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare city_name1 to NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the least expensive one way fare between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "BOSTON", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN fare NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN one NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN between and city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and one NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN between NO_ALIGN expensive NO_ALIGN between NO_ALIGN expensive NO_ALIGN between NO_ALIGN expensive NO_ALIGN between NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN between NO_ALIGN expensive NO_ALIGN between and expensive NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and expensive NO_ALIGN between NO_ALIGN expensive NO_ALIGN between and expensive NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN and expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN fare and expensive NO_ALIGN one NO_ALIGN expensive NO_ALIGN one and expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN between and expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN between NO_ALIGN and one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN and one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare and city_name1 NO_ALIGN one NO_ALIGN one NO_ALIGN one and city_name1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between and city_name1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [8, 12], [5, 6], [2, 8], [4, 5], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [7, 8], [9, 12], [3, 5]]}, {"text": "i'd like to find the least expensive one way fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "PHILADELPHIA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN one NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd like city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd like city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like one NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN i'd NO_ALIGN find NO_ALIGN i'd NO_ALIGN expensive NO_ALIGN i'd NO_ALIGN find NO_ALIGN i'd NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN find NO_ALIGN i'd NO_ALIGN find NO_ALIGN i'd like find NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like expensive NO_ALIGN i'd NO_ALIGN expensive NO_ALIGN i'd like expensive NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN like expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN fare like expensive NO_ALIGN one NO_ALIGN expensive NO_ALIGN one like expensive NO_ALIGN from NO_ALIGN find NO_ALIGN i'd like expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN i'd NO_ALIGN like one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN like one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare like to NO_ALIGN one NO_ALIGN one NO_ALIGN one like to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd like to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [11, 13], [5, 11], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [6, 8], [13, 14], [4, 15], [2, 15], [3, 4]]}, {"text": "again i will repeat i want to make a one way flight from city_name0 to city_name1 will you tell me how much the fares are i would like the cheapest fare", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN much NO_ALIGN much NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN much NO_ALIGN NO_ALIGN NO_ALIGN again NO_ALIGN fares NO_ALIGN fares NO_ALIGN tell NO_ALIGN tell NO_ALIGN you NO_ALIGN tell again tell NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN again city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell again city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN again much NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN fares NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell again cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN again cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell again cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN again cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN again cheapest NO_ALIGN much NO_ALIGN cheapest NO_ALIGN much again cheapest NO_ALIGN one NO_ALIGN cheapest NO_ALIGN one again cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN you again cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN you NO_ALIGN again much NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN again fares NO_ALIGN much NO_ALIGN much NO_ALIGN much again again NO_ALIGN one NO_ALIGN fares NO_ALIGN one again again NO_ALIGN from NO_ALIGN you NO_ALIGN you again again NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[5, 31], [22, 23], [10, 11], [5, 6], [28, 29], [22, 26], [8, 9], [15, 16], [18, 19], [7, 16], [30, 31], [4, 31], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [25, 26], [3, 31], [18, 31], [8, 16], [27, 28], [28, 31], [20, 22], [22, 24], [12, 14], [2, 31], [4, 5], [20, 31], [29, 30], [9, 10], [2, 3], [14, 15], [27, 31], [19, 20], [23, 24], [11, 12], [0, 1], [17, 18], [7, 8], [26, 27], [14, 16], [5, 16], [8, 12], [21, 22], [13, 14], [24, 25], [3, 4], [6, 16]]}, {"text": "what're the lowest one way fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 what're city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN what're city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 what're city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN what're fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 what're lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN what're lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 what're lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN what're lowest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN what're lowest NO_ALIGN fares NO_ALIGN lowest NO_ALIGN fares what're lowest NO_ALIGN one NO_ALIGN lowest NO_ALIGN one what're lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the what're lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN what're fares NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN what're fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares what're to NO_ALIGN one NO_ALIGN fares NO_ALIGN one what're to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the what're to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to fly from city_name1 at departure_time0 and arrive in city_name0 at arrival_time0 in the morning", "question-split": "dev", "variables": {"arrival_time0": "1110", "departure_time0": "838", "city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN at arrive NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN arrive NO_ALIGN NO_ALIGN NO_ALIGN arrive NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 want arrive NO_ALIGN morning NO_ALIGN departure_time0 NO_ALIGN want city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in want city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN want arrive NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN want in NO_ALIGN in NO_ALIGN at NO_ALIGN in want in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want arrive NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [3, 17], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [12, 17], [9, 17], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [15, 17], [0, 1], [4, 6], [6, 8], [13, 14], [3, 8], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME = arrival_time0 AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "1110", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "838", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "does airline_code0 fly from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "airline_code0": "DL"}, "alignment": "NO_ALIGN does fly NO_ALIGN airline_code0 NO_ALIGN fly NO_ALIGN fly NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN fly city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 fly city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN fly airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN fly city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 fly city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fly airline_code0 NO_ALIGN airline_code0 NO_ALIGN fly NO_ALIGN airline_code0 fly airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what nonstop flights are available from city_name1 to city_name0 arriving between arrival_time1 and arrival_time0", "question-split": "dev", "variables": {"arrival_time0": "1800", "arrival_time1": "1700", "city_name0": "PHILADELPHIA", "city_name1": "OAKLAND", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN nonstop NO_ALIGN are NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN available NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN arrival_time0 arrival_time0 arrival_time0 arriving nonstop NO_ALIGN arrival_time0 city_name1 flights NO_ALIGN arriving between NO_ALIGN between NO_ALIGN between NO_ALIGN between arriving between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving nonstop NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN arriving available NO_ALIGN between NO_ALIGN flights NO_ALIGN between arriving available NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving nonstop NO_ALIGN from NO_ALIGN flights NO_ALIGN between NO_ALIGN arriving nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [0, 3], [3, 14], [1, 2], [6, 7], [12, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME > arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "1930", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1830", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "SEATTLE"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 need city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN need a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4]]}, {"text": "is there a flight leaving city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN there NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving there NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN there leaving there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "i would like a flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like would city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN would a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [3, 5]]}, {"text": "i'd also like to see a list of the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see of flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see of flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list of flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [9, 15], [12, 13], [9, 11], [3, 4], [6, 15], [11, 13], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [13, 14], [4, 15], [7, 8]]}, {"text": "show me all the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "CINCINNATI"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN the city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "i'd like to see flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see like flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see like flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like flights NO_ALIGN from NO_ALIGN flights NO_ALIGN i'd like flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "please list the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "CHICAGO", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4]]}, {"text": "i'd like to make a trip from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN trip NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd like city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd like city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd like a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [4, 11], [7, 9]]}, {"text": "we're going from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN going NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 going city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 going city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going going NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN going going NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [3, 5]]}, {"text": "please show me flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [3, 8], [1, 8], [2, 3], [0, 8], [3, 4]]}, {"text": "what are my choices of flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "LAS VEGAS", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN of flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "i need a return flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN return NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN return NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN return NO_ALIGN NO_ALIGN NO_ALIGN return NO_ALIGN city_name0 NO_ALIGN return NO_ALIGN city_name0 NO_ALIGN return need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need return NO_ALIGN return NO_ALIGN return NO_ALIGN return need return NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need return NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN need return NO_ALIGN city_name1 NO_ALIGN return NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "do you have a flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SALT LAKE CITY", "city_name1": "ST. PETERSBURG"}, "alignment": "NO_ALIGN NO_ALIGN do NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN do NO_ALIGN do NO_ALIGN have NO_ALIGN do you do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you do NO_ALIGN do NO_ALIGN do NO_ALIGN do you do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you do NO_ALIGN from NO_ALIGN have NO_ALIGN you you do NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [3, 9], [2, 3], [3, 4], [3, 5]]}, {"text": "i want to fly city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 want city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 want city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want fly NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN NO_ALIGN want fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 7], [3, 4]]}, {"text": "what flights do you have between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN do NO_ALIGN you NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN do NO_ALIGN between NO_ALIGN do NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN do NO_ALIGN do NO_ALIGN flights NO_ALIGN do you do NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you between NO_ALIGN do NO_ALIGN do NO_ALIGN do you between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you do NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN you you do NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [2, 9], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [3, 4], [0, 2]]}, {"text": "what flights are available from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN available NO_ALIGN available NO_ALIGN flights NO_ALIGN available are available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"text": "i need flight information between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN need NO_ALIGN and NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN need NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN between need city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need between NO_ALIGN between NO_ALIGN between NO_ALIGN between need between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need need NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between need need NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"text": "give me a list of flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between give flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give between NO_ALIGN between NO_ALIGN between NO_ALIGN between give between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list give flights NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [2, 4]]}, {"text": "all the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN the city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [3, 5]]}, {"text": "how about flights leaving city_name0 and arriving in city_name1 for any day", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN in flights NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN about NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN about NO_ALIGN day NO_ALIGN flights NO_ALIGN day arriving about NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving flights NO_ALIGN day NO_ALIGN flights NO_ALIGN day arriving flights NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in arriving flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 6], [4, 5], [7, 9], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [9, 12], [3, 5]]}, {"text": "show the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN show NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [3, 5]]}, {"text": "all right do you have a flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN all all NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN all NO_ALIGN all NO_ALIGN do NO_ALIGN do NO_ALIGN all NO_ALIGN do you do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you do NO_ALIGN do NO_ALIGN do NO_ALIGN do you do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you all NO_ALIGN from NO_ALIGN all NO_ALIGN you you all NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2], [4, 11], [7, 9]]}, {"text": "may i see all the flights from city_name0 to city_name1 please", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN all may NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN may NO_ALIGN please NO_ALIGN see NO_ALIGN all NO_ALIGN see may please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN may flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see may flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN may may NO_ALIGN from NO_ALIGN all NO_ALIGN the may may NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [10, 11], [6, 8], [6, 7], [4, 5], [5, 6], [2, 11], [8, 10], [8, 9], [9, 10], [2, 3], [3, 6], [3, 4]]}, {"text": "please show me the return flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN return NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN return NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN please NO_ALIGN return NO_ALIGN flights NO_ALIGN return city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 return NO_ALIGN return NO_ALIGN return NO_ALIGN return city_name1 return NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the city_name1 flights NO_ALIGN city_name1 NO_ALIGN return NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 10], [6, 10], [8, 10], [8, 9], [9, 10], [2, 3], [3, 6], [1, 10], [3, 4]]}, {"text": "show me a list of the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list of flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [2, 4], [4, 11], [7, 9]]}, {"text": "show me all flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN between NO_ALIGN all NO_ALIGN between and all NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN between and all NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [0, 8], [3, 4], [2, 4], [5, 8]]}, {"text": "give me the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the give flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show all flights city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN NO_ALIGN city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4]]}, {"text": "could you show me all flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "MONTREAL", "city_name1": "CHARLOTTE"}, "alignment": "NO_ALIGN all all NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN you NO_ALIGN all NO_ALIGN you could all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN could flights NO_ALIGN you NO_ALIGN flights NO_ALIGN you could flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could all NO_ALIGN from NO_ALIGN all NO_ALIGN you could all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "i want to go between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN want NO_ALIGN and NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN go NO_ALIGN between NO_ALIGN go NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN go NO_ALIGN between NO_ALIGN between NO_ALIGN between want go NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want between NO_ALIGN between NO_ALIGN go NO_ALIGN between want between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want want NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between want want NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [3, 8], [1, 8], [2, 3], [3, 4], [5, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias0.STATE_CODE = \"state_code0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND CITYalias1.STATE_CODE = \"state_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = \"state_code0\" AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.AIRLINE_CODE , FLIGHTalias0.FLIGHT_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias0.STATE_CODE = \"state_code0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ) ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BOOKING_CLASS IN ( SELECT CLASS_OF_SERVICEalias0.BOOKING_CLASS FROM CLASS_OF_SERVICE AS CLASS_OF_SERVICEalias0 WHERE NOT ( CLASS_OF_SERVICEalias0.BOOKING_CLASS IS NULL ) ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ) ;"], "variables": [{"example": "CHICAGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list nonstop flights on sunday from city_name1 to city_name0 and list nonstop flights on sunday from city_name2 to city_name0", "question-split": "dev", "variables": {"city_name0": "LAS VEGAS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "NEW YORK", "city_name2": "MEMPHIS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN nonstop NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 sunday city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday sunday nonstop NO_ALIGN on NO_ALIGN sunday NO_ALIGN on sunday nonstop NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN list NO_ALIGN sunday NO_ALIGN NO_ALIGN nonstop NO_ALIGN from NO_ALIGN flights NO_ALIGN list sunday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN list NO_ALIGN nonstop NO_ALIGN from NO_ALIGN flights NO_ALIGN list sunday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN sunday nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [15, 19], [3, 7], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [11, 13], [17, 19], [4, 5], [13, 15], [10, 19], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 9], [15, 17], [17, 18], [13, 14], [5, 7], [0, 9], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND ( ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" ) OR ( FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" ) ) ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "LAS VEGAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "MEMPHIS", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me the one way flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "round_trip_required0": "NO", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN one NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 one NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 flights NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "show me all flights from city_name0 to city_name1 one way", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN all all NO_ALIGN one NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN one NO_ALIGN one NO_ALIGN all NO_ALIGN all NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 one NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 all NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [2, 4]]}, {"text": "a one way flight from city_name0 to city_name1 please", "question-split": "dev", "variables": {"city_name0": "BOSTON", "round_trip_required0": "NO", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN please NO_ALIGN one NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 one NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 please NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 please NO_ALIGN from NO_ALIGN please NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 9], [2, 3], [0, 4], [3, 4]]}, {"text": "all one way flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "round_trip_required0": "NO", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN all all NO_ALIGN one NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN one NO_ALIGN one NO_ALIGN all NO_ALIGN all NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN and one NO_ALIGN one NO_ALIGN one NO_ALIGN one and all NO_ALIGN one NO_ALIGN one NO_ALIGN one and all NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN and all NO_ALIGN between NO_ALIGN all NO_ALIGN between and all NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [5, 8]]}, {"text": "show me one way flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "round_trip_required0": "NO", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN one NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN city_name1 one NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 flights NO_ALIGN one NO_ALIGN one NO_ALIGN one city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [3, 4], [2, 3], [0, 9], [2, 5], [7, 8], [2, 4], [7, 9]]}, {"text": "i want a one way ticket from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "round_trip_required0": "NO", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN want NO_ALIGN one NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 ticket city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN ticket one NO_ALIGN one NO_ALIGN one NO_ALIGN one ticket want NO_ALIGN one NO_ALIGN one NO_ALIGN one ticket want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN ticket city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 ticket city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket want NO_ALIGN from NO_ALIGN want NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ) ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cheapest flight on airline_code0 from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "CLEVELAND", "city_name1": "MIAMI", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the on airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN on cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 on cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 on cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the on cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN on cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest on cheapest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN on cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN on cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest on airline_code0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all flights from city_name1 to city_name0 after departure_time0 thursday", "question-split": "dev", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "1200", "city_name0": "ATLANTA", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday after thursday NO_ALIGN thursday NO_ALIGN thursday after thursday NO_ALIGN thursday NO_ALIGN thursday after thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday after all NO_ALIGN departure_time0 NO_ALIGN departure_time0 after all NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN after flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 after flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN after all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN after all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 after all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN after all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [3, 5]]}, {"text": "show me all flights from city_name1 to city_name0 on wednesday of next week which leave city_name1 after departure_time0 o'clock pm", "question-split": "dev", "variables": {"day_number0": "23", "month_number0": "4", "year0": "1991", "departure_time0": "1400", "city_name0": "PITTSBURGH", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN all o'clock NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN next NO_ALIGN on NO_ALIGN next NO_ALIGN all NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN wednesday NO_ALIGN wednesday pm next NO_ALIGN wednesday NO_ALIGN wednesday pm next NO_ALIGN wednesday NO_ALIGN wednesday pm next NO_ALIGN wednesday NO_ALIGN next NO_ALIGN wednesday pm o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 pm o'clock NO_ALIGN wednesday NO_ALIGN next NO_ALIGN on NO_ALIGN pm flights NO_ALIGN which NO_ALIGN flights NO_ALIGN which pm flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN pm o'clock NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN pm all NO_ALIGN which NO_ALIGN all NO_ALIGN which pm all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN pm o'clock NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [0, 20], [4, 8], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [13, 20], [11, 13], [4, 5], [10, 13], [2, 20], [9, 10], [2, 3], [14, 15], [14, 20], [11, 12], [19, 20], [0, 1], [9, 13], [7, 8], [17, 18], [4, 6], [6, 8], [13, 14], [16, 20], [3, 4], [2, 4]]}, {"text": "what flights leave city_name1 after departure_time0 on thursday and arrive in city_name0", "question-split": "dev", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "1700", "city_name0": "LOS ANGELES", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN in leave NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday leave thursday NO_ALIGN thursday NO_ALIGN thursday leave thursday NO_ALIGN thursday NO_ALIGN thursday leave thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday leave leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 leave leave NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN leave flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in leave flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leave leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN leave in NO_ALIGN in NO_ALIGN leave NO_ALIGN in leave in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leave leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [2, 8], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [7, 8], [0, 2], [9, 12]]}, {"text": "i'm looking for a flight that goes from city_name1 to city_name0 on month_number0 day_number0 and that leaves after departure_time0", "question-split": "dev", "variables": {"day_number0": "30", "month_number0": "5", "year0": "1991", "departure_time0": "1200", "city_name0": "HOUSTON", "city_name1": "SAN JOSE"}, "alignment": "NO_ALIGN NO_ALIGN that NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaves day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaves day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaves month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 leaves that NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaves that NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN leaves city_name1 NO_ALIGN i'm NO_ALIGN city_name1 NO_ALIGN i'm leaves city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaves that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN leaves city_name0 NO_ALIGN i'm NO_ALIGN city_name0 NO_ALIGN i'm leaves city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaves that NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[9, 10], [4, 5], [7, 8], [14, 15], [0, 15], [17, 18], [6, 15], [15, 16], [1, 2], [5, 6], [19, 20], [11, 12], [1, 15], [12, 15], [8, 10], [2, 15], [7, 15], [18, 20], [10, 12], [1, 15], [3, 4], [3, 15], [8, 9], [1, 2], [13, 14], [17, 20], [18, 19], [10, 11], [0, 1], [16, 17], [6, 7], [13, 15], [4, 15], [12, 13], [4, 6], [16, 20], [2, 3]]}, {"text": "i want a flight from city_name1 to city_name0 that departs after departure_time0 on thursday", "question-split": "dev", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "departure_time0": "1800", "city_name0": "LOS ANGELES", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN that NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday want that NO_ALIGN departure_time0 NO_ALIGN departure_time0 want that NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN want city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 want city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN want city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 want city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want that NO_ALIGN from NO_ALIGN want NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1600", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "LONG BEACH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "MINNEAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the class_type0 fares for flights from city_name1 to city_name0 tuesday evening", "question-split": "dev", "variables": {"city_name0": "NEWARK", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "CHARLOTTE", "departure_time0": "1800", "departure_time1": "2200", "class_type0": "COACH"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN class_type0 NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN class_type0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening class_type0 NO_ALIGN tuesday NO_ALIGN tuesday evening class_type0 NO_ALIGN tuesday NO_ALIGN tuesday evening class_type0 NO_ALIGN tuesday NO_ALIGN tuesday evening class_type0 NO_ALIGN tuesday NO_ALIGN class_type0 NO_ALIGN tuesday evening flights NO_ALIGN tuesday NO_ALIGN class_type0 NO_ALIGN tuesday evening flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN evening flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN evening tuesday NO_ALIGN tuesday NO_ALIGN tuesday evening tuesday NO_ALIGN tuesday NO_ALIGN tuesday evening tuesday NO_ALIGN tuesday NO_ALIGN tuesday evening tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday evening class_type0 NO_ALIGN class_type0 NO_ALIGN tuesday NO_ALIGN tuesday evening fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 evening fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares evening flights NO_ALIGN evening evening evening evening evening evening flights NO_ALIGN are NO_ALIGN fares NO_ALIGN are NO_ALIGN evening class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN evening fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 6], [1, 13], [4, 5], [11, 12], [12, 13], [8, 9], [9, 10], [9, 11], [2, 3], [11, 13], [2, 5], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "NEWARK", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "COACH", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which airlines fly from city_name2 to city_name0 and have a stopover in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "city_name1": "DENVER", "city_name2": "TORONTO"}, "alignment": "NO_ALIGN in airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in which city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN which city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in which city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in which fly NO_ALIGN stopover NO_ALIGN stopover NO_ALIGN stopover which fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN which in NO_ALIGN in NO_ALIGN which NO_ALIGN in which in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN which fly NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines which fly NO_ALIGN from NO_ALIGN which NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [9, 11], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [2, 7], [9, 13], [7, 8], [5, 7], [3, 4]]}, {"text": "what airlines are there", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DENVER", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN are NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN NO_ALIGN NO_ALIGN are NO_ALIGN there NO_ALIGN there NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN are NO_ALIGN there there there NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN there what NO_ALIGN there NO_ALIGN what NO_ALIGN there there what NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN there there NO_ALIGN there NO_ALIGN what NO_ALIGN there there are NO_ALIGN are NO_ALIGN there NO_ALIGN are there are NO_ALIGN NO_ALIGN NO_ALIGN are NO_ALIGN there NO_ALIGN there there NO_ALIGN there NO_ALIGN there NO_ALIGN there there there NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN there are NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines there are NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN there NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"text": "what airlines fly between city_name2 and city_name0 and stop in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DENVER", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN in airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN between NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN between NO_ALIGN in NO_ALIGN between NO_ALIGN in and between NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN and city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in and city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in and fly NO_ALIGN stop NO_ALIGN stop NO_ALIGN stop and fly NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN in NO_ALIGN and in NO_ALIGN in NO_ALIGN between NO_ALIGN in and in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN and fly NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines and fly NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [10, 11], [6, 7], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [3, 7], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "first flights from city_name0 to city_name1 on a day_name0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_name0": "THURSDAY", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 on first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on first NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 on first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN on first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 on first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on first NO_ALIGN from NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "THURSDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "please give me flights from city_name1 to city_name0 on wednesday morning and thursday afternoon", "question-split": "dev", "variables": {"departure_time0": "0", "departure_time1": "1200", "day_number0": "23", "month_number0": "4", "year0": "1991", "departure_time2": "1800", "city_name0": "BOSTON", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN morning morning morning give morning NO_ALIGN give thursday NO_ALIGN thursday NO_ALIGN wednesday give thursday NO_ALIGN thursday NO_ALIGN thursday give thursday NO_ALIGN thursday NO_ALIGN thursday give thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday give afternoon NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN and NO_ALIGN NO_ALIGN afternoon NO_ALIGN morning morning morning give from NO_ALIGN give thursday NO_ALIGN thursday NO_ALIGN wednesday give thursday NO_ALIGN thursday NO_ALIGN thursday give thursday NO_ALIGN thursday NO_ALIGN thursday give thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday give afternoon NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN NO_ALIGN give flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give afternoon NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN give please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give afternoon NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time1 AND departure_time2 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1800", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "okay i'm sorry could you tell me what flights leave city_name1 and arrive in city_name0 around 5 o'clock", "question-split": "dev", "variables": {"arrival_time0": "1730", "arrival_time1": "1630", "city_name0": "PHILADELPHIA", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN in around NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN arrive around arrive could around NO_ALIGN arrive around around NO_ALIGN could flights NO_ALIGN tell NO_ALIGN flights NO_ALIGN tell could flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN could around NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN could in NO_ALIGN tell NO_ALIGN leave NO_ALIGN tell could in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could around NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[9, 10], [4, 5], [16, 19], [7, 8], [14, 15], [17, 18], [1, 2], [6, 19], [15, 16], [5, 6], [11, 12], [8, 10], [2, 3], [10, 12], [8, 19], [3, 4], [8, 9], [2, 3], [13, 14], [13, 19], [10, 11], [18, 19], [14, 16], [0, 1], [16, 17], [12, 13], [10, 19], [6, 7]]}, {"text": "could you tell me about flights from city_name1 to city_name0 that arrives in the early afternoon", "question-split": "dev", "variables": {"arrival_time0": "1400", "arrival_time1": "1200", "city_name0": "DALLAS", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN in early NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN about NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN could tell in could early NO_ALIGN could city_name1 flights NO_ALIGN could flights NO_ALIGN about NO_ALIGN flights NO_ALIGN about could flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN could early NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN could about NO_ALIGN about NO_ALIGN flights NO_ALIGN about could about NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could early NO_ALIGN from NO_ALIGN flights NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [13, 16], [3, 4], [2, 16], [4, 5], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [5, 16], [13, 14], [10, 16], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "1700", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1600", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "well i'll try last time tell me the kind of aircraft airline_code0 flies from city_name1 to city_name0 before departure_time0 o'clock in the morning", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN in aircraft NO_ALIGN kind NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name1 NO_ALIGN flies NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN aircraft NO_ALIGN kind NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell time city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN time o'clock NO_ALIGN morning NO_ALIGN departure_time0 time o'clock NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN time in NO_ALIGN tell NO_ALIGN flies NO_ALIGN tell time in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN time o'clock NO_ALIGN from NO_ALIGN flies NO_ALIGN in NO_ALIGN time kind NO_ALIGN kind NO_ALIGN aircraft NO_ALIGN kind time o'clock NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind time o'clock NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [5, 6], [8, 9], [15, 16], [18, 19], [6, 24], [3, 24], [1, 2], [16, 17], [8, 24], [6, 7], [12, 13], [20, 21], [8, 10], [10, 12], [3, 4], [16, 18], [19, 21], [22, 24], [13, 24], [4, 5], [18, 24], [9, 10], [19, 24], [2, 3], [14, 15], [2, 24], [11, 12], [19, 20], [23, 24], [0, 1], [17, 18], [4, 6], [14, 16], [13, 14], [21, 22], [7, 8], [21, 24]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the code for class_type0 class", "question-split": "dev", "variables": {"class_type0": "BUSINESS"}, "alignment": "NO_ALIGN code class NO_ALIGN code NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN code NO_ALIGN code NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN for class NO_ALIGN code NO_ALIGN code NO_ALIGN code NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_BASIS_CODE FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "BUSINESS", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "earliest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 to NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "i need to go from city_name0 to city_name1 and back in the same day find me the earliest flight from city_name0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN in go NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN NO_ALIGN in NO_ALIGN day NO_ALIGN go NO_ALIGN day go in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN go go NO_ALIGN day NO_ALIGN go NO_ALIGN day go go NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go go NO_ALIGN from NO_ALIGN go NO_ALIGN in go go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN go go NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN day NO_ALIGN earliest NO_ALIGN day go earliest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN go earliest NO_ALIGN day NO_ALIGN earliest NO_ALIGN day go earliest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN in go earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 21], [10, 11], [5, 6], [3, 21], [8, 9], [16, 21], [18, 19], [11, 14], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [3, 4], [19, 21], [4, 5], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [4, 6], [6, 8], [13, 14], [2, 21], [3, 8], [10, 14], [14, 21], [15, 16]]}, {"text": "list the earliest flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ST. PAUL", "city_name1": "HOUSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 flights NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN list city_name1 earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN list NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4]]}, {"text": "what 's the earliest flight leaving city_name0 for city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the leaving city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving city_name1 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 leaving earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 leaving earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the leaving earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "i'd like the earliest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd like city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd like city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd like to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN like to NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd like earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd like earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN i'd like earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 6], [1, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights are there from city_name1 to city_name0 on monday morning", "question-split": "dev", "variables": {"departure_time0": "0", "departure_time1": "1200", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "PITTSBURGH", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN morning morning morning there morning NO_ALIGN there monday NO_ALIGN monday NO_ALIGN monday there monday NO_ALIGN monday NO_ALIGN monday there monday NO_ALIGN monday NO_ALIGN monday there monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday there flights NO_ALIGN on NO_ALIGN monday NO_ALIGN on NO_ALIGN there flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 there flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN there flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN there NO_ALIGN there flights NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 there flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there flights NO_ALIGN from NO_ALIGN there NO_ALIGN there NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2]]}, {"text": "list all flights leaving city_name1 monday afternoon arriving in city_name0", "question-split": "dev", "variables": {"departure_time0": "1200", "departure_time1": "1800", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN afternoon afternoon afternoon arriving afternoon NO_ALIGN arriving monday NO_ALIGN monday NO_ALIGN monday arriving monday NO_ALIGN monday NO_ALIGN monday arriving monday NO_ALIGN monday NO_ALIGN monday arriving monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday arriving all NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN arriving flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in arriving flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN arriving in NO_ALIGN in NO_ALIGN all NO_ALIGN in arriving in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [3, 10], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "list flights from city_name1 to city_name0 on wednesday afternoon", "question-split": "dev", "variables": {"departure_time0": "1200", "departure_time1": "1800", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "BOSTON", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN afternoon afternoon afternoon afternoon afternoon NO_ALIGN afternoon wednesday NO_ALIGN wednesday NO_ALIGN wednesday afternoon wednesday NO_ALIGN wednesday NO_ALIGN wednesday afternoon wednesday NO_ALIGN wednesday NO_ALIGN wednesday afternoon wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday afternoon afternoon NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN afternoon flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 afternoon flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN afternoon afternoon NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN afternoon flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 afternoon flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN afternoon afternoon NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}, {"text": "show me the flights on tuesday morning from city_name1 to city_name0", "question-split": "dev", "variables": {"departure_time0": "0", "departure_time1": "1200", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name0": "BALTIMORE", "city_name1": "CHARLOTTE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN morning morning morning tuesday morning NO_ALIGN tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday flights NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 tuesday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN tuesday flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN tuesday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 tuesday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tuesday flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [10, 11], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [2, 4], [7, 9]]}, {"text": "show me flights from city_name1 to city_name0 on wednesday morning", "question-split": "dev", "variables": {"departure_time0": "0", "departure_time1": "1200", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN morning morning morning on morning NO_ALIGN on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday on flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [3, 5]]}, {"text": "list the flights on friday afternoon from city_name1 to city_name0", "question-split": "dev", "variables": {"departure_time0": "1200", "departure_time1": "1800", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name0": "OAKLAND", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN afternoon afternoon afternoon afternoon afternoon NO_ALIGN afternoon friday NO_ALIGN on NO_ALIGN on afternoon friday NO_ALIGN on NO_ALIGN on afternoon friday NO_ALIGN on NO_ALIGN on afternoon friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday afternoon afternoon NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN afternoon flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 afternoon flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN afternoon afternoon NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN afternoon flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 afternoon flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN afternoon afternoon NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [3, 6], [3, 4]]}, {"text": "i need late flight wednesday from city_name1 to city_name0", "question-split": "dev", "variables": {"departure_time0": "2400", "departure_time1": "2000", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "SALT LAKE CITY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN late NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN late NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN late NO_ALIGN flight wednesday wednesday late wednesday NO_ALIGN late wednesday NO_ALIGN wednesday NO_ALIGN wednesday late wednesday NO_ALIGN wednesday NO_ALIGN wednesday late wednesday NO_ALIGN wednesday NO_ALIGN wednesday late wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday late late NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN late city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 late city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN late late NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN late city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 late city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN late late NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [7, 9]]}, {"text": "thank you for that information now i would like to book a flight from city_name1 to city_name0 on the night of month_number0 day_number0 around 9 o'clock", "question-split": "dev", "variables": {"departure_time0": "2130", "departure_time1": "2030", "day_number0": "16", "month_number0": "4", "year0": "1991", "city_name0": "BOSTON", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN around NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN you NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN night to i book to NO_ALIGN book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 book around NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN book city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN you book city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN book around NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN book you NO_ALIGN you NO_ALIGN you NO_ALIGN you book you NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN book around NO_ALIGN from NO_ALIGN you NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[9, 26], [10, 11], [22, 23], [5, 6], [18, 26], [8, 9], [15, 16], [18, 19], [23, 26], [10, 26], [2, 5], [1, 2], [16, 17], [20, 26], [6, 7], [12, 13], [20, 21], [25, 26], [18, 20], [11, 13], [21, 26], [4, 5], [13, 15], [21, 23], [9, 10], [2, 3], [14, 15], [11, 12], [8, 26], [19, 20], [3, 5], [0, 1], [7, 8], [15, 17], [17, 18], [23, 24], [7, 26], [13, 14], [21, 22], [24, 25], [17, 26], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;", "SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"type": "day_number", "example": "19", "name": "day_number1", "location": "unk"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what does fare code booking_class0 mean", "question-split": "dev", "variables": {"booking_class0": "Q"}, "alignment": "NO_ALIGN code booking_class0 NO_ALIGN booking_class0 NO_ALIGN booking_class0 NO_ALIGN booking_class0 NO_ALIGN booking_class0 NO_ALIGN booking_class0 NO_ALIGN NO_ALIGN booking_class0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT CLASS_OF_SERVICEalias0.BOOKING_CLASS FROM CLASS_OF_SERVICE AS CLASS_OF_SERVICEalias0 WHERE CLASS_OF_SERVICEalias0.BOOKING_CLASS = \"booking_class0\" ;"], "variables": [{"example": "H", "location": "unk", "name": "booking_class0", "type": "booking_class"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to fly from city_name1 to city_name0 and i don't want any stopovers and i'd like to fly only during the afternoon", "question-split": "dev", "variables": {"departure_time0": "1200", "departure_time1": "1800", "stops0": "0", "city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN and NO_ALIGN i'd NO_ALIGN want NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN afternoon afternoon afternoon any afternoon NO_ALIGN any NO_ALIGN only NO_ALIGN and NO_ALIGN and NO_ALIGN NO_ALIGN any city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd any city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN any only NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN any city_name0 NO_ALIGN i'd NO_ALIGN want NO_ALIGN i'd any city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any only NO_ALIGN from NO_ALIGN want NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[10, 11], [20, 25], [22, 23], [5, 6], [2, 8], [8, 9], [10, 15], [18, 19], [17, 25], [16, 17], [1, 2], [6, 7], [0, 15], [9, 15], [12, 13], [20, 21], [19, 25], [16, 25], [3, 4], [23, 25], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [0, 8], [11, 12], [19, 20], [23, 24], [0, 1], [17, 18], [12, 15], [7, 8], [4, 6], [18, 25], [6, 8], [13, 14], [21, 22], [3, 8], [24, 25], [1, 8], [15, 16]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND ( FLIGHTalias0.STOPS = stops0 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.STOPS = stops0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the meal_description0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "meal_description0": "DINNER", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the city_name1 meal_description0 NO_ALIGN meal_description0 NO_ALIGN flights NO_ALIGN meal_description0 city_name1 meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "a meal_description0 flight from city_name1 to city_name0 please", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "meal_description0": "BREAKFAST", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN please NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN city_name1 meal_description0 NO_ALIGN meal_description0 NO_ALIGN please NO_ALIGN meal_description0 city_name1 meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN city_name1 please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 please NO_ALIGN from NO_ALIGN please NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [2, 3], [0, 3], [3, 4], [5, 8], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the morning flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "DALLAS", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN and NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between and flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list and flights NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list NO_ALIGN and flights NO_ALIGN morning morning morning and morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"text": "what flights go from city_name0 to city_name1 in the morning", "question-split": "dev", "variables": {"city_name0": "CHARLOTTE", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in go in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN go go NO_ALIGN in NO_ALIGN go NO_ALIGN in go go NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go flights NO_ALIGN from NO_ALIGN flights NO_ALIGN in go flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN go flights NO_ALIGN morning morning morning go morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}, {"text": "flights from city_name0 to city_name1 in the morning", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "HOUSTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in city_name1 in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN city_name1 flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in city_name1 flights NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN in city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name1 flights NO_ALIGN morning morning morning city_name1 morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [6, 8], [4, 5], [5, 6], [2, 3], [3, 4], [5, 8], [3, 5]]}, {"text": "what flights leave from city_name0 to city_name1 in the afternoon", "question-split": "dev", "variables": {"city_name0": "NEWARK", "city_name1": "LOS ANGELES", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN in leave NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN leave NO_ALIGN in leave in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN leave flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in leave flights NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leave leave NO_ALIGN from NO_ALIGN leave NO_ALIGN in leave leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN leave leave NO_ALIGN afternoon afternoon afternoon leave afternoon NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}, {"text": "which flights go from city_name0 to city_name1 in the evening", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN in flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN which NO_ALIGN in evening in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN evening go NO_ALIGN in NO_ALIGN go NO_ALIGN in evening go NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening flights NO_ALIGN from NO_ALIGN which NO_ALIGN in evening flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN evening flights NO_ALIGN evening evening evening evening evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}, {"text": "what are the evening flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BALTIMORE", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the evening flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN evening flights NO_ALIGN evening evening evening evening evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "give me morning flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "CHARLOTTE", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN give flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN give flights NO_ALIGN morning morning morning give morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [2, 3], [0, 8], [3, 4], [2, 4]]}, {"text": "from city_name0 to city_name1 in the afternoon", "question-split": "dev", "variables": {"city_name0": "TORONTO", "city_name1": "ATLANTA", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN in afternoon NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in afternoon in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN afternoon city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in afternoon city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN afternoon afternoon NO_ALIGN from NO_ALIGN in NO_ALIGN in afternoon afternoon NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN afternoon afternoon NO_ALIGN afternoon afternoon afternoon afternoon afternoon NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there a red eye flight from city_name1 to city_name0 on wednesday the nineteenth of may", "question-split": "dev", "variables": {"departure_time0": "2359", "departure_time1": "2100", "departure_time2": "300", "departure_time3": "0", "arrival_time0": "1200", "arrival_time1": "500", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "NASHVILLE", "city_name1": "SAN JOSE"}, "alignment": "NO_ALIGN NO_ALIGN may NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN may NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN may NO_ALIGN flight red wednesday may may NO_ALIGN flight red wednesday NO_ALIGN NO_ALIGN NO_ALIGN may NO_ALIGN flight red from may may NO_ALIGN flight red from NO_ALIGN NO_ALIGN may NO_ALIGN may NO_ALIGN the red city_name0 may may NO_ALIGN the red city_name1 NO_ALIGN NO_ALIGN may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday may may NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN may city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 may city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN may may NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN may city_name0 NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 may city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN may may NO_ALIGN from NO_ALIGN there NO_ALIGN there NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [3, 4], [2, 16], [2, 6], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [14, 16], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) OR ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "2359", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2100", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "300", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "500", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "NASHVILLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN JOSE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what does meal_code0 designate as a meal", "question-split": "dev", "variables": {"meal_code0": "S/"}, "alignment": "NO_ALIGN does designate NO_ALIGN designate NO_ALIGN designate NO_ALIGN meal NO_ALIGN designate NO_ALIGN meal_code0 NO_ALIGN designate NO_ALIGN designate NO_ALIGN meal NO_ALIGN designate NO_ALIGN designate NO_ALIGN meal NO_ALIGN NO_ALIGN meal_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_DESCRIPTION , FOOD_SERVICEalias0.MEAL_NUMBER FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_CODE = \"meal_code0\" ;", "SELECT DISTINCT FOOD_SERVICEalias0.MEAL_DESCRIPTION FROM FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE FOOD_SERVICEalias0.MEAL_CODE = \"meal_code0\" ;"], "variables": [{"example": "D/S", "location": "unk", "name": "meal_code0", "type": "meal_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what airlines are airline_code0 and airline_code1", "question-split": "dev", "variables": {"airline_code0": "AC", "airline_code1": "AS"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code1 airlines NO_ALIGN airlines NO_ALIGN NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = \"airline_code0\" OR AIRLINEalias0.AIRLINE_CODE = \"airline_code1\" ;"], "variables": [{"example": "AC", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "AS", "location": "unk", "name": "airline_code1", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there ground transportation between airport and downtown in airport_code0", "question-split": "dev", "variables": {"airport_code0": "BOS", "city_name0": "BOSTON"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN between NO_ALIGN airport NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN between NO_ALIGN downtown NO_ALIGN transportation NO_ALIGN airport_code0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport there transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN there between NO_ALIGN in NO_ALIGN airport NO_ALIGN in there between NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN there transportation NO_ALIGN airport NO_ALIGN airport_code0 NO_ALIGN airport there transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4], [2, 4]]}, {"text": "what is the ground transportation from airport_code0 airport to city_name0 downtown", "question-split": "dev", "variables": {"airport_code0": "BOS", "city_name0": "BOSTON"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN to NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN transportation NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN downtown NO_ALIGN transportation NO_ALIGN airport_code0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport from transportation NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN from to NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground from to NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN from transportation NO_ALIGN airport NO_ALIGN airport_code0 NO_ALIGN airport from transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [5, 8]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;", "SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;", "SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE GROUND_SERVICEalias0.AIRPORT_CODE IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOS", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all the arriving flights at airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN all NO_ALIGN all NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN arriving at NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN arriving all NO_ALIGN list NO_ALIGN at NO_ALIGN airport_code0 arriving all NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [1, 5], [2, 3], [1, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias1.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ;"], "variables": [{"example": "MKE", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the earliest flight in the morning from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in morning NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in city_name1 in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN city_name1 city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in city_name1 city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 morning NO_ALIGN from NO_ALIGN in NO_ALIGN in city_name1 morning NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN city_name1 morning NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN morning NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in city_name1 earliest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN city_name1 earliest NO_ALIGN in NO_ALIGN earliest NO_ALIGN in city_name1 earliest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN in city_name1 earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN in NO_ALIGN city_name1 earliest NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [7, 8]]}, {"text": "what is the earliest morning flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 morning NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the city_name1 morning NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 morning NO_ALIGN morning morning morning city_name1 morning NO_ALIGN city_name1 morning NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN morning NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 city_name1 earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the city_name1 earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN city_name1 earliest NO_ALIGN morning morning morning city_name1 morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4]]}, {"text": "when is the first flight in the morning from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "DENVER", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in morning NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in when in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN when city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in when city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN when morning NO_ALIGN from NO_ALIGN in NO_ALIGN in when morning NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN when morning NO_ALIGN morning morning morning when morning NO_ALIGN when morning NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN morning NO_ALIGN NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN in when first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN when first NO_ALIGN in NO_ALIGN first NO_ALIGN in when first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN when first NO_ALIGN from NO_ALIGN first NO_ALIGN in when first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN in NO_ALIGN when first NO_ALIGN morning morning morning when morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "do you have a flight leaving city_name1 at departure_time0 going to city_name0", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "departure_time0": "645", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN at at NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN do NO_ALIGN do NO_ALIGN do NO_ALIGN do going do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going at NO_ALIGN departure_time0 NO_ALIGN departure_time0 going at NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN at NO_ALIGN going do NO_ALIGN do NO_ALIGN at NO_ALIGN do going do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going at NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [3, 12], [6, 7], [10, 11], [4, 5], [5, 6], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [9, 12], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "819", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all airline_code0 class_type0 class flights", "question-split": "dev", "variables": {"class_type0": "FIRST", "airline_code0": "UA"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN all NO_ALIGN all NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN show class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 show class NO_ALIGN class NO_ALIGN class NO_ALIGN class show all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN show all NO_ALIGN me NO_ALIGN class NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [6, 7], [4, 5], [5, 6], [0, 7], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "how many nonstop flights going from city_name1 to city_name0 month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "day_number0": "27", "month_number0": "7", "year0": "1991", "city_name1": "DALLAS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 going flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 going nonstop NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going nonstop NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN going how NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 going how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going nonstop NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN going nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [3, 4], [4, 11]]}], "sql": ["SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;"], "variables": [{"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all flights from city_name1 to city_name0 next tuesday arriving near 6 o'clock", "question-split": "dev", "variables": {"day_number0": "22", "month_number0": "3", "year0": "1991", "arrival_time0": "1830", "arrival_time1": "1730", "city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN all o'clock NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN all NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN near NO_ALIGN o'clock NO_ALIGN o'clock NO_ALIGN arriving next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday arriving o'clock NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN flights NO_ALIGN next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN tuesday arriving next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday arriving o'clock NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday arriving city_name0 NO_ALIGN o'clock NO_ALIGN near NO_ALIGN o'clock NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN arriving NO_ALIGN o'clock NO_ALIGN near o'clock arriving arriving o'clock NO_ALIGN near o'clock flights NO_ALIGN NO_ALIGN arriving flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 arriving flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving o'clock NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN arriving all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 arriving all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving o'clock NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 2], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [8, 12], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND NOT ( FLIGHTalias0.ARRIVAL_TIME < FLIGHTalias0.DEPARTURE_TIME ) ) ) AND ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "0", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what is the earliest flight from city_name2 to city_name0 city_name1 leaving month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "city_name2": "BOSTON", "day_number0": "8", "month_number0": "8", "year0": "1991"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 leaving city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the leaving to NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN the NO_ALIGN leaving city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN leaving to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN leaving day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaving day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaving day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 leaving month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 leaving to NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN leaving to NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN leaving NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN leaving NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN month_number0 NO_ALIGN earliest NO_ALIGN month_number0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN leaving NO_ALIGN city_name0 NO_ALIGN leaving NO_ALIGN city_name0 leaving leaving NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 leaving the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving earliest NO_ALIGN city_name1 NO_ALIGN leaving NO_ALIGN the leaving earliest NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN the NO_ALIGN leaving earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 leaving earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN leaving earliest NO_ALIGN month_number0 NO_ALIGN month_number0 leaving earliest NO_ALIGN month_number0 NO_ALIGN month_number0 leaving earliest NO_ALIGN month_number0 NO_ALIGN month_number0 leaving earliest NO_ALIGN day_number0 NO_ALIGN earliest NO_ALIGN day_number0 leaving to NO_ALIGN month_number0 NO_ALIGN earliest NO_ALIGN month_number0 leaving earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [7, 10], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [5, 7], [7, 13], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name2\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "8", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "what are the cheapest one way flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "DENVER", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN one NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are one NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 are cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 are cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are cheapest NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN are cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest are cheapest NO_ALIGN one NO_ALIGN cheapest NO_ALIGN one are cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the are cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN are one NO_ALIGN cheapest NO_ALIGN one NO_ALIGN cheapest are flights NO_ALIGN one NO_ALIGN one NO_ALIGN one are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM FARE AS FAREalias1 WHERE FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ) ) AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) ) ) ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like the time of all flights from city_name1 to city_name0 on sunday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN all all NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like time flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN time sunday NO_ALIGN sunday NO_ALIGN sunday time sunday NO_ALIGN sunday NO_ALIGN sunday time sunday NO_ALIGN sunday NO_ALIGN sunday time sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday time all NO_ALIGN on NO_ALIGN sunday NO_ALIGN on time all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN time all NO_ALIGN like NO_ALIGN all NO_ALIGN like time all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN time all NO_ALIGN from NO_ALIGN all NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [1, 14], [10, 12], [8, 10], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [3, 5], [0, 1], [7, 8], [5, 10], [6, 8], [13, 14], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which airlines have flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN have NO_ALIGN have NO_ALIGN which NO_ALIGN have which have NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which flights NO_ALIGN have NO_ALIGN flights NO_ALIGN have which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which flights NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines which flights NO_ALIGN from NO_ALIGN which NO_ALIGN have which flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN have NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"text": "list airlines serving between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN list NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN between and city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and list NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines and list NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list and list NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ) ;"], "variables": [{"example": "WASHINGTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "COLUMBUS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me flights from city_name1 to city_name0 leaving on a day_name0 class_type0 class", "question-split": "dev", "variables": {"day_name0": "SUNDAY", "class_type0": "FIRST", "city_name0": "NEW YORK", "city_name1": "MIAMI"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN leaving class_type0 NO_ALIGN class_type0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 leaving class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 leaving class NO_ALIGN class NO_ALIGN class NO_ALIGN class leaving flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving flights NO_ALIGN a NO_ALIGN class NO_ALIGN a NO_ALIGN leaving flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 leaving flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN leaving flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 leaving flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [9, 13], [0, 13], [6, 13], [7, 8]]}, {"text": "show me which flights from city_name1 to city_name0 on a day_name0 are class_type0 class", "question-split": "dev", "variables": {"day_name0": "MONDAY", "class_type0": "FIRST", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN which day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN which class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN which class_type0 NO_ALIGN class_type0 NO_ALIGN day_name0 NO_ALIGN day_name0 which class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 which class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 which class NO_ALIGN class NO_ALIGN class NO_ALIGN class which flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 which flights NO_ALIGN a NO_ALIGN class NO_ALIGN a NO_ALIGN which flights NO_ALIGN which NO_ALIGN flights NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN which flights NO_ALIGN which NO_ALIGN which NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which flights NO_ALIGN from NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [0, 14], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [8, 11], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( DAYSalias0.DAY_NAME = \"day_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "TUESDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like to fly airline_code0 from city_name1 to city_name0 in the late evening what do you have available", "question-split": "dev", "variables": {"departure_time0": "2200", "departure_time1": "2000", "city_name0": "CLEVELAND", "city_name1": "ORLANDO", "airline_code0": "US"}, "alignment": "NO_ALIGN in late NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN available NO_ALIGN in NO_ALIGN do NO_ALIGN NO_ALIGN NO_ALIGN late NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN late NO_ALIGN evening city_name1 evening late late NO_ALIGN evening city_name1 evening NO_ALIGN late do NO_ALIGN in NO_ALIGN do NO_ALIGN in late do NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN late late NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN late available NO_ALIGN in NO_ALIGN have NO_ALIGN in late available NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN late late NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN late late NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [11, 14], [1, 2], [16, 17], [2, 19], [6, 7], [4, 19], [12, 13], [8, 10], [3, 4], [17, 19], [4, 5], [14, 19], [9, 10], [1, 19], [2, 3], [3, 19], [14, 15], [11, 12], [0, 1], [17, 18], [6, 8], [13, 14], [10, 14], [7, 8]]}, {"text": "is there an early morning airline_code0 flight between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "airline_code0": "DL", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN and NO_ALIGN between NO_ALIGN there NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN morning and morning an early NO_ALIGN morning city_name1 morning NO_ALIGN an between NO_ALIGN between NO_ALIGN between NO_ALIGN between an between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an early NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN an city_name0 NO_ALIGN between NO_ALIGN there NO_ALIGN between an city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an early NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN between NO_ALIGN an early NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4]]}, {"text": "does airline_code0 have an early afternoon flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "departure_time0": "1200", "departure_time1": "1400", "airline_code0": "DL"}, "alignment": "NO_ALIGN does early NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN afternoon city_name1 afternoon an early NO_ALIGN afternoon city_name1 afternoon NO_ALIGN an city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN have an city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an early NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN an have NO_ALIGN have NO_ALIGN have NO_ALIGN have an have NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an early NO_ALIGN from NO_ALIGN have NO_ALIGN have NO_ALIGN an early NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 7], [3, 4], [7, 9]]}, {"text": "tell me again the morning flights on airline_code0 from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "DALLAS", "departure_time0": "0", "departure_time1": "1200", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN morning tell morning again airline_code0 NO_ALIGN morning city_name1 morning NO_ALIGN again flights NO_ALIGN tell NO_ALIGN flights NO_ALIGN tell again flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN again airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN again tell NO_ALIGN tell NO_ALIGN flights NO_ALIGN tell again tell NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN again airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN again airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [6, 8], [6, 7], [10, 11], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [3, 6], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "2200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2000", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ORLANDO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "please list the ground transportation from airport_code0 into city_name0", "question-split": "dev", "variables": {"airport_code0": "LGA", "city_name0": "NEW YORK"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN ground NO_ALIGN transportation NO_ALIGN NO_ALIGN transportation NO_ALIGN into NO_ALIGN NO_ALIGN NO_ALIGN into NO_ALIGN into NO_ALIGN airport_code0 NO_ALIGN into NO_ALIGN into NO_ALIGN into NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN from transportation NO_ALIGN ground NO_ALIGN NO_ALIGN NO_ALIGN transportation NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [0, 9], [2, 5], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( GROUND_SERVICEalias0.AIRPORT_CODE IN ( SELECT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" ) AND GROUND_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ;"], "variables": [{"example": "LGA", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "NEW YORK", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to leave city_name0 at departure_time0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "departure_time0": "838"}, "alignment": "NO_ALIGN at leave NO_ALIGN want NO_ALIGN to NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 leave at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leave leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 leave leave NO_ALIGN to NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "could i have a list of flights in class_type0 class on monday from city_name1 to city_name0 starting at departure_time0 and afterwards", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "class_type0": "FIRST", "departure_time0": "1200", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN at could NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN could NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday could monday NO_ALIGN monday NO_ALIGN monday could monday NO_ALIGN monday NO_ALIGN monday could class_type0 NO_ALIGN monday NO_ALIGN monday could class_type0 NO_ALIGN monday NO_ALIGN monday could class_type0 NO_ALIGN monday NO_ALIGN monday could monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday could class_type0 NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN monday could class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN could class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN on could class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 could class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 could class NO_ALIGN class NO_ALIGN class NO_ALIGN class could could NO_ALIGN on NO_ALIGN monday NO_ALIGN on could could NO_ALIGN a NO_ALIGN class NO_ALIGN a NO_ALIGN could NO_ALIGN could NO_ALIGN departure_time0 NO_ALIGN departure_time0 list could NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN NO_ALIGN could flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in could flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN could could NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN at NO_ALIGN could in NO_ALIGN in NO_ALIGN at NO_ALIGN in could in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN could could NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [15, 16], [8, 9], [18, 19], [1, 2], [16, 17], [6, 7], [20, 21], [12, 13], [8, 10], [7, 10], [3, 4], [17, 19], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [16, 19], [11, 12], [19, 20], [3, 5], [0, 1], [17, 18], [14, 16], [13, 14], [2, 21], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND ( FLIGHTalias0.DEPARTURE_TIME = departure_time0 OR FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me what flights are available from city_name1 to city_name0 with economy fares", "question-split": "dev", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN are fares NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy are fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares are flights NO_ALIGN with NO_ALIGN fares NO_ALIGN with are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN are available NO_ALIGN available NO_ALIGN flights NO_ALIGN available are available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [4, 13], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [2, 4]]}, {"text": "can you show me the economy fare flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "economy0": "YES", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN fare NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fare NO_ALIGN economy NO_ALIGN NO_ALIGN flights NO_ALIGN can NO_ALIGN flights NO_ALIGN can you flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN you economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy you economy NO_ALIGN fare NO_ALIGN economy NO_ALIGN fare you flights NO_ALIGN you NO_ALIGN economy NO_ALIGN you you flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN you NO_ALIGN you flights NO_ALIGN can NO_ALIGN flights NO_ALIGN can you flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you flights NO_ALIGN from NO_ALIGN flights NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 8], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [4, 12], [2, 3], [2, 12], [3, 4]]}, {"text": "city_name1 to city_name0 economy", "question-split": "dev", "variables": {"economy0": "YES", "city_name0": "LAS VEGAS", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN economy NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy city_name1 to NO_ALIGN to NO_ALIGN economy NO_ALIGN to city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.ECONOMY = \"economy0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the ground transportation available in city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [2, 5], [3, 4]]}, {"text": "ground transportation in city_name0", "question-split": "dev", "variables": {"city_name0": "SAN JOSE"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN city_name0 transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "what 's the ground transportation like at city_name0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN 's transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"text": "what ground transport is available in city_name0", "question-split": "dev", "variables": {"city_name0": "CHARLOTTE"}, "alignment": "NO_ALIGN ground transport NO_ALIGN ground NO_ALIGN in NO_ALIGN transport NO_ALIGN ground NO_ALIGN transport NO_ALIGN transport NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN available transport NO_ALIGN in NO_ALIGN transport NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4]]}, {"text": "tell me about the ground transportation in city_name0", "question-split": "dev", "variables": {"city_name0": "CHICAGO"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN about NO_ALIGN ground NO_ALIGN transportation NO_ALIGN about NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN city_name0 transportation NO_ALIGN about NO_ALIGN about NO_ALIGN about NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [0, 8], [3, 4]]}, {"text": "information on ground transportation in city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN information transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "please list ground transport in city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO"}, "alignment": "NO_ALIGN ground transport NO_ALIGN ground NO_ALIGN in NO_ALIGN transport NO_ALIGN ground NO_ALIGN transport NO_ALIGN transport NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN city_name0 transport NO_ALIGN in NO_ALIGN transport NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show me the ground transportation in city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN city_name0 transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [2, 5], [3, 4]]}, {"text": "how can i go from the city_name0 airport to downtown city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO"}, "alignment": "NO_ALIGN airport downtown NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN NO_ALIGN downtown NO_ALIGN how downtown NO_ALIGN go NO_ALIGN downtown NO_ALIGN go NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 8], [4, 5], [5, 6], [8, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [5, 8]]}, {"text": "and how can i get to the city_name0 airport from downtown city_name0", "question-split": "dev", "variables": {"city_name0": "BOSTON"}, "alignment": "NO_ALIGN airport downtown NO_ALIGN downtown NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN NO_ALIGN downtown NO_ALIGN how downtown NO_ALIGN get NO_ALIGN get NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [10, 11], [4, 5], [5, 6], [11, 12], [10, 12], [9, 10], [8, 9], [4, 12], [2, 3], [3, 4], [9, 12]]}, {"text": "what type of ground transportation is available between the airport and downtown city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN between NO_ALIGN transportation NO_ALIGN downtown NO_ALIGN transportation NO_ALIGN transportation NO_ALIGN between NO_ALIGN NO_ALIGN ground NO_ALIGN of transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN ground NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [11, 13], [4, 5], [9, 10], [0, 5], [2, 3], [11, 12], [3, 5], [0, 1], [7, 13], [7, 8], [0, 2]]}, {"text": "how can i get from the airport in city_name0 to downtown", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH"}, "alignment": "NO_ALIGN in downtown NO_ALIGN downtown NO_ALIGN in NO_ALIGN get NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN get NO_ALIGN in NO_ALIGN NO_ALIGN downtown NO_ALIGN how downtown NO_ALIGN get NO_ALIGN get NO_ALIGN get NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [10, 11], [6, 7], [4, 5], [5, 6], [5, 7], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [7, 9]]}, {"text": "tell me about the ground transportation from city_name0 airport", "question-split": "dev", "variables": {"city_name0": "NASHVILLE"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN city_name0 NO_ALIGN about NO_ALIGN ground NO_ALIGN transportation NO_ALIGN about NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN from transportation NO_ALIGN about NO_ALIGN about NO_ALIGN about NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [0, 9], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;", "SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE GROUND_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights go from city_name1 to city_name0 next tuesday", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go next NO_ALIGN tuesday NO_ALIGN tuesday go next NO_ALIGN tuesday NO_ALIGN tuesday go next NO_ALIGN tuesday NO_ALIGN tuesday go next NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday go flights NO_ALIGN tuesday NO_ALIGN next NO_ALIGN tuesday go flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN go go NO_ALIGN go NO_ALIGN flights NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "display all flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "30", "month_number0": "7", "year0": "1991", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 display flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN display day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 display day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 display day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 display month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 display all NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 display all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN display all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 display all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN display all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4], [3, 5]]}, {"text": "show me flights from city_name1 to city_name0 on friday", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 friday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN on NO_ALIGN on friday friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday friday flights NO_ALIGN on NO_ALIGN friday NO_ALIGN on friday flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN friday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 friday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN friday flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}, {"text": "please give me the flights available from city_name1 to city_name0 on wednesday of next week", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN next NO_ALIGN on NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available week flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN week next NO_ALIGN wednesday NO_ALIGN wednesday week next NO_ALIGN wednesday NO_ALIGN wednesday week next NO_ALIGN wednesday NO_ALIGN wednesday week next NO_ALIGN wednesday NO_ALIGN next NO_ALIGN wednesday week flights NO_ALIGN wednesday NO_ALIGN next NO_ALIGN on week flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN week available NO_ALIGN available NO_ALIGN flights NO_ALIGN available week available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN week flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [12, 15], [6, 8], [13, 14], [11, 15], [7, 8]]}, {"text": "what flights are available from city_name1 to city_name0 on month_number0 day_number0 year0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "25", "month_number0": "7", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN year0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available year0 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN day_number0 NO_ALIGN year0 NO_ALIGN day_number0 year0 flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 year0 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN year0 available NO_ALIGN available NO_ALIGN flights NO_ALIGN available year0 available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN year0 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [9, 11], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [8, 12], [7, 8], [0, 2], [9, 12]]}, {"text": "show me the flights from city_name1 to city_name0 on thursday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday on flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4], [2, 4]]}, {"text": "show me flights from city_name1 to city_name0 on monday", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday on flights NO_ALIGN on NO_ALIGN monday NO_ALIGN on on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}, {"text": "please show me all the flights from city_name1 to city_name0 tomorrow", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow city_name1 tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow city_name1 tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow city_name1 tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow city_name1 all NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 please NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [10, 11], [6, 8], [6, 7], [4, 5], [5, 6], [3, 11], [8, 10], [8, 9], [9, 10], [2, 3], [3, 6], [1, 11], [3, 4]]}, {"text": "give me a flight from city_name1 to city_name0 on friday", "question-split": "dev", "variables": {"city_name0": "TAMPA", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "NEWARK"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give friday NO_ALIGN on NO_ALIGN on give friday NO_ALIGN on NO_ALIGN on give friday NO_ALIGN on NO_ALIGN on give friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday give a NO_ALIGN on NO_ALIGN friday NO_ALIGN on give a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN give city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 give city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4], [2, 4]]}, {"text": "what are flights between city_name1 and city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "10", "month_number0": "8", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between are between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 are flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 are flights NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN are flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between are flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [3, 7], [7, 8]]}, {"text": "what flights from city_name1 to city_name0 on sunday", "question-split": "dev", "variables": {"city_name0": "INDIANAPOLIS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "MIAMI"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday sunday flights NO_ALIGN on NO_ALIGN sunday NO_ALIGN on sunday flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN sunday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN sunday flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "do any of the city_name1 to city_name0 flights leave on friday", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN city_name0 NO_ALIGN do NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN do NO_ALIGN do NO_ALIGN do NO_ALIGN do any do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN any friday NO_ALIGN on NO_ALIGN on any friday NO_ALIGN on NO_ALIGN on any friday NO_ALIGN on NO_ALIGN on any friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday any leave NO_ALIGN on NO_ALIGN friday NO_ALIGN on any leave NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN the NO_ALIGN any do NO_ALIGN do NO_ALIGN leave NO_ALIGN do any do NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [6, 8], [10, 11], [5, 6], [4, 5], [8, 11], [8, 9], [9, 10], [1, 8], [9, 11], [2, 3], [3, 4], [2, 5], [7, 8], [3, 5]]}, {"text": "flights from city_name1 to city_name0 on thursday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday on flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [3, 5]]}, {"text": "please list all flights tuesday city_name1 city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 tuesday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday all NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN tuesday please NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 tuesday please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tuesday all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"text": "list flights from city_name1 to city_name0 next sunday", "question-split": "dev", "variables": {"city_name0": "HOUSTON", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "SAN JOSE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN sunday NO_ALIGN next NO_ALIGN sunday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday next NO_ALIGN sunday NO_ALIGN sunday sunday next NO_ALIGN sunday NO_ALIGN sunday sunday next NO_ALIGN sunday NO_ALIGN sunday sunday next NO_ALIGN sunday NO_ALIGN next NO_ALIGN sunday sunday flights NO_ALIGN sunday NO_ALIGN next NO_ALIGN sunday sunday flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN sunday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 sunday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN sunday flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "show me all flights from city_name1 to city_name0 on thursday", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday on thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday on all NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on on all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 on all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4], [2, 4]]}, {"text": "i need a flight from city_name1 to city_name0 on the day_number0 of month_number0", "question-split": "dev", "variables": {"city_name0": "NEWARK", "day_number0": "1", "month_number0": "7", "year0": "1991", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN of NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 of city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 of of NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 of of NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN of city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 of city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of of NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [4, 6], [6, 8], [7, 8], [2, 4]]}, {"text": "i want all flights from city_name1 to city_name0 on thursday", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 want flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday want thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday want all NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on want all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN want all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 want all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "i would like to know the flights from city_name1 to city_name0 leaving on monday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like know flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know monday NO_ALIGN monday NO_ALIGN monday know monday NO_ALIGN monday NO_ALIGN monday know monday NO_ALIGN monday NO_ALIGN monday know monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday know flights NO_ALIGN on NO_ALIGN monday NO_ALIGN on know flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN know flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like know flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [5, 14], [7, 8]]}, {"text": "how about month_number0 day_number0 city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_number0": "27", "month_number0": "4", "year0": "1991", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN about NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name1 NO_ALIGN about NO_ALIGN city_name1 NO_ALIGN about how city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN how day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 how to NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 how to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN how about NO_ALIGN about NO_ALIGN city_name0 NO_ALIGN about how about NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN how to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 5], [3, 4]]}, {"text": "show me the flights from city_name1 to city_name0 on monday", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday on flights NO_ALIGN on NO_ALIGN monday NO_ALIGN on on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4], [2, 4]]}, {"text": "yes i need a flight from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "7", "month_number0": "7", "year0": "1991", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 yes city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN yes day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 yes day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 yes day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 yes month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 yes a NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 yes a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN yes city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 yes city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN yes a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [7, 9], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [9, 12], [3, 5]]}, {"text": "i'd like information on all the flights from city_name1 to city_name0 on tuesday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN i'd NO_ALIGN all NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN all NO_ALIGN i'd NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd like flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like tuesday NO_ALIGN tuesday NO_ALIGN tuesday like tuesday NO_ALIGN tuesday NO_ALIGN tuesday like tuesday NO_ALIGN tuesday NO_ALIGN tuesday like tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday like all NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on like all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN i'd NO_ALIGN like all NO_ALIGN i'd NO_ALIGN all NO_ALIGN i'd like all NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like all NO_ALIGN from NO_ALIGN all NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [5, 8], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [7, 8]]}, {"text": "please give me a flight from city_name1 to city_name0 monday", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN please NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give monday NO_ALIGN monday NO_ALIGN monday give monday NO_ALIGN monday NO_ALIGN monday give monday NO_ALIGN monday NO_ALIGN monday give monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday give please NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday give please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN give please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 give please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give please NO_ALIGN from NO_ALIGN please NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [5, 7], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [3, 5]]}, {"text": "list all flights from city_name1 to city_name0 on saturday", "question-split": "dev", "variables": {"city_name0": "LONG BEACH", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name1": "MINNEAPOLIS"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 saturday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN saturday saturday NO_ALIGN on NO_ALIGN on saturday saturday NO_ALIGN on NO_ALIGN on saturday saturday NO_ALIGN on NO_ALIGN on saturday saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN on saturday all NO_ALIGN on NO_ALIGN saturday NO_ALIGN on saturday all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN saturday all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 saturday all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN saturday all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}, {"text": "show flights between city_name1 and city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "16", "month_number0": "9", "year0": "1991", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN show NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 and day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 and day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 and month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 and flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 and flights NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN and flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between and flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [3, 6], [0, 9], [3, 4], [7, 9]]}, {"text": "i need a flight from city_name1 to city_name0 on sunday", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 sunday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday sunday a NO_ALIGN on NO_ALIGN sunday NO_ALIGN on sunday a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN sunday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 sunday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN sunday a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "what flights leave from city_name1 to city_name0 on saturday", "question-split": "dev", "variables": {"city_name0": "SEATTLE", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name1": "CHICAGO"}, "alignment": "NO_ALIGN NO_ALIGN leave NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 leave flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leave saturday NO_ALIGN on NO_ALIGN on leave saturday NO_ALIGN on NO_ALIGN on leave saturday NO_ALIGN on NO_ALIGN on leave saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN on leave leave NO_ALIGN on NO_ALIGN saturday NO_ALIGN on leave leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN leave leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 leave leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leave leave NO_ALIGN from NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "i would like to fly from city_name1 to city_name0 on wednesday the day_number0 of month_number0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "21", "month_number0": "4", "year0": "1991", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN wednesday NO_ALIGN month_number0 NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like would city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would wednesday NO_ALIGN month_number0 NO_ALIGN month_number0 would wednesday NO_ALIGN month_number0 NO_ALIGN month_number0 would wednesday NO_ALIGN month_number0 NO_ALIGN month_number0 would wednesday NO_ALIGN day_number0 NO_ALIGN wednesday NO_ALIGN day_number0 would fly NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN month_number0 would fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN would city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [13, 14], [4, 15], [5, 7], [2, 15], [11, 15], [7, 8]]}, {"text": "what flights are available from city_name1 to city_name0 today", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "1", "month_number0": "8", "year0": "1991", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN today NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are today NO_ALIGN flights NO_ALIGN flights are today NO_ALIGN flights NO_ALIGN flights are today NO_ALIGN flights NO_ALIGN flights are flights NO_ALIGN flights NO_ALIGN today NO_ALIGN flights are flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN are available NO_ALIGN available NO_ALIGN flights NO_ALIGN available are available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [3, 4], [0, 2]]}, {"text": "i need a flight from city_name1 to city_name0 on monday", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "SALT LAKE CITY", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 need city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need monday NO_ALIGN monday NO_ALIGN monday need monday NO_ALIGN monday NO_ALIGN monday need monday NO_ALIGN monday NO_ALIGN monday need monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday need a NO_ALIGN on NO_ALIGN monday NO_ALIGN on need a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN need city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "please give me the flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"day_number0": "16", "month_number0": "6", "year0": "1991", "city_name0": "CHICAGO", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 give flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 give flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN give please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [3, 5], [3, 12], [1, 12], [5, 7], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "9", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "okay i would like to know the type of aircraft used on a flight from city_name0 to city_name1 please", "question-split": "dev", "variables": {"city_name0": "CLEVELAND", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN a NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN aircraft NO_ALIGN used NO_ALIGN NO_ALIGN NO_ALIGN okay NO_ALIGN please NO_ALIGN like NO_ALIGN please NO_ALIGN like know please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like know city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know used NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft know okay NO_ALIGN used NO_ALIGN used NO_ALIGN used know okay NO_ALIGN from NO_ALIGN please NO_ALIGN the know okay NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 19], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [2, 19], [6, 7], [4, 19], [12, 13], [8, 10], [10, 18], [3, 4], [16, 18], [6, 18], [12, 14], [4, 5], [9, 10], [2, 3], [3, 19], [14, 15], [11, 12], [0, 1], [6, 19], [17, 18], [6, 8], [14, 16], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.BASIC_TYPE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "CLEVELAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "like information on flights from city_name1 to city_name0 on thursday morning", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "SAN FRANCISCO", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like like flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like thursday NO_ALIGN thursday NO_ALIGN thursday like thursday NO_ALIGN thursday NO_ALIGN thursday like thursday NO_ALIGN thursday NO_ALIGN thursday like thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday like flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on like flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN like flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like like flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN like flights NO_ALIGN morning morning morning like morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [2, 8], [8, 11], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4]]}, {"text": "i would like to book a flight on month_number0 day_number0 from city_name1 to city_name0 in the late afternoon", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "1", "month_number0": "6", "year0": "1991", "city_name1": "LOS ANGELES", "departure_time0": "1600", "departure_time1": "1800"}, "alignment": "NO_ALIGN in late NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN late NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in book city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 book month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 book late NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 book late NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN book in NO_ALIGN in NO_ALIGN in NO_ALIGN in book in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN book late NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN book late NO_ALIGN afternoon afternoon afternoon book afternoon NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [4, 18], [8, 9], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [14, 18], [10, 12], [8, 10], [7, 10], [15, 18], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [13, 14], [5, 7], [1, 18], [3, 18], [7, 8]]}, {"text": "i want to travel from city_name1 to city_name0 on wednesday afternoon", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "PHILADELPHIA", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 travel city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN travel wednesday NO_ALIGN wednesday NO_ALIGN wednesday travel wednesday NO_ALIGN wednesday NO_ALIGN wednesday travel wednesday NO_ALIGN wednesday NO_ALIGN wednesday travel wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday travel afternoon NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on travel afternoon NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN travel city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 travel city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel afternoon NO_ALIGN from NO_ALIGN want NO_ALIGN NO_ALIGN NO_ALIGN travel afternoon NO_ALIGN afternoon afternoon afternoon travel afternoon NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4]]}, {"text": "flights from city_name1 to city_name0 on wednesday evening", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "PHOENIX", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on evening flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN evening flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN evening flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN evening flights NO_ALIGN evening evening evening evening evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [6, 8], [4, 5], [5, 6], [2, 3], [3, 4], [5, 8], [3, 5]]}, {"text": "what flight do you have from city_name1 to city_name0 on month_number0 day_number0 in the morning", "question-split": "dev", "variables": {"city_name0": "DALLAS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "ATLANTA", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in do NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN do NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN in NO_ALIGN do NO_ALIGN in you do NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN you day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 you day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 you day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 you month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 you do NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 you do NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN you in NO_ALIGN in NO_ALIGN have NO_ALIGN in you in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you do NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN you do NO_ALIGN morning morning morning you morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [5, 7], [7, 8], [0, 2], [9, 12]]}, {"text": "i want a flight from city_name1 to city_name0 that leaves early friday morning", "question-split": "dev", "variables": {"city_name0": "MONTREAL", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "TORONTO", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN friday NO_ALIGN friday NO_ALIGN i NO_ALIGN friday NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaves city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaves friday NO_ALIGN i NO_ALIGN friday leaves friday NO_ALIGN i NO_ALIGN i leaves friday NO_ALIGN i NO_ALIGN i leaves friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday leaves early NO_ALIGN i NO_ALIGN friday NO_ALIGN i leaves early NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN leaves city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 leaves city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaves early NO_ALIGN from NO_ALIGN want NO_ALIGN that NO_ALIGN leaves early NO_ALIGN morning morning morning leaves morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [4, 6], [6, 8], [7, 8], [2, 4]]}, {"text": "i need to know what flights leave city_name1 on sunday evening and arrive in city_name0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "ATLANTA", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN in leave NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in know flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN know sunday NO_ALIGN sunday NO_ALIGN sunday know sunday NO_ALIGN sunday NO_ALIGN sunday know sunday NO_ALIGN sunday NO_ALIGN sunday know sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday know leave NO_ALIGN on NO_ALIGN sunday NO_ALIGN on know leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN know in NO_ALIGN in NO_ALIGN leave NO_ALIGN in know in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know leave NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN in NO_ALIGN know leave NO_ALIGN evening evening evening know evening NO_ALIGN", "constituency_parser_spans": [[3, 15], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [6, 15], [4, 5], [6, 11], [8, 11], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [4, 6], [13, 14], [4, 15], [2, 15], [7, 8]]}, {"text": "i'd like a flight on month_number0 day_number0 from city_name1 to city_name0 in the afternoon", "question-split": "dev", "variables": {"city_name0": "KANSAS CITY", "day_number0": "9", "month_number0": "7", "year0": "1991", "city_name1": "ORLANDO", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN in afternoon NO_ALIGN a NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd afternoon city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN afternoon day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 afternoon day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 afternoon day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 afternoon month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 afternoon afternoon NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 afternoon afternoon NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN afternoon in NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd afternoon in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN afternoon afternoon NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN afternoon afternoon NO_ALIGN afternoon afternoon afternoon afternoon afternoon NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [8, 9], [5, 8], [1, 2], [6, 7], [12, 13], [8, 10], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [12, 15], [13, 14], [5, 7], [2, 15], [7, 8]]}, {"text": "show me flights from city_name1 to city_name0 early am on tuesday", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "BOSTON", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 am flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN am tuesday NO_ALIGN tuesday NO_ALIGN tuesday am tuesday NO_ALIGN tuesday NO_ALIGN tuesday am tuesday NO_ALIGN tuesday NO_ALIGN tuesday am tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday am early NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on am early NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN am flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 am flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN am early NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN am early NO_ALIGN early early early am early NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [10, 11], [6, 7], [7, 8], [4, 5], [5, 6], [9, 10], [8, 9], [0, 11], [9, 11], [2, 3], [3, 4], [3, 5]]}, {"text": "can you give me the evening flight on wednesday from city_name1 to city_name0 again", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "WASHINGTON", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN again NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN you NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN again NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN can NO_ALIGN city_name1 NO_ALIGN can again city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN again wednesday NO_ALIGN wednesday NO_ALIGN wednesday again wednesday NO_ALIGN wednesday NO_ALIGN wednesday again wednesday NO_ALIGN wednesday NO_ALIGN wednesday again wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday again again NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on again again NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN again you NO_ALIGN can NO_ALIGN you NO_ALIGN can again you NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN again again NO_ALIGN from NO_ALIGN you NO_ALIGN you NO_ALIGN again again NO_ALIGN evening evening evening again evening NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [7, 11], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [7, 8]]}, {"text": "on month_number0 day_number0 i'd like a flight from city_name1 to city_name0 in the morning", "question-split": "dev", "variables": {"city_name0": "ORLANDO", "day_number0": "8", "month_number0": "7", "year0": "1991", "city_name1": "NEWARK", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in a NO_ALIGN a NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd like city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN like day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 like day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 like day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 like month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 like a NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 like a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN like in NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd like in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like a NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN like a NO_ALIGN morning morning morning like morning NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [0, 3], [1, 2], [6, 7], [12, 13], [8, 10], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [6, 8], [13, 14], [4, 15], [7, 8]]}, {"text": "i would like information on flights leaving early monday morning from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "ATLANTA", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like would flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday would early NO_ALIGN on NO_ALIGN monday NO_ALIGN on would early NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN would flights NO_ALIGN like NO_ALIGN flights NO_ALIGN like would flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would early NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN would early NO_ALIGN morning morning morning would morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [6, 14], [1, 2], [6, 7], [12, 13], [1, 14], [10, 12], [7, 10], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [7, 8]]}, {"text": "what flights go from city_name1 to city_name0 wednesday morning", "question-split": "dev", "variables": {"city_name0": "NEWARK", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go wednesday NO_ALIGN wednesday NO_ALIGN wednesday go wednesday NO_ALIGN wednesday NO_ALIGN wednesday go wednesday NO_ALIGN wednesday NO_ALIGN wednesday go wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday go flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday go flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN go go NO_ALIGN go NO_ALIGN flights NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN go flights NO_ALIGN morning morning morning go morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "i need a flight this sunday from city_name1 to city_name0 and i would prefer a morning flight", "question-split": "dev", "variables": {"city_name0": "LAS VEGAS", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "MIAMI", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN sunday NO_ALIGN this NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 this city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN this this NO_ALIGN sunday NO_ALIGN sunday this this NO_ALIGN sunday NO_ALIGN sunday this this NO_ALIGN sunday NO_ALIGN sunday this sunday NO_ALIGN sunday NO_ALIGN this NO_ALIGN sunday this a NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday this a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN this city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 this city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN this a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN this a NO_ALIGN morning morning morning this morning NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [8, 9], [13, 17], [15, 16], [0, 10], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [1, 10], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [11, 17], [4, 6], [6, 8], [13, 14], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "LOS ANGELES", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the air restrictions on flights from city_name0 to city_name1 for the airfare of one_direction_cost0 dollars", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA", "one_direction_cost0": "416"}, "alignment": "NO_ALIGN NO_ALIGN restrictions NO_ALIGN restrictions NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN the NO_ALIGN dollars NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN the NO_ALIGN air NO_ALIGN the NO_ALIGN restrictions NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of dollars NO_ALIGN airfare NO_ALIGN the of air NO_ALIGN airfare NO_ALIGN dollars NO_ALIGN airfare of flights NO_ALIGN are NO_ALIGN air NO_ALIGN are of flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the of flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the of restrictions NO_ALIGN restrictions NO_ALIGN dollars NO_ALIGN restrictions NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [15, 16], [8, 9], [2, 5], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [12, 17], [12, 14], [5, 11], [4, 5], [6, 11], [9, 10], [2, 3], [14, 15], [11, 12], [15, 17], [0, 1], [7, 9], [7, 8], [13, 14], [2, 11], [3, 4]]}], "sql": ["SELECT DISTINCT RESTRICTIONalias0.RESTRICTION_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , RESTRICTION AS RESTRICTIONalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = one_direction_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND RESTRICTIONalias0.RESTRICTION_CODE = FAREalias0.RESTRICTION_CODE ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "416", "location": "unk", "name": "one_direction_cost0", "type": "one_direction_cost"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all flights which leave city_name1 tomorrow and arrive in city_name0 after arrival_time0 o'clock pm", "question-split": "dev", "variables": {"day_number0": "20", "month_number0": "1", "year0": "1991", "arrival_time0": "1700", "city_name0": "BALTIMORE", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN all o'clock NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN all NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow pm tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow pm tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow pm tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow pm o'clock NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 pm o'clock NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN pm flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in pm flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN pm o'clock NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN pm in NO_ALIGN in NO_ALIGN all NO_ALIGN in pm in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN pm o'clock NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [0, 16], [12, 16], [16, 17], [1, 2], [6, 7], [12, 13], [10, 12], [13, 16], [3, 4], [2, 16], [4, 5], [4, 16], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [0, 1], [5, 16], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1700", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show flights class_type0 class on airline_code0 from city_name0 to airport_code0", "question-split": "dev", "variables": {"airport_code0": "SFO", "class_type0": "FIRST", "city_name0": "DALLAS FORT WORTH", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN show NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN to NO_ALIGN flights NO_ALIGN to NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN class NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN class NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN on class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN on class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 on class NO_ALIGN class NO_ALIGN class NO_ALIGN class on airline_code0 NO_ALIGN show NO_ALIGN class NO_ALIGN show on airline_code0 NO_ALIGN to NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN on NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [6, 10], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SFO", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "DALLAS FORT WORTH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "display all flights from city_name2 to city_name0 on airline_code0 stopping over in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "city_name1": "DENVER", "city_name2": "TORONTO", "airline_code0": "US"}, "alignment": "NO_ALIGN all all NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN all NO_ALIGN all NO_ALIGN city_name2 NO_ALIGN stopping NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in display flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN display city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in display city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN display stopping NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in display all NO_ALIGN city_name2 NO_ALIGN stopping NO_ALIGN city_name2 display all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN display in NO_ALIGN in NO_ALIGN all NO_ALIGN in display in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN display all NO_ALIGN from NO_ALIGN all NO_ALIGN in NO_ALIGN display all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [3, 5], [5, 7], [0, 13], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SAN DIEGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "TORONTO", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all the flights that depart from airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN all depart NO_ALIGN all NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN all NO_ALIGN depart NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN that depart NO_ALIGN from NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"text": "show me the flights from airport_code0 to other airports", "question-split": "dev", "variables": {"airport_code0": "DAL"}, "alignment": "NO_ALIGN airports flights NO_ALIGN me NO_ALIGN airport_code0 NO_ALIGN other NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN other NO_ALIGN airports NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN from flights NO_ALIGN from NO_ALIGN other NO_ALIGN airports NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ;"], "variables": [{"example": "MKE", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a list of the round trip flights between city_name1 and city_name0 on the day_number0 or the day_number1 of month_number0", "question-split": "dev", "variables": {"day_number0": "27", "month_number0": "12", "year0": "1991", "day_number1": "28", "city_name0": "ORLANDO", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN trip NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN round NO_ALIGN on NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 or month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 or month_number0 NO_ALIGN day_number0 NO_ALIGN day_number1 NO_ALIGN day_number0 or round NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or trip NO_ALIGN round NO_ALIGN round NO_ALIGN round or trip NO_ALIGN round round round NO_ALIGN or trip NO_ALIGN round NO_ALIGN trip NO_ALIGN round or flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 or flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN list NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN or or day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number1 NO_ALIGN month_number0 NO_ALIGN or or day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 or day_number1 NO_ALIGN month_number0 NO_ALIGN month_number0 or month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 or month_number0 NO_ALIGN day_number0 NO_ALIGN day_number1 NO_ALIGN day_number0 or round NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 or trip NO_ALIGN round NO_ALIGN round NO_ALIGN round or trip NO_ALIGN round round round NO_ALIGN or trip NO_ALIGN round NO_ALIGN trip NO_ALIGN round or flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 or flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN NO_ALIGN or round NO_ALIGN round round round NO_ALIGN or round NO_ALIGN round NO_ALIGN round NO_ALIGN round or flights NO_ALIGN trip NO_ALIGN round NO_ALIGN trip NO_ALIGN or between NO_ALIGN between NO_ALIGN between NO_ALIGN between or between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN or flights NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list NO_ALIGN or flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between or flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN or flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[18, 22], [10, 11], [5, 6], [8, 9], [15, 16], [2, 22], [18, 19], [11, 14], [14, 22], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [6, 10], [6, 22], [5, 22], [3, 4], [18, 20], [15, 22], [20, 22], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [3, 5], [0, 1], [15, 17], [17, 18], [1, 22], [3, 22], [13, 14], [21, 22], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DATE_DAYalias1.DAY_NUMBER = day_number1 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) ) AND FAREalias1.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "28", "location": "unk", "name": "day_number1", "type": "day_number"}, {"example": "ORLANDO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all flights from city_name1 to city_name0 with more than stops0 stops", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "stops0": "3", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN all all NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN stops NO_ALIGN flights NO_ALIGN stops than flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than all NO_ALIGN stops0 NO_ALIGN stops0 than all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN than all NO_ALIGN stops NO_ALIGN all NO_ALIGN stops than all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [7, 12], [5, 6], [8, 9], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.STOPS > stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what time are flights from city_name0 to city_name1 on airline_code0", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN from NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 time flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN time flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 time flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN time airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN time airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN time airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [3, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a to know the type of aircraft leaving from city_name1 bound to city_name0 on friday this week", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "25", "month_number0": "6", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN on NO_ALIGN friday NO_ALIGN on NO_ALIGN friday NO_ALIGN aircraft NO_ALIGN type NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like this city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN this friday NO_ALIGN on NO_ALIGN on this friday NO_ALIGN on NO_ALIGN on this friday NO_ALIGN on NO_ALIGN on this friday NO_ALIGN friday NO_ALIGN friday NO_ALIGN friday this of NO_ALIGN on NO_ALIGN friday NO_ALIGN on this of NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN this city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like this city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN this type NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft this of NO_ALIGN aircraft NO_ALIGN type NO_ALIGN aircraft this of NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [16, 18], [18, 20], [11, 13], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [11, 12], [19, 20], [0, 1], [7, 8], [17, 18], [6, 8], [14, 16], [13, 14], [6, 20], [5, 20], [16, 20], [3, 4]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "25", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much is an economy ticket from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "30", "month_number0": "9", "year0": "1991", "city_name1": "WASHINGTON", "economy0": "YES"}, "alignment": "NO_ALIGN NO_ALIGN much NO_ALIGN much NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN is NO_ALIGN much NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN much NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 an city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 an to NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 an to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN an how NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 an how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 an month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 an much NO_ALIGN economy NO_ALIGN month_number0 NO_ALIGN economy an much NO_ALIGN much NO_ALIGN much NO_ALIGN much an to NO_ALIGN ticket NO_ALIGN much NO_ALIGN ticket an to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN an economy NO_ALIGN economy NO_ALIGN NO_ALIGN economy NO_ALIGN an much NO_ALIGN economy NO_ALIGN economy NO_ALIGN economy NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [6, 10], [8, 10], [2, 13], [3, 6], [3, 4], [11, 13], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "30", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "9", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "YES", "location": "unk", "name": "economy0", "type": "economy"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the class_type0 fares for flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "DENVER", "class_type0": "COACH"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 for flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 for flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN for fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 for fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares for flights NO_ALIGN are NO_ALIGN fares NO_ALIGN are for flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the for flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [7, 9]]}, {"text": "show me one more time the class_type0 class fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN show NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 time city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN time city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 time city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN time class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN time fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 time fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares time show NO_ALIGN one NO_ALIGN fares NO_ALIGN one time show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the time show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [0, 13], [7, 8], [2, 4]]}, {"text": "show me the fares for a class_type0 class ticket from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 ticket city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 ticket city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN ticket fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 ticket fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares ticket a NO_ALIGN a NO_ALIGN fares NO_ALIGN a ticket a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the ticket a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [0, 13], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.CLASS_TYPE = \"class_type0\" ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) ) ) ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "from city_name0 to city_name1 a nonstop airline_code0 and fare", "question-split": "dev", "variables": {"city_name0": "LAS VEGAS", "city_name1": "NEW YORK", "stops0": "0", "airline_code0": "TW"}, "alignment": "NO_ALIGN NO_ALIGN nonstop NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 and city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 and city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and nonstop NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN and nonstop NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN and nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN and fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare and nonstop NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN and nonstop NO_ALIGN a NO_ALIGN fare NO_ALIGN a NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [4, 9], [6, 7], [4, 5], [5, 6], [8, 9], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "LAS VEGAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "NEW YORK", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "TW", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "give me the flights with the fares from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "ORLANDO", "day_number0": "27", "month_number0": "12", "year0": "1991", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 give flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 give flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN give flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 give fares NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 give fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares give fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares give flights NO_ALIGN with NO_ALIGN fares NO_ALIGN with give flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "ORLANDO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the first flight from city_name0 to airport_name0 airport for tomorrow", "question-split": "dev", "variables": {"airport_name0": "STAPLETON", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name0": "BOSTON"}, "alignment": "NO_ALIGN airport to NO_ALIGN to NO_ALIGN airport NO_ALIGN airport NO_ALIGN to NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN airport NO_ALIGN airport_name0 airport_name0 NO_ALIGN airport_name0 NO_ALIGN for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for to NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for to NO_ALIGN to NO_ALIGN airport NO_ALIGN airport NO_ALIGN for airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 for airport NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN for to NO_ALIGN from NO_ALIGN airport NO_ALIGN airport NO_ALIGN for to NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN airport NO_ALIGN airport_name0 NO_ALIGN to NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN airport_name0 NO_ALIGN airport_name0 airport_name0 NO_ALIGN airport_name0 NO_ALIGN for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for first NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow for first NO_ALIGN to NO_ALIGN airport_name0 NO_ALIGN airport NO_ALIGN for to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 for to NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN for first NO_ALIGN from NO_ALIGN to NO_ALIGN airport NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [2, 5], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_NAME LIKE \"airport_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( AIRPORTalias1.AIRPORT_NAME LIKE \"airport_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;"], "variables": [{"example": "STAPLETON", "location": "unk", "name": "airport_name0", "type": "airport_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "okay what i would like to know is does airline_code0 flight flight_number0 from city_name2 to city_name1 with a stop in city_name0 serve meal_description0 that 's airline_code0 flight flight_number0 or flight_number1", "question-split": "dev", "variables": {"flight_number0": "505", "flight_number1": "163", "meal_description0": "DINNER", "city_name0": "ST. LOUIS", "city_name1": "LAS VEGAS", "city_name2": "CHARLOTTE", "airline_code0": "TW"}, "alignment": "NO_ALIGN does okay NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN okay NO_ALIGN NO_ALIGN NO_ALIGN 's NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN okay NO_ALIGN with NO_ALIGN flight_number0 NO_ALIGN with or okay NO_ALIGN with NO_ALIGN flight_number0 NO_ALIGN with or 's NO_ALIGN with NO_ALIGN flight_number0 NO_ALIGN flight_number0 or 's NO_ALIGN flight_number0 NO_ALIGN flight_number0 or flight NO_ALIGN with NO_ALIGN flight_number0 NO_ALIGN flight_number0 or flight NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN or meal_description0 NO_ALIGN meal_description0 NO_ALIGN okay NO_ALIGN meal_description0 or meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN or city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in or city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN or stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in or okay NO_ALIGN with NO_ALIGN stop NO_ALIGN with NO_ALIGN or city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in or city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN or okay NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN or in NO_ALIGN in NO_ALIGN in NO_ALIGN in or in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN or okay NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN or okay NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [22, 23], [28, 29], [5, 6], [8, 9], [15, 16], [18, 19], [3, 7], [1, 2], [16, 17], [25, 30], [6, 7], [12, 13], [20, 21], [25, 26], [27, 28], [19, 21], [17, 19], [12, 14], [4, 5], [29, 30], [9, 10], [8, 30], [2, 3], [14, 15], [11, 12], [19, 20], [23, 24], [0, 1], [2, 7], [7, 8], [17, 18], [26, 27], [14, 16], [13, 14], [21, 22], [5, 7], [17, 30], [24, 25], [7, 30], [1, 7], [3, 4], [22, 30]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_LEG AS FLIGHT_LEGalias0 , FLIGHT_LEG AS FLIGHT_LEGalias1 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias1.FLIGHT_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias2.FLIGHT_ID = FLIGHT_LEGalias1.LEG_FLIGHT AND FLIGHTalias2.FLIGHT_NUMBER = flight_number1 ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "505", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "163", "location": "unk", "name": "flight_number1", "type": "flight_number"}, {"example": "DINNER", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "ST. LOUIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "LAS VEGAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "TW", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "give me the flights from city_name1 to city_name0 on airline_code0 that have meals early saturday morning", "question-split": "dev", "variables": {"day_number0": "26", "month_number0": "7", "year0": "1991", "city_name0": "SEATTLE", "city_name1": "CHICAGO", "departure_time0": "0", "departure_time1": "800", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN me NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN on NO_ALIGN on NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN saturday NO_ALIGN on NO_ALIGN on NO_ALIGN saturday NO_ALIGN saturday NO_ALIGN on NO_ALIGN on give saturday NO_ALIGN on NO_ALIGN on give saturday NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN give early NO_ALIGN meals NO_ALIGN NO_ALIGN NO_ALIGN meals NO_ALIGN meals NO_ALIGN that NO_ALIGN meals NO_ALIGN NO_ALIGN give early NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN have NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN give early NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN have NO_ALIGN NO_ALIGN NO_ALIGN have NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN give early NO_ALIGN morning morning morning give morning NO_ALIGN give early NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [4, 8], [5, 6], [8, 9], [15, 16], [0, 16], [1, 2], [6, 7], [12, 13], [8, 10], [13, 16], [3, 4], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.MEAL_CODE IN ( SELECT FOOD_SERVICEalias0.MEAL_CODE FROM FOOD_SERVICE AS FOOD_SERVICEalias0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "1000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "CHICAGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SEATTLE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please list all flights that leave city_name0 before departure_time0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "DENVER", "departure_time0": "1200", "airline_code0": "NW"}, "alignment": "NO_ALIGN all leave NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN all NO_ALIGN leave NO_ALIGN NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 leave please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leave leave NO_ALIGN departure_time0 NO_ALIGN departure_time0 leave leave NO_ALIGN list NO_ALIGN all NO_ALIGN list NO_ALIGN leave leave NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [1, 11], [3, 4], [2, 4], [4, 11]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "NW", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the cities from which airline_code0 flies", "question-split": "dev", "variables": {"airline_code0": "NW"}, "alignment": "NO_ALIGN NO_ALIGN flies NO_ALIGN which NO_ALIGN from NO_ALIGN flies NO_ALIGN from NO_ALIGN flies NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN flies NO_ALIGN which NO_ALIGN flies NO_ALIGN which which airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN which airline_code0 NO_ALIGN from NO_ALIGN flies NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 7], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT CITYalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_CODE IN ( SELECT AIRPORT_SERVICEalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.AIRPORT_CODE IN ( SELECT FLIGHTalias0.FROM_AIRPORT FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) ) ;", "SELECT DISTINCT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_CODE IN ( SELECT AIRPORT_SERVICEalias0.CITY_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.AIRPORT_CODE IN ( SELECT FLIGHTalias0.TO_AIRPORT FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) ) ;"], "variables": [{"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights are there on wednesday evening from city_name0 to airport_code0", "question-split": "dev", "variables": {"airport_code0": "SFO", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "DENVER", "departure_time0": "1800", "departure_time1": "2200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN to NO_ALIGN there NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday evening flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on evening flights NO_ALIGN to NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN evening flights NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 evening flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN evening flights NO_ALIGN from NO_ALIGN there NO_ALIGN airport_code0 NO_ALIGN evening flights NO_ALIGN evening evening evening evening evening NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [7, 11], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "SFO", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to see the cheapest flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN want NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see want flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see want flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want want NO_ALIGN from NO_ALIGN flights NO_ALIGN the want want NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN want cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN see NO_ALIGN cheapest NO_ALIGN see want cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want cheapest NO_ALIGN see NO_ALIGN cheapest NO_ALIGN see want cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest want cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest want cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the want cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN want cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest want want NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [4, 11], [7, 9]]}, {"text": "give me the cheapest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "CHARLOTTE", "city_name1": "LONG BEACH"}, "alignment": "NO_ALIGN NO_ALIGN me NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN me NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 give city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give me NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the give me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN give cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 give cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 give cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest give cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest give cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the give cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN give cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest give me NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "what are the cheapest flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN are cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 are cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 are cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest are cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest are cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN the are cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN the NO_ALIGN are cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest are flights NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "can you tell me the cheapest flight between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN me NO_ALIGN you NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN tell NO_ALIGN between NO_ALIGN between NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN me NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN tell NO_ALIGN tell NO_ALIGN between NO_ALIGN tell you tell NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you between NO_ALIGN tell NO_ALIGN between NO_ALIGN tell you between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you me NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN you you me NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN you NO_ALIGN you cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN between NO_ALIGN cheapest NO_ALIGN between NO_ALIGN cheapest NO_ALIGN between NO_ALIGN cheapest NO_ALIGN between NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN you cheapest NO_ALIGN tell NO_ALIGN cheapest NO_ALIGN tell you cheapest NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest you cheapest NO_ALIGN you NO_ALIGN cheapest NO_ALIGN you you cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN you you cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN you NO_ALIGN you cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest you me NO_ALIGN you NO_ALIGN cheapest NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4], [4, 11]]}, {"text": "can you tell me which flight from city_name0 to city_name1 has the least expensive fare", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN me NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN me NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN tell NO_ALIGN tell NO_ALIGN which NO_ALIGN tell has tell NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has city_name1 NO_ALIGN tell NO_ALIGN city_name1 NO_ALIGN tell has city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN has me NO_ALIGN from NO_ALIGN which NO_ALIGN you has me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN has fare NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN flight NO_ALIGN tell NO_ALIGN flight NO_ALIGN tell has flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has expensive NO_ALIGN tell NO_ALIGN expensive NO_ALIGN tell has expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN has expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN fare has expensive NO_ALIGN you NO_ALIGN expensive NO_ALIGN you has expensive NO_ALIGN from NO_ALIGN flight NO_ALIGN you has expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN you NO_ALIGN has fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare has me NO_ALIGN you NO_ALIGN fare NO_ALIGN you NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [4, 10], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [4, 6], [6, 8], [13, 14], [4, 15], [2, 15], [11, 15], [7, 8]]}, {"text": "what flight from city_name0 to city_name1 is the least expensive flight", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN least NO_ALIGN least NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 city_name1 flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 city_name1 expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least city_name1 expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least city_name1 expensive NO_ALIGN from NO_ALIGN flight NO_ALIGN the city_name1 expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN city_name1 least NO_ALIGN least NO_ALIGN expensive NO_ALIGN least city_name1 to NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 6], [10, 11], [4, 5], [5, 6], [8, 10], [8, 9], [0, 6], [9, 10], [2, 3], [2, 4], [3, 4], [7, 11], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list day_name0 night flights from city_name1 to city_name0", "question-split": "dev", "variables": {"departure_time0": "2359", "departure_time1": "1800", "day_name0": "WEDNESDAY", "city_name0": "SALT LAKE CITY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN night night to city_name1 flights NO_ALIGN night night to NO_ALIGN city_name1 day_name0 NO_ALIGN night NO_ALIGN NO_ALIGN day_name0 NO_ALIGN city_name1 flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN list NO_ALIGN NO_ALIGN flights NO_ALIGN night night night city_name1 flights NO_ALIGN night night night NO_ALIGN city_name1 day_name0 NO_ALIGN night NO_ALIGN NO_ALIGN day_name0 NO_ALIGN city_name1 flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [1, 4], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DAYSalias0.DAY_NAME = \"day_name1\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = \"day_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = \"day_name0\" ) ) OR ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME = \"day_name1\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "2400", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "FRIDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "600", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "SATURDAY", "location": "unk", "name": "day_name1", "type": "day_name"}, {"example": "KANSAS CITY", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ST. PAUL", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "on the flight from city_name1 to city_name0 on airline_code0 leaving at departure_time0 what type of aircraft is used", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1620", "city_name1": "BALTIMORE", "airline_code0": "US"}, "alignment": "NO_ALIGN at aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN aircraft NO_ALIGN used NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 of city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of airline_code0 NO_ALIGN departure_time0 NO_ALIGN departure_time0 of airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN of at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 of at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of airline_code0 NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN of used NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft of airline_code0 NO_ALIGN used NO_ALIGN used NO_ALIGN used of airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [9, 18], [3, 7], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [16, 18], [12, 14], [4, 5], [9, 10], [12, 18], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 8], [7, 9], [17, 18], [14, 16], [13, 14], [5, 7], [1, 18], [3, 4]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1620", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like an early flight from city_name1 to city_name0 monday morning", "question-split": "dev", "variables": {"departure_time0": "0", "departure_time1": "1200", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "CHARLOTTE", "city_name1": "LOS ANGELES"}, "alignment": "NO_ALIGN NO_ALIGN early NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would early NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN would NO_ALIGN flight NO_ALIGN like NO_ALIGN flight NO_ALIGN like would flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday would monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday would early NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday would early NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN would early NO_ALIGN morning morning morning would morning NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [1, 12], [10, 11], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 6], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what does fare code fare_basis_code0 mean", "question-split": "dev", "variables": {"fare_basis_code0": "QX"}, "alignment": "NO_ALIGN code fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN NO_ALIGN fare_basis_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4]]}, {"text": "what does code fare_basis_code0 stand for", "question-split": "dev", "variables": {"fare_basis_code0": "Y"}, "alignment": "NO_ALIGN code stand NO_ALIGN fare_basis_code0 NO_ALIGN fare_basis_code0 NO_ALIGN stand NO_ALIGN stand NO_ALIGN fare_basis_code0 NO_ALIGN NO_ALIGN fare_basis_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.FARE_BASIS_CODE = \"fare_basis_code0\" ;"], "variables": [{"example": "QX", "location": "unk", "name": "fare_basis_code0", "type": "fare_basis_code"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "what is the seating capacity of an aircraft_code0", "question-split": "dev", "variables": {"aircraft_code0": "M80"}, "alignment": "NO_ALIGN aircraft_code0 aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN NO_ALIGN aircraft_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"text": "what is aircraft_code0", "question-split": "dev", "variables": {"aircraft_code0": "73S"}, "alignment": "NO_ALIGN aircraft_code0 aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN aircraft_code0 NO_ALIGN NO_ALIGN aircraft_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"text": "how many passengers can fly on a aircraft_code0", "question-split": "dev", "variables": {"aircraft_code0": "757"}, "alignment": "NO_ALIGN aircraft_code0 passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN NO_ALIGN aircraft_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_CODE = \"aircraft_code0\" ;"], "variables": [{"example": "D9S", "location": "unk", "name": "aircraft_code0", "type": "aircraft_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight from city_name2 to city_name0 with a layover in city_name1 on airline_code0", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "city_name1": "WASHINGTON", "state_code0": "DC", "city_name2": "TORONTO", "airline_code0": "AC"}, "alignment": "NO_ALIGN in airline_code0 NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in need city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN need city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in need city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need city_name2 NO_ALIGN need NO_ALIGN NO_ALIGN a NO_ALIGN need city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in need airline_code0 NO_ALIGN with NO_ALIGN city_name2 NO_ALIGN with need airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN need in NO_ALIGN in NO_ALIGN in NO_ALIGN in need in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN need airline_code0 NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN need airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [9, 13], [4, 6], [6, 8], [13, 14], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND CITYalias2.STATE_CODE = \"state_code0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SAN DIEGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DC", "location": "unk", "name": "state_code0", "type": "state_code"}, {"example": "TORONTO", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "AC", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the last flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 to NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 city_name1 flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 city_name1 last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 last NO_ALIGN from NO_ALIGN flight NO_ALIGN the city_name1 last NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "what is the latest flight i can take from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN i NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN i NO_ALIGN NO_ALIGN city_name0 NO_ALIGN take NO_ALIGN city_name0 NO_ALIGN take i city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i city_name1 NO_ALIGN take NO_ALIGN city_name1 NO_ALIGN take i city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i i NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the i i NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN i i NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN latest NO_ALIGN flight NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN latest NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN take NO_ALIGN flight NO_ALIGN take i flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i latest NO_ALIGN take NO_ALIGN latest NO_ALIGN take i latest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i latest NO_ALIGN from NO_ALIGN flight NO_ALIGN the i latest NO_ALIGN city_name1 NO_ALIGN latest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [8, 12], [7, 8]]}, {"text": "what 's the last flight leaving from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 leaving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the leaving to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN leaving to NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 leaving flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 leaving last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving last NO_ALIGN from NO_ALIGN flight NO_ALIGN the leaving last NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [2, 5], [3, 4]]}, {"text": "i'd like to know the latest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd know city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd know city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd know to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN know to NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN latest NO_ALIGN flight NO_ALIGN NO_ALIGN i'd NO_ALIGN flight NO_ALIGN i'd NO_ALIGN latest NO_ALIGN i'd NO_ALIGN flight NO_ALIGN i'd NO_ALIGN latest NO_ALIGN NO_ALIGN NO_ALIGN latest NO_ALIGN flight NO_ALIGN i'd NO_ALIGN flight NO_ALIGN i'd know flight NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN know latest NO_ALIGN i'd NO_ALIGN latest NO_ALIGN i'd know latest NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN know latest NO_ALIGN from NO_ALIGN flight NO_ALIGN i'd know latest NO_ALIGN city_name1 NO_ALIGN latest NO_ALIGN i'd NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [5, 8], [1, 2], [6, 7], [5, 12], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [1, 12], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "HOUSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN JOSE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the flights from city_name1 to city_name0 on sunday night", "question-split": "dev", "variables": {"departure_time0": "2359", "departure_time1": "1800", "day_number0": "27", "month_number0": "8", "year0": "1991", "departure_time2": "600", "departure_time3": "0", "city_name0": "DALLAS", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN night NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN night night to are flights NO_ALIGN night night to NO_ALIGN are sunday NO_ALIGN sunday NO_ALIGN sunday are sunday NO_ALIGN sunday NO_ALIGN sunday are sunday NO_ALIGN sunday NO_ALIGN sunday are night NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday are flights NO_ALIGN on NO_ALIGN night NO_ALIGN on NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN night night night are flights NO_ALIGN night night night NO_ALIGN are sunday NO_ALIGN sunday NO_ALIGN sunday are sunday NO_ALIGN sunday NO_ALIGN sunday are sunday NO_ALIGN sunday NO_ALIGN sunday are night NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday are flights NO_ALIGN on NO_ALIGN night NO_ALIGN on NO_ALIGN NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time2 AND departure_time3 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "2359", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2000", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "300", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "LONG BEACH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "COLUMBUS", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what does restriction restriction_code0", "question-split": "dev", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN does restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4]]}, {"text": "explain the restriction restriction_code0", "question-split": "dev", "variables": {"restriction_code0": "AP/57"}, "alignment": "NO_ALIGN NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN restriction_code0 NO_ALIGN restriction_code0 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [0, 4], [3, 4]]}, {"text": "what does the restriction ap58 mean", "question-split": "dev", "variables": {"restriction_code0": "AP/58"}, "alignment": "NO_ALIGN does ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN restriction NO_ALIGN ap58 NO_ALIGN ap58 NO_ALIGN restriction NO_ALIGN NO_ALIGN restriction NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT RESTRICTIONalias0.ADVANCE_PURCHASE , RESTRICTIONalias0.APPLICATION , RESTRICTIONalias0.MAXIMUM_STAY , RESTRICTIONalias0.MINIMUM_STAY , RESTRICTIONalias0.NO_DISCOUNTS , RESTRICTIONalias0.RESTRICTION_CODE , RESTRICTIONalias0.SATURDAY_STAY_REQUIRED , RESTRICTIONalias0.STOPOVERS FROM RESTRICTION AS RESTRICTIONalias0 WHERE RESTRICTIONalias0.RESTRICTION_CODE = \"restriction_code0\" ;"], "variables": [{"example": "AP/57", "location": "unk", "name": "restriction_code0", "type": "restriction_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "now i'd like flights from city_name0 to city_name1 leaving between departure_time1 and departure_time0", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "PITTSBURGH", "departure_time0": "1730", "departure_time1": "1630"}, "alignment": "NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN and NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN between NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN departure_time1 and departure_time0 departure_time1 departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time1 NO_ALIGN departure_time1 between NO_ALIGN i'd NO_ALIGN between NO_ALIGN i'd departure_time1 between NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departure_time1 departure_time1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN departure_time1 flights NO_ALIGN i'd NO_ALIGN flights NO_ALIGN i'd departure_time1 flights NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN departure_time1 departure_time1 NO_ALIGN from NO_ALIGN flights NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [3, 14], [1, 2], [6, 7], [12, 13], [3, 4], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [10, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) ;"], "variables": [{"example": "1900", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is there a round trip flight from city_name2 to city_name1 connecting in city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "DALLAS", "city_name2": "BALTIMORE"}, "alignment": "NO_ALIGN in there NO_ALIGN trip NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN is NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN is NO_ALIGN NO_ALIGN NO_ALIGN there NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in there city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN there city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in there there NO_ALIGN trip NO_ALIGN city_name2 NO_ALIGN trip NO_ALIGN there city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in there city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there there NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN there in NO_ALIGN in NO_ALIGN there NO_ALIGN in there in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN there there NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 4], [11, 13], [2, 6], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8]]}, {"text": "i'd like to make a round trip from city_name0 to city_name2 by way of city_name1", "question-split": "dev", "variables": {"city_name0": "LOS ANGELES", "city_name1": "CHARLOTTE", "city_name2": "NEWARK"}, "alignment": "NO_ALIGN NO_ALIGN by NO_ALIGN trip NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN i'd NO_ALIGN way NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN i'd NO_ALIGN way NO_ALIGN NO_ALIGN NO_ALIGN by NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN i'd of city_name2 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN i'd of by NO_ALIGN trip NO_ALIGN city_name2 NO_ALIGN trip NO_ALIGN of city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd of city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of by NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN of city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd of city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name2 NO_ALIGN of by NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [5, 8], [1, 2], [6, 7], [12, 13], [1, 16], [5, 12], [8, 10], [10, 12], [13, 16], [3, 16], [3, 4], [2, 16], [4, 5], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [14, 16], [13, 14], [7, 8]]}, {"text": "find me all the round trip flights from city_name2 to city_name1 stopping in city_name0", "question-split": "dev", "variables": {"city_name0": "ST. LOUIS", "city_name1": "MILWAUKEE", "city_name2": "BURBANK"}, "alignment": "NO_ALIGN all all NO_ALIGN trip NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN the NO_ALIGN all NO_ALIGN all NO_ALIGN city_name2 NO_ALIGN stopping NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in city_name1 city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN city_name1 stopping NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in city_name1 all NO_ALIGN trip NO_ALIGN stopping NO_ALIGN trip NO_ALIGN city_name1 flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in city_name1 flights NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name1 in NO_ALIGN in NO_ALIGN all NO_ALIGN in city_name1 in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 all NO_ALIGN from NO_ALIGN all NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [2, 7], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_FAREalias0.FLIGHT_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FARE_ID IN ( SELECT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.ROUND_TRIP_COST IS NOT NULL ) ) ) AND FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_STOPalias0.FLIGHT_ID FROM FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE FLIGHT_STOPalias0.STOP_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name0\" ) ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name2\" ) ) ) ;"], "variables": [{"example": "DALLAS FORT WORTH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much does it cost to fly from city_name1 to city_name0 on a day_name0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_name0": "SATURDAY", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN does cost NO_ALIGN much NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN city_name1 NO_ALIGN cost NO_ALIGN on NO_ALIGN cost NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name1 NO_ALIGN cost NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 it city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN it day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN it fly NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 it fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN it how NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 it how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN it day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN it cost NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 it cost NO_ALIGN much NO_ALIGN cost NO_ALIGN much it cost NO_ALIGN much NO_ALIGN cost NO_ALIGN much it fly NO_ALIGN a NO_ALIGN cost NO_ALIGN a it fly NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 14], [7, 8], [0, 2]]}, {"text": "show me fares leaving on day_name0 from city_name1 to go to city_name0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "day_name0": "TUESDAY", "city_name1": "DENVER"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go leaving go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving go NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN leaving go NO_ALIGN go NO_ALIGN go NO_ALIGN go leaving go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN leaving fares NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 leaving fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares leaving fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares leaving go NO_ALIGN me NO_ALIGN fares NO_ALIGN me leaving go NO_ALIGN from NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [0, 12], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [4, 6], [6, 8], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = \"day_name0\" ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME = \"day_name0\" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ) ) ) ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SATURDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the schedule of ground transportation from the airport in city_name0 into downtown", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN into NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN of NO_ALIGN downtown NO_ALIGN transportation NO_ALIGN into NO_ALIGN into NO_ALIGN airport NO_ALIGN into of transportation NO_ALIGN in NO_ALIGN airport NO_ALIGN in of transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN of of NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN of transportation NO_ALIGN into NO_ALIGN into NO_ALIGN into of transportation NO_ALIGN in NO_ALIGN of NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 7], [7, 8], [2, 4]]}, {"text": "what ground transportation is there from the airport in city_name0 to downtown", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN airport NO_ALIGN to NO_ALIGN airport NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN there NO_ALIGN downtown NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport there transportation NO_ALIGN in NO_ALIGN airport NO_ALIGN in there transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN there there NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN there transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport there transportation NO_ALIGN in NO_ALIGN there NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [5, 10], [6, 8], [10, 11], [4, 5], [5, 6], [6, 7], [11, 12], [10, 12], [8, 10], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like the flight number and the time for the cheapest fare that is the least expensive class_type0 class fare from city_name1 to city_name0 leaving after departure_time0 monday night", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "departure_time0": "2000", "city_name0": "PITTSBURGH", "city_name1": "SAN FRANCISCO", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN that NO_ALIGN night NO_ALIGN that NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN monday NO_ALIGN least NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN monday NO_ALIGN and NO_ALIGN cheapest NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number and NO_ALIGN monday NO_ALIGN least NO_ALIGN monday number cheapest NO_ALIGN night NO_ALIGN departure_time0 number cheapest NO_ALIGN monday NO_ALIGN and NO_ALIGN monday NO_ALIGN number cheapest NO_ALIGN like NO_ALIGN cheapest NO_ALIGN like number cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN number cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN that NO_ALIGN number cheapest NO_ALIGN like NO_ALIGN cheapest NO_ALIGN like number cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN number class_type0 NO_ALIGN monday NO_ALIGN monday number class_type0 NO_ALIGN monday NO_ALIGN monday number class_type0 NO_ALIGN monday NO_ALIGN monday number class_type0 NO_ALIGN monday NO_ALIGN class_type0 NO_ALIGN monday number class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN monday number class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 number cheapest NO_ALIGN fare NO_ALIGN class NO_ALIGN fare number cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare number cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN that NO_ALIGN number class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN number class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN number monday NO_ALIGN monday NO_ALIGN monday number monday NO_ALIGN monday NO_ALIGN monday number monday NO_ALIGN monday NO_ALIGN monday number monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday number class NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday NO_ALIGN least NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN fare NO_ALIGN least NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday number least NO_ALIGN night NO_ALIGN departure_time0 number least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday NO_ALIGN number least NO_ALIGN like NO_ALIGN least NO_ALIGN like number least NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN number least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN that NO_ALIGN number least NO_ALIGN like NO_ALIGN least NO_ALIGN like number least NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN monday number least NO_ALIGN monday NO_ALIGN least NO_ALIGN monday number the NO_ALIGN class_type0 NO_ALIGN least NO_ALIGN monday number cheapest NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN class_type0 number least NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare number least NO_ALIGN fare NO_ALIGN least NO_ALIGN fare number least NO_ALIGN from NO_ALIGN least NO_ALIGN that NO_ALIGN number the NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN number cheapest NO_ALIGN class_type0 NO_ALIGN the NO_ALIGN class_type0 NO_ALIGN number fare NO_ALIGN fare NO_ALIGN class NO_ALIGN fare number that NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday number that NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN number that NO_ALIGN night NO_ALIGN departure_time0 NO_ALIGN number city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like number city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN number that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN number city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like number city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN number that NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [14, 30], [5, 6], [28, 29], [26, 28], [8, 9], [15, 16], [18, 19], [13, 30], [1, 2], [16, 17], [10, 30], [6, 7], [1, 30], [28, 30], [12, 13], [20, 21], [2, 30], [25, 26], [3, 6], [3, 4], [27, 28], [16, 18], [23, 25], [15, 25], [4, 5], [29, 30], [10, 13], [21, 23], [3, 30], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [23, 24], [7, 9], [0, 1], [21, 25], [17, 18], [26, 27], [13, 14], [21, 22], [15, 21], [24, 25], [7, 30], [9, 30], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME , FLIGHTalias0.FLIGHT_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( ( ( ( ( DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias2 , FARE_BASIS AS FARE_BASISalias3 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( ( DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.DEPARTURE_TIME > departure_time0 AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE ) AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias3.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias3.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FARE_BASISalias2.CLASS_TYPE = \"class_type0\" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias2.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "2000", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the total number of flights to all airports by airline_code0", "question-split": "dev", "variables": {"airline_code0": "DL"}, "alignment": "NO_ALIGN total NO_ALIGN airports by NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN by NO_ALIGN by NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [10, 11], [6, 7], [4, 5], [5, 6], [1, 4], [9, 10], [8, 9], [0, 11], [9, 11], [2, 3], [1, 9], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT COUNT( DISTINCT FLIGHTalias0.FLIGHT_ID ) FROM AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all flights on thursday from city_name1 to city_name0 which arrive in city_name0 before arrival_time0 and serve a meal", "question-split": "dev", "variables": {"day_number0": "24", "month_number0": "5", "year0": "1991", "arrival_time0": "1700", "city_name0": "OAKLAND", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN all arrive NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN all NO_ALIGN arrive NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday which thursday NO_ALIGN thursday NO_ALIGN thursday which thursday NO_ALIGN thursday NO_ALIGN thursday which thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday which arrive NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on which meal NO_ALIGN meal NO_ALIGN arrive NO_ALIGN meal NO_ALIGN which arrive NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 NO_ALIGN which flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in which flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN which arrive NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN which in NO_ALIGN in NO_ALIGN all NO_ALIGN in which in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which arrive NO_ALIGN from NO_ALIGN all NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [0, 20], [4, 8], [5, 6], [17, 20], [8, 9], [15, 16], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [8, 10], [3, 4], [18, 20], [12, 14], [4, 5], [2, 20], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [0, 1], [17, 18], [4, 6], [6, 8], [14, 16], [13, 14], [11, 20], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1700", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like to leave around 7 o'clock in the morning", "question-split": "dev", "variables": {"departure_time0": "730", "departure_time1": "630"}, "alignment": "NO_ALIGN in 7 NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN 7 NO_ALIGN 7 NO_ALIGN morning around morning would 7 NO_ALIGN morning around morning NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [1, 11], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ;"], "variables": [{"example": "730", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "630", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all connecting flights on airline_code0 between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "airline_code0": "UA", "connections0": "0"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN all NO_ALIGN between NO_ALIGN all NO_ALIGN between and all NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN between and all NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN and all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN and all NO_ALIGN flights NO_ALIGN flights NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [2, 11], [8, 9], [9, 10], [0, 11], [2, 3], [7, 11], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.CONNECTIONS > connections0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.CONNECTIONS > connections0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "is meal_description0 served on flight airline_code0 flight_number0 from city_name1 to city_name0 coach class", "question-split": "dev", "variables": {"city_name0": "DENVER", "flight_number0": "343", "city_name1": "BOSTON", "airline_code0": "UA", "meal_description0": "BREAKFAST"}, "alignment": "NO_ALIGN NO_ALIGN served NO_ALIGN served NO_ALIGN served NO_ALIGN meal_description0 NO_ALIGN served NO_ALIGN served NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN meal_description0 NO_ALIGN served NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 on airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN on served NO_ALIGN meal_description0 NO_ALIGN airline_code0 NO_ALIGN meal_description0 on served NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [9, 13], [6, 7], [7, 8], [10, 11], [4, 5], [5, 6], [10, 13], [11, 12], [12, 13], [8, 9], [9, 10], [2, 13], [2, 3], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FOOD_SERVICEalias0.COMPARTMENT , FOOD_SERVICEalias0.MEAL_CODE , FOOD_SERVICEalias0.MEAL_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "343", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "hi i need to get a flight from city_name1 to city_name0 departing before departure_time0", "question-split": "dev", "variables": {"city_name0": "SALT LAKE CITY", "departure_time0": "1000", "city_name1": "MEMPHIS"}, "alignment": "NO_ALIGN NO_ALIGN before NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN NO_ALIGN city_name1 NO_ALIGN get NO_ALIGN city_name1 NO_ALIGN get need city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need before NO_ALIGN departure_time0 NO_ALIGN departure_time0 need before NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN need get NO_ALIGN get NO_ALIGN city_name0 NO_ALIGN get need get NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need before NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [7, 8], [9, 12]]}, {"text": "please give me a flight from city_name1 to city_name0 before departure_time0 in the morning", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN in before NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in give city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN give before NO_ALIGN morning NO_ALIGN departure_time0 give before NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN give in NO_ALIGN in NO_ALIGN please NO_ALIGN in give in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give before NO_ALIGN from NO_ALIGN please NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [6, 7], [12, 13], [1, 14], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [3, 9], [2, 3], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "please list all the flights from city_name1 to city_name0 leaving before departure_time0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "1000", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 leaving flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving all NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN leaving please NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 leaving please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [9, 10], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "please give me all flights from city_name1 to city_name0 before departure_time0", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "departure_time0": "1200", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 give flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give all NO_ALIGN departure_time0 NO_ALIGN departure_time0 give all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN give please NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 give please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [4, 5], [9, 10], [3, 9], [2, 3], [7, 9], [0, 1], [3, 5], [5, 7], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what are the flights from city_name1 to city_name0 on airline_code0 that arrive around 10pm", "question-split": "dev", "variables": {"arrival_time0": "2230", "arrival_time1": "2130", "city_name0": "CLEVELAND", "city_name1": "ORLANDO", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN around NO_ALIGN that NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN around NO_ALIGN arrive around arrive are around NO_ALIGN arrive around around NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are around NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN that NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are around NO_ALIGN from NO_ALIGN flights NO_ALIGN that NO_ALIGN are around NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [1, 15], [10, 15], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [8, 10], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [7, 8], [12, 15], [4, 6], [6, 8], [13, 14], [2, 15], [11, 15], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.ARRIVAL_TIME >= arrival_time1 ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "1130", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "1030", "location": "unk", "name": "arrival_time1", "type": "arrival_time"}, {"example": "HOUSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "INDIANAPOLIS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "TW", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show class_type0 class fares on airline_code0 from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "TORONTO", "class_type0": "BUSINESS", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN on fares NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 on fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN on airline_code0 NO_ALIGN show NO_ALIGN fares NO_ALIGN show NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [8, 10], [1, 4], [8, 9], [9, 10], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND ( FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights go from city_name1 to city_name0 after departure_time0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "departure_time0": "1700", "city_name1": "NEWARK"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 go flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN go go NO_ALIGN go NO_ALIGN flights NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "all flights from city_name1 to city_name0 leaving after departure_time0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "departure_time0": "200", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 leaving flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving all NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaving all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN leaving all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 leaving all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaving all NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [8, 9], [2, 3], [2, 4], [3, 4], [0, 2], [7, 9]]}, {"text": "what flights go from city_name1 to city_name0 and leave after departure_time0 o'clock", "question-split": "dev", "variables": {"city_name0": "BOSTON", "departure_time0": "1300", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go leave go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leave o'clock NO_ALIGN departure_time0 NO_ALIGN departure_time0 leave o'clock NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN leave go NO_ALIGN go NO_ALIGN leave NO_ALIGN go leave go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leave o'clock NO_ALIGN from NO_ALIGN leave NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [10, 12], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [2, 7], [0, 1], [7, 8], [8, 12], [5, 7], [3, 4], [0, 2], [9, 12]]}, {"text": "i want a flight from city_name1 to city_name0 that leaves after departure_time0", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "departure_time0": "1500", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN that NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 leaves city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaves that NO_ALIGN departure_time0 NO_ALIGN departure_time0 leaves that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN that NO_ALIGN leaves city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 leaves city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN leaves that NO_ALIGN from NO_ALIGN want NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [1, 12], [6, 8], [8, 12], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "LOS ANGELES", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "2226", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "HOUSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "round trip fare from city_name0 to city_name1 less than round_trip_cost0 dollars", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "PHILADELPHIA", "round_trip_cost0": "1000"}, "alignment": "NO_ALIGN NO_ALIGN dollars NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN dollars NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN dollars NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 than city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN than city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 than city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN than dollars NO_ALIGN round NO_ALIGN less than dollars NO_ALIGN fare NO_ALIGN dollars NO_ALIGN fare than to NO_ALIGN trip NO_ALIGN dollars NO_ALIGN trip than to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN than to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN than dollars NO_ALIGN round round round NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 6], [4, 5], [8, 9], [9, 10], [2, 3], [7, 10], [0, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_COST < round_trip_cost0 AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1000", "location": "unk", "name": "round_trip_cost0", "type": "round_trip_cost"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "yes i'm looking for a flight between city_name3 and city_name2 with a stopover in city_name0 city_name1 do you have one of those", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "city_name2": "BOSTON", "city_name3": "OAKLAND"}, "alignment": "NO_ALIGN in do NO_ALIGN with NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN do NO_ALIGN between NO_ALIGN city_name2 NO_ALIGN between NO_ALIGN flight NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN between NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN city_name2 NO_ALIGN city_name3 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in looking city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN looking flight NO_ALIGN in NO_ALIGN flight NO_ALIGN in looking flight NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN looking stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in looking city_name3 NO_ALIGN city_name2 NO_ALIGN flight NO_ALIGN in looking do NO_ALIGN with NO_ALIGN stopover NO_ALIGN with looking do NO_ALIGN with NO_ALIGN city_name3 NO_ALIGN with NO_ALIGN looking between NO_ALIGN in NO_ALIGN do NO_ALIGN in looking between NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN looking do NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN looking in NO_ALIGN in NO_ALIGN between NO_ALIGN in looking in NO_ALIGN in NO_ALIGN NO_ALIGN city_name3 NO_ALIGN looking do NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[21, 22], [9, 10], [2, 17], [4, 5], [3, 17], [7, 8], [14, 15], [17, 18], [1, 2], [15, 16], [5, 6], [19, 20], [11, 12], [4, 17], [8, 11], [14, 17], [15, 17], [5, 17], [21, 23], [3, 4], [17, 23], [12, 14], [0, 17], [8, 9], [11, 17], [2, 3], [13, 14], [18, 19], [22, 23], [10, 11], [0, 1], [6, 7], [16, 17], [5, 7], [19, 23], [20, 21], [7, 11], [12, 13], [12, 17], [2, 3], [20, 23]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name3\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name3", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what price is a transport_type0 service to city_name0 's airport_code0", "question-split": "dev", "variables": {"airport_code0": "LGA", "city_name0": "NEW YORK", "transport_type0": "LIMOUSINE"}, "alignment": "NO_ALIGN NO_ALIGN service NO_ALIGN transport_type0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN transport_type0 NO_ALIGN service NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN 's city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's service NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 's service NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN 's service NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [9, 10], [8, 9], [2, 3], [3, 6], [7, 10], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ) AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;"], "variables": [{"example": "LGA", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "NEW YORK", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "LIMOUSINE", "location": "unk", "name": "transport_type0", "type": "transport_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which airlines serve city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN city_name0 NO_ALIGN which NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN serve NO_ALIGN city_name0 NO_ALIGN which NO_ALIGN which NO_ALIGN which which city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which serve NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines which serve NO_ALIGN which NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;", "SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE IN ( SELECT FLIGHTalias0.AIRLINE_CODE FROM FLIGHT AS FLIGHTalias0 WHERE ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) OR FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ) ) ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the last flight from city_name2 to city_name0 city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "city_name2": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN the NO_ALIGN city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name1 to NO_ALIGN last NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN last NO_ALIGN last NO_ALIGN NO_ALIGN city_name1 NO_ALIGN last NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN last NO_ALIGN NO_ALIGN the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 city_name1 the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 the NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN city_name0 city_name1 the NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 last NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN the city_name1 last NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN the NO_ALIGN city_name1 last NO_ALIGN city_name0 NO_ALIGN last NO_ALIGN city_name0 city_name1 last NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 last NO_ALIGN from NO_ALIGN last NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name2\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please tell me which airline has the most departures from city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN departures NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN airline NO_ALIGN city_name0 NO_ALIGN which NO_ALIGN city_name0 NO_ALIGN tell NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN tell NO_ALIGN tell NO_ALIGN which NO_ALIGN tell has tell NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has please NO_ALIGN from NO_ALIGN which NO_ALIGN the departures departures please NO_ALIGN airline NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [3, 11], [8, 9], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [9, 10], [2, 3], [3, 5], [0, 1], [7, 8]]}], "sql": ["SELECT DISTINCT COUNT( * ) , FLIGHTalias0.AIRLINE_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE GROUP BY FLIGHTalias0.AIRLINE_CODE ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me flights on month_number0 day_number0 please", "question-split": "dev", "variables": {"day_number0": "26", "month_number0": "9", "year0": "1991"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 on flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [0, 7], [2, 3], [3, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ;"], "variables": [{"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "9", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all flights from city_name1 to city_name0 on airline_code0 which depart on saturday before departure_time0 and include a meal", "question-split": "dev", "variables": {"departure_time0": "1200", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name0": "SEATTLE", "city_name1": "CHICAGO", "airline_code0": "CO"}, "alignment": "NO_ALIGN all depart NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN all NO_ALIGN depart NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN depart NO_ALIGN departure_time0 NO_ALIGN departure_time0 which meal NO_ALIGN meal NO_ALIGN depart NO_ALIGN meal NO_ALIGN which saturday NO_ALIGN on NO_ALIGN on which saturday NO_ALIGN on NO_ALIGN on which saturday NO_ALIGN on NO_ALIGN on which saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN on which depart NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN which flights NO_ALIGN which NO_ALIGN flights NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which depart NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN depart NO_ALIGN which all NO_ALIGN which NO_ALIGN all NO_ALIGN which which all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which depart NO_ALIGN from NO_ALIGN all NO_ALIGN depart NO_ALIGN which depart NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [8, 9], [10, 15], [15, 16], [18, 19], [3, 7], [1, 2], [16, 17], [6, 7], [12, 13], [11, 13], [17, 19], [4, 5], [13, 15], [10, 19], [9, 10], [1, 19], [2, 3], [14, 15], [16, 19], [11, 12], [3, 5], [0, 1], [7, 8], [7, 9], [17, 18], [13, 14], [0, 19], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CHICAGO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the schedule of flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "1", "month_number0": "8", "year0": "1991", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN the NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 of month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 of schedule NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 of schedule NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN of flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 of flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of flights NO_ALIGN flights NO_ALIGN schedule NO_ALIGN schedule of schedule NO_ALIGN flights NO_ALIGN schedule NO_ALIGN flights of schedule NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the flights from city_name1 to city_name0 with stops0 stop", "question-split": "dev", "variables": {"city_name0": "DALLAS", "stops0": "1", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN stops0 NO_ALIGN stops0 city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.STOPS = stops0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1", "location": "unk", "name": "stops0", "type": "stops"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the fare going from city_name1 to city_name0 one way on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "day_number0": "7", "month_number0": "11", "year0": "1991", "city_name1": "BALTIMORE", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN one NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN one NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN going NO_ALIGN fare NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 going city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN going month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 going going NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 going going NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN going city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 going city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 going fare NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 going one NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare going one NO_ALIGN fare NO_ALIGN one NO_ALIGN fare going going NO_ALIGN one NO_ALIGN one NO_ALIGN one going going NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN going one NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [7, 11], [1, 2], [6, 7], [12, 13], [1, 14], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "7", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "11", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the flights from city_name2 to city_name0 via city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DALLAS", "city_name2": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN via NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name2 NO_ALIGN via NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 via NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN list city_name1 flights NO_ALIGN via NO_ALIGN via NO_ALIGN via city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [3, 5], [1, 3], [6, 7], [7, 8], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [3, 4], [7, 9]]}, {"text": "do you have a flight from city_name2 to city_name0 that will stop in city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "WASHINGTON", "city_name2": "ATLANTA"}, "alignment": "NO_ALIGN in that NO_ALIGN stop NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN do NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN do NO_ALIGN in NO_ALIGN do NO_ALIGN in will do NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN will city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in will city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN will stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in will that NO_ALIGN stop NO_ALIGN stop NO_ALIGN stop will that NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN will in NO_ALIGN in NO_ALIGN have NO_ALIGN in will in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN will that NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [3, 14], [1, 2], [6, 7], [12, 13], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [3, 5], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "list flights from city_name2 to city_name0 via city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DALLAS", "city_name2": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN via NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name2 NO_ALIGN via NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 city_name1 city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 via NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN list city_name1 flights NO_ALIGN via NO_ALIGN via NO_ALIGN via city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "i'd like a ticket from city_name2 to city_name0 with a stopover in city_name1 is this possible", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "city_name2": "DENVER"}, "alignment": "NO_ALIGN in a NO_ALIGN with NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd this city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN this city_name2 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN i'd this city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN this stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in this a NO_ALIGN with NO_ALIGN stopover NO_ALIGN with this a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN this in NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd this in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN this a NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 17], [15, 16], [8, 9], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [9, 10], [14, 15], [2, 3], [2, 14], [11, 12], [2, 17], [3, 5], [0, 1], [7, 9], [15, 17], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "can i go from city_name2 to city_name0 with a stopover in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DENVER", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN in go NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN NO_ALIGN go NO_ALIGN in NO_ALIGN go NO_ALIGN in go go NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN go city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in go city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in go go NO_ALIGN with NO_ALIGN stopover NO_ALIGN with go go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN go in NO_ALIGN in NO_ALIGN go NO_ALIGN in go in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN go go NO_ALIGN from NO_ALIGN go NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [8, 12], [5, 7], [7, 8]]}, {"text": "in the month of december are there any flights from city_name2 to city_name0 that stop in city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "BOSTON", "city_name2": "ATLANTA"}, "alignment": "NO_ALIGN in that NO_ALIGN stop NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in any flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN any city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in any city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in any that NO_ALIGN stop NO_ALIGN stop NO_ALIGN stop any that NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN any in NO_ALIGN in NO_ALIGN there NO_ALIGN in any in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN any that NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[14, 17], [1, 3], [10, 11], [5, 6], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [1, 5], [9, 11], [3, 4], [11, 13], [4, 5], [9, 10], [0, 5], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [7, 9], [15, 17], [13, 14], [7, 17], [7, 8]]}, {"text": "i would like a flight from city_name2 to city_name0 that stops in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "city_name1": "KANSAS CITY", "city_name2": "TORONTO"}, "alignment": "NO_ALIGN in that NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN NO_ALIGN city_name1 NO_ALIGN stops NO_ALIGN city_name1 NO_ALIGN stops would city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN would city_name2 NO_ALIGN stops NO_ALIGN city_name2 NO_ALIGN stops would city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would stops NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in would that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN city_name2 would that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN would in NO_ALIGN stops NO_ALIGN in NO_ALIGN stops would in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN would that NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [11, 13], [3, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [3, 5], [5, 7], [7, 13], [7, 8]]}, {"text": "i would like a ticket leaving from city_name2 colorado to city_name0 georgia with a stop in city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "PITTSBURGH", "city_name2": "DENVER"}, "alignment": "NO_ALIGN in a NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in would city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN would city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in would city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in would a NO_ALIGN with NO_ALIGN stop NO_ALIGN with would a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN would in NO_ALIGN in NO_ALIGN in NO_ALIGN in would in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN would a NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [1, 17], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [5, 12], [10, 12], [12, 17], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [7, 9], [0, 1], [3, 5], [15, 17], [7, 8], [13, 14], [3, 4], [9, 12]]}, {"text": "i'd like to go from city_name2 to city_name0 with a stop in city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "DALLAS", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN in go NO_ALIGN with NO_ALIGN i'd NO_ALIGN go NO_ALIGN i'd NO_ALIGN go NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN go NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN go NO_ALIGN i'd NO_ALIGN go NO_ALIGN i'd like go NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN like city_name2 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN i'd like city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in like go NO_ALIGN with NO_ALIGN stop NO_ALIGN with like go NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN in NO_ALIGN like in NO_ALIGN i'd NO_ALIGN go NO_ALIGN i'd like in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN like go NO_ALIGN from NO_ALIGN go NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "show me the flights from city_name2 to city_name0 with stop in city_name1", "question-split": "dev", "variables": {"city_name0": "LOS ANGELES", "city_name1": "MILWAUKEE", "city_name2": "NEW YORK"}, "alignment": "NO_ALIGN in flights NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN flights NO_ALIGN in NO_ALIGN flights NO_ALIGN in city_name1 flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN city_name1 city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in city_name1 city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in city_name1 flights NO_ALIGN with NO_ALIGN stop NO_ALIGN with city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name1 in NO_ALIGN in NO_ALIGN flights NO_ALIGN in city_name1 in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [6, 8], [8, 12], [7, 8], [2, 4], [9, 12]]}, {"text": "i want a flight from city_name2 to city_name0 that stops in city_name1 are there flights", "question-split": "dev", "variables": {"city_name0": "SAN DIEGO", "city_name1": "ST. LOUIS", "city_name2": "TORONTO"}, "alignment": "NO_ALIGN in that NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN flights NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN NO_ALIGN flights NO_ALIGN stops NO_ALIGN flights NO_ALIGN stops there flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN there city_name2 NO_ALIGN stops NO_ALIGN city_name2 NO_ALIGN stops there city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN there stops NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in there that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN city_name2 there that NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN there in NO_ALIGN stops NO_ALIGN there NO_ALIGN stops there in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN there that NO_ALIGN from NO_ALIGN there NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [1, 15], [8, 9], [2, 12], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [14, 15], [2, 3], [6, 12], [11, 12], [0, 1], [4, 6], [8, 12], [13, 14], [2, 15], [7, 8], [2, 4], [9, 12]]}, {"text": "i'd like to take a flight from city_name2 stop in city_name0 and with my final destination as city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO", "city_name2": "WASHINGTON"}, "alignment": "NO_ALIGN in a NO_ALIGN with NO_ALIGN i'd NO_ALIGN in NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN NO_ALIGN city_name1 NO_ALIGN take NO_ALIGN city_name1 NO_ALIGN take like city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN like city_name2 NO_ALIGN take NO_ALIGN city_name2 NO_ALIGN take like city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in like a NO_ALIGN with NO_ALIGN stop NO_ALIGN with like a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN like in NO_ALIGN take NO_ALIGN in NO_ALIGN take like in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN like a NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [15, 16], [8, 9], [4, 12], [18, 19], [1, 2], [16, 17], [2, 19], [6, 7], [4, 19], [12, 13], [5, 12], [10, 12], [8, 10], [7, 10], [17, 19], [4, 5], [14, 19], [9, 10], [1, 19], [2, 3], [3, 19], [14, 15], [13, 19], [11, 12], [0, 1], [7, 8], [17, 18], [13, 14], [5, 7], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) OR ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_ID IN ( SELECT FLIGHT_STOPalias0.FLIGHT_ID FROM FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE FLIGHT_STOPalias0.STOP_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name2\" ) ) ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "do you have the fare for traveling from airport_code0 airport to city_name0 downtown", "question-split": "dev", "variables": {"airport_code0": "OAK", "city_name0": "OAKLAND"}, "alignment": "NO_ALIGN airport traveling NO_ALIGN downtown NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN city_name0 NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN traveling NO_ALIGN airport_code0 NO_ALIGN airport NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN for downtown NO_ALIGN city_name0 NO_ALIGN NO_ALIGN downtown NO_ALIGN for traveling NO_ALIGN airport NO_ALIGN airport_code0 NO_ALIGN airport for traveling NO_ALIGN do NO_ALIGN downtown NO_ALIGN do NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [7, 10], [3, 4], [11, 13], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [6, 13], [7, 8]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE ;"], "variables": [{"example": "BOS", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "list the shortest flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN JOSE", "city_name1": "HOUSTON"}, "alignment": "NO_ALIGN NO_ALIGN list NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN list NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 list NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN list city_name1 list NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN list NO_ALIGN city_name1 list NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN shortest NO_ALIGN shortest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN shortest NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 city_name1 flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 city_name1 flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 shortest NO_ALIGN from NO_ALIGN flight NO_ALIGN list city_name1 shortest NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN list NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.TIME_ELAPSED = ( SELECT MIN( FLIGHTalias1.TIME_ELAPSED ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "NASHVILLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "dev", "sentences": [{"text": "airline_code0 flight_number0 city_name1 to city_name0 what is the round trip fare", "question-split": "dev", "variables": {"airline_code0": "US", "flight_number0": "3724", "city_name0": "PHILADELPHIA", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the city_name1 airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN city_name1 fare NO_ALIGN round round round NO_ALIGN city_name1 fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare city_name1 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name1 airline_code0 NO_ALIGN trip NO_ALIGN fare NO_ALIGN trip NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1291", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the least expensive flight available from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DALLAS FORT WORTH", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN least NO_ALIGN least NO_ALIGN NO_ALIGN NO_ALIGN available NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN available available available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN available flight NO_ALIGN available NO_ALIGN flight NO_ALIGN available available flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available to NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN the NO_ALIGN available expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN available NO_ALIGN expensive NO_ALIGN available available expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN available least NO_ALIGN available NO_ALIGN least NO_ALIGN available available least NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN available expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least available expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least available expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the available expensive NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN the NO_ALIGN available least NO_ALIGN least NO_ALIGN expensive NO_ALIGN least available to NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [2, 6], [6, 11], [4, 5], [9, 10], [2, 3], [7, 9], [0, 1], [3, 5], [2, 11], [7, 8]]}, {"text": "need an inexpensive flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "economy0": "YES", "booking_class0": "Y", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN need NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN an NO_ALIGN NO_ALIGN NO_ALIGN need NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 an city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an need NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN an flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 an flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an need NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN an an NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN inexpensive NO_ALIGN flight NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN inexpensive NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN inexpensive NO_ALIGN city_name1 NO_ALIGN inexpensive NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN inexpensive NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 an flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN an inexpensive NO_ALIGN city_name0 NO_ALIGN inexpensive NO_ALIGN city_name0 an inexpensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN an inexpensive NO_ALIGN inexpensive NO_ALIGN inexpensive NO_ALIGN inexpensive an flight NO_ALIGN to NO_ALIGN inexpensive NO_ALIGN to an flight NO_ALIGN from NO_ALIGN flight NO_ALIGN NO_ALIGN an flight NO_ALIGN city_name1 NO_ALIGN inexpensive NO_ALIGN NO_ALIGN NO_ALIGN an city_name1 NO_ALIGN inexpensive NO_ALIGN an NO_ALIGN inexpensive an need NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN to NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [1, 4], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias3 , CITY AS CITYalias4 , CITY AS CITYalias5 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( FARE_BASISalias0.BOOKING_CLASS = \"booking_class0\" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.ECONOMY = \"economy0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND NOT ( FAREalias0.FARE_BASIS_CODE = \"fare_basis_code0\" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS FORT WORTH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "please show me the cost of flight airline_code0 flight_number0 from city_name1 to city_name0 and flight airline_code0 flight_number1 from city_name1 to city_name0", "question-split": "dev", "variables": {"flight_number0": "201", "flight_number1": "343", "city_name0": "DENVER", "city_name1": "BOSTON", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN cost NO_ALIGN cost NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN cost NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN cost NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 and airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN of city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 of city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN of please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 of please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of airline_code0 NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN of cost NO_ALIGN cost NO_ALIGN cost NO_ALIGN cost of airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN of airline_code0 NO_ALIGN me NO_ALIGN cost NO_ALIGN me NO_ALIGN", "constituency_parser_spans": [[1, 21], [10, 11], [5, 6], [3, 21], [8, 9], [18, 19], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [9, 11], [3, 4], [11, 13], [19, 21], [17, 19], [3, 13], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [3, 5], [0, 1], [7, 8], [17, 18], [13, 14], [14, 21], [15, 16]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_NUMBER = flight_number0 OR FLIGHTalias0.FLIGHT_NUMBER = flight_number1 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "201", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "343", "location": "unk", "name": "flight_number1", "type": "flight_number"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "cheapest fare round trip from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"day_number0": "27", "month_number0": "12", "year0": "1991", "city_name0": "ORLANDO", "city_name1": "INDIANAPOLIS"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 on to NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 on to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 on fare NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare on fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare on to NO_ALIGN trip NO_ALIGN fare NO_ALIGN trip on to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN on fare NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN round NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 on cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN day_number0 NO_ALIGN fare NO_ALIGN day_number0 on cheapest NO_ALIGN on NO_ALIGN fare NO_ALIGN month_number0 on cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN on cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 on cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN month_number0 NO_ALIGN month_number0 on fare NO_ALIGN day_number0 NO_ALIGN fare NO_ALIGN day_number0 on month_number0 NO_ALIGN month_number0 NO_ALIGN fare NO_ALIGN month_number0 on cheapest NO_ALIGN fare NO_ALIGN month_number0 NO_ALIGN fare on cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare on cheapest NO_ALIGN trip NO_ALIGN cheapest NO_ALIGN trip on cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [0, 4], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM FARE AS FAREalias0 WHERE ( ( FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias1.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias1 WHERE FARE_BASISalias1.BASIS_DAYS IN ( SELECT DAYSalias2.DAYS_CODE FROM DAYS AS DAYSalias2 WHERE DAYSalias2.DAY_NAME IN ( SELECT DATE_DAYalias2.DAY_NAME FROM DATE_DAY AS DATE_DAYalias2 WHERE DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 ) ) ) AND FAREalias0.FARE_ID IN ( SELECT FLIGHT_FAREalias1.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE FLIGHT_FAREalias1.FLIGHT_ID IN ( SELECT FLIGHTalias1.FLIGHT_ID FROM FLIGHT AS FLIGHTalias1 WHERE ( ( FLIGHTalias1.FLIGHT_DAYS IN ( SELECT DAYSalias3.DAYS_CODE FROM DAYS AS DAYSalias3 WHERE DAYSalias3.DAY_NAME IN ( SELECT DATE_DAYalias3.DAY_NAME FROM DATE_DAY AS DATE_DAYalias3 WHERE DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 ) ) AND FLIGHTalias1.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias3.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 WHERE AIRPORT_SERVICEalias3.CITY_CODE IN ( SELECT CITYalias3.CITY_CODE FROM CITY AS CITYalias3 WHERE CITYalias3.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias1.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias2.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 WHERE AIRPORT_SERVICEalias2.CITY_CODE IN ( SELECT CITYalias2.CITY_CODE FROM CITY AS CITYalias2 WHERE CITYalias2.CITY_NAME = \"city_name1\" ) ) ) ) ) ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM FARE AS FAREalias1 WHERE ( FAREalias1.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FAREalias1.FARE_ID IN ( SELECT FLIGHT_FAREalias0.FARE_ID FROM FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE FLIGHT_FAREalias0.FLIGHT_ID IN ( SELECT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ) ) ) ) ) ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a flight from city_name1 to city_name0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "PHILADELPHIA", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like NO_ALIGN city_name0 NO_ALIGN like would city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like would city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN would airline_code0 NO_ALIGN from NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN would airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [7, 9], [5, 7], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [3, 5]]}, {"text": "i want a flight on airline_code0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON", "airline_code0": "TW"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 want city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 want city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want airline_code0 NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN NO_ALIGN want airline_code0 NO_ALIGN from NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN want airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "show me airline_code0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "DALLAS", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4], [2, 4]]}, {"text": "show me all the airline_code0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "BOSTON", "airline_code0": "UA"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 city_name1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN the city_name1 all NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "what are the flights from city_name1 to city_name0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the are airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN are airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}, {"text": "show all airline_code0 flights between city_name1 and city_name0", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "BOSTON", "airline_code0": "UA"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN between NO_ALIGN between NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN between NO_ALIGN all NO_ALIGN between and all NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN between and all NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN and all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"text": "list for me only the airline_code0 flights between city_name1 and city_name0", "question-split": "dev", "variables": {"city_name0": "OAKLAND", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN only NO_ALIGN me NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN NO_ALIGN flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between for flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for between NO_ALIGN between NO_ALIGN between NO_ALIGN between for between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for only NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list for only NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN list NO_ALIGN for only NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 7], [3, 4]]}, {"text": "i want a return flight from city_name1 to city_name0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "WASHINGTON", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN return NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN return NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN return NO_ALIGN want NO_ALIGN return want city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want return NO_ALIGN return NO_ALIGN return NO_ALIGN return want return NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want airline_code0 NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN NO_ALIGN want airline_code0 NO_ALIGN from NO_ALIGN return NO_ALIGN NO_ALIGN NO_ALIGN want airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [7, 9]]}, {"text": "list all flights on airline_code0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "SAN FRANCISCO", "airline_code0": "UA"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 on all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN list on all NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN on all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}, {"text": "flight numbers on airline_code0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "city_name1": "PHOENIX", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID , FLIGHTalias0.FLIGHT_NUMBER FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , CLASS_OF_SERVICE AS CLASS_OF_SERVICEalias0 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.BOOKING_CLASS = CLASS_OF_SERVICEalias0.BOOKING_CLASS AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the most expensive one way class_type0 class fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS", "class_type0": "FIRST", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN class NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN show NO_ALIGN fare NO_ALIGN one NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 most city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN most city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 most city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN most class NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 most one NO_ALIGN fare NO_ALIGN class NO_ALIGN fare most show NO_ALIGN one NO_ALIGN one NO_ALIGN one most show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the most show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN most class NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 most expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN most expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 most expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN most expensive NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 most expensive NO_ALIGN fare NO_ALIGN expensive NO_ALIGN fare most expensive NO_ALIGN one NO_ALIGN expensive NO_ALIGN one most expensive NO_ALIGN from NO_ALIGN expensive NO_ALIGN the most expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN most expensive NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN NO_ALIGN most class NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [12, 14], [4, 5], [2, 10], [9, 10], [2, 3], [2, 14], [11, 12], [3, 5], [0, 1], [7, 8], [13, 14], [3, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MAX( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FARE_BASISalias1.CLASS_TYPE = \"class_type0\" AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FAREalias1.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all airline_code0 flights from city_name1 to city_name0 on wednesday", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "PHOENIX", "airline_code0": "AA"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday on all NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on on all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN on all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 on all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN on all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 5], [5, 6], [8, 10], [1, 4], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4]]}, {"text": "flights on airline_code0 from city_name1 to city_name0 on wednesday", "question-split": "dev", "variables": {"city_name0": "CHICAGO", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "PHOENIX", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday on airline_code0 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on on airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [3, 5], [1, 3], [6, 7], [5, 6], [4, 5], [5, 7], [8, 9], [1, 5], [2, 3], [3, 4], [7, 8], [7, 9]]}, {"text": "show me airline_code0 flights from city_name1 to city_name0 on tuesday", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "day_number0": "22", "month_number0": "3", "year0": "1991", "city_name1": "SAN FRANCISCO", "airline_code0": "US"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN on NO_ALIGN tuesday NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 tuesday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday tuesday NO_ALIGN tuesday NO_ALIGN tuesday NO_ALIGN tuesday tuesday airline_code0 NO_ALIGN on NO_ALIGN tuesday NO_ALIGN on tuesday airline_code0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN tuesday flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 tuesday flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tuesday airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN tuesday airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 10], [3, 4]]}, {"text": "what flights go from city_name1 to city_name0 on saturday on airline_code0", "question-split": "dev", "variables": {"city_name0": "SEATTLE", "day_number0": "26", "month_number0": "7", "year0": "1991", "city_name1": "CHICAGO", "airline_code0": "CO"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN city_name0 NO_ALIGN go NO_ALIGN on NO_ALIGN saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN go NO_ALIGN go NO_ALIGN go NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN go saturday NO_ALIGN on NO_ALIGN on go saturday NO_ALIGN on NO_ALIGN on go saturday NO_ALIGN on NO_ALIGN on go saturday NO_ALIGN on NO_ALIGN saturday NO_ALIGN on go airline_code0 NO_ALIGN on NO_ALIGN saturday NO_ALIGN on go airline_code0 NO_ALIGN city_name1 NO_ALIGN go NO_ALIGN NO_ALIGN NO_ALIGN go go NO_ALIGN go NO_ALIGN flights NO_ALIGN go go go NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN go airline_code0 NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN go airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [7, 9], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "PHOENIX", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MILWAUKEE", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want information on flights from city_name1 to city_name0 i want to leave wednesday after departure_time1 or thursday before departure_time0", "question-split": "dev", "variables": {"day_number0": "23", "day_number1": "24", "month_number0": "4", "year0": "1991", "departure_time0": "900", "departure_time1": "1600", "city_name0": "WASHINGTON", "city_name1": "ATLANTA"}, "alignment": "NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN leave NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN or or thursday NO_ALIGN thursday NO_ALIGN thursday or thursday NO_ALIGN thursday NO_ALIGN thursday or thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday or departure_time1 NO_ALIGN departure_time1 NO_ALIGN departure_time1 or departure_time1 NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN flights NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN wednesday or thursday NO_ALIGN thursday NO_ALIGN thursday or thursday NO_ALIGN thursday NO_ALIGN thursday or thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday or departure_time1 NO_ALIGN departure_time1 NO_ALIGN departure_time0 or departure_time1 NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN NO_ALIGN or leave NO_ALIGN city_name0 NO_ALIGN leave NO_ALIGN city_name0 or leave NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN or flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 or flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN or departure_time1 NO_ALIGN from NO_ALIGN leave NO_ALIGN NO_ALIGN or departure_time1 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [16, 17], [12, 20], [4, 9], [6, 7], [12, 13], [14, 18], [15, 18], [3, 4], [4, 5], [9, 10], [3, 9], [2, 3], [14, 15], [14, 20], [11, 12], [19, 20], [7, 9], [0, 1], [17, 18], [13, 14], [5, 7], [11, 20], [7, 8]]}, {"text": "show me all the flights from city_name1 to city_name0 that leave after departure_time0 on wednesday and before departure_time1 on thursday", "question-split": "dev", "variables": {"day_number0": "23", "day_number1": "24", "month_number0": "4", "year0": "1991", "departure_time0": "1200", "departure_time1": "1200", "city_name0": "ORLANDO", "city_name1": "MILWAUKEE"}, "alignment": "NO_ALIGN all departure_time1 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN all NO_ALIGN departure_time1 NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN the departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 departure_time1 NO_ALIGN departure_time1 NO_ALIGN departure_time1 departure_time1 departure_time1 NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN and NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN wednesday departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday departure_time1 departure_time1 NO_ALIGN departure_time1 NO_ALIGN departure_time0 departure_time1 departure_time1 NO_ALIGN wednesday NO_ALIGN thursday NO_ALIGN on NO_ALIGN NO_ALIGN departure_time1 all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 departure_time1 all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN departure_time1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 departure_time1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN departure_time1 departure_time1 NO_ALIGN from NO_ALIGN all NO_ALIGN that departure_time1 departure_time1 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN that NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [0, 20], [5, 6], [8, 9], [15, 16], [18, 19], [2, 5], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [13, 20], [16, 18], [18, 20], [11, 13], [4, 5], [13, 15], [2, 20], [9, 10], [2, 3], [14, 15], [11, 12], [19, 20], [7, 9], [0, 1], [17, 18], [13, 14], [5, 7], [11, 20], [10, 20], [16, 20], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME < departure_time1 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "23", "location": "unk", "name": "day_number1", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "301", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "2159", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "flights from city_name0 to city_name1 flight_days0", "question-split": "dev", "variables": {"city_name0": "WESTCHESTER COUNTY", "city_name1": "SAN FRANCISCO", "flight_days0": "DAILY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN flights NO_ALIGN NO_ALIGN flight_days0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 6], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.FLIGHT_DAYS = \"flight_days0\" ) ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "DAILY", "location": "unk", "name": "flight_days0", "type": "flight_days"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "flights from city_name0 state_name0 to city_name1 state_name1", "question-split": "dev", "variables": {"city_name0": "NEWARK", "city_name1": "CLEVELAND", "state_name0": "NEW JERSEY", "state_name1": "OHIO"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN city_name1 state_name0 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN state_name1 city_name1 state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN city_name1 state_name1 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN state_name1 city_name1 state_name1 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = \"state_name1\" ;"], "variables": [{"example": "NEWARK", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NEW JERSEY", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "OHIO", "location": "unk", "name": "state_name1", "type": "state_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the earliest flight from city_name1 to city_name0 on thursday morning", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name1": "PITTSBURGH", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN morning NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 's city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's thursday NO_ALIGN thursday NO_ALIGN thursday 's thursday NO_ALIGN thursday NO_ALIGN thursday 's thursday NO_ALIGN thursday NO_ALIGN thursday 's thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday 's morning NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN on 's morning NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN 's city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 's city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's morning NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN 's morning NO_ALIGN morning morning morning 's morning NO_ALIGN 's morning NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN morning NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN thursday NO_ALIGN earliest NO_ALIGN on NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 's earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN 's earliest NO_ALIGN thursday NO_ALIGN thursday 's earliest NO_ALIGN thursday NO_ALIGN thursday 's earliest NO_ALIGN thursday NO_ALIGN thursday 's earliest NO_ALIGN thursday NO_ALIGN earliest NO_ALIGN thursday 's earliest NO_ALIGN thursday NO_ALIGN earliest NO_ALIGN on 's earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN 's earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 's earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN 's earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN 's earliest NO_ALIGN morning morning morning 's morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [1, 12], [5, 7], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ATLANTA", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i'm sorry i wanted to fly airline_code0 is there a flight between city_name3 and city_name2 with a stopover in city_name0 city_name1 on airline_code0", "question-split": "dev", "variables": {"city_name0": "DALLAS", "city_name1": "FORT WORTH", "city_name2": "BOSTON", "city_name3": "OAKLAND", "airline_code0": "TW"}, "alignment": "NO_ALIGN in airline_code0 NO_ALIGN with NO_ALIGN between NO_ALIGN there NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name2 NO_ALIGN between NO_ALIGN is NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN between NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN is NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN city_name2 NO_ALIGN stopover NO_ALIGN city_name2 NO_ALIGN city_name3 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in i'm city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN i'm is NO_ALIGN in NO_ALIGN is NO_ALIGN in i'm is NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'm stopover NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in i'm city_name3 NO_ALIGN city_name2 NO_ALIGN is NO_ALIGN in i'm airline_code0 NO_ALIGN with NO_ALIGN stopover NO_ALIGN with i'm airline_code0 NO_ALIGN with NO_ALIGN city_name3 NO_ALIGN with NO_ALIGN i'm between NO_ALIGN in NO_ALIGN between NO_ALIGN in i'm between NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN i'm airline_code0 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN in NO_ALIGN i'm in NO_ALIGN in NO_ALIGN there NO_ALIGN in i'm in NO_ALIGN in NO_ALIGN NO_ALIGN city_name3 NO_ALIGN i'm airline_code0 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN in NO_ALIGN i'm airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 8], [13, 16], [5, 8], [9, 10], [21, 22], [4, 5], [14, 15], [12, 16], [7, 8], [17, 18], [1, 2], [15, 16], [3, 8], [5, 6], [11, 12], [19, 20], [17, 19], [22, 24], [10, 12], [3, 4], [20, 22], [8, 9], [1, 2], [13, 14], [10, 11], [18, 19], [22, 23], [6, 8], [16, 17], [0, 1], [19, 22], [10, 16], [6, 7], [17, 24], [12, 13], [20, 21], [23, 24], [0, 8], [2, 3]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FLIGHT_STOP AS FLIGHT_STOPalias1 WHERE ( ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHT_STOPalias1.STOP_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias1.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name2\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name3\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name3", "type": "city_name"}, {"example": "TW", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "do you have a airline_code0 flight to city_name0 from city_name1 on month_number0 day_number0 in the early morning", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "30", "month_number0": "8", "year0": "1991", "city_name1": "DENVER", "airline_code0": "DL", "departure_time0": "0", "departure_time1": "800"}, "alignment": "NO_ALIGN in early NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN do NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN early NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN in NO_ALIGN do NO_ALIGN in early do NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN early day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 early day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 early day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 early month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 early early NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 early early NO_ALIGN city_name1 NO_ALIGN do NO_ALIGN in NO_ALIGN early in NO_ALIGN in NO_ALIGN have NO_ALIGN in early in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN early early NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN early early NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN early early NO_ALIGN morning morning morning early morning NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [8, 9], [13, 17], [15, 16], [1, 2], [16, 17], [6, 7], [12, 13], [6, 10], [8, 10], [3, 6], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [0, 1], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "6", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CHICAGO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need flight and fare information departing from city_name1 to city_name0 on thursday before departure_time0", "question-split": "dev", "variables": {"departure_time0": "800", "day_number0": "24", "month_number0": "5", "year0": "1991", "city_name0": "SALT LAKE CITY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN before NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN before NO_ALIGN departure_time0 NO_ALIGN departure_time0 need before NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN on NO_ALIGN on NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN thursday need thursday NO_ALIGN thursday NO_ALIGN thursday need thursday NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN need before NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN need before NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN need fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN on NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN departure_time0 NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN thursday NO_ALIGN thursday need departure_time0 NO_ALIGN thursday NO_ALIGN thursday need departure_time0 NO_ALIGN thursday NO_ALIGN thursday NO_ALIGN NO_ALIGN NO_ALIGN need fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare need before NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [11, 13], [2, 6], [4, 5], [9, 10], [14, 15], [2, 3], [11, 12], [7, 9], [0, 1], [4, 6], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME < departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FAREalias0.FARE_BASIS_CODE IN ( SELECT FARE_BASISalias0.FARE_BASIS_CODE FROM FARE_BASIS AS FARE_BASISalias0 WHERE FARE_BASISalias0.BASIS_DAYS IN ( SELECT DAYSalias1.DAYS_CODE FROM DAYS AS DAYSalias1 WHERE DAYSalias1.DAY_NAME IN ( SELECT DATE_DAYalias1.DAY_NAME FROM DATE_DAY AS DATE_DAYalias1 WHERE DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 ) ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "900", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SALT LAKE CITY", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please list the flights from city_name1 to city_name0 on monday morning", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "city_name0": "MEMPHIS", "city_name1": "NASHVILLE", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN on NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday on monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN morning morning morning on morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ST. LOUIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the least expensive flight leaving city_name1 on sunday after departure_time0 and arriving city_name0", "question-split": "dev", "variables": {"city_name0": "CLEVELAND", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "MIAMI", "departure_time0": "1200"}, "alignment": "NO_ALIGN NO_ALIGN arriving NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN departure_time0 NO_ALIGN sunday NO_ALIGN least NO_ALIGN on NO_ALIGN sunday NO_ALIGN on NO_ALIGN leaving NO_ALIGN on NO_ALIGN and NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN on NO_ALIGN show NO_ALIGN NO_ALIGN NO_ALIGN arriving NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 arriving city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving sunday NO_ALIGN sunday NO_ALIGN sunday arriving sunday NO_ALIGN sunday NO_ALIGN sunday arriving sunday NO_ALIGN sunday NO_ALIGN sunday arriving sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday arriving arriving NO_ALIGN on NO_ALIGN sunday NO_ALIGN on arriving arriving NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN arriving city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 arriving city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arriving NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN arriving arriving NO_ALIGN departure_time0 NO_ALIGN departure_time0 NO_ALIGN arriving NO_ALIGN NO_ALIGN NO_ALIGN expensive NO_ALIGN city_name0 NO_ALIGN expensive NO_ALIGN city_name0 arriving expensive NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving and NO_ALIGN sunday NO_ALIGN least NO_ALIGN sunday arriving expensive NO_ALIGN on NO_ALIGN and NO_ALIGN on arriving expensive NO_ALIGN city_name1 NO_ALIGN expensive NO_ALIGN the NO_ALIGN arriving flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 arriving flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving expensive NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN the NO_ALIGN arriving departure_time0 NO_ALIGN sunday NO_ALIGN sunday arriving departure_time0 NO_ALIGN sunday NO_ALIGN sunday arriving departure_time0 NO_ALIGN sunday NO_ALIGN sunday arriving leaving NO_ALIGN sunday NO_ALIGN departure_time0 NO_ALIGN sunday arriving show NO_ALIGN on NO_ALIGN leaving NO_ALIGN on arriving expensive NO_ALIGN expensive NO_ALIGN show NO_ALIGN expensive arriving expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least arriving expensive NO_ALIGN departure_time0 NO_ALIGN departure_time0 arriving expensive NO_ALIGN least NO_ALIGN expensive NO_ALIGN least NO_ALIGN arriving expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN sunday NO_ALIGN least NO_ALIGN sunday NO_ALIGN least NO_ALIGN on NO_ALIGN least NO_ALIGN on NO_ALIGN least NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN on NO_ALIGN expensive NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN city_name0 arriving least NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN least NO_ALIGN sunday arriving least NO_ALIGN on NO_ALIGN least NO_ALIGN on arriving least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN the NO_ALIGN arriving least NO_ALIGN city_name0 NO_ALIGN least NO_ALIGN city_name0 arriving least NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving least NO_ALIGN city_name1 NO_ALIGN least NO_ALIGN the NO_ALIGN arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN sunday arriving least NO_ALIGN sunday NO_ALIGN least NO_ALIGN sunday arriving expensive NO_ALIGN on NO_ALIGN least NO_ALIGN on arriving expensive NO_ALIGN expensive NO_ALIGN expensive NO_ALIGN expensive arriving least NO_ALIGN least NO_ALIGN expensive NO_ALIGN least arriving least NO_ALIGN departure_time0 NO_ALIGN departure_time0 arriving least NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN arriving least NO_ALIGN least NO_ALIGN expensive NO_ALIGN least arriving arriving NO_ALIGN least NO_ALIGN least NO_ALIGN least NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [0, 15], [12, 13], [8, 10], [10, 12], [3, 4], [6, 15], [2, 6], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [13, 14], [2, 15], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , DAYS AS DAYSalias2 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 ) AND ( ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias1.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias3 , DATE_DAY AS DATE_DAYalias4 , DAYS AS DAYSalias3 , DAYS AS DAYSalias4 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias2 , FLIGHT_FARE AS FLIGHT_FAREalias2 WHERE ( ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND DATE_DAYalias4.DAY_NUMBER = day_number0 AND DATE_DAYalias4.MONTH_NUMBER = month_number0 AND DATE_DAYalias4.YEAR = year0 AND DAYSalias4.DAY_NAME = DATE_DAYalias4.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias4.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias3.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias2.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias2.DEPARTURE_TIME > departure_time0 AND FLIGHTalias2.FLIGHT_ID = FLIGHT_FAREalias2.FLIGHT_ID ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FARE_BASISalias0.BASIS_DAYS = DAYSalias0.DAYS_CODE AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias2 , DATE_DAY AS DATE_DAYalias3 , DAYS AS DAYSalias2 , DAYS AS DAYSalias3 , FARE AS FAREalias1 , FARE_BASIS AS FARE_BASISalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE ( ( DATE_DAYalias3.DAY_NUMBER = day_number0 AND DATE_DAYalias3.MONTH_NUMBER = month_number0 AND DATE_DAYalias3.YEAR = year0 AND DAYSalias3.DAY_NAME = DATE_DAYalias3.DAY_NAME AND FLIGHTalias1.DEPARTURE_TIME > departure_time0 AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias3.DAYS_CODE ) AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FARE_BASISalias1.BASIS_DAYS = DAYSalias2.DAYS_CODE AND FAREalias1.FARE_BASIS_CODE = FARE_BASISalias1.FARE_BASIS_CODE AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;"], "variables": [{"example": "CLEVELAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "MIAMI", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "okay show me all the flights to city_name0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN to NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 to all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN to all NO_ALIGN to NO_ALIGN all NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"text": "flights to city_name0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN to NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 to flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN to flights NO_ALIGN to NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i want to fly from city_name2 to city_name1 with a stop in city_name0 on a meal_description0 flight", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "meal_description0": "BREAKFAST", "city_name1": "DALLAS", "city_name2": "PHILADELPHIA"}, "alignment": "NO_ALIGN in fly NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in want city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN want stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in want fly NO_ALIGN with NO_ALIGN stop NO_ALIGN with want meal_description0 NO_ALIGN meal_description0 NO_ALIGN fly NO_ALIGN meal_description0 want meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN want city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in want city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN want in NO_ALIGN in NO_ALIGN want NO_ALIGN in want in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN want fly NO_ALIGN from NO_ALIGN want NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [1, 17], [8, 9], [15, 16], [3, 17], [1, 2], [16, 17], [6, 7], [12, 13], [9, 11], [9, 17], [3, 4], [11, 13], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [2, 17], [0, 1], [4, 6], [6, 8], [13, 14], [7, 8]]}, {"text": "on a meal_description0 flight from city_name2 to city_name1 via city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "meal_description0": "BREAKFAST", "city_name1": "DALLAS", "city_name2": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN via NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name2 NO_ALIGN via NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 on city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on via NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN on a NO_ALIGN via NO_ALIGN via NO_ALIGN via on meal_description0 NO_ALIGN meal_description0 NO_ALIGN a NO_ALIGN meal_description0 on meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN on a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [8, 10], [1, 4], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"text": "i'm looking for a flight from city_name2 to city_name1 that stops in city_name0 hopefully a meal_description0 flight how can i find that out", "question-split": "dev", "variables": {"city_name0": "ST. LOUIS", "meal_description0": "DINNER", "city_name1": "LAS VEGAS", "city_name2": "CHARLOTTE"}, "alignment": "NO_ALIGN in that NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN city_name2 NO_ALIGN stops looking city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN looking stops NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in looking that NO_ALIGN city_name2 NO_ALIGN stops NO_ALIGN city_name2 looking meal_description0 NO_ALIGN meal_description0 NO_ALIGN that NO_ALIGN meal_description0 looking meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN looking city_name1 NO_ALIGN stops NO_ALIGN city_name1 NO_ALIGN stops looking city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN looking that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN looking in NO_ALIGN stops NO_ALIGN in NO_ALIGN stops looking in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN looking that NO_ALIGN from NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[2, 24], [9, 10], [21, 22], [4, 5], [7, 8], [14, 15], [17, 18], [6, 10], [1, 2], [15, 16], [5, 6], [1, 24], [11, 12], [19, 20], [4, 24], [18, 20], [3, 4], [13, 18], [11, 24], [8, 9], [1, 2], [3, 24], [13, 14], [12, 18], [15, 18], [10, 11], [18, 19], [22, 23], [6, 8], [0, 1], [6, 7], [21, 24], [16, 17], [13, 15], [20, 21], [12, 13], [4, 6], [23, 24], [1, 24], [10, 24], [2, 3]]}, {"text": "i would like to find a flight that goes from city_name2 to city_name1 i would like it to have a stop in city_name0 and i would like a flight that serves meal_description0", "question-split": "dev", "variables": {"city_name0": "NEW YORK", "meal_description0": "BREAKFAST", "city_name1": "ORLANDO", "city_name2": "BOSTON"}, "alignment": "NO_ALIGN in that NO_ALIGN stop NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in would city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN would stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in would that NO_ALIGN stop NO_ALIGN stop NO_ALIGN stop would meal_description0 NO_ALIGN meal_description0 NO_ALIGN that NO_ALIGN meal_description0 would meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN would city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in would city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would that NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN would in NO_ALIGN in NO_ALIGN have NO_ALIGN in would in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN would that NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [30, 32], [8, 23], [22, 23], [28, 29], [5, 6], [8, 9], [15, 16], [25, 32], [30, 31], [18, 19], [5, 23], [31, 32], [27, 29], [1, 2], [8, 14], [16, 17], [18, 23], [6, 7], [15, 23], [12, 13], [26, 32], [20, 21], [2, 23], [25, 26], [4, 23], [9, 11], [17, 23], [27, 28], [7, 23], [14, 23], [11, 13], [27, 32], [19, 21], [1, 23], [29, 30], [3, 23], [4, 5], [21, 23], [16, 23], [9, 10], [2, 3], [14, 15], [23, 24], [11, 12], [0, 23], [19, 20], [0, 1], [7, 8], [17, 18], [26, 27], [13, 14], [21, 22], [5, 7], [29, 32], [24, 25], [19, 23], [24, 32], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BREAKFAST", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "list all flights on airline_code0 leaving city_name0 on monday", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_number0": "21", "month_number0": "2", "year0": "1991", "airline_code0": "CO"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN all NO_ALIGN all NO_ALIGN NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 leaving all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN leaving monday NO_ALIGN monday NO_ALIGN monday leaving monday NO_ALIGN monday NO_ALIGN monday leaving monday NO_ALIGN monday NO_ALIGN monday leaving monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday leaving all NO_ALIGN on NO_ALIGN monday NO_ALIGN on leaving all NO_ALIGN list NO_ALIGN all NO_ALIGN list NO_ALIGN leaving all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [5, 6], [4, 5], [7, 9], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show day_name0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"day_number0": "27", "month_number0": "8", "year0": "1991", "day_name0": "SUNDAY", "city_name0": "CHICAGO", "city_name1": "SEATTLE"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN show NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN flights city_name1 flights NO_ALIGN flights NO_ALIGN flights city_name1 flights NO_ALIGN flights NO_ALIGN flights city_name1 day_name0 NO_ALIGN day_name0 NO_ALIGN flights NO_ALIGN day_name0 city_name1 day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN city_name1 flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 city_name1 flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND DAYSalias1.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias1.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "24", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "THURSDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what time zone is city_name0 in", "question-split": "dev", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN in zone NO_ALIGN zone NO_ALIGN in NO_ALIGN zone NO_ALIGN zone NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT DISTINCT CITYalias0.TIME_ZONE_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cheapest fare from city_name0 to city_name1 in any class", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN in class NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN class NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN fare NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in any in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN any city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in any city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any class NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in any cheapest NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN any cheapest NO_ALIGN in NO_ALIGN cheapest NO_ALIGN in any cheapest NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare any cheapest NO_ALIGN fare NO_ALIGN cheapest NO_ALIGN fare any cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN in any cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN in NO_ALIGN any fare NO_ALIGN fare NO_ALIGN class NO_ALIGN fare any to NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare any to NO_ALIGN from NO_ALIGN in NO_ALIGN in any to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [1, 12], [5, 7], [7, 8], [9, 12]]}, {"text": "what is the lowest fare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 fare NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 city_name1 lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 city_name1 lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare city_name1 lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare city_name1 lowest NO_ALIGN from NO_ALIGN lowest NO_ALIGN the city_name1 lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN city_name1 fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare city_name1 to NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "cheapest airfare from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "TACOMA", "city_name1": "ORLANDO"}, "alignment": "NO_ALIGN NO_ALIGN airfare NO_ALIGN airfare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN airfare NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 airfare NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 cheapest NO_ALIGN airfare NO_ALIGN cheapest NO_ALIGN airfare city_name1 cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest city_name1 cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN NO_ALIGN city_name1 cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN city_name1 cheapest NO_ALIGN airfare NO_ALIGN airfare NO_ALIGN airfare city_name1 to NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest city_name1 to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ONE_DIRECTION_COST = ( SELECT MIN( FAREalias1.ONE_DIRECTION_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FAREalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FAREalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list all the airlines that fly into airport_code0", "question-split": "dev", "variables": {"airport_code0": "MKE"}, "alignment": "NO_ALIGN all airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airport_code0 NO_ALIGN into NO_ALIGN all NO_ALIGN all NO_ALIGN into NO_ALIGN into NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN that all NO_ALIGN airlines NO_ALIGN airlines NO_ALIGN airlines that all NO_ALIGN all NO_ALIGN into NO_ALIGN into NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [1, 4], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 , AIRPORT AS AIRPORTalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "DAL", "location": "unk", "name": "airport_code0", "type": "airport_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the flights from city_name1 to city_name0 next wednesday night after departure_time2 o'clock", "question-split": "dev", "variables": {"departure_time0": "1800", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name0": "PITTSBURGH", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN o'clock NO_ALIGN me NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN o'clock NO_ALIGN night NO_ALIGN after after o'clock NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN next NO_ALIGN next NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN next NO_ALIGN next NO_ALIGN wednesday NO_ALIGN wednesday after next NO_ALIGN wednesday NO_ALIGN wednesday after next NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN after o'clock NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN after o'clock NO_ALIGN from NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [12, 14], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [7, 8], [4, 6], [6, 8], [13, 14], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRLINE AS AIRLINEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.AIRLINE_CODE = AIRLINEalias0.AIRLINE_CODE ;"], "variables": [{"example": "1800", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "23", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "please list all the flights from city_name1 to city_name0 which serve meals", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN all all NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN all NO_ALIGN serve NO_ALIGN meals NO_ALIGN NO_ALIGN flights NO_ALIGN which NO_ALIGN flights NO_ALIGN which which flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN which all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list which meals NO_ALIGN meals NO_ALIGN all NO_ALIGN meals NO_ALIGN which please NO_ALIGN which NO_ALIGN all NO_ALIGN which which please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN which all NO_ALIGN from NO_ALIGN all NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [1, 12], [5, 7], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "tell me about flights from city_name1 arriving in city_name0 before arrival_time0", "question-split": "dev", "variables": {"city_name0": "TORONTO", "arrival_time0": "1200", "city_name1": "ST. PETERSBURG"}, "alignment": "NO_ALIGN in arrival_time0 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN about NO_ALIGN in NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN flights NO_ALIGN about NO_ALIGN flights NO_ALIGN about arriving flights NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arrival_time0 arrival_time0 arrival_time0 arriving arrival_time0 NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN in NO_ALIGN arriving about NO_ALIGN about NO_ALIGN flights NO_ALIGN about arriving about NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arrival_time0 NO_ALIGN from NO_ALIGN flights NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [10, 11], [6, 11], [4, 5], [5, 6], [2, 11], [3, 11], [8, 9], [9, 10], [0, 11], [9, 11], [2, 3], [3, 4], [7, 9]]}, {"text": "city_name1 to city_name0 arriving before arrival_time0 in the afternoon", "question-split": "dev", "variables": {"city_name0": "DALLAS", "arrival_time0": "1300", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN in arrival_time0 NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in arriving city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arrival_time0 arrival_time0 arrival_time0 arriving arrival_time0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN arriving in NO_ALIGN in NO_ALIGN in NO_ALIGN in arriving in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arrival_time0 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [1, 3], [4, 9], [4, 6], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.ARRIVAL_TIME <= arrival_time0 OR FLIGHTalias0.ARRIVAL_TIME = arrival_time0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1600", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cost for a one way trip from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "ATLANTA", "round_trip_required0": "NO"}, "alignment": "NO_ALIGN NO_ALIGN cost NO_ALIGN cost NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN one NO_ALIGN cost NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN one NO_ALIGN cost NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for cost NO_ALIGN way NO_ALIGN NO_ALIGN way NO_ALIGN for cost NO_ALIGN cost NO_ALIGN cost NO_ALIGN cost for a NO_ALIGN trip NO_ALIGN cost NO_ALIGN trip for a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the for a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [9, 11], [3, 4], [11, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FAREalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_REQUIRED = \"round_trip_required0\" ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "NO", "location": "unk", "name": "round_trip_required0", "type": "round_trip_required"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much does it cost to get downtown from the city_name0 airport by transport_type0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "transport_type0": "LIMOUSINE"}, "alignment": "NO_ALIGN does downtown NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN to NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN get NO_ALIGN downtown NO_ALIGN downtown NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport it get NO_ALIGN get NO_ALIGN airport NO_ALIGN get it get NO_ALIGN city_name0 NO_ALIGN NO_ALIGN downtown NO_ALIGN it downtown NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport it downtown NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [6, 14], [1, 2], [6, 7], [12, 13], [3, 4], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [8, 12], [13, 14], [5, 14], [7, 8], [0, 2], [9, 12]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;", "SELECT DISTINCT GROUND_SERVICEalias0.GROUND_FARE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE ) AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "LIMOUSINE", "location": "unk", "name": "transport_type0", "type": "transport_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "are there any propulsion0 flights from city_name1 to city_name0 on month_number0 day_number0", "question-split": "dev", "variables": {"propulsion0": "TURBOPROP", "day_number0": "17", "month_number0": "12", "year0": "1991", "city_name0": "BALTIMORE", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN NO_ALIGN NO_ALIGN propulsion0 NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN on NO_ALIGN propulsion0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN propulsion0 NO_ALIGN propulsion0 NO_ALIGN NO_ALIGN propulsion0 NO_ALIGN any day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 any day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 any day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 any month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 any propulsion0 NO_ALIGN are NO_ALIGN propulsion0 NO_ALIGN are any flights NO_ALIGN month_number0 NO_ALIGN propulsion0 NO_ALIGN month_number0 any flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN any flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 any flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN any flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN there NO_ALIGN any flights NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 any flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN any flights NO_ALIGN from NO_ALIGN there NO_ALIGN there NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [11, 12], [10, 12], [8, 9], [9, 10], [2, 3], [3, 4], [9, 12], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( AIRCRAFTalias0.PROPULSION = \"propulsion0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "TURBOPROP", "location": "unk", "name": "propulsion0", "type": "propulsion"}, {"example": "17", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "12", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "may i see all nonstop flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ST. PETERSBURG", "city_name1": "CHARLOTTE", "stops0": "0"}, "alignment": "NO_ALIGN all may NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN all NO_ALIGN may NO_ALIGN NO_ALIGN all NO_ALIGN see NO_ALIGN all NO_ALIGN see may all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN may flights NO_ALIGN see NO_ALIGN flights NO_ALIGN see may flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN may may NO_ALIGN from NO_ALIGN all NO_ALIGN NO_ALIGN may may NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN may may NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 6], [3, 4]]}, {"text": "find me flights that are nonstop between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN nonstop NO_ALIGN me NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN NO_ALIGN flights NO_ALIGN find NO_ALIGN flights NO_ALIGN find are flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are between NO_ALIGN find NO_ALIGN between NO_ALIGN find are between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are nonstop NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN between are nonstop NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN are nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [3, 4]]}, {"text": "show me the direct flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 direct flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN direct flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 direct flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN direct flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the direct flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN direct flights NO_ALIGN flights NO_ALIGN flights NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [2, 5], [3, 4], [7, 9]]}, {"text": "what are the nonstop flights between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "HOUSTON", "city_name1": "MEMPHIS", "stops0": "0"}, "alignment": "NO_ALIGN NO_ALIGN nonstop NO_ALIGN are NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flights NO_ALIGN between NO_ALIGN between NO_ALIGN NO_ALIGN NO_ALIGN nonstop NO_ALIGN NO_ALIGN flights NO_ALIGN between NO_ALIGN flights NO_ALIGN between are flights NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are between NO_ALIGN between NO_ALIGN between NO_ALIGN between are between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are nonstop NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN between are nonstop NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN are nonstop NO_ALIGN nonstop NO_ALIGN nonstop NO_ALIGN", "constituency_parser_spans": [[0, 1], [5, 9], [1, 2], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.STOPS = stops0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.STOPS = stops0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = \"state_code0\" AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE ) AND FLIGHTalias0.STOPS = stops0 ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name1\" ) ) ) AND FLIGHTalias0.STOPS = stops0 ) ;"], "variables": [{"example": "SAN DIEGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PHOENIX", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "stops0", "type": "stops"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how much does a class_type0 class round trip ticket from city_name1 to city_name0 on airline_code0 cost", "question-split": "dev", "variables": {"airline_code0": "US", "city_name0": "MIAMI", "city_name1": "CLEVELAND", "class_type0": "FIRST"}, "alignment": "NO_ALIGN does cost NO_ALIGN much NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN class NO_ALIGN cost NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN class NO_ALIGN cost NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN ticket city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 ticket city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN ticket airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN ticket how NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 ticket how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN ticket cost NO_ALIGN round round round NO_ALIGN ticket cost NO_ALIGN much NO_ALIGN cost NO_ALIGN much ticket airline_code0 NO_ALIGN trip NO_ALIGN cost NO_ALIGN trip ticket airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN ticket class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN ticket cost NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [1, 2], [6, 7], [12, 13], [13, 16], [9, 11], [3, 4], [11, 13], [2, 16], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [14, 16], [13, 14], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE ;"], "variables": [{"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "MIAMI", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CLEVELAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all flights to city_name0 after 12pm", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "departure_time0": "1200"}, "alignment": "NO_ALIGN all 12pm NO_ALIGN all NO_ALIGN to NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN all NO_ALIGN 12pm NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 after all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN after 12pm NO_ALIGN after NO_ALIGN after after 12pm NO_ALIGN to NO_ALIGN all NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 4], [3, 4], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is days_code0", "question-split": "dev", "variables": {"days_code0": "SA"}, "alignment": "NO_ALIGN NO_ALIGN days_code0 NO_ALIGN NO_ALIGN NO_ALIGN days_code0 NO_ALIGN days_code0 NO_ALIGN days_code0 NO_ALIGN days_code0 NO_ALIGN NO_ALIGN days_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}], "sql": ["SELECT DISTINCT DAYSalias0.DAY_NAME FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAYS_CODE = \"days_code0\" ;"], "variables": [{"example": "SA", "location": "unk", "name": "days_code0", "type": "days_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show first flight from city_name1 to city_name0 on wednesday", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN show NO_ALIGN show NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN show NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday on wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday on show NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on on show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN on city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN on show NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN first NO_ALIGN NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN wednesday NO_ALIGN first NO_ALIGN on NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 on first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on first NO_ALIGN wednesday NO_ALIGN wednesday on first NO_ALIGN wednesday NO_ALIGN wednesday on first NO_ALIGN wednesday NO_ALIGN wednesday on first NO_ALIGN wednesday NO_ALIGN first NO_ALIGN wednesday on first NO_ALIGN wednesday NO_ALIGN first NO_ALIGN on on first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN on first NO_ALIGN city_name0 NO_ALIGN first NO_ALIGN city_name0 on first NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on first NO_ALIGN from NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [2, 3], [0, 9], [3, 4], [3, 5]]}, {"text": "what is the earliest flight from city_name1 to city_name0 on sunday", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN on NO_ALIGN sunday NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 sunday city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday sunday sunday NO_ALIGN sunday NO_ALIGN sunday NO_ALIGN sunday sunday to NO_ALIGN on NO_ALIGN sunday NO_ALIGN on sunday to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN sunday city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 sunday city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN sunday to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN sunday to NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN sunday NO_ALIGN earliest NO_ALIGN on NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 sunday earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN sunday earliest NO_ALIGN sunday NO_ALIGN sunday sunday earliest NO_ALIGN sunday NO_ALIGN sunday sunday earliest NO_ALIGN sunday NO_ALIGN sunday sunday earliest NO_ALIGN sunday NO_ALIGN earliest NO_ALIGN sunday sunday earliest NO_ALIGN on NO_ALIGN earliest NO_ALIGN on sunday earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN sunday earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 sunday earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN sunday earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [10, 11], [6, 7], [4, 5], [5, 6], [5, 7], [2, 11], [9, 10], [8, 9], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [7, 9]]}, {"text": "what is the earliest flight from city_name1 to city_name0 leaving on wednesday september fourth", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_number0": "23", "month_number0": "4", "year0": "1991", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 september city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN september wednesday NO_ALIGN wednesday NO_ALIGN wednesday september wednesday NO_ALIGN wednesday NO_ALIGN wednesday september wednesday NO_ALIGN wednesday NO_ALIGN wednesday september wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday september to NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on september to NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN september city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 september city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN september to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN september to NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN wednesday NO_ALIGN earliest NO_ALIGN on NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 september earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN september earliest NO_ALIGN wednesday NO_ALIGN wednesday september earliest NO_ALIGN wednesday NO_ALIGN wednesday september earliest NO_ALIGN wednesday NO_ALIGN wednesday september earliest NO_ALIGN wednesday NO_ALIGN earliest NO_ALIGN wednesday september earliest NO_ALIGN wednesday NO_ALIGN earliest NO_ALIGN on september earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN september earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 september earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN september earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [1, 14], [3, 4], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [5, 7], [10, 14], [7, 8]]}, {"text": "please give me the earliest flight tomorrow from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "ST. PETERSBURG"}, "alignment": "NO_ALIGN NO_ALIGN please NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give please NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN give please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 give please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give please NO_ALIGN from NO_ALIGN please NO_ALIGN the NO_ALIGN give please NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 give earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give earliest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN give earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 give earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "17", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "4", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need to know if there are any direct flights from city_name1 state_name1 to city_name0 state_name0 leaving preferably tomorrow morning", "question-split": "dev", "variables": {"city_name0": "TACOMA", "day_number0": "20", "month_number0": "1", "year0": "1991", "state_name0": "WASHINGTON", "city_name1": "ST. PETERSBURG", "state_name1": "FLORIDA", "departure_time0": "0", "departure_time1": "1200", "connections0": "0"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN there NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name1 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 if flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if flights NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow if flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN there if state_name1 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN state_name1 if state_name1 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN if flights NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN city_name0 if flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN if flights NO_ALIGN from NO_ALIGN there NO_ALIGN there if state_name0 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN state_name1 if state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN if flights NO_ALIGN morning morning morning if morning NO_ALIGN if flights NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [1, 20], [1, 2], [7, 20], [16, 17], [6, 7], [12, 13], [3, 20], [13, 16], [7, 10], [18, 20], [11, 13], [4, 5], [10, 13], [2, 20], [9, 10], [2, 3], [14, 15], [4, 20], [19, 20], [11, 12], [0, 1], [17, 18], [7, 8], [14, 16], [13, 14], [6, 20], [5, 20], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name1\" ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.CONNECTIONS = connections0 ;"], "variables": [{"example": "TACOMA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "WASHINGTON", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "FLORIDA", "location": "unk", "name": "state_name1", "type": "state_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what planes are used by airline_code0", "question-split": "dev", "variables": {"airline_code0": "TW"}, "alignment": "NO_ALIGN NO_ALIGN planes NO_ALIGN planes NO_ALIGN used NO_ALIGN planes NO_ALIGN used NO_ALIGN planes NO_ALIGN NO_ALIGN NO_ALIGN by NO_ALIGN planes NO_ALIGN planes NO_ALIGN planes NO_ALIGN planes are by NO_ALIGN used NO_ALIGN planes NO_ALIGN used are by NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"text": "what types of aircraft does airline_code0 fly", "question-split": "dev", "variables": {"airline_code0": "DL"}, "alignment": "NO_ALIGN does aircraft NO_ALIGN types NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN types NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN types NO_ALIGN types NO_ALIGN aircraft NO_ALIGN types of airline_code0 NO_ALIGN aircraft NO_ALIGN types NO_ALIGN aircraft of airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [0, 2], [5, 6], [2, 3], [0, 4], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "UA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how many passengers can a manufacturer0 basic_type0 hold", "question-split": "dev", "variables": {"basic_type0": "737", "manufacturer0": "BOEING"}, "alignment": "NO_ALIGN NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN passengers NO_ALIGN manufacturer0 NO_ALIGN NO_ALIGN manufacturer0 NO_ALIGN how passengers NO_ALIGN manufacturer0 NO_ALIGN NO_ALIGN manufacturer0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.BASIC_TYPE = \"basic_type0\" AND AIRCRAFTalias0.MANUFACTURER = \"manufacturer0\" ;"], "variables": [{"example": "737", "location": "unk", "name": "basic_type0", "type": "basic_type"}, {"example": "BOEING", "location": "unk", "name": "manufacturer0", "type": "manufacturer"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "may i have a listing of flights from city_name1 state_name1 to city_name0 state_name0 on wednesday", "question-split": "dev", "variables": {"city_name0": "COLUMBUS", "day_number0": "23", "month_number0": "4", "year0": "1991", "state_name0": "OHIO", "city_name1": "LONG BEACH", "state_name1": "CALIFORNIA"}, "alignment": "NO_ALIGN NO_ALIGN may NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on NO_ALIGN wednesday NO_ALIGN NO_ALIGN NO_ALIGN may NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN state_name1 NO_ALIGN NO_ALIGN flights NO_ALIGN have NO_ALIGN flights NO_ALIGN have may flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday may wednesday NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN wednesday may may NO_ALIGN wednesday NO_ALIGN wednesday NO_ALIGN on may may NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN have may state_name1 NO_ALIGN state_name1 NO_ALIGN flights NO_ALIGN state_name1 may state_name1 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN may have NO_ALIGN have NO_ALIGN flights NO_ALIGN have may have NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN may may NO_ALIGN from NO_ALIGN flights NO_ALIGN have may state_name0 NO_ALIGN state_name1 NO_ALIGN have NO_ALIGN state_name1 may state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [8, 10], [7, 10], [3, 4], [11, 13], [4, 5], [10, 13], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [3, 5], [0, 1], [13, 14], [2, 15], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , STATE AS STATEalias0 , STATE AS STATEalias1 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias1.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias0.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name1\" ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE ( CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias1.STATE_CODE IN ( SELECT STATEalias1.STATE_CODE FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME = \"state_name0\" ) ) ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE ( CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias0.STATE_CODE IN ( SELECT STATEalias0.STATE_CODE FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name1\" ) ) ) ) ) ;"], "variables": [{"example": "SAN DIEGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "27", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "CALIFORNIA", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "MONTREAL", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "QUEBEC", "location": "unk", "name": "state_name1", "type": "state_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "would you be able to put me on a flight with airline_code0 leaving the morning of month_number0 day_number0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_number0": "27", "month_number0": "8", "year0": "1991", "city_name1": "BALTIMORE", "departure_time0": "0", "departure_time1": "1200", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN you NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN city_name1 NO_ALIGN you would city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 would airline_code0 NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 would airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN you NO_ALIGN would you NO_ALIGN you NO_ALIGN you NO_ALIGN you would you NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would airline_code0 NO_ALIGN from NO_ALIGN you NO_ALIGN you NO_ALIGN would airline_code0 NO_ALIGN morning morning morning would morning NO_ALIGN would airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [8, 9], [13, 17], [15, 16], [2, 22], [18, 19], [4, 22], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [8, 10], [10, 12], [5, 22], [3, 4], [18, 20], [20, 22], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [12, 22], [19, 20], [15, 17], [0, 1], [17, 18], [3, 22], [21, 22], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "SEATTLE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "26", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what ground transportation is available at the city_name0 airport", "question-split": "dev", "variables": {"city_name0": "ATLANTA"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport available transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN ground available transportation NO_ALIGN ground NO_ALIGN NO_ALIGN ground NO_ALIGN available transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4]]}, {"text": "show me the ground transportation in the city_name0 airport", "question-split": "dev", "variables": {"city_name0": "SALT LAKE CITY"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN in NO_ALIGN transportation NO_ALIGN ground NO_ALIGN transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport city_name0 transportation NO_ALIGN in NO_ALIGN airport NO_ALIGN in city_name0 transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN city_name0 transportation NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a round trip flight from city_name1 to city_name0 state_name0", "question-split": "dev", "variables": {"city_name0": "SAN JOSE", "state_name0": "CALIFORNIA", "city_name1": "CINCINNATI"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN trip NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN trip NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN trip NO_ALIGN trip NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 need city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN need trip NO_ALIGN round round round NO_ALIGN need trip NO_ALIGN round NO_ALIGN trip NO_ALIGN round need a NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip need a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN need state_name0 NO_ALIGN state_name0 NO_ALIGN city_name1 NO_ALIGN state_name0 need state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN need city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 need city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN need a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [10, 11], [4, 5], [2, 8], [8, 11], [5, 6], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 , STATE AS STATEalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND STATEalias0.STATE_CODE = CITYalias1.STATE_CODE AND STATEalias0.STATE_NAME = \"state_name0\" ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "SAN JOSE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "CALIFORNIA", "location": "unk", "name": "state_name0", "type": "state_name"}, {"example": "CINCINNATI", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the fare for airline_code0 flight flight_number0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "flight_number0": "217", "city_name1": "DALLAS", "airline_code0": "DL"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN for airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN for city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN for city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare for airline_code0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare for airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [1, 12], [4, 5], [5, 6], [11, 12], [8, 10], [10, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [2, 4], [5, 8]]}, {"text": "what is the fare on airline_code0 flight flight_number0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "DALLAS FORT WORTH", "flight_number0": "928", "airline_code0": "AA"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN on airline_code0 NO_ALIGN flight_number0 NO_ALIGN flight_number0 NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN on city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 on city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare on airline_code0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare on airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [5, 8], [1, 2], [6, 7], [10, 12], [8, 10], [3, 4], [4, 10], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 ) AND ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias0 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FLIGHT_NUMBER = flight_number0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "US", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "3724", "location": "unk", "name": "flight_number0", "type": "flight_number"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "all airline_code0 and airline_code1 flights with stopovers in city_name0", "question-split": "dev", "variables": {"airline_code0": "NW", "airline_code1": "UA", "city_name0": "DENVER"}, "alignment": "NO_ALIGN all stopovers NO_ALIGN with NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN in NO_ALIGN in NO_ALIGN all NO_ALIGN stopovers NO_ALIGN with NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN stopovers NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code1 NO_ALIGN stopovers NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN airline_code1 NO_ALIGN NO_ALIGN NO_ALIGN and in NO_ALIGN in NO_ALIGN all NO_ALIGN in and in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN and with NO_ALIGN with NO_ALIGN all NO_ALIGN in and stopovers NO_ALIGN with NO_ALIGN with NO_ALIGN with NO_ALIGN", "constituency_parser_spans": [[0, 1], [5, 9], [1, 2], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [0, 5], [2, 3], [3, 4], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) OR ( FLIGHTalias0.AIRLINE_CODE = \"airline_code1\" ) ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ;"], "variables": [{"example": "DL", "location": "unk", "name": "airline_code0", "type": "airline_code"}, {"example": "TW", "location": "unk", "name": "airline_code1", "type": "airline_code"}, {"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "city_name1 to city_name0 afternoon day_name0", "question-split": "dev", "variables": {"city_name0": "pittsburgh", "city_name1": "los angeles", "day_name0": "tuesday", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN to NO_ALIGN afternoon NO_ALIGN afternoon NO_ALIGN afternoon NO_ALIGN afternoon NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN afternoon afternoon NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN afternoon city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 afternoon city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN afternoon city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 afternoon city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN afternoon day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN afternoon afternoon NO_ALIGN afternoon afternoon afternoon afternoon afternoon afternoon afternoon NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 afternoon afternoon NO_ALIGN city_name1 NO_ALIGN afternoon NO_ALIGN NO_ALIGN afternoon afternoon NO_ALIGN city_name1 NO_ALIGN afternoon NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias1.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias1.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias0.AIRPORT_CODE ;"], "variables": [{"example": "pittsburgh", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "los angeles", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "tuesday", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the cost of a round trip ticket class_type0 class between airport_code0 and airport_code1", "question-split": "dev", "variables": {"airport_code0": "OAK", "airport_code1": "ATL", "class_type0": "FIRST"}, "alignment": "NO_ALIGN NO_ALIGN cost NO_ALIGN cost NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN class NO_ALIGN cost NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN class NO_ALIGN cost NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code0 NO_ALIGN ticket airport_code0 NO_ALIGN airport_code0 NO_ALIGN NO_ALIGN airport_code1 NO_ALIGN ticket class_type0 NO_ALIGN class_type0 NO_ALIGN NO_ALIGN class_type0 NO_ALIGN ticket cost NO_ALIGN class_type0 NO_ALIGN class_type0 NO_ALIGN class_type0 ticket cost NO_ALIGN cost NO_ALIGN cost NO_ALIGN cost ticket of NO_ALIGN trip NO_ALIGN cost NO_ALIGN trip ticket of NO_ALIGN the NO_ALIGN airport_code0 NO_ALIGN airport_code0 ticket of NO_ALIGN and NO_ALIGN airport_code0 NO_ALIGN airport_code0 NO_ALIGN ticket cost NO_ALIGN round round round NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [4, 5], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [13, 14], [4, 15], [2, 15], [11, 15], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT AS AIRPORTalias0 , AIRPORT AS AIRPORTalias1 , FARE AS FAREalias0 , FARE_BASIS AS FARE_BASISalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( AIRPORTalias0.AIRPORT_CODE = \"airport_code0\" AND AIRPORTalias1.AIRPORT_CODE = \"airport_code1\" AND FARE_BASISalias0.CLASS_TYPE = \"class_type0\" AND FAREalias0.FARE_BASIS_CODE = FARE_BASISalias0.FARE_BASIS_CODE AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORTalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORTalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST IS NOT NULL ;"], "variables": [{"example": "OAK", "location": "unk", "name": "airport_code0", "type": "airport_code"}, {"example": "ATL", "location": "unk", "name": "airport_code1", "type": "airport_code"}, {"example": "FIRST", "location": "unk", "name": "class_type0", "type": "class_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "list the cheapest round trip flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ORLANDO", "city_name1": "KANSAS CITY"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN trip NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN trip NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN cheapest NO_ALIGN trip NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 trip NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN round NO_ALIGN NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN NO_ALIGN NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN cheapest NO_ALIGN city_name0 city_name1 cheapest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 cheapest NO_ALIGN cheapest NO_ALIGN cheapest NO_ALIGN cheapest city_name1 cheapest NO_ALIGN trip NO_ALIGN cheapest NO_ALIGN trip city_name1 cheapest NO_ALIGN from NO_ALIGN cheapest NO_ALIGN list city_name1 cheapest NO_ALIGN city_name1 NO_ALIGN cheapest NO_ALIGN list NO_ALIGN city_name1 trip NO_ALIGN cheapest NO_ALIGN trip NO_ALIGN cheapest city_name1 flights NO_ALIGN trip NO_ALIGN trip NO_ALIGN trip NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [8, 9], [9, 10], [1, 6], [0, 10], [2, 3], [1, 10], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "MIAMI", "city_name1": "NEW YORK"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN show NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 city_name1 city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares city_name1 show NO_ALIGN me NO_ALIGN fares NO_ALIGN me city_name1 show NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 show NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [3, 5]]}, {"text": "please show me fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "DENVER", "city_name1": "SAN FRANCISCO"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN fares NO_ALIGN fares NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 city_name1 please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 city_name1 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares city_name1 please NO_ALIGN me NO_ALIGN fares NO_ALIGN me city_name1 please NO_ALIGN from NO_ALIGN please NO_ALIGN NO_ALIGN city_name1 please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [5, 6], [3, 8], [1, 8], [2, 3], [3, 4]]}, {"text": "fares between city_name0 and city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN between and city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN and between NO_ALIGN between NO_ALIGN between NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN and fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares and city_name1 NO_ALIGN and NO_ALIGN fares NO_ALIGN and and city_name1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between and city_name1 NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"text": "how much is a flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN much NO_ALIGN much NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN is NO_ALIGN much NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN much NO_ALIGN how NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 how how NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN how city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 how city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN how much NO_ALIGN much NO_ALIGN much NO_ALIGN much how a NO_ALIGN a NO_ALIGN much NO_ALIGN a how a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN how a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [7, 9], [5, 7], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"text": "show me the air fare for the flights from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN air NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN fare NO_ALIGN air NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN fare NO_ALIGN air NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 for flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 for flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for air NO_ALIGN fare NO_ALIGN air NO_ALIGN fare for flights NO_ALIGN fare NO_ALIGN air NO_ALIGN fare for flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the for flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [7, 8]]}, {"text": "give me fares from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fares NO_ALIGN fares NO_ALIGN NO_ALIGN NO_ALIGN me NO_ALIGN fares NO_ALIGN fares NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 give city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give fares NO_ALIGN fares NO_ALIGN fares NO_ALIGN fares give me NO_ALIGN me NO_ALIGN fares NO_ALIGN me give me NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN NO_ALIGN give me NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;", "SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_COST IS NOT NULL AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "WASHINGTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what 's the lowest round trip fare from city_name0 to any city", "question-split": "dev", "variables": {"city_name0": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN to NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 any city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN any fare NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN round NO_ALIGN NO_ALIGN to NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN fare NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN 's NO_ALIGN fare NO_ALIGN lowest NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN to NO_ALIGN city_name0 any to NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN any lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare any 's NO_ALIGN trip NO_ALIGN lowest NO_ALIGN trip any 's NO_ALIGN from NO_ALIGN to NO_ALIGN the NO_ALIGN any fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare any to NO_ALIGN trip NO_ALIGN fare NO_ALIGN trip any to NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [2, 7], [3, 5], [1, 12], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias1 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me flights from city_name1 to city_name0 on day_name0", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "day_name0": "WEDNESDAY", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 on flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN on flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 on flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [3, 5], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [3, 4], [2, 3], [0, 9], [3, 7], [7, 8], [7, 9]]}, {"text": "what are the day_name0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_name0": "SUNDAY", "city_name1": "OAKLAND"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN are flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN are flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"text": "i want to travel from city_name1 to city_name0 on a day_name0", "question-split": "dev", "variables": {"city_name0": "WASHINGTON", "day_name0": "MONDAY", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN want NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 travel city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN travel day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN travel want NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 travel want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN travel city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 travel city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN travel want NO_ALIGN from NO_ALIGN want NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [3, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4]]}, {"text": "please show me the city_name1 to city_name0 day_name0 flights again", "question-split": "dev", "variables": {"city_name0": "DENVER", "day_name0": "SATURDAY", "city_name1": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN again NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN again NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 again flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN again day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN again again NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 again again NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN again please NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 again please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN again again NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [9, 10], [8, 9], [2, 3], [1, 10], [3, 4], [3, 5]]}, {"text": "list day_name0 flights from city_name1 to city_name0", "question-split": "dev", "variables": {"day_name0": "SATURDAY", "city_name0": "BOSTON", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name1 day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN day_name0 NO_ALIGN city_name1 flights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 city_name1 flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN list NO_ALIGN city_name1 flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 city_name1 flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name1 flights NO_ALIGN from NO_ALIGN flights NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME = \"day_name0\" ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "SATURDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "DENVER", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what airline is airline_code0 the abbreviation for", "question-split": "dev", "variables": {"airline_code0": "EA"}, "alignment": "NO_ALIGN NO_ALIGN abbreviation NO_ALIGN airline NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN airline NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = \"airline_code0\" ;", "SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE , AIRLINEalias0.AIRLINE_NAME , AIRLINEalias0.NOTE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "EA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what flights are there arriving in city_name0 after arrival_time0 on airline_code0", "question-split": "dev", "variables": {"city_name0": "CHICAGO", "arrival_time0": "2100", "airline_code0": "CO"}, "alignment": "NO_ALIGN in arrival_time0 NO_ALIGN are NO_ALIGN city_name0 NO_ALIGN there NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN there NO_ALIGN in arriving in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 arriving arrival_time0 NO_ALIGN flights NO_ALIGN there NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2], [4, 11], [7, 9]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME > arrival_time0 AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "CHICAGO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "2300", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the distance between city_name0 airport and downtown city_name0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH"}, "alignment": "NO_ALIGN airport airport NO_ALIGN distance NO_ALIGN airport NO_ALIGN airport NO_ALIGN between NO_ALIGN airport NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN downtown NO_ALIGN between NO_ALIGN between NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport and airport NO_ALIGN airport NO_ALIGN between NO_ALIGN airport and downtown NO_ALIGN between NO_ALIGN between NO_ALIGN between and downtown NO_ALIGN between NO_ALIGN NO_ALIGN downtown NO_ALIGN and between NO_ALIGN between NO_ALIGN airport NO_ALIGN between and between NO_ALIGN between NO_ALIGN NO_ALIGN downtown NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT AIRPORT_SERVICEalias0.MILES_DISTANT FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "PITTSBURGH", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the abbreviation for airline_name0", "question-split": "dev", "variables": {"airline_name0": "CANADIAN AIRLINES INTERNATIONAL"}, "alignment": "NO_ALIGN NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN abbreviation NO_ALIGN airline_name0 airline_name0 NO_ALIGN airline_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT AIRLINEalias0.AIRLINE_CODE FROM AIRLINE AS AIRLINEalias0 WHERE AIRLINEalias0.AIRLINE_NAME LIKE \"airline_name0\" ;"], "variables": [{"example": "CANADIAN AIRLINES INTERNATIONAL", "location": "unk", "name": "airline_name0", "type": "airline_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "can you transport_type0 at airport_name0 airport in city_name0", "question-split": "dev", "variables": {"airport_name0": "STAPLETON INTERNATIONAL", "city_name0": "DENVER", "transport_type0": "RENTAL CAR"}, "alignment": "NO_ALIGN at transport_type0 NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN in NO_ALIGN airport NO_ALIGN transport_type0 NO_ALIGN transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport you airport NO_ALIGN airport_name0 airport_name0 NO_ALIGN airport_name0 NO_ALIGN you airport NO_ALIGN in NO_ALIGN airport NO_ALIGN in you airport NO_ALIGN in NO_ALIGN NO_ALIGN airport NO_ALIGN you transport_type0 NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport you transport_type0 NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN transport_type0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 6], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND AIRPORTalias0.AIRPORT_NAME LIKE \"airport_name0\" AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND GROUND_SERVICEalias0.AIRPORT_CODE = AIRPORTalias0.AIRPORT_CODE AND GROUND_SERVICEalias0.TRANSPORT_TYPE = \"transport_type0\" ;"], "variables": [{"example": "STAPLETON INTERNATIONAL", "location": "unk", "name": "airport_name0", "type": "airport_name"}, {"example": "DENVER", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "RENTAL CAR", "location": "unk", "name": "transport_type0", "type": "transport_type"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me the lowest fare for a round trip flight from city_name0 to city_name1", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "city_name1": "DALLAS"}, "alignment": "NO_ALIGN NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN fare NO_ALIGN fare NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN fare NO_ALIGN fare NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 for city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 for city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for fare NO_ALIGN round NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN round NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN flight NO_ALIGN city_name0 NO_ALIGN flight NO_ALIGN city_name0 for flight NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN for lowest NO_ALIGN city_name0 NO_ALIGN lowest NO_ALIGN city_name0 for lowest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN for lowest NO_ALIGN fare NO_ALIGN lowest NO_ALIGN fare for lowest NO_ALIGN trip NO_ALIGN lowest NO_ALIGN trip for lowest NO_ALIGN from NO_ALIGN flight NO_ALIGN the for lowest NO_ALIGN city_name1 NO_ALIGN lowest NO_ALIGN the NO_ALIGN for fare NO_ALIGN fare NO_ALIGN fare NO_ALIGN fare for a NO_ALIGN trip NO_ALIGN fare NO_ALIGN trip for a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the for a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [8, 9], [2, 5], [6, 14], [1, 2], [6, 7], [12, 13], [6, 10], [10, 12], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FAREalias0.FARE_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FARE AS FAREalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_FARE AS FLIGHT_FAREalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FAREalias0.ROUND_TRIP_COST = ( SELECT MIN( FAREalias1.ROUND_TRIP_COST ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FARE AS FAREalias1 , FLIGHT AS FLIGHTalias1 , FLIGHT_FARE AS FLIGHT_FAREalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHT_FAREalias1.FARE_ID = FAREalias1.FARE_ID AND FLIGHTalias1.FLIGHT_ID = FLIGHT_FAREalias1.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHT_FAREalias0.FARE_ID = FAREalias0.FARE_ID AND FLIGHTalias0.FLIGHT_ID = FLIGHT_FAREalias0.FLIGHT_ID AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "which flight between city_name1 and city_name0 on month_number0 day_number0 has the smallest seating capacity", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "19", "month_number0": "7", "year0": "1991", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN NO_ALIGN which NO_ALIGN and NO_ALIGN seating NO_ALIGN seating NO_ALIGN between NO_ALIGN which NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flight NO_ALIGN between NO_ALIGN flight NO_ALIGN between NO_ALIGN city_name0 NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN flight NO_ALIGN between NO_ALIGN flight NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN flight NO_ALIGN NO_ALIGN NO_ALIGN between NO_ALIGN between NO_ALIGN between NO_ALIGN between has between NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 has which NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 has which NO_ALIGN city_name1 NO_ALIGN between NO_ALIGN between NO_ALIGN has city_name0 NO_ALIGN between NO_ALIGN which NO_ALIGN between has city_name0 NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN has which NO_ALIGN city_name1 NO_ALIGN which NO_ALIGN between NO_ALIGN has NO_ALIGN flight NO_ALIGN between NO_ALIGN flight NO_ALIGN between has flight NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has month_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 has month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN day_number0 has flight NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 has flight NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN between NO_ALIGN has seating NO_ALIGN seating NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN seating NO_ALIGN seating NO_ALIGN NO_ALIGN seating NO_ALIGN seating NO_ALIGN between NO_ALIGN the NO_ALIGN between NO_ALIGN the NO_ALIGN between NO_ALIGN the NO_ALIGN between NO_ALIGN the NO_ALIGN month_number0 NO_ALIGN smallest NO_ALIGN month_number0 NO_ALIGN and NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN NO_ALIGN the NO_ALIGN between NO_ALIGN the NO_ALIGN between has the NO_ALIGN between NO_ALIGN NO_ALIGN city_name0 NO_ALIGN has smallest NO_ALIGN month_number0 NO_ALIGN month_number0 has smallest NO_ALIGN month_number0 NO_ALIGN month_number0 has smallest NO_ALIGN month_number0 NO_ALIGN month_number0 has and NO_ALIGN day_number0 NO_ALIGN smallest NO_ALIGN day_number0 has smallest NO_ALIGN on NO_ALIGN and NO_ALIGN month_number0 has smallest NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN between NO_ALIGN has the NO_ALIGN between NO_ALIGN the NO_ALIGN between has the NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN has smallest NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating has smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest has smallest NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN between NO_ALIGN has flight NO_ALIGN between NO_ALIGN flight NO_ALIGN between has flight NO_ALIGN between NO_ALIGN NO_ALIGN city_name1 NO_ALIGN has smallest NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating has smallest NO_ALIGN seating NO_ALIGN seating NO_ALIGN seating has which NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest has flight NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest has flight NO_ALIGN city_name1 NO_ALIGN flight NO_ALIGN between NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [3, 4], [9, 14], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [13, 14], [10, 14], [0, 9], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias0 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias0 , DAYS AS DAYSalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias1 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND AIRCRAFTalias0.CAPACITY = ( SELECT MIN( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , DATE_DAY AS DATE_DAYalias2 , DAYS AS DAYSalias2 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias2 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name0\" AND DATE_DAYalias2.DAY_NUMBER = day_number0 AND DATE_DAYalias2.MONTH_NUMBER = month_number0 AND DATE_DAYalias2.YEAR = year0 AND DAYSalias2.DAY_NAME = DATE_DAYalias2.DAY_NAME AND FLIGHTalias2.FLIGHT_DAYS = DAYSalias2.DAYS_CODE AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE = AIRCRAFTalias1.AIRCRAFT_CODE AND FLIGHTalias2.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias2.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias1.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ;"], "variables": [{"example": "BALTIMORE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "19", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "7", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "does the city_name0 airport have a name", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA"}, "alignment": "NO_ALIGN does name NO_ALIGN airport NO_ALIGN airport NO_ALIGN name NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN city_name0 NO_ALIGN airport NO_ALIGN name NO_ALIGN airport NO_ALIGN airport NO_ALIGN airport a airport NO_ALIGN have NO_ALIGN airport NO_ALIGN have a airport NO_ALIGN city_name0 NO_ALIGN NO_ALIGN airport NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [1, 4], [2, 3], [3, 4]]}, {"text": "airports in city_name0", "question-split": "dev", "variables": {"city_name0": "NEW YORK"}, "alignment": "NO_ALIGN airports airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN city_name0 NO_ALIGN airports NO_ALIGN in NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports city_name0 airports NO_ALIGN in NO_ALIGN airports NO_ALIGN in city_name0 airports NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"text": "please show me all airports in city_name0", "question-split": "dev", "variables": {"city_name0": "DENVER"}, "alignment": "NO_ALIGN airports airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN city_name0 NO_ALIGN airports NO_ALIGN in NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports city_name0 airports NO_ALIGN in NO_ALIGN airports NO_ALIGN in city_name0 airports NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [1, 7], [3, 7], [3, 4], [3, 5]]}, {"text": "list airports in city_name0", "question-split": "dev", "variables": {"city_name0": "LOS ANGELES"}, "alignment": "NO_ALIGN airports airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN city_name0 NO_ALIGN airports NO_ALIGN in NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports city_name0 airports NO_ALIGN in NO_ALIGN airports NO_ALIGN in city_name0 airports NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"text": "list the airports in city_name0", "question-split": "dev", "variables": {"city_name0": "LOS ANGELES"}, "alignment": "NO_ALIGN airports airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN city_name0 NO_ALIGN airports NO_ALIGN in NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports NO_ALIGN airports city_name0 airports NO_ALIGN in NO_ALIGN airports NO_ALIGN in city_name0 airports NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 WHERE AIRPORTalias0.AIRPORT_CODE = AIRPORT_SERVICEalias0.AIRPORT_CODE AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" ;", "SELECT DISTINCT AIRPORTalias0.AIRPORT_CODE FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_CODE IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ) ) ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "show me all flights direct only from city_name2 to city_name0 or city_name1 that arrive before arrival_time0 local time", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "OAKLAND", "arrival_time0": "1000", "city_name2": "BOSTON", "connections0": "0"}, "alignment": "NO_ALIGN all only NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN all NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN all NO_ALIGN only NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN only NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN that or flights NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN city_name0 or flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN flights NO_ALIGN only NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN that or city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 or city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN or only NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 NO_ALIGN or all NO_ALIGN city_name0 NO_ALIGN all NO_ALIGN city_name0 or all NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN or only NO_ALIGN from NO_ALIGN all NO_ALIGN that NO_ALIGN or only NO_ALIGN direct NO_ALIGN direct NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [4, 18], [8, 9], [15, 16], [9, 18], [1, 2], [16, 17], [6, 7], [12, 13], [14, 18], [15, 18], [3, 4], [4, 5], [9, 10], [12, 18], [2, 3], [14, 15], [11, 12], [0, 1], [17, 18], [13, 14], [13, 18], [8, 18], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" ) OR ( FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" ) ) AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.CONNECTIONS = connections0 ;"], "variables": [{"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "OAKLAND", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1000", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name2", "type": "city_name"}, {"example": "0", "location": "unk", "name": "connections0", "type": "connections"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i'd like the earliest flight information from city_name1 to city_name0 with a meal", "question-split": "dev", "variables": {"city_name0": "SAN FRANCISCO", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN a NO_ALIGN with NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN a NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN i'd NO_ALIGN city_name1 NO_ALIGN i'd like city_name1 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like a NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN i'd like meal NO_ALIGN meal NO_ALIGN a NO_ALIGN meal NO_ALIGN like city_name0 NO_ALIGN i'd NO_ALIGN city_name0 NO_ALIGN i'd like city_name0 NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like a NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN i'd NO_ALIGN like a NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN meal NO_ALIGN meal NO_ALIGN NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd like earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name0 NO_ALIGN like earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN i'd like meal NO_ALIGN meal NO_ALIGN earliest NO_ALIGN meal NO_ALIGN like earliest NO_ALIGN i'd NO_ALIGN earliest NO_ALIGN i'd like earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN city_name1 NO_ALIGN like earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN i'd NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [7, 11], [3, 7], [1, 2], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [7, 9], [0, 1], [13, 14], [7, 8]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 , FOOD_SERVICE AS FOOD_SERVICEalias1 WHERE ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE AND FOOD_SERVICEalias1.MEAL_CODE = FLIGHTalias1.MEAL_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) ;"], "variables": [{"example": "OAKLAND", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me all airline_code0 flights please", "question-split": "dev", "variables": {"airline_code0": "TW"}, "alignment": "NO_ALIGN all all NO_ALIGN me NO_ALIGN all NO_ALIGN all NO_ALIGN all NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ;"], "variables": [{"example": "CO", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "please list the flight schedule from city_name1 to city_name0 on day_name0 nights", "question-split": "dev", "variables": {"departure_time0": "2400", "departure_time1": "1800", "day_name0": "FRIDAY", "departure_time2": "600", "departure_time3": "0", "day_name1": "SATURDAY", "city_name0": "SAN FRANCISCO", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN NO_ALIGN please NO_ALIGN the NO_ALIGN please NO_ALIGN nights NO_ALIGN city_name1 NO_ALIGN please NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN NO_ALIGN please NO_ALIGN NO_ALIGN NO_ALIGN nights NO_ALIGN schedule NO_ALIGN schedule NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN nights NO_ALIGN nights city_name1 flight on nights NO_ALIGN nights city_name1 to NO_ALIGN on day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on nights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN list NO_ALIGN NO_ALIGN nights NO_ALIGN nights city_name1 from on nights NO_ALIGN nights city_name1 from NO_ALIGN on day_name0 NO_ALIGN on NO_ALIGN NO_ALIGN day_name0 NO_ALIGN on nights NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN day_name0 NO_ALIGN NO_ALIGN on city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 on city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN on nights NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN list NO_ALIGN on please NO_ALIGN city_name0 NO_ALIGN please NO_ALIGN city_name0 on please NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN on please NO_ALIGN to NO_ALIGN schedule NO_ALIGN schedule on nights NO_ALIGN to NO_ALIGN schedule NO_ALIGN to on nights NO_ALIGN from NO_ALIGN please NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [2, 5], [1, 2], [6, 7], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [1, 12], [5, 7], [7, 8], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.ARRIVAL_TIME , FLIGHTalias0.DEPARTURE_TIME FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT AS FLIGHTalias1 , FLIGHT_LEG AS FLIGHT_LEGalias0 WHERE ( ( ( ( FLIGHTalias1.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias1.DEPARTURE_TIME >= departure_time1 ) AND DAYSalias0.DAY_NAME = \"day_name0\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias1.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias1.DEPARTURE_TIME >= departure_time3 ) AND DAYSalias0.DAY_NAME = \"day_name1\" AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FLIGHT_ID = FLIGHT_LEGalias0.LEG_FLIGHT AND FLIGHTalias1.FLIGHT_ID = FLIGHT_LEGalias0.FLIGHT_ID AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "2400", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "FRIDAY", "location": "unk", "name": "day_name0", "type": "day_name"}, {"example": "600", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "SATURDAY", "location": "unk", "name": "day_name1", "type": "day_name"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BALTIMORE", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "how can i get from city_name1 to city_name0 and back in the same day and have the most hours on the ground in city_name0", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN ground have NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN get NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN have NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN day NO_ALIGN city_name1 NO_ALIGN day most city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN most have NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN the NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN can NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN can NO_ALIGN in NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN can NO_ALIGN day NO_ALIGN can NO_ALIGN day most can NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most the NO_ALIGN day NO_ALIGN the NO_ALIGN day most the NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN most the NO_ALIGN from NO_ALIGN can NO_ALIGN in most the NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN most have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN most get NO_ALIGN day NO_ALIGN have NO_ALIGN day most get NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most have NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN and NO_ALIGN NO_ALIGN city_name1 NO_ALIGN day NO_ALIGN city_name1 NO_ALIGN day most city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most have NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN hours NO_ALIGN the NO_ALIGN NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in NO_ALIGN the NO_ALIGN in NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN hours NO_ALIGN NO_ALIGN the NO_ALIGN day NO_ALIGN the NO_ALIGN day most the NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN most hours NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN in most the NO_ALIGN hours NO_ALIGN in NO_ALIGN hours NO_ALIGN the NO_ALIGN NO_ALIGN most the NO_ALIGN day NO_ALIGN the NO_ALIGN day most the NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN most hours NO_ALIGN from NO_ALIGN the NO_ALIGN in NO_ALIGN most have NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN most get NO_ALIGN day NO_ALIGN have NO_ALIGN day most get NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN most have NO_ALIGN from NO_ALIGN have NO_ALIGN in NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [22, 23], [5, 6], [8, 9], [18, 19], [19, 22], [11, 14], [3, 14], [3, 24], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [3, 4], [22, 24], [20, 22], [4, 5], [9, 10], [2, 3], [14, 15], [16, 19], [19, 20], [23, 24], [11, 12], [0, 1], [7, 8], [17, 18], [15, 24], [4, 6], [6, 8], [13, 14], [21, 22], [10, 14], [15, 16]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.ARRIVAL_TIME = ( SELECT MIN( FLIGHTalias1.ARRIVAL_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) OR ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MAX( FLIGHTalias2.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias4 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias5 , CITY AS CITYalias4 , CITY AS CITYalias5 , FLIGHT AS FLIGHTalias2 WHERE ( CITYalias5.CITY_CODE = AIRPORT_SERVICEalias5.CITY_CODE AND CITYalias5.CITY_NAME = \"city_name1\" AND FLIGHTalias2.TO_AIRPORT = AIRPORT_SERVICEalias5.AIRPORT_CODE AND NOT ( FLIGHTalias2.ARRIVAL_TIME < FLIGHTalias2.DEPARTURE_TIME ) ) AND CITYalias4.CITY_CODE = AIRPORT_SERVICEalias4.CITY_CODE AND CITYalias4.CITY_NAME = \"city_name0\" AND FLIGHTalias2.FROM_AIRPORT = AIRPORT_SERVICEalias4.AIRPORT_CODE ) AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "BOSTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "what aircraft has the largest seating capacity", "question-split": "dev", "variables": {}, "alignment": "NO_ALIGN NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN aircraft NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.CAPACITY = ( SELECT MAX( AIRCRAFTalias1.CAPACITY ) FROM AIRCRAFT AS AIRCRAFTalias1 ) ;"], "variables": []}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i would like a flight from city_name1 to city_name0 leaving at departure_time0 on month_number0 day_number0", "question-split": "dev", "variables": {"day_number0": "20", "month_number0": "8", "year0": "1991", "departure_time0": "230", "city_name0": "BOSTON", "city_name1": "WASHINGTON"}, "alignment": "NO_ALIGN at at NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 would month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 would at NO_ALIGN departure_time0 NO_ALIGN departure_time0 would at NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN would city_name1 NO_ALIGN like NO_ALIGN city_name1 NO_ALIGN like would city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN would at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN would at NO_ALIGN like NO_ALIGN at NO_ALIGN like would at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN would at NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [8, 9], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [4, 5], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [3, 5], [12, 15], [13, 14], [5, 7], [2, 15], [7, 8]]}, {"text": "is there a flight leaving at departure_time0 from city_name1 to city_name0 on month_number0 day_number0 year0", "question-split": "dev", "variables": {"day_number0": "25", "month_number0": "7", "year0": "1991", "departure_time0": "1505", "city_name0": "BALTIMORE", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN at at NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN year0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN at NO_ALIGN NO_ALIGN NO_ALIGN year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 year0 NO_ALIGN month_number0 NO_ALIGN month_number0 year0 month_number0 NO_ALIGN day_number0 NO_ALIGN year0 NO_ALIGN day_number0 year0 at NO_ALIGN departure_time0 NO_ALIGN departure_time0 year0 at NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN year0 city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 year0 city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN year0 at NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN at NO_ALIGN year0 at NO_ALIGN city_name0 NO_ALIGN at NO_ALIGN city_name0 year0 at NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN year0 at NO_ALIGN from NO_ALIGN at NO_ALIGN at NO_ALIGN", "constituency_parser_spans": [[5, 9], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [9, 11], [3, 4], [12, 14], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [12, 15], [13, 14], [2, 15], [11, 15], [7, 8], [2, 4]]}, {"text": "what flights are available from city_name1 to city_name0 on month_number0 day_number0 departure_time0", "question-split": "dev", "variables": {"day_number0": "7", "month_number0": "7", "year0": "1991", "departure_time0": "800", "city_name0": "ATLANTA", "city_name1": "BOSTON"}, "alignment": "NO_ALIGN NO_ALIGN flights NO_ALIGN are NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN city_name0 NO_ALIGN available NO_ALIGN city_name0 NO_ALIGN flights NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 are month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 are flights NO_ALIGN departure_time0 NO_ALIGN departure_time0 are flights NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN are flights NO_ALIGN available NO_ALIGN flights NO_ALIGN available are flights NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN are flights NO_ALIGN city_name1 NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN are available NO_ALIGN available NO_ALIGN flights NO_ALIGN available are available NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN are flights NO_ALIGN from NO_ALIGN flights NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [8, 12], [4, 5], [5, 6], [10, 11], [11, 12], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4], [0, 2], [9, 12]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.DEPARTURE_TIME = departure_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "8", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "230", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "WASHINGTON", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight tonight from city_name2 to city_name1 with a stop in city_name0 and i want meal_description0", "question-split": "dev", "variables": {"departure_time0": "2359", "departure_time1": "1800", "day_number0": "6", "month_number0": "5", "year0": "1991", "departure_time2": "600", "departure_time3": "0", "day_number1": "7", "meal_description0": "DINNER", "city_name0": "ST. LOUIS", "city_name1": "LAS VEGAS", "city_name2": "CHARLOTTE"}, "alignment": "NO_ALIGN in want NO_ALIGN with NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN i NO_ALIGN tonight NO_ALIGN i NO_ALIGN need NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN city_name2 NO_ALIGN stop NO_ALIGN meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN want NO_ALIGN flight and i tonight want NO_ALIGN flight city_name1 to NO_ALIGN tonight tonight NO_ALIGN i NO_ALIGN i tonight tonight NO_ALIGN i NO_ALIGN i tonight tonight NO_ALIGN i NO_ALIGN i tonight need NO_ALIGN need NO_ALIGN tonight NO_ALIGN need tonight want NO_ALIGN i NO_ALIGN need NO_ALIGN i NO_ALIGN and NO_ALIGN NO_ALIGN want NO_ALIGN flight and from tonight want NO_ALIGN flight city_name1 from NO_ALIGN tonight tonight NO_ALIGN i NO_ALIGN i tonight tonight NO_ALIGN i NO_ALIGN i tonight tonight NO_ALIGN i NO_ALIGN i tonight need NO_ALIGN need NO_ALIGN tonight NO_ALIGN need tonight want NO_ALIGN i NO_ALIGN need NO_ALIGN i NO_ALIGN NO_ALIGN tonight meal_description0 NO_ALIGN meal_description0 NO_ALIGN want NO_ALIGN meal_description0 tonight meal_description0 NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN meal_description0 NO_ALIGN NO_ALIGN tonight city_name2 NO_ALIGN in NO_ALIGN city_name2 NO_ALIGN in tonight city_name2 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN tonight stop NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN in tonight want NO_ALIGN with NO_ALIGN stop NO_ALIGN with NO_ALIGN tonight city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in tonight city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN tonight want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN tonight in NO_ALIGN in NO_ALIGN want NO_ALIGN in tonight in NO_ALIGN in NO_ALIGN NO_ALIGN city_name2 NO_ALIGN tonight want NO_ALIGN from NO_ALIGN want NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [0, 14], [15, 16], [8, 9], [1, 2], [16, 17], [6, 7], [12, 13], [1, 14], [10, 12], [15, 18], [16, 18], [9, 14], [12, 14], [4, 5], [9, 10], [14, 15], [2, 3], [11, 12], [7, 9], [0, 1], [17, 18], [7, 8], [13, 14], [5, 7], [10, 14], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 , FOOD_SERVICE AS FOOD_SERVICEalias0 WHERE ( ( ( ( ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time0 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time1 ) AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) OR ( ( FLIGHTalias0.DEPARTURE_TIME <= departure_time2 AND FLIGHTalias0.DEPARTURE_TIME >= departure_time3 ) AND DATE_DAYalias0.DAY_NUMBER = day_number1 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) ) AND FOOD_SERVICEalias0.MEAL_CODE = FLIGHTalias0.MEAL_CODE AND FOOD_SERVICEalias0.MEAL_DESCRIPTION = \"meal_description0\" ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "2359", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}, {"example": "6", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "5", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "600", "location": "unk", "name": "departure_time2", "type": "departure_time"}, {"example": "0", "location": "unk", "name": "departure_time3", "type": "departure_time"}, {"example": "7", "location": "unk", "name": "day_number1", "type": "day_number"}, {"example": "DINNER", "location": "unk", "name": "meal_description0", "type": "meal_description"}, {"example": "ST. LOUIS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "LAS VEGAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "CHARLOTTE", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "test", "sentences": [{"text": "i want to fly from city_name2 to city_name0 to city_name1 on monday july eighth", "question-split": "dev", "variables": {"city_name0": "DALLAS", "day_number0": "21", "month_number0": "2", "year0": "1991", "city_name1": "SAN FRANCISCO", "city_name2": "PHILADELPHIA"}, "alignment": "NO_ALIGN NO_ALIGN fly NO_ALIGN city_name2 NO_ALIGN city_name1 NO_ALIGN want NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN NO_ALIGN NO_ALIGN fly NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN NO_ALIGN city_name2 NO_ALIGN city_name0 NO_ALIGN city_name2 NO_ALIGN city_name0 want city_name2 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN want monday NO_ALIGN monday NO_ALIGN monday want monday NO_ALIGN monday NO_ALIGN monday want monday NO_ALIGN monday NO_ALIGN monday want monday NO_ALIGN monday NO_ALIGN monday NO_ALIGN monday want city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN NO_ALIGN want fly NO_ALIGN on NO_ALIGN monday NO_ALIGN on want fly NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN city_name2 NO_ALIGN want city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 want city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN want fly NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN want city_name0 NO_ALIGN city_name0 NO_ALIGN want NO_ALIGN city_name0 want city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name2 NO_ALIGN want fly NO_ALIGN from NO_ALIGN want NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [4, 8], [5, 6], [8, 9], [11, 14], [3, 14], [1, 2], [6, 7], [12, 13], [1, 14], [8, 10], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [7, 8], [4, 6], [6, 8], [13, 14], [10, 14], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , CITY AS CITYalias0 , CITY AS CITYalias1 , CITY AS CITYalias2 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 , FLIGHT_STOP AS FLIGHT_STOPalias0 WHERE ( ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHT_STOPalias0.STOP_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.FLIGHT_ID = FLIGHT_STOPalias0.FLIGHT_ID ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name2\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "21", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "2", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "SAN FRANCISCO", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "PHILADELPHIA", "location": "unk", "name": "city_name2", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what type of aircraft is used on the first flight from city_name0 to city_name1 in the morning", "question-split": "dev", "variables": {"city_name0": "PHILADELPHIA", "city_name1": "DALLAS", "departure_time0": "0", "departure_time1": "1200"}, "alignment": "NO_ALIGN in aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN aircraft NO_ALIGN used NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN in of in NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN of city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in of city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of of NO_ALIGN from NO_ALIGN in NO_ALIGN in of of NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN of of NO_ALIGN morning morning morning of morning NO_ALIGN of used NO_ALIGN aircraft NO_ALIGN aircraft NO_ALIGN aircraft of of NO_ALIGN used NO_ALIGN used NO_ALIGN used of of NO_ALIGN morning NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN first NO_ALIGN morning NO_ALIGN NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN NO_ALIGN NO_ALIGN first NO_ALIGN NO_ALIGN first NO_ALIGN in NO_ALIGN first NO_ALIGN in of first NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN of first NO_ALIGN in NO_ALIGN first NO_ALIGN in of first NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of first NO_ALIGN from NO_ALIGN first NO_ALIGN in of first NO_ALIGN city_name1 NO_ALIGN first NO_ALIGN in NO_ALIGN of first NO_ALIGN morning morning morning of morning NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[14, 17], [10, 11], [5, 6], [8, 9], [15, 16], [2, 4], [6, 14], [1, 2], [16, 17], [6, 7], [12, 13], [10, 12], [7, 10], [0, 4], [12, 14], [4, 5], [5, 17], [9, 10], [2, 3], [14, 15], [11, 12], [15, 17], [0, 1], [7, 8], [13, 14], [4, 17], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , FLIGHT AS FLIGHTalias1 WHERE ( CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name0\" AND CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND FLIGHTalias1.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ) ;"], "variables": [{"example": "PHILADELPHIA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DALLAS", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "0", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1200", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "show me ground transportation in city_name0 and in city_name1", "question-split": "dev", "variables": {"city_name0": "BOSTON", "city_name1": "BALTIMORE"}, "alignment": "NO_ALIGN ground transportation NO_ALIGN ground NO_ALIGN in NO_ALIGN transportation NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN ground NO_ALIGN transportation NO_ALIGN NO_ALIGN transportation NO_ALIGN in NO_ALIGN transportation NO_ALIGN in and transportation NO_ALIGN in NO_ALIGN NO_ALIGN ground NO_ALIGN NO_ALIGN and NO_ALIGN transportation NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in and city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [4, 9], [4, 6], [2, 9], [6, 7], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT DISTINCT GROUND_SERVICEalias0.TRANSPORT_TYPE FROM CITY AS CITYalias0 , CITY AS CITYalias1 , GROUND_SERVICE AS GROUND_SERVICEalias0 WHERE ( GROUND_SERVICEalias0.CITY_CODE = CITYalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" ) OR ( GROUND_SERVICEalias0.CITY_CODE = CITYalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" ) ;"], "variables": [{"example": "DALLAS", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "FORT WORTH", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what is the earliest airline_code0 flight flying from city_name1 to city_name0 and arriving on month_number0 day_number0", "question-split": "dev", "variables": {"city_name0": "BALTIMORE", "day_number0": "4", "month_number0": "7", "year0": "1991", "city_name1": "DENVER", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN and NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN month_number0 NO_ALIGN day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 flying city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying day_number0 NO_ALIGN month_number0 NO_ALIGN month_number0 flying month_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 NO_ALIGN day_number0 flying airline_code0 NO_ALIGN on NO_ALIGN month_number0 NO_ALIGN month_number0 flying airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN flying city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 flying city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN flying airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN flying airline_code0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN month_number0 NO_ALIGN earliest NO_ALIGN month_number0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 flying earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN flying earliest NO_ALIGN month_number0 NO_ALIGN month_number0 flying earliest NO_ALIGN month_number0 NO_ALIGN month_number0 flying earliest NO_ALIGN month_number0 NO_ALIGN month_number0 flying earliest NO_ALIGN day_number0 NO_ALIGN earliest NO_ALIGN day_number0 flying earliest NO_ALIGN on NO_ALIGN earliest NO_ALIGN month_number0 flying earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN flying earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 flying earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN flying earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN flying earliest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [12, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [9, 11], [2, 16], [2, 6], [6, 11], [4, 5], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [7, 8], [14, 16], [13, 14], [2, 11], [3, 4]]}, {"text": "give me the earliest flight tomorrow on airline_code0 from city_name1 to city_name0", "question-split": "dev", "variables": {"city_name0": "MILWAUKEE", "day_number0": "20", "month_number0": "1", "year0": "1991", "city_name1": "ST. PETERSBURG", "airline_code0": "UA"}, "alignment": "NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN me NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN on NO_ALIGN NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 give city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give on NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give airline_code0 NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN on give airline_code0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN the NO_ALIGN give city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 give city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give airline_code0 NO_ALIGN from NO_ALIGN city_name0 NO_ALIGN the NO_ALIGN give airline_code0 NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN give airline_code0 NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN earliest NO_ALIGN NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on NO_ALIGN tomorrow NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN NO_ALIGN NO_ALIGN earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 give earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN tomorrow give earliest NO_ALIGN tomorrow NO_ALIGN tomorrow NO_ALIGN on give earliest NO_ALIGN city_name1 NO_ALIGN earliest NO_ALIGN the NO_ALIGN give earliest NO_ALIGN city_name0 NO_ALIGN earliest NO_ALIGN city_name0 give earliest NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN give earliest NO_ALIGN from NO_ALIGN earliest NO_ALIGN the NO_ALIGN give earliest NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN airline_code0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [6, 10], [11, 12], [10, 12], [8, 10], [8, 9], [9, 10], [2, 3], [2, 12], [3, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( ( CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.AIRLINE_CODE = \"airline_code0\" ) AND FLIGHTalias0.DEPARTURE_TIME = ( SELECT MIN( FLIGHTalias1.DEPARTURE_TIME ) FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias2 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias3 , CITY AS CITYalias2 , CITY AS CITYalias3 , DATE_DAY AS DATE_DAYalias1 , DAYS AS DAYSalias1 , FLIGHT AS FLIGHTalias1 WHERE ( ( CITYalias3.CITY_CODE = AIRPORT_SERVICEalias3.CITY_CODE AND CITYalias3.CITY_NAME = \"city_name0\" AND DATE_DAYalias1.DAY_NUMBER = day_number0 AND DATE_DAYalias1.MONTH_NUMBER = month_number0 AND DATE_DAYalias1.YEAR = year0 AND DAYSalias1.DAY_NAME = DATE_DAYalias1.DAY_NAME AND FLIGHTalias1.FLIGHT_DAYS = DAYSalias1.DAYS_CODE AND FLIGHTalias1.TO_AIRPORT = AIRPORT_SERVICEalias3.AIRPORT_CODE ) AND CITYalias2.CITY_CODE = AIRPORT_SERVICEalias2.CITY_CODE AND CITYalias2.CITY_NAME = \"city_name1\" AND FLIGHTalias1.FROM_AIRPORT = AIRPORT_SERVICEalias2.AIRPORT_CODE ) AND FLIGHTalias1.AIRLINE_CODE = \"airline_code0\" ) ;"], "variables": [{"example": "MILWAUKEE", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "20", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "1", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "AA", "location": "unk", "name": "airline_code0", "type": "airline_code"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight leaving city_name1 next monday arriving in city_name0 before arrival_time0", "question-split": "dev", "variables": {"day_number0": "21", "month_number0": "2", "year0": "1991", "arrival_time0": "1000", "city_name0": "FORT WORTH", "city_name1": "PITTSBURGH"}, "alignment": "NO_ALIGN in arrival_time0 NO_ALIGN a NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN next NO_ALIGN NO_ALIGN NO_ALIGN arrival_time0 NO_ALIGN NO_ALIGN NO_ALIGN next NO_ALIGN monday NO_ALIGN monday arriving next NO_ALIGN monday NO_ALIGN monday arriving next NO_ALIGN monday NO_ALIGN monday arriving next NO_ALIGN monday NO_ALIGN next NO_ALIGN monday arriving arrival_time0 NO_ALIGN arrival_time0 NO_ALIGN arrival_time0 arriving arrival_time0 NO_ALIGN monday NO_ALIGN next NO_ALIGN monday NO_ALIGN arriving city_name1 NO_ALIGN in NO_ALIGN city_name1 NO_ALIGN in arriving city_name1 NO_ALIGN in NO_ALIGN NO_ALIGN in NO_ALIGN arriving arrival_time0 NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN arriving in NO_ALIGN in NO_ALIGN in NO_ALIGN in arriving in NO_ALIGN in NO_ALIGN NO_ALIGN city_name1 NO_ALIGN arriving arrival_time0 NO_ALIGN city_name1 NO_ALIGN in NO_ALIGN in NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [9, 11], [3, 4], [11, 13], [4, 5], [1, 13], [6, 11], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( ( DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE ) AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name0\" AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ) AND CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name1\" AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ;", "SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM FLIGHT AS FLIGHTalias0 WHERE ( ( ( FLIGHTalias0.ARRIVAL_TIME < arrival_time0 AND FLIGHTalias0.FLIGHT_DAYS IN ( SELECT DAYSalias0.DAYS_CODE FROM DAYS AS DAYSalias0 WHERE DAYSalias0.DAY_NAME IN ( SELECT DATE_DAYalias0.DAY_NAME FROM DATE_DAY AS DATE_DAYalias0 WHERE DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 ) ) ) AND FLIGHTalias0.TO_AIRPORT IN ( SELECT AIRPORT_SERVICEalias1.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 WHERE AIRPORT_SERVICEalias1.CITY_CODE IN ( SELECT CITYalias1.CITY_CODE FROM CITY AS CITYalias1 WHERE CITYalias1.CITY_NAME = \"city_name0\" ) ) ) AND FLIGHTalias0.FROM_AIRPORT IN ( SELECT AIRPORT_SERVICEalias0.AIRPORT_CODE FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 WHERE AIRPORT_SERVICEalias0.CITY_CODE IN ( SELECT CITYalias0.CITY_CODE FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name1\" ) ) ) ;"], "variables": [{"example": "22", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "3", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "2200", "location": "unk", "name": "arrival_time0", "type": "arrival_time"}, {"example": "ST. PETERSBURG", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "DETROIT", "location": "unk", "name": "city_name1", "type": "city_name"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "i need a flight to city_name0 this afternoon", "question-split": "dev", "variables": {"city_name0": "ATLANTA", "day_number0": "5", "month_number0": "9", "year0": "1991", "departure_time0": "1200", "departure_time1": "1800"}, "alignment": "NO_ALIGN NO_ALIGN afternoon NO_ALIGN a NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN i NO_ALIGN this NO_ALIGN i NO_ALIGN need NO_ALIGN NO_ALIGN NO_ALIGN afternoon NO_ALIGN NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 this city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN this this NO_ALIGN i NO_ALIGN i this this NO_ALIGN i NO_ALIGN i this this NO_ALIGN i NO_ALIGN i this need NO_ALIGN need NO_ALIGN this NO_ALIGN need this afternoon NO_ALIGN i NO_ALIGN need NO_ALIGN i this afternoon NO_ALIGN to NO_ALIGN city_name0 NO_ALIGN NO_ALIGN NO_ALIGN this afternoon NO_ALIGN afternoon afternoon afternoon this afternoon NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [4, 6], [4, 5], [5, 6], [1, 8], [2, 3], [3, 4], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT FLIGHTalias0.FLIGHT_ID FROM AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , CITY AS CITYalias0 , DATE_DAY AS DATE_DAYalias0 , DAYS AS DAYSalias0 , FLIGHT AS FLIGHTalias0 WHERE ( CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND DATE_DAYalias0.DAY_NUMBER = day_number0 AND DATE_DAYalias0.MONTH_NUMBER = month_number0 AND DATE_DAYalias0.YEAR = year0 AND DAYSalias0.DAY_NAME = DATE_DAYalias0.DAY_NAME AND FLIGHTalias0.FLIGHT_DAYS = DAYSalias0.DAYS_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE ) AND FLIGHTalias0.DEPARTURE_TIME BETWEEN departure_time0 AND departure_time1 ;"], "variables": [{"example": "ATLANTA", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "5", "location": "unk", "name": "day_number0", "type": "day_number"}, {"example": "9", "location": "unk", "name": "month_number0", "type": "month_number"}, {"example": "1991", "location": "unk", "name": "year0", "type": "year"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}, {"example": "1800", "location": "unk", "name": "departure_time1", "type": "departure_time"}]}, {"comments": [], "old-name": "", "query-split": "train", "sentences": [{"text": "what kind of plane flies from city_name1 to city_name0 after departure_time0", "question-split": "dev", "variables": {"city_name0": "PITTSBURGH", "city_name1": "BOSTON", "departure_time0": "1200"}, "alignment": "NO_ALIGN NO_ALIGN kind NO_ALIGN kind NO_ALIGN of NO_ALIGN kind NO_ALIGN city_name1 NO_ALIGN flies NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN city_name0 NO_ALIGN flies NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN of NO_ALIGN kind NO_ALIGN NO_ALIGN NO_ALIGN flies NO_ALIGN flies NO_ALIGN city_name0 NO_ALIGN flies NO_ALIGN city_name0 of flies NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN of city_name1 NO_ALIGN city_name0 NO_ALIGN city_name1 NO_ALIGN city_name0 of city_name1 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name1 NO_ALIGN of kind NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind of flies NO_ALIGN kind NO_ALIGN kind NO_ALIGN kind of flies NO_ALIGN departure_time0 NO_ALIGN departure_time0 of flies NO_ALIGN from NO_ALIGN flies NO_ALIGN NO_ALIGN of flies NO_ALIGN city_name1 NO_ALIGN city_name1 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [0, 2], [5, 6], [5, 7], [8, 9], [9, 10], [9, 11], [2, 3], [0, 4], [3, 4], [2, 4], [4, 11], [7, 9]]}], "sql": ["SELECT DISTINCT AIRCRAFTalias0.AIRCRAFT_CODE FROM AIRCRAFT AS AIRCRAFTalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias0 , AIRPORT_SERVICE AS AIRPORT_SERVICEalias1 , CITY AS CITYalias0 , CITY AS CITYalias1 , EQUIPMENT_SEQUENCE AS EQUIPMENT_SEQUENCEalias0 , FLIGHT AS FLIGHTalias0 WHERE CITYalias0.CITY_CODE = AIRPORT_SERVICEalias0.CITY_CODE AND CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias1.CITY_CODE = AIRPORT_SERVICEalias1.CITY_CODE AND CITYalias1.CITY_NAME = \"city_name1\" AND EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE = AIRCRAFTalias0.AIRCRAFT_CODE AND FLIGHTalias0.AIRCRAFT_CODE_SEQUENCE = EQUIPMENT_SEQUENCEalias0.AIRCRAFT_CODE_SEQUENCE AND FLIGHTalias0.DEPARTURE_TIME > departure_time0 AND FLIGHTalias0.FROM_AIRPORT = AIRPORT_SERVICEalias0.AIRPORT_CODE AND FLIGHTalias0.TO_AIRPORT = AIRPORT_SERVICEalias1.AIRPORT_CODE ;"], "variables": [{"example": "BOSTON", "location": "unk", "name": "city_name0", "type": "city_name"}, {"example": "PITTSBURGH", "location": "unk", "name": "city_name1", "type": "city_name"}, {"example": "1200", "location": "unk", "name": "departure_time0", "type": "departure_time"}]}]