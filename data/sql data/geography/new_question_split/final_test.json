[{"query-split": "train", "sentences": [{"question-split": "test", "text": "which states have points higher than the highest point in state_name0", "variables": {"state_name0": "colorado"}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "colorado", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "where is city_name0", "variables": {"city_name0": "san diego"}, "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "test", "text": "which states have cities named city_name0", "variables": {"city_name0": "austin"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "which state is city_name0 in", "variables": {"city_name0": "kalamazoo"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "dallas", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many rivers are in the state that has the most rivers", "variables": {}, "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [0, 3], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [8, 12], [5, 7], [7, 8], [0, 2], [9, 12]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;", "SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( RIVERalias0.RIVER_NAME ) AS DERIVED_FIELDalias0 , RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ) AS DERIVED_TABLEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many states border the largest state", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "name the major lakes in state_name0", "variables": {"state_name0": "michigan"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > 750 AND LAKEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "california", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which state has the most rivers running through it", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what states border the states with the most cities", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the population of the capital of the smallest state", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many states are next to major rivers", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "which state has the highest population density", "variables": {}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the city with the smallest population", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what state is capital0 the capital of", "variables": {"capital0": "austin"}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state_name0 city has the largest population", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}, {"question-split": "test", "text": "what cities in state_name0 have the highest number of citizens", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [0, 2], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 4], [3, 4], [2, 4], [5, 8]]}, {"question-split": "test", "text": "what is the most populous city in state_name0", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [3, 4], [7, 8], [3, 5]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "arizona", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many rivers are in the state with the highest point", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [7, 11], [0, 3], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what state has the smallest urban population", "variables": {}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the maximum elevation of highest_point0", "variables": {"highest_point0": "san francisco"}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = \"highest_point0\" ;"], "variables": [{"example": "mount mckinley", "location": "both", "name": "highest_point0", "type": "highest_point"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what states have no bordering state", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states do river_name0 river flow through", "variables": {"river_name0": "colorado"}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [3, 5]]}, {"question-split": "test", "text": "which states does the river_name0 run through", "variables": {"river_name0": "mississippi"}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [3, 5]]}, {"question-split": "test", "text": "what are the states that the river_name0 run through", "variables": {"river_name0": "potomac"}, "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the largest state that borders state_name0", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;", "SELECT STATEalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM BORDER_INFO AS BORDER_INFOalias1 , STATE AS STATEalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_NAME = BORDER_INFOalias1.BORDER ) AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "arkansas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many people live in the smallest state bordering state_name0", "variables": {"state_name0": "wyoming"}, "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [8, 10], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "wyoming", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "population of city_name0", "variables": {"city_name0": "boulder"}, "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "test", "text": "number of citizens in city_name0", "variables": {"city_name0": "boulder"}, "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "chicago", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "what is the capital of the state that borders the most states", "variables": {}, "constituency_parser_spans": [[4, 7], [10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "where is the smallest city", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what are the states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "give me all the states of usa", "variables": {}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many major rivers cross state_name0", "variables": {"state_name0": "ohio"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "ohio", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what rivers run through the states that border the state with the capital capital0", "variables": {"capital0": "atlanta"}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [3, 14], [6, 14], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [7, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [13, 14], [10, 14], [7, 8], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ) ) ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many cities are there in usa", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "give me the longest river that passes through the us", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the longest river in america", "variables": {}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what river is the longest one in the united states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 6], [7, 10], [3, 4], [0, 2]]}, {"question-split": "test", "text": "what is the longest river", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the smallest state by area", "variables": {}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the smallest state that borders the most states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "give me the lakes in state_name0", "variables": {"state_name0": "california"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "california", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state bordering state_name0 has the largest population", "variables": {"state_name0": "nevada"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2], [5, 8]]}, {"question-split": "test", "text": "which of the states bordering state_name0 has the largest population", "variables": {"state_name0": "pennsylvania"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [0, 6], [9, 10], [1, 6], [2, 3], [7, 10], [3, 4], [7, 8], [2, 4]]}, {"question-split": "test", "text": "what state that borders state_name0 has the highest population", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [5, 9], [6, 9], [1, 2], [6, 7], [5, 6], [4, 5], [8, 9], [0, 5], [2, 3], [3, 4], [2, 5], [7, 8], [0, 2], [3, 5]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;", "SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT DISTINCT STATEalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM BORDER_INFO AS BORDER_INFOalias1 , STATE AS STATEalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_NAME = BORDER_INFOalias1.BORDER ) AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "nevada", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many people live in the state with the largest population density", "variables": {}, "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [0, 3], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [8, 12], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "what is the shortest river in the usa", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the shortest river", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;", "SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 ORDER BY RIVERalias0.LENGTH LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population of the capital of the largest state through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [7, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [3, 4], [8, 16], [11, 13], [2, 16], [4, 5], [8, 11], [13, 15], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [5, 16], [13, 14], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias1 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" AND STATEalias1.STATE_NAME = RIVERalias0.TRAVERSE ) ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states does the longest river run through", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many rivers are there in state_name0", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "new york", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population of the state with the largest area", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the largest state that borders the state with the lowest point in the usa", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [2, 5], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [3, 4], [2, 16], [4, 5], [10, 13], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [5, 16], [13, 14], [10, 16], [7, 8], [6, 16]]}], "sql": ["SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE ( HIGHLOWalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND ( STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many major cities are there in state_name0", "variables": {"state_name0": "oregon"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "florida", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "which state has the highest peak in the country", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the longest river in the state with the highest point", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many states have cities or towns named city_name0", "variables": {"city_name0": "springfield"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [4, 9], [6, 7], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "springfield", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "could you tell me what is the highest point in the state of state_name0", "variables": {"state_name0": "oregon"}, "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [6, 14], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 14], [10, 14], [7, 8]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "montana", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the lowest point in the united states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}, {"question-split": "test", "text": "where is the lowest point in the us", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the lowest point of the us", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state has the most major cities", "variables": {}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ORDER BY COUNT( 1 ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "whats the largest city", "variables": {}, "constituency_parser_spans": [[0, 1], [0, 1], [3, 4], [1, 2], [1, 4], [2, 3]]}, {"question-split": "test", "text": "what is the biggest city in the us", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how long is the river_name0 river", "variables": {"river_name0": "colorado"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "how many states does state_name0 border", "variables": {"state_name0": "tennessee"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "iowa", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states border state_name0", "variables": {"state_name0": "iowa"}, "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "what are the neighboring states for state_name0", "variables": {"state_name0": "michigan"}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "states bordering state_name0", "variables": {"state_name0": "iowa"}, "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "maine", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what are the populations of states through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [6, 11], [8, 11], [2, 11], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4], [2, 4], [4, 11]]}, {"question-split": "test", "text": "what are the populations of the states through which the river_name0 river run", "variables": {"river_name0": "mississippi"}, "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [5, 7], [7, 13], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the smallest state that borders state_name0", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "wyoming", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the highest elevation in the united states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the height of the highest point in the usa", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 11], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state borders the least states", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.STATE_NAME GROUP BY STATEalias0.STATE_NAME HAVING COUNT( BORDER_INFOalias0.BORDER ) = ( SELECT MIN( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias0 , STATEalias1.STATE_NAME FROM STATE AS STATEalias1 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias1 ON STATEalias1.STATE_NAME = BORDER_INFOalias1.STATE_NAME GROUP BY STATEalias1.STATE_NAME ) AS DERIVED_TABLEalias0 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which state has the lowest point that borders state_name0", "variables": {"state_name0": "idaho"}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "idaho", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what states border states that border state_name0", "variables": {"state_name0": "mississippi"}, "constituency_parser_spans": [[0, 1], [2, 7], [4, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states border states through which the river_name0 traverses", "variables": {"river_name0": "mississippi"}, "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [4, 9], [4, 6], [2, 9], [6, 8], [4, 5], [5, 6], [6, 7], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "ohio", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many states are there in the usa", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}, {"question-split": "test", "text": "how many states does usa have", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "name all the rivers in state_name0", "variables": {"state_name0": "colorado"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}, {"question-split": "test", "text": "what is the river that cross over state_name0", "variables": {"state_name0": "ohio"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what cities are located in state_name0", "variables": {"state_name0": "pennsylvania"}, "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "give me the cities which are in state_name0", "variables": {"state_name0": "texas"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [0, 8], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "virginia", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the capital of the state with the most inhabitants", "variables": {}, "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population of the major cities in state_name0", "variables": {"state_name0": "wisconsin"}, "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many rivers are in the state with the largest population", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [7, 11], [0, 3], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MAX( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) AND STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "what is the total length of all rivers in the usa", "variables": {}, "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}], "sql": ["SELECT SUM( DERIVED_TABLEalias0.LENGTH ) FROM ( SELECT DISTINCT RIVERalias0.RIVER_NAME , RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 ) AS DERIVED_TABLEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population density of state_name0", "variables": {"state_name0": "maine"}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "new york", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the highest point of the usa", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what river runs through the most states", "variables": {}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVERalias0.RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the state with the lowest population density", "variables": {}, "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what rivers flow through the largest state", "variables": {}, "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what are the major cities in the state of state_name0", "variables": {"state_name0": "california"}, "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the major cities in state_name0", "variables": {"state_name0": "montana"}, "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "alabama", "location": "both", "name": "state_name0", "type": "state_name"}]}]