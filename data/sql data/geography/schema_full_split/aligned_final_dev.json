[{"query-split": "test", "sentences": [{"question-split": "test", "text": "what is the population of the capital of the smallest state", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN population NO_ALIGN what NO_ALIGN population NO_ALIGN population NO_ALIGN what NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN capital NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the longest river in the smallest state in the usa", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN the NO_ALIGN the NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN the NO_ALIGN longest NO_ALIGN longest NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN usa NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN in river NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN the NO_ALIGN the NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN the NO_ALIGN smallest NO_ALIGN NO_ALIGN usa NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [7, 8], [9, 12]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "which state has the smallest average urban population", "variables": {}, "alignment": "NO_ALIGN average NO_ALIGN which NO_ALIGN has NO_ALIGN average the average average NO_ALIGN which average average average NO_ALIGN average NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY AVG ( CITYalias0.POPULATION ) LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "give me the cities in state_name0", "variables": {"state_name0": "virginia"}, "alignment": "NO_ALIGN give NO_ALIGN me NO_ALIGN cities NO_ALIGN give NO_ALIGN give NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "tell me what cities are in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN tell NO_ALIGN me NO_ALIGN cities NO_ALIGN tell NO_ALIGN tell NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 7], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [0, 7], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "what cities are located in state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what are the cities in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "give me the cities in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN give NO_ALIGN me NO_ALIGN cities NO_ALIGN give NO_ALIGN give NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what cities in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "give me the cities which are in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN give NO_ALIGN me NO_ALIGN cities NO_ALIGN give NO_ALIGN give NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [0, 8], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "virginia", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many rivers do not traverse the state with the capital capital0", "variables": {"capital0": "albany"}, "alignment": "NO_ALIGN many NO_ALIGN do rivers NO_ALIGN do NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN do rivers NO_ALIGN NO_ALIGN NO_ALIGN traverse NO_ALIGN do NO_ALIGN rivers NO_ALIGN traverse NO_ALIGN traverse NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN with NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [3, 12], [6, 8], [6, 7], [8, 12], [4, 5], [5, 6], [5, 12], [10, 11], [11, 12], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4], [9, 12]]}], "sql": ["SELECT COUNT( DISTINCT RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ) ) ;"], "variables": [{"example": "albany", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the cities of the state with the highest point", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN point NO_ALIGN with NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state has no rivers", "variables": {}, "alignment": "NO_ALIGN no NO_ALIGN has NO_ALIGN state NO_ALIGN no NO_ALIGN no NO_ALIGN has no NO_ALIGN NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the capital of the state that borders the state that borders state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [11, 14], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [9, 11], [3, 4], [7, 14], [9, 14], [12, 14], [4, 5], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "of the states washed by the river_name0 river which has the lowest point", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN point NO_ALIGN which NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN lowest NO_ALIGN states NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN the NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN the NO_ALIGN river_name0 NO_ALIGN states NO_ALIGN lowest NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [5, 8], [1, 2], [6, 7], [12, 13], [4, 13], [3, 4], [3, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 8]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 , RIVER AS RIVERalias0 WHERE ( RIVERalias0.RIVER_NAME = \"river_name0\" ) AND ( RIVERalias0.TRAVERSE = HIGHLOWalias1.STATE_NAME ) ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the population of the largest city in the state with the largest area", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN population NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN with NO_ALIGN area NO_ALIGN state NO_ALIGN state NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN city city NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN area NO_ALIGN with NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN the NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [8, 9], [5, 8], [1, 2], [6, 7], [9, 15], [12, 13], [9, 11], [3, 4], [8, 15], [4, 5], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [12, 15], [13, 14], [4, 15], [2, 15], [11, 15], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "what is the smallest city in state_name0", "variables": {"state_name0": "arkansas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the smallest city in state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the smallest city in state_name0", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the smallest city in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "arkansas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the capital of the smallest state", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN capital NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "name all the lakes of us", "variables": {}, "alignment": "NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "how many rivers run through the states bordering state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN many NO_ALIGN rivers NO_ALIGN through NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4], [7, 9]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "colorado", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the highest points of states surrounding state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN points NO_ALIGN surrounding NO_ALIGN points NO_ALIGN points NO_ALIGN points NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN surrounding NO_ALIGN states NO_ALIGN states NO_ALIGN surrounding NO_ALIGN surrounding NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what are the high points of states surrounding state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN points NO_ALIGN surrounding NO_ALIGN points NO_ALIGN points NO_ALIGN points NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN surrounding NO_ALIGN states NO_ALIGN states NO_ALIGN surrounding NO_ALIGN surrounding NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the highest elevation in state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN elevation NO_ALIGN highest NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "how high is the highest point of state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how high is the highest point of state_name0", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how tall is the highest point in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN tall NO_ALIGN highest NO_ALIGN point NO_ALIGN tall NO_ALIGN tall NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the highest elevation in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN elevation NO_ALIGN highest NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the highest point in state_name0 in meters", "variables": {"state_name0": "nevada"}, "alignment": "NO_ALIGN meters NO_ALIGN highest NO_ALIGN point NO_ALIGN meters NO_ALIGN meters NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"question-split": "dev", "text": "how high is the highest point in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the highest elevation in state_name0", "variables": {"state_name0": "south carolina"}, "alignment": "NO_ALIGN elevation NO_ALIGN highest NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "how high is the highest point of state_name0", "variables": {"state_name0": "louisiana"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how high is the highest point of state_name0", "variables": {"state_name0": "delaware"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "new mexico", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the smallest city in the largest state", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN the NO_ALIGN smallest NO_ALIGN NO_ALIGN state NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the major cities in the smallest state in the us", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN in NO_ALIGN major in cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [7, 8], [9, 12]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "which state is mount mountain_name0 in", "variables": {"mountain_name0": "mckinley"}, "alignment": "NO_ALIGN mount NO_ALIGN which NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN NO_ALIGN mount NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [5, 6], [4, 5], [2, 3], [3, 6], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "in what state is mount mountain_name0", "variables": {"mountain_name0": "mckinley"}, "alignment": "NO_ALIGN mount NO_ALIGN NO_ALIGN NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN NO_ALIGN mount NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 6], [3, 4]]}, {"question-split": "train", "text": "where is mount mountain_name0", "variables": {"mountain_name0": "whitney"}, "alignment": "NO_ALIGN mount NO_ALIGN NO_ALIGN NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN NO_ALIGN mount NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "where is mount mountain_name0 located", "variables": {"mountain_name0": "whitney"}, "alignment": "NO_ALIGN mount NO_ALIGN NO_ALIGN NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN mount NO_ALIGN NO_ALIGN mount NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = \"mountain_name0\" ;"], "variables": [{"example": "mckinley", "location": "both", "name": "mountain_name0", "type": "mountain_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states have points higher than the highest point in state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN points NO_ALIGN which NO_ALIGN points NO_ALIGN points NO_ALIGN points NO_ALIGN higher NO_ALIGN NO_ALIGN NO_ALIGN higher NO_ALIGN higher NO_ALIGN points NO_ALIGN higher NO_ALIGN higher NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which states have points that are higher than the highest point in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN points NO_ALIGN which NO_ALIGN points NO_ALIGN points NO_ALIGN points NO_ALIGN higher NO_ALIGN NO_ALIGN NO_ALIGN higher NO_ALIGN higher NO_ALIGN points NO_ALIGN higher NO_ALIGN higher NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [11, 13], [3, 13], [4, 5], [8, 11], [9, 10], [2, 3], [11, 12], [0, 1], [7, 13], [7, 8], [0, 2]]}, {"question-split": "train", "text": "what states high point are higher than that of state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN high NO_ALIGN NO_ALIGN NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN higher NO_ALIGN NO_ALIGN NO_ALIGN higher NO_ALIGN higher NO_ALIGN point NO_ALIGN higher NO_ALIGN higher NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [0, 4], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "colorado", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what rivers are in states that border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2], [5, 8]]}, {"question-split": "train", "text": "which rivers run through states bordering state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN rivers NO_ALIGN through NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 7], [3, 4]]}, {"question-split": "dev", "text": "what rivers flow through states that state_name0 borders", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN rivers NO_ALIGN through NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many people live in the smallest state bordering state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN state NO_ALIGN state_name0 NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN smallest NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 state NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN people NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN people NO_ALIGN people NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [8, 10], [8, 9], [9, 10], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "wyoming", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the highest point in the smallest state", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN in state NO_ALIGN NO_ALIGN NO_ALIGN point NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the highest mountain in the us", "variables": {}, "alignment": "NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the highest mountain in us", "variables": {}, "alignment": "NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the tallest mountain in america", "variables": {}, "alignment": "NO_ALIGN america NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN america NO_ALIGN america NO_ALIGN tallest NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN tallest NO_ALIGN tallest NO_ALIGN NO_ALIGN mountain NO_ALIGN tallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "what is the tallest mountain in the united states", "variables": {}, "alignment": "NO_ALIGN united NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN united NO_ALIGN united NO_ALIGN tallest NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN tallest NO_ALIGN tallest NO_ALIGN NO_ALIGN mountain NO_ALIGN tallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "dev", "text": "what is the lowest point of the state with the largest area", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN the NO_ALIGN point NO_ALIGN point NO_ALIGN area NO_ALIGN state NO_ALIGN state NO_ALIGN with NO_ALIGN point NO_ALIGN with is state NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN area NO_ALIGN with NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME AND STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "how many states have major rivers", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN many rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many states are next to major rivers", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN many next NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN next NO_ALIGN next NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}], "sql": ["SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the population of the largest state that borders state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN state NO_ALIGN population NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN of NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN of NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 state NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 11], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what mountains are in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN mountains NO_ALIGN mountains NO_ALIGN in NO_ALIGN mountains NO_ALIGN mountains NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "alaska", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "what is the capital of the largest state", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN of NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN of NO_ALIGN NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "what is the capital city of the largest state in the us", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN of NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN of NO_ALIGN NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [7, 8], [9, 12]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "what is the capital of the state that borders the most states", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders the most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which state is the largest city in state_name0 in", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN city NO_ALIGN which NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [2, 9], [4, 5], [5, 6], [3, 8], [8, 9], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "montana", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how high are the highest points of all the states", "variables": {}, "alignment": "NO_ALIGN points NO_ALIGN high NO_ALIGN points NO_ALIGN points NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [8, 9], [9, 10], [2, 3], [3, 6], [7, 10], [3, 4], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what state_name0 city has the largest population", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN has NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN has NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}, {"question-split": "train", "text": "what is the largest city in state_name0", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "kansas"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "louisiana"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "where is the most populated area of state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN populated NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN populated NO_ALIGN populated NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN most NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 populated NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [2, 3], [3, 4], [7, 8], [3, 5]]}, {"question-split": "train", "text": "which city in state_name0 has the largest population", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [0, 2], [5, 6], [2, 3], [0, 4], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "nebraska"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what cities in state_name0 have the highest number of citizens", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN cities NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [0, 2], [5, 6], [8, 10], [8, 9], [9, 10], [2, 3], [0, 4], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "what cities in state_name0 have the highest populations", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN populations NO_ALIGN cities NO_ALIGN cities NO_ALIGN populations NO_ALIGN populations NO_ALIGN populations NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN state_name0 NO_ALIGN populations NO_ALIGN NO_ALIGN cities NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 populations NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [0, 2], [5, 6], [2, 3], [0, 4], [3, 4], [2, 4], [5, 8]]}, {"question-split": "test", "text": "what is the most populous city in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN populous NO_ALIGN city NO_ALIGN city NO_ALIGN populous NO_ALIGN populous NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city populous NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [3, 4], [7, 8], [3, 5]]}, {"question-split": "train", "text": "what is the largest city in state_name0 by population", "variables": {"state_name0": "minnesota"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the biggest city in state_name0", "variables": {"state_name0": "georgia"}, "alignment": "NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN biggest NO_ALIGN biggest NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city biggest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the largest city in state_name0", "variables": {"state_name0": "wisconsin"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "what is the largest city of state_name0", "variables": {"state_name0": "kansas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the city in state_name0 with the largest population", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN with NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city city NO_ALIGN with NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [4, 10], [1, 2], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the most populous city in state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN populous NO_ALIGN city NO_ALIGN city NO_ALIGN populous NO_ALIGN populous NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN city populous NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [3, 4], [7, 8], [3, 5]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "arizona", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border the state with the most cities", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN states NO_ALIGN states NO_ALIGN border NO_ALIGN border NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN with NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN cities most most cities NO_ALIGN with NO_ALIGN NO_ALIGN most NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN cities NO_ALIGN most most most most NO_ALIGN with NO_ALIGN NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "test", "text": "what states border the states with the most cities", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN states NO_ALIGN states NO_ALIGN border NO_ALIGN border NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN with NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN cities most most cities NO_ALIGN with NO_ALIGN NO_ALIGN most NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN what NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN cities NO_ALIGN most most most most NO_ALIGN with NO_ALIGN NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "name the 50 capitals in the usa", "variables": {}, "alignment": "NO_ALIGN 50 50 NO_ALIGN the NO_ALIGN usa NO_ALIGN 50 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [1, 4], [0, 7], [2, 3], [1, 7], [3, 4]]}], "sql": ["SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state has the city with the largest population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN with NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "what state has the largest city", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN has NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the largest city", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN which NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the city with the most population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN with NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which state has the lowest point that borders state_name0", "variables": {"state_name0": "idaho"}, "alignment": "NO_ALIGN point NO_ALIGN which NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 point NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN which NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "idaho", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "which rivers run through states that border the state with the capital capital0", "variables": {"capital0": "austin"}, "alignment": "NO_ALIGN rivers NO_ALIGN through NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN which NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [6, 13], [7, 8], [0, 2]]}, {"question-split": "test", "text": "what rivers run through the states that border the state with the capital capital0", "variables": {"capital0": "atlanta"}, "alignment": "NO_ALIGN rivers NO_ALIGN through NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN with NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [3, 14], [6, 14], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [7, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [4, 6], [13, 14], [10, 14], [7, 8], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ) ) ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the highest point in the state with capital capital0", "variables": {"capital0": "austin"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN with NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the highest point in the state with capital capital0", "variables": {"capital0": "des moines"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN with NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the highest point in the state with the capital capital0", "variables": {"capital0": "des moines"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN with NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [5, 8], [1, 2], [6, 7], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ) ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the populations of the major cities of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN cities NO_ALIGN populations NO_ALIGN populations NO_ALIGN populations NO_ALIGN major state_name0 populations NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "what are the populations of all the major cities in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN cities NO_ALIGN populations NO_ALIGN populations NO_ALIGN populations NO_ALIGN major state_name0 populations NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [1, 11], [3, 4], [2, 4], [4, 11]]}, {"question-split": "test", "text": "what is the population of the major cities in state_name0", "variables": {"state_name0": "wisconsin"}, "alignment": "NO_ALIGN cities NO_ALIGN population NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN population NO_ALIGN major state_name0 cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the cities in states through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN which NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [8, 10], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [6, 8], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which rivers do not run through country_name0", "variables": {"country_name0": "usa"}, "alignment": "NO_ALIGN do rivers NO_ALIGN do NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN country_name0 country_name0 NO_ALIGN country_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.COUNTRY_NAME <> \"country_name0\" ;"], "variables": [{"example": "usa", "location": "both", "name": "country_name0", "type": "country_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state borders the state with the smallest population", "variables": {}, "alignment": "NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN with NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN population NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the highest point in the state with the most rivers", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN point NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN with NO_ALIGN rivers NO_ALIGN rivers most most state NO_ALIGN with the most most NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN the NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE ( HIGHLOWalias0.STATE_NAME = ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE GROUP BY STATEalias0.STATE_NAME ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the highest point of the state with the smallest population density", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN with NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN density NO_ALIGN NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [6, 8], [6, 13], [7, 8]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the area of the smallest state", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN state NO_ALIGN state NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many states border the state with the largest population", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN states NO_ALIGN NO_ALIGN states NO_ALIGN border NO_ALIGN border NO_ALIGN with NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN with NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [3, 10], [6, 10], [8, 9], [9, 10], [2, 3], [7, 10], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the population density in the state with capital capital0", "variables": {"capital0": "austin"}, "alignment": "NO_ALIGN capital NO_ALIGN density NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "which state has the lowest elevation", "variables": {}, "alignment": "NO_ALIGN elevation NO_ALIGN which NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN elevation NO_ALIGN lowest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the name of the state with the lowest point", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN with NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what is the state with the lowest point", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN with NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}]