[{"query-split": "train", "sentences": [{"question-split": "train", "text": "which states have a river", "variables": {}, "alignment": "NO_ALIGN river river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "what states have rivers running through them", "variables": {}, "alignment": "NO_ALIGN states running NO_ALIGN running NO_ALIGN rivers NO_ALIGN running NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the major cities in states through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major major cities NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN major NO_ALIGN major major river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [9, 11], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [7, 9], [0, 1], [7, 8], [9, 12]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how long is the shortest river in the usa", "variables": {}, "alignment": "NO_ALIGN long long NO_ALIGN shortest NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN shortest NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN river NO_ALIGN shortest NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the longest river flowing through state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 river NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the largest river in state_name0 state", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "dev", "text": "what is the longest river in state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the biggest river in state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the longest river in state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the longest river in state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the longest river that flows through state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN flows NO_ALIGN flows NO_ALIGN river NO_ALIGN flows NO_ALIGN flows NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN that flows NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what are the biggest rivers in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN rivers NO_ALIGN in NO_ALIGN in NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN are rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the longest river in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the longest river in state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the longest river in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = \"state_name0\" ) AND RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "new york", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "give me the cities in usa", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state is the state with the most rivers", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers most most rivers NO_ALIGN rivers most most most NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "which state contains most rivers", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers most most rivers NO_ALIGN rivers most most most NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what state has the most rivers", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers most most rivers NO_ALIGN rivers most most most NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the most rivers", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers most most rivers NO_ALIGN rivers most most most NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "which state has the most rivers running through it", "variables": {}, "alignment": "NO_ALIGN running NO_ALIGN running NO_ALIGN rivers NO_ALIGN running most it running NO_ALIGN running most it most NO_ALIGN running NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}, {"question-split": "train", "text": "what state has the most rivers running through it", "variables": {}, "alignment": "NO_ALIGN running NO_ALIGN running NO_ALIGN rivers NO_ALIGN running most it running NO_ALIGN running most it most NO_ALIGN running NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "count the states which have elevations lower than what state_name0 has", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN states NO_ALIGN count NO_ALIGN have NO_ALIGN NO_ALIGN the NO_ALIGN count NO_ALIGN count NO_ALIGN count NO_ALIGN NO_ALIGN NO_ALIGN than NO_ALIGN count NO_ALIGN the NO_ALIGN than NO_ALIGN than NO_ALIGN have NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[1, 3], [10, 11], [5, 6], [3, 11], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [0, 11], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [7, 8]]}], "sql": ["SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION < ( SELECT HIGHLOWalias1.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "alabama", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what states have no bordering state", "variables": {}, "alignment": "NO_ALIGN no NO_ALIGN no NO_ALIGN state NO_ALIGN no NO_ALIGN no NO_ALIGN no no NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN no NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "name the states which have no surrounding states", "variables": {}, "alignment": "NO_ALIGN no NO_ALIGN no NO_ALIGN the NO_ALIGN no NO_ALIGN no NO_ALIGN no no NO_ALIGN NO_ALIGN NO_ALIGN states NO_ALIGN no NO_ALIGN states NO_ALIGN states NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [1, 3], [6, 7], [4, 8], [4, 5], [5, 6], [3, 8], [1, 8], [2, 3], [0, 8], [3, 4], [5, 8]]}, {"question-split": "dev", "text": "which states border no other states", "variables": {}, "alignment": "NO_ALIGN no NO_ALIGN other NO_ALIGN NO_ALIGN NO_ALIGN no NO_ALIGN no NO_ALIGN other no NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN other NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border the state with the smallest area", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "which states border the state with the smallest area", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what state is capital0 the capital of", "variables": {"capital0": "austin"}, "alignment": "NO_ALIGN capital0 NO_ALIGN state NO_ALIGN capital NO_ALIGN capital0 NO_ALIGN capital0 NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what states capital is capital0", "variables": {"capital0": "dover"}, "alignment": "NO_ALIGN capital0 NO_ALIGN states NO_ALIGN capital NO_ALIGN capital0 NO_ALIGN capital0 NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "capital0 is the capital of which state", "variables": {"capital0": "sacramento"}, "alignment": "NO_ALIGN capital0 NO_ALIGN state NO_ALIGN capital NO_ALIGN capital0 NO_ALIGN capital0 NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what state is capital0 the capital of", "variables": {"capital0": "columbus"}, "alignment": "NO_ALIGN capital0 NO_ALIGN state NO_ALIGN capital NO_ALIGN capital0 NO_ALIGN capital0 NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the capital capital0", "variables": {"capital0": "salem"}, "alignment": "NO_ALIGN capital0 NO_ALIGN state NO_ALIGN capital NO_ALIGN capital0 NO_ALIGN capital0 NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ;"], "variables": [{"example": "austin", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "how many river_name0 rivers are there", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN there NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4]]}, {"question-split": "train", "text": "how many rivers are called river_name0", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN many NO_ALIGN called NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN called NO_ALIGN called NO_ALIGN rivers NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border state_name0 and have a major river", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN border NO_ALIGN and NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN state_name0 NO_ALIGN major border NO_ALIGN and NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN major NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [5, 9], [1, 2], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [1, 4], [8, 9], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER = \"state_name0\" AND BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "how big is state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the area of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how big is state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "how large is state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN large NO_ALIGN large NO_ALIGN is NO_ALIGN large NO_ALIGN large NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how large is state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN large NO_ALIGN large NO_ALIGN is NO_ALIGN large NO_ALIGN large NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what is the area of the state_name0 state", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "wisconsin"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "what is the size of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN size NO_ALIGN size NO_ALIGN of NO_ALIGN size NO_ALIGN size NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "what is the area of state_name0 in square kilometers", "variables": {"state_name0": "maryland"}, "alignment": "NO_ALIGN square NO_ALIGN area NO_ALIGN area NO_ALIGN square NO_ALIGN square NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [4, 6], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [7, 9]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the size of state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN size NO_ALIGN size NO_ALIGN of NO_ALIGN size NO_ALIGN size NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "south carolina"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the size of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN size NO_ALIGN size NO_ALIGN of NO_ALIGN size NO_ALIGN size NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how big is state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "idaho"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how big is state_name0", "variables": {"state_name0": "north dakota"}, "alignment": "NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how big is state_name0", "variables": {"state_name0": "massachusetts"}, "alignment": "NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN big NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the area of state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "how many states border state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "test", "text": "how many states does state_name0 border", "variables": {"state_name0": "tennessee"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "train", "text": "state_name0 borders how many states", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN many NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "number of states bordering state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN number NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "how many states border state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "how many states border state_name0", "variables": {"state_name0": "tennessee"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "how many states does state_name0 border", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "how many states border state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "how many states does state_name0 border", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "how many states border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what is the number of neighboring states for state_name0", "variables": {"state_name0": "kentucky"}, "alignment": "NO_ALIGN number NO_ALIGN neighboring NO_ALIGN states NO_ALIGN NO_ALIGN states NO_ALIGN neighboring NO_ALIGN neighboring NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [7, 8], [2, 4], [7, 9]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "iowa", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the capitals of states that border state_name0", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN border NO_ALIGN border NO_ALIGN of NO_ALIGN capitals NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN that capitals NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [2, 9], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [3, 4], [2, 4], [7, 9]]}, {"question-split": "train", "text": "what are the capital cities of the states which border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN border NO_ALIGN border NO_ALIGN capital NO_ALIGN capital NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN are capital NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}, {"question-split": "train", "text": "what are the capitals of the states that border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN border NO_ALIGN border NO_ALIGN of NO_ALIGN capitals NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN that capitals NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [5, 7], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "which capitals are in the states that border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN border NO_ALIGN border NO_ALIGN the NO_ALIGN capitals NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN that capitals NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [4, 9], [4, 6], [2, 9], [6, 7], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "missouri", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the largest state traversed by the river_name0 river", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN by NO_ALIGN state NO_ALIGN state NO_ALIGN by NO_ALIGN by NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN by NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN by NO_ALIGN by NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN largest by NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the largest of the state that the river_name0 runs through", "variables": {"river_name0": "rio grande"}, "alignment": "NO_ALIGN of NO_ALIGN state NO_ALIGN of NO_ALIGN of NO_ALIGN of NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN of NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN that of NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN runs NO_ALIGN through NO_ALIGN through NO_ALIGN runs NO_ALIGN runs NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [8, 10], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "which is the highest peak not in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN peak NO_ALIGN peak NO_ALIGN peak NO_ALIGN peak NO_ALIGN peak NO_ALIGN peak NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN peak NO_ALIGN peak NO_ALIGN NO_ALIGN peak NO_ALIGN peak NO_ALIGN peak NO_ALIGN state_name0 peak NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.STATE_NAME <> \"state_name0\" ) ;"], "variables": [{"example": "alaska", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "give me the longest river that passes through the us", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [0, 10], [7, 10], [2, 5], [3, 4]]}, {"question-split": "train", "text": "which is the longest river in usa", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the longest river in america", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "name the longest river in us", "variables": {}, "alignment": "NO_ALIGN name NO_ALIGN river NO_ALIGN river NO_ALIGN name NO_ALIGN name NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}, {"question-split": "test", "text": "what river is the longest one in the united states", "variables": {}, "alignment": "NO_ALIGN one NO_ALIGN river NO_ALIGN river NO_ALIGN one NO_ALIGN one NO_ALIGN one NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN one NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 6], [7, 10], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the longest river in the us", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the longest river", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the longest river in the united states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the length of the river that flows through the most states", "variables": {}, "alignment": "NO_ALIGN length flows NO_ALIGN length NO_ALIGN river NO_ALIGN flows NO_ALIGN flows NO_ALIGN flows NO_ALIGN NO_ALIGN NO_ALIGN flows NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN river NO_ALIGN flows NO_ALIGN river NO_ALIGN river most most river NO_ALIGN flows NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN most NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN flows NO_ALIGN river NO_ALIGN length most most length NO_ALIGN flows NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 13], [5, 7], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what is the length of the river that runs through the most states", "variables": {}, "alignment": "NO_ALIGN length river NO_ALIGN length NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN river NO_ALIGN length NO_ALIGN river NO_ALIGN river most most river NO_ALIGN length NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN most NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN length NO_ALIGN river NO_ALIGN length most most length NO_ALIGN length NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [8, 13], [10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 13], [5, 7], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what is the length of the river that traverses the most states", "variables": {}, "alignment": "NO_ALIGN length river NO_ALIGN length NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN river NO_ALIGN length NO_ALIGN river NO_ALIGN river most most river NO_ALIGN length NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN most NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN length NO_ALIGN river NO_ALIGN length most most length NO_ALIGN length NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [7, 12], [5, 6], [8, 9], [2, 12], [1, 2], [6, 7], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4], [9, 12]]}, {"question-split": "train", "text": "what is the length of the river that runs through the most number of states", "variables": {}, "alignment": "NO_ALIGN length river NO_ALIGN length NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN number NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN river NO_ALIGN length NO_ALIGN river NO_ALIGN river most most river NO_ALIGN length NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN most NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN number NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN length NO_ALIGN length NO_ALIGN length NO_ALIGN river NO_ALIGN length most most length NO_ALIGN length NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [10, 15], [1, 2], [6, 7], [7, 15], [9, 15], [12, 13], [8, 15], [4, 5], [10, 13], [13, 15], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [2, 7], [7, 8], [13, 14], [5, 7], [2, 15], [3, 4], [2, 4]]}], "sql": ["SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ( SELECT RIVER_NAME FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias0 , RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 GROUP BY RIVERalias1.RIVER_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 , RIVERalias2.RIVER_NAME FROM RIVER AS RIVERalias2 GROUP BY RIVERalias2.RIVER_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what are the highest points of all the states", "variables": {}, "alignment": "NO_ALIGN points NO_ALIGN highest NO_ALIGN highest NO_ALIGN points NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the major cities in the largest state", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major major cities NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state is the biggest", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "what is the state with the largest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "what state has the largest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the biggest state in continental us", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "state the state with the largest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [1, 7], [3, 7], [3, 4]]}, {"question-split": "train", "text": "what is the largest state in usa", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "what is the biggest state", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the biggest state in the usa", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN state NO_ALIGN biggest NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "give me the largest state", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [0, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the largest state in the us", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the largest state", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many capitals does state_name0 have", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN many NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN NO_ALIGN how NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN have NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( STATEalias0.CAPITAL ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "rhode island", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the population of the smallest state", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN population NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what states border the state that borders the most states", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN border NO_ALIGN border NO_ALIGN borders most most borders NO_ALIGN border borders most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN border NO_ALIGN that most most that NO_ALIGN border NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias2.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias2 GROUP BY BORDER_INFOalias2.BORDER ) AS DERIVED_TABLEalias0 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the elevation of lowest_point0", "variables": {"lowest_point0": "death valley"}, "alignment": "NO_ALIGN lowest_point0 NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN lowest_point0 NO_ALIGN lowest_point0 NO_ALIGN is NO_ALIGN NO_ALIGN lowest_point0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_POINT = \"lowest_point0\" ;"], "variables": [{"example": "death valley", "location": "both", "name": "lowest_point0", "type": "lowest_point"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the lowest point of all states through which the river_name0 river runs through", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN runs runs point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [1, 15], [10, 15], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [3, 4], [6, 15], [8, 15], [4, 5], [10, 13], [13, 15], [9, 10], [5, 15], [2, 3], [14, 15], [11, 12], [0, 1], [6, 8], [13, 14], [2, 15], [7, 8]]}, {"question-split": "train", "text": "which is the lowest point of the states that the river_name0 runs through", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN runs runs point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [9, 11], [3, 4], [11, 13], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [6, 8], [6, 13], [7, 8]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ORDER BY HIGHLOWalias0.LOWEST_ELEVATION LIMIT 1 ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the biggest capital city in the us", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what is the largest capital city in the usa", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what is the largest state capital in population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN capital NO_ALIGN population NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4]]}, {"question-split": "train", "text": "what is the largest capital", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN capital NO_ALIGN largest NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the most populated capital in the usa", "variables": {}, "alignment": "NO_ALIGN in NO_ALIGN capital NO_ALIGN capital NO_ALIGN in NO_ALIGN in NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN capital NO_ALIGN in NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN populated NO_ALIGN populated NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [5, 6], [4, 5], [7, 9], [8, 9], [2, 3], [1, 9], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what capital is the largest in the us", "variables": {}, "alignment": "NO_ALIGN us NO_ALIGN capital NO_ALIGN us NO_ALIGN us NO_ALIGN us NO_ALIGN us NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN capital NO_ALIGN us NO_ALIGN NO_ALIGN us NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 4], [0, 2], [5, 8], [3, 5]]}, {"question-split": "train", "text": "what capital has the largest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN capital NO_ALIGN population NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is largest capital", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN capital NO_ALIGN largest NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "how many states have a higher point than the highest point of the state with the largest capital city in the us", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN point NO_ALIGN have NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN than NO_ALIGN highest NO_ALIGN point NO_ALIGN than NO_ALIGN than NO_ALIGN have NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN have NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [8, 9], [15, 16], [18, 19], [4, 22], [11, 14], [19, 22], [15, 19], [0, 3], [14, 22], [1, 2], [16, 17], [6, 7], [12, 13], [20, 21], [11, 22], [3, 4], [15, 22], [12, 14], [20, 22], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [7, 22], [11, 12], [19, 20], [0, 1], [17, 18], [3, 22], [13, 14], [8, 22], [21, 22], [7, 8], [0, 2]]}], "sql": ["SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ( SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border states that border states that border states that border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN border NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 that that NO_ALIGN border NO_ALIGN that NO_ALIGN state_name0 that border NO_ALIGN border NO_ALIGN that NO_ALIGN state_name0 that border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [11, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [7, 13], [6, 13], [7, 8], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 , BORDER_INFO AS BORDER_INFOalias1 , BORDER_INFO AS BORDER_INFOalias2 , BORDER_INFO AS BORDER_INFOalias3 WHERE BORDER_INFOalias1.BORDER = BORDER_INFOalias0.STATE_NAME AND BORDER_INFOalias2.BORDER = BORDER_INFOalias1.STATE_NAME AND BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME AND BORDER_INFOalias3.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "how many people live in the united states", "variables": {}, "alignment": "NO_ALIGN the NO_ALIGN live NO_ALIGN people NO_ALIGN NO_ALIGN people NO_ALIGN live NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}, {"question-split": "dev", "text": "what is the combined population of all 50 states", "variables": {}, "alignment": "NO_ALIGN combined NO_ALIGN 50 NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN 50 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state is city_name0 in", "variables": {"city_name0": "dallas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}, {"question-split": "test", "text": "where is city_name0", "variables": {"city_name0": "san diego"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "train", "text": "city_name0 is in what state", "variables": {"city_name0": "san antonio"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what state is city_name0 in", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what state is city_name0 in", "variables": {"city_name0": "miami"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what states have cities named city_name0", "variables": {"city_name0": "dallas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states have cities named city_name0", "variables": {"city_name0": "plano"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states have cities named city_name0", "variables": {"city_name0": "portland"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states have cities named city_name0", "variables": {"city_name0": "rochester"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states have cities named city_name0", "variables": {"city_name0": "salt lake city"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "dallas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "portland"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "test", "text": "which states have cities named city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "which state is city_name0 in", "variables": {"city_name0": "kalamazoo"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what states have a city named city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what state is city_name0 in", "variables": {"city_name0": "pittsburgh"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what state has the city city_name0", "variables": {"city_name0": "flint"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what states have towns named city_name0", "variables": {"city_name0": "springfield"}, "alignment": "NO_ALIGN towns NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN towns NO_ALIGN towns NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "san jose"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "scotts valley"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "new orleans"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "indianapolis"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what state is city_name0 located in", "variables": {"city_name0": "des moines"}, "alignment": "NO_ALIGN located NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN located NO_ALIGN located NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states have cities named city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what state is city_name0 in", "variables": {"city_name0": "boston"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "fort wayne"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "houston"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "springfield"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "where is city_name0", "variables": {"city_name0": "baton rouge"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN where NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 3], [1, 2]]}, {"question-split": "dev", "text": "in which state is city_name0", "variables": {"city_name0": "rochester"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN state NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "which state is the city city_name0 located in", "variables": {"city_name0": "denver"}, "alignment": "NO_ALIGN located NO_ALIGN state NO_ALIGN city NO_ALIGN located NO_ALIGN located NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [7, 8], [0, 2]]}, {"question-split": "train", "text": "what states in the united states have a city of city_name0", "variables": {"city_name0": "springfield"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [2, 6], [6, 7], [10, 11], [6, 11], [4, 5], [5, 6], [8, 9], [0, 6], [9, 10], [9, 11], [2, 3], [3, 6], [7, 11], [3, 4], [7, 9]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "dallas", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the longest river that does not run through state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN not run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through not NO_ALIGN NO_ALIGN NO_ALIGN through NO_ALIGN through NO_ALIGN river NO_ALIGN through NO_ALIGN through NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that run NO_ALIGN through not NO_ALIGN NO_ALIGN NO_ALIGN not NO_ALIGN through NO_ALIGN river NO_ALIGN not NO_ALIGN not NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [8, 11], [2, 11], [8, 9], [9, 10], [9, 11], [2, 3], [2, 5], [1, 11], [3, 4]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME NOT IN ( SELECT RIVERalias2.RIVER_NAME FROM RIVER AS RIVERalias2 WHERE RIVERalias2.TRAVERSE = \"state_name0\" ) ) AND RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias3.RIVER_NAME FROM RIVER AS RIVERalias3 WHERE RIVERalias3.TRAVERSE = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "dev", "text": "what are the major rivers in the us", "variables": {}, "alignment": "NO_ALIGN the rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states contain at least one major rivers", "variables": {}, "alignment": "NO_ALIGN states contain NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN contain NO_ALIGN contain NO_ALIGN one NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [7, 8], [0, 2]]}], "sql": ["SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the longest river in the states that border state_name0", "variables": {"state_name0": "nebraska"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}, {"question-split": "train", "text": "what is the longest river that flows through a state that borders state_name0", "variables": {"state_name0": "indiana"}, "alignment": "NO_ALIGN flows NO_ALIGN flows NO_ALIGN river NO_ALIGN flows NO_ALIGN flows NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that flows NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [7, 13], [6, 13], [7, 8]]}, {"question-split": "train", "text": "what is the longest river that runs through a state that borders state_name0", "variables": {"state_name0": "tennessee"}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that river NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [8, 10], [2, 13], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [7, 13], [6, 13], [7, 8]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT RIVERalias0.RIVER_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , RIVER AS RIVERalias0 WHERE BORDER_INFOalias0.BORDER = \"state_name0\" AND RIVERalias0.TRAVERSE = BORDER_INFOalias0.STATE_NAME ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;"], "variables": [{"example": "nebraska", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what river runs through the state with the most cities", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN state NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN cities most most cities NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN with most most with NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the smallest state through which the longest river runs", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest state NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN runs NO_ALIGN through NO_ALIGN river NO_ALIGN runs NO_ALIGN runs NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [5, 7], [8, 9], [9, 10], [2, 3], [7, 10], [7, 11], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias2.TRAVERSE FROM RIVER AS RIVERalias2 WHERE RIVERalias2.LENGTH = ( SELECT MAX( RIVERalias3.LENGTH ) FROM RIVER AS RIVERalias3 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many cities are in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "how many cities are in state_name0", "variables": {"state_name0": "louisiana"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "train", "text": "how many cities does state_name0 have", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN have NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "montana", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how high is highest_point0", "variables": {"highest_point0": "mount mckinley"}, "alignment": "NO_ALIGN high NO_ALIGN highest_point0 NO_ALIGN highest_point0 NO_ALIGN high NO_ALIGN high NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "how tall is highest_point0", "variables": {"highest_point0": "mount mckinley"}, "alignment": "NO_ALIGN tall NO_ALIGN highest_point0 NO_ALIGN highest_point0 NO_ALIGN tall NO_ALIGN tall NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "test", "text": "what is the maximum elevation of highest_point0", "variables": {"highest_point0": "san francisco"}, "alignment": "NO_ALIGN maximum NO_ALIGN highest_point0 NO_ALIGN elevation NO_ALIGN maximum NO_ALIGN maximum NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "how high is highest_point0", "variables": {"highest_point0": "guadalupe peak"}, "alignment": "NO_ALIGN high NO_ALIGN highest_point0 NO_ALIGN highest_point0 NO_ALIGN high NO_ALIGN high NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN highest_point0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = \"highest_point0\" ;"], "variables": [{"example": "mount mckinley", "location": "both", "name": "highest_point0", "type": "highest_point"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the major lakes in united states ", "variables": {}, "alignment": "NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN the NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "show me all the major lakes in the us ", "variables": {}, "alignment": "NO_ALIGN show NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN show NO_ALIGN show NO_ALIGN the NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [0, 9], [3, 4], [7, 9]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > 750 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "where is the smallest city", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN where NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "which states lie on the largest river in the united states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [2, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [3, 4], [0, 2], [4, 11]]}, {"question-split": "test", "text": "which states does the longest river run through", "variables": {}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the longest river", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what are the states through which the longest river runs", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [2, 10], [9, 10], [8, 9], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "which states does the longest river cross", "variables": {}, "alignment": "NO_ALIGN cross NO_ALIGN river NO_ALIGN river NO_ALIGN cross NO_ALIGN cross NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "which is the density of the state that the largest river in the united states runs through", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[4, 7], [10, 11], [5, 6], [1, 17], [15, 16], [8, 9], [1, 2], [16, 17], [6, 7], [12, 13], [3, 4], [8, 15], [4, 5], [8, 11], [9, 10], [2, 3], [14, 15], [8, 17], [11, 12], [2, 17], [15, 17], [0, 1], [12, 15], [13, 14], [5, 7], [7, 17], [11, 15], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the longest river in the largest state", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN in river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN in NO_ALIGN state NO_ALIGN state NO_ALIGN in NO_ALIGN in NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN in NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN in NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the smallest city in the usa", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the smallest city in the us", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what city has the least population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "what is the city with the smallest population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many people live in city_name0", "variables": {"city_name0": "chicago"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the population of city_name0", "variables": {"city_name0": "dallas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "how many people lived in city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN lived NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN lived NO_ALIGN lived NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "detroit"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "houston"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "number of people in city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "houston"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what is the population of city_name0 city", "variables": {"city_name0": "new york"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "san antonio"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "tucson"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "how big is the city of city_name0", "variables": {"city_name0": "new york"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN city NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "san francisco"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "sacramento"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "denver"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "seattle"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "population of city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what is the population in city_name0", "variables": {"city_name0": "boston"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "kalamazoo"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "people in city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "train", "text": "how many people in city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "how many inhabitants does city_name0 have", "variables": {"city_name0": "montgomery"}, "alignment": "NO_ALIGN inhabitants NO_ALIGN many NO_ALIGN city_name0 NO_ALIGN inhabitants NO_ALIGN inhabitants NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "riverside"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of city_name0", "variables": {"city_name0": "atlanta"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "test", "text": "number of citizens in city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN citizens NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [2, 3], [0, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "how many citizens in city_name0", "variables": {"city_name0": "boulder"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN citizens NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [3, 5]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" ;"], "variables": [{"example": "chicago", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state borders the least states", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state least least least borders NO_ALIGN borders least state NO_ALIGN state NO_ALIGN borders NO_ALIGN state borders borders state NO_ALIGN state borders borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN least NO_ALIGN state NO_ALIGN state NO_ALIGN least least least least borders NO_ALIGN borders least least NO_ALIGN state NO_ALIGN borders NO_ALIGN state borders borders least NO_ALIGN state NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.STATE_NAME GROUP BY STATEalias0.STATE_NAME HAVING COUNT( BORDER_INFOalias0.BORDER ) = ( SELECT MIN( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias0 , STATEalias1.STATE_NAME FROM STATE AS STATEalias1 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias1 ON STATEalias1.STATE_NAME = BORDER_INFOalias1.STATE_NAME GROUP BY STATEalias1.STATE_NAME ) AS DERIVED_TABLEalias0 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what rivers traverses the state which borders the most states", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders borders most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what river traverses the state which borders the most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN traverses NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders borders most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "how many cities are there in the united states", "variables": {}, "alignment": "NO_ALIGN there NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many cities does the usa have", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}, {"question-split": "train", "text": "how many cities are there in the us", "variables": {}, "alignment": "NO_ALIGN there NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [0, 3], [3, 4], [0, 2], [5, 8]]}, {"question-split": "test", "text": "how many cities are there in usa", "variables": {}, "alignment": "NO_ALIGN there NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many cities are there in us", "variables": {}, "alignment": "NO_ALIGN there NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states neighbor state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN neighbor NO_ALIGN states NO_ALIGN states NO_ALIGN neighbor NO_ALIGN neighbor NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "which states border state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what states border state_name0", "variables": {"state_name0": "delaware"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "give me the states that border state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [4, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what state borders state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [3, 4], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what states are next to state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN next NO_ALIGN states NO_ALIGN states NO_ALIGN next NO_ALIGN next NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "indiana"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "new jersey"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what states surround state_name0", "variables": {"state_name0": "kentucky"}, "alignment": "NO_ALIGN surround NO_ALIGN states NO_ALIGN states NO_ALIGN surround NO_ALIGN surround NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state borders state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "kentucky"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states are next to state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN next NO_ALIGN states NO_ALIGN states NO_ALIGN next NO_ALIGN next NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [3, 4], [2, 3], [1, 2]]}, {"question-split": "test", "text": "what are the neighboring states for state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN neighboring NO_ALIGN states NO_ALIGN states NO_ALIGN neighboring NO_ALIGN neighboring NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "which state borders state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "georgia"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "new hampshire"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "south dakota"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "arkansas"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which states adjoin state_name0", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN adjoin NO_ALIGN states NO_ALIGN states NO_ALIGN adjoin NO_ALIGN adjoin NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what state borders state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [0, 3], [3, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "test", "text": "states bordering state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "which state border state_name0", "variables": {"state_name0": "kentucky"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [3, 4], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what is the adjacent state of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN adjacent NO_ALIGN state_name0 NO_ALIGN state_name0 NO_ALIGN adjacent NO_ALIGN adjacent NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "wisconsin"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "which states border state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border state_name0", "variables": {"state_name0": "kentucky"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "maine", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "dev", "text": "what state has the longest river", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN river longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which state has the highest elevation", "variables": {}, "alignment": "NO_ALIGN elevation NO_ALIGN state NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which state has the highest point", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the highest elevation", "variables": {}, "alignment": "NO_ALIGN elevation NO_ALIGN state NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "in which state does the highest point in usa exist", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [1, 3], [4, 7], [6, 7], [7, 8], [4, 5], [5, 6], [3, 10], [9, 10], [8, 9], [2, 3], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what state has highest elevation", "variables": {}, "alignment": "NO_ALIGN elevation NO_ALIGN state NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "what is the state with the highest elevation in the united states", "variables": {}, "alignment": "NO_ALIGN elevation NO_ALIGN state NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN elevation NO_ALIGN highest NO_ALIGN NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [5, 8], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [7, 8], [2, 4], [9, 12]]}, {"question-split": "train", "text": "what is the state that contains the highest point", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN contains NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN contains NO_ALIGN contains NO_ALIGN NO_ALIGN point NO_ALIGN contains NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [2, 9], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what state contains the highest point in the us", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN contains NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN contains NO_ALIGN contains NO_ALIGN NO_ALIGN point NO_ALIGN contains NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what state borders the least states excluding state_name0 and excluding state_name1", "variables": {"state_name0": "alaska", "state_name1": "hawaii"}, "alignment": "NO_ALIGN state NO_ALIGN and NO_ALIGN state NO_ALIGN state least least least borders NO_ALIGN borders least state NO_ALIGN and NO_ALIGN borders NO_ALIGN and NO_ALIGN state NO_ALIGN and excluding NO_ALIGN state_name0 NO_ALIGN and state NO_ALIGN and excluding NO_ALIGN state_name1 NO_ALIGN borders borders state NO_ALIGN and borders borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state_name1 NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN excluding NO_ALIGN and NO_ALIGN state NO_ALIGN excluding least least least borders NO_ALIGN state_name1 least excluding NO_ALIGN and NO_ALIGN state_name1 NO_ALIGN and NO_ALIGN excluding NO_ALIGN and excluding NO_ALIGN state_name0 NO_ALIGN and excluding NO_ALIGN and excluding NO_ALIGN state_name1 NO_ALIGN borders borders excluding NO_ALIGN and NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [10, 11], [6, 8], [6, 7], [4, 5], [2, 8], [5, 6], [8, 9], [3, 8], [9, 10], [9, 11], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.STATE_NAME WHERE STATEalias0.STATE_NAME <> \"state_name0\" AND STATEalias0.STATE_NAME <> \"state_name1\" GROUP BY STATEalias0.STATE_NAME HAVING COUNT( BORDER_INFOalias0.BORDER ) = ( SELECT MIN( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias0 , STATEalias1.STATE_NAME FROM STATE AS STATEalias1 LEFT OUTER JOIN BORDER_INFO AS BORDER_INFOalias1 ON STATEalias1.STATE_NAME = BORDER_INFOalias1.STATE_NAME WHERE STATEalias1.STATE_NAME <> \"state_name0\" AND STATEalias1.STATE_NAME <> \"state_name1\" GROUP BY STATEalias1.STATE_NAME ) AS DERIVED_TABLEalias0 ) ;"], "variables": [{"example": "alaska", "location": "both", "name": "state_name0", "type": "state_name"}, {"example": "hawaii", "location": "both", "name": "state_name1", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the most dense state in the usa", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN state NO_ALIGN dense NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN state NO_ALIGN dense NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [5, 6], [4, 5], [7, 9], [8, 9], [2, 3], [1, 9], [3, 4], [3, 5]]}, {"question-split": "test", "text": "which state has the highest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which state has the greatest density", "variables": {}, "alignment": "NO_ALIGN greatest NO_ALIGN state NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN greatest NO_ALIGN density NO_ALIGN NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the highest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the greatest population density", "variables": {}, "alignment": "NO_ALIGN greatest NO_ALIGN state NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN greatest NO_ALIGN density NO_ALIGN NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the largest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the state with the largest density in usa", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "what is the state with the largest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "which state has the largest density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the population density of the state with the smallest population", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN density NO_ALIGN population NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the largest state bordering state_name0", "variables": {"state_name0": "arkansas"}, "alignment": "NO_ALIGN largest NO_ALIGN bordering NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 largest NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the largest state that borders state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the largest state bordering state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN largest NO_ALIGN bordering NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN state_name0 largest NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what state that borders state_name0 is the largest", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [6, 8], [5, 6], [4, 5], [0, 5], [2, 3], [3, 4], [2, 5], [7, 8], [0, 2], [5, 8], [3, 5]]}, {"question-split": "exclude", "text": "what is the largest state that borders state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;", "SELECT STATEalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM BORDER_INFO AS BORDER_INFOalias1 , STATE AS STATEalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_NAME = BORDER_INFOalias1.BORDER ) AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "arkansas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "how many people live in state_name0", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many people reside in state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN reside NO_ALIGN people NO_ALIGN people NO_ALIGN reside NO_ALIGN reside NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "how many residents live in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN residents NO_ALIGN live NO_ALIGN live NO_ALIGN residents NO_ALIGN residents NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how much population does state_name0 have", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN much NO_ALIGN population NO_ALIGN population NO_ALIGN much NO_ALIGN much NO_ALIGN have NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}, {"question-split": "train", "text": "what are the population of state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "what is the population of state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "maryland"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "how many people are in the state of state_name0", "variables": {"state_name0": "nevada"}, "alignment": "NO_ALIGN of NO_ALIGN people NO_ALIGN of NO_ALIGN of NO_ALIGN of NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [4, 5], [5, 6], [5, 7], [8, 9], [3, 9], [2, 3], [0, 3], [3, 4], [0, 2], [7, 9]]}, {"question-split": "dev", "text": "what can you tell me about the population of state_name0", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN can NO_ALIGN population NO_ALIGN population NO_ALIGN can NO_ALIGN can NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "how many people are there in state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "south dakota"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "idaho"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people are there in state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "kansas"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "new hampshire"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many citizens in state_name0", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN citizens NO_ALIGN citizens NO_ALIGN how NO_ALIGN citizens NO_ALIGN citizens NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "south dakota"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "minnesota"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "how many people stay in state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN stay NO_ALIGN people NO_ALIGN people NO_ALIGN stay NO_ALIGN stay NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN live NO_ALIGN people NO_ALIGN people NO_ALIGN live NO_ALIGN live NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many citizens live in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN citizens NO_ALIGN citizens NO_ALIGN live NO_ALIGN citizens NO_ALIGN citizens NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "washington", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the combined area of all 50 states", "variables": {}, "alignment": "NO_ALIGN combined NO_ALIGN 50 NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN 50 NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the area of all the states combined", "variables": {}, "alignment": "NO_ALIGN combined NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN area NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [5, 8]]}, {"question-split": "train", "text": "how many square kilometers in the us", "variables": {}, "alignment": "NO_ALIGN kilometers NO_ALIGN square NO_ALIGN square NO_ALIGN NO_ALIGN the NO_ALIGN square NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4]]}, {"question-split": "dev", "text": "what is the total area of the usa", "variables": {}, "alignment": "NO_ALIGN total NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN area NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "how high is the highest point in the largest state", "variables": {}, "alignment": "NO_ALIGN high NO_ALIGN highest NO_ALIGN point NO_ALIGN high NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN in largest NO_ALIGN state NO_ALIGN high NO_ALIGN state NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [8, 9], [9, 10], [2, 3], [3, 6], [7, 10], [3, 4], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) AND STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states have a capital that is the highest point in the state", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN have NO_ALIGN point NO_ALIGN point NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN point NO_ALIGN highest NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [7, 10], [3, 4], [11, 13], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [3, 5], [0, 1], [7, 13], [6, 13], [7, 8], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = HIGHLOWalias0.HIGHEST_POINT ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which states have a major city named city_name0", "variables": {"city_name0": "austin"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN city NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN major city_name0 NO_ALIGN city NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias0.POPULATION > 150000 ;"], "variables": [{"example": "austin", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state has the smallest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what is the least populous state", "variables": {}, "alignment": "NO_ALIGN populous NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [5, 6], [4, 5], [1, 6], [2, 3], [3, 4], [3, 5]]}, {"question-split": "dev", "text": "what is the state with the lowest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "through which states does the longest river in state_name0 run", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [1, 3], [4, 7], [6, 7], [7, 8], [4, 5], [5, 6], [3, 10], [8, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the population density of the largest state", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN largest NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "dev", "text": "what rivers flow through the state with the largest population", "variables": {}, "alignment": "NO_ALIGN flow NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN flow NO_ALIGN flow NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the lowest elevation in state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN elevation NO_ALIGN lowest NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "pennsylvania", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "give me the lakes in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [0, 6], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "california", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the largest cities in the states that border the largest state", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN are NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN are NO_ALIGN NO_ALIGN states NO_ALIGN largest NO_ALIGN state NO_ALIGN cities NO_ALIGN largest NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN largest NO_ALIGN state that largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border states states border NO_ALIGN border states cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN border NO_ALIGN that states states that NO_ALIGN border NO_ALIGN NO_ALIGN cities NO_ALIGN NO_ALIGN states states largest NO_ALIGN state NO_ALIGN NO_ALIGN cities NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [6, 8], [6, 13], [7, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION IN ( SELECT DERIVED_TABLEalias1.DERIVED_FIELDalias0 FROM ( SELECT MAX( CITYalias1.POPULATION ) AS DERIVED_FIELDalias0 , STATEalias0.STATE_NAME FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = CITYalias1.STATE_NAME AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) GROUP BY STATEalias0.STATE_NAME ) AS DERIVED_TABLEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the largest city in a state that borders state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}, {"question-split": "dev", "text": "what is the largest city in states that border state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that city NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER = \"state_name0\" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.BORDER = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the population of the state that borders the most states", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders borders most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the highest point in the usa", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the highest point of the usa", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN usa NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the highest point in the country", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the highest point in the us", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the highest point in the united states", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the smallest city of the smallest state in the us", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN of NO_ALIGN state NO_ALIGN of NO_ALIGN of NO_ALIGN of NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN of NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN in city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN state NO_ALIGN of NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN of NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [7, 8], [9, 12]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the populations of states which border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN border NO_ALIGN border NO_ALIGN of NO_ALIGN populations NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN are populations NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [2, 9], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [7, 9]]}], "sql": ["SELECT STATEalias0.POPULATION FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many people live in the biggest city in state_name0 state", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN city NO_ALIGN people NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN people NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN people NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in city NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [0, 3], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [7, 8], [0, 2]]}, {"question-split": "dev", "text": "how large is the largest city in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in city NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = \"state_name0\" ) AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "new york", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what are the states", "variables": {}, "alignment": "NO_ALIGN the NO_ALIGN states NO_ALIGN the NO_ALIGN the NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 4], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "list the states", "variables": {}, "alignment": "NO_ALIGN list NO_ALIGN states NO_ALIGN the NO_ALIGN list NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "test", "text": "give me all the states of usa", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN states NO_ALIGN of NO_ALIGN of NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the populations of states through which the river_name0 river run", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [8, 12], [7, 8], [2, 4]]}, {"question-split": "test", "text": "what are the populations of states through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [4, 5], [5, 6], [6, 11], [8, 11], [2, 11], [8, 10], [8, 9], [9, 10], [2, 3], [3, 4], [2, 4], [4, 11]]}, {"question-split": "train", "text": "what are the populations of the states through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [9, 11], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [7, 8], [2, 4], [9, 12]]}, {"question-split": "train", "text": "what are the populations of states through which the river_name0 river runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [8, 11], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [8, 12], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what are the populations of the states through which the river_name0 run", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [5, 7], [7, 8], [2, 4], [9, 12]]}, {"question-split": "test", "text": "what are the populations of the states through which the river_name0 river run", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [5, 7], [7, 13], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what are the populations of states through which the river_name0 run", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [10, 11], [5, 11], [4, 5], [5, 6], [6, 11], [8, 11], [2, 11], [8, 9], [9, 10], [2, 3], [3, 4], [2, 4], [4, 11]]}, {"question-split": "dev", "text": "what are the populations of the states through which the river_name0 river runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN populations NO_ALIGN populations NO_ALIGN of NO_ALIGN populations NO_ALIGN populations NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [5, 7], [7, 13], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many rivers are in the state with the highest point", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN point NO_ALIGN highest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN are rivers NO_ALIGN rivers NO_ALIGN point NO_ALIGN state NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [7, 11], [0, 3], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM HIGHLOW AS HIGHLOWalias0 , RIVER AS RIVERalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) AND RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many rivers in state_name0 are longer than the river_name0", "variables": {"river_name0": "red", "state_name0": "texas"}, "alignment": "NO_ALIGN many NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN in NO_ALIGN longer NO_ALIGN NO_ALIGN longer NO_ALIGN in NO_ALIGN rivers NO_ALIGN longer NO_ALIGN longer NO_ALIGN rivers NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN are rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [8, 9], [9, 10], [0, 5], [2, 3], [7, 10], [0, 3], [3, 4], [3, 5]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > ALL ( SELECT RIVERalias1.LENGTH FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = \"river_name0\" ) AND RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "red", "location": "both", "name": "river_name0", "type": "river_name"}, {"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what state has the largest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the most populous state", "variables": {}, "alignment": "NO_ALIGN populous NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [5, 6], [4, 5], [1, 6], [2, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what state is the largest in population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "which state has the biggest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the greatest population", "variables": {}, "alignment": "NO_ALIGN greatest NO_ALIGN state NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN greatest NO_ALIGN population NO_ALIGN NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the most population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the most people", "variables": {}, "alignment": "NO_ALIGN people NO_ALIGN state NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN state NO_ALIGN people NO_ALIGN NO_ALIGN people NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the most people", "variables": {}, "alignment": "NO_ALIGN people NO_ALIGN state NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN people NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN state NO_ALIGN people NO_ALIGN NO_ALIGN people NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the most populous state in the us", "variables": {}, "alignment": "NO_ALIGN populous NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [2, 6], [6, 7], [7, 8], [2, 9], [5, 6], [4, 5], [7, 9], [8, 9], [2, 3], [1, 9], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what state has the highest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN state NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many states do not have rivers", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN do how NO_ALIGN have NO_ALIGN NO_ALIGN how NO_ALIGN how NO_ALIGN how NO_ALIGN have not NO_ALIGN NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( DISTINCT STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the area of the state with the capital capital0", "variables": {"capital0": "albany"}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN capital NO_ALIGN NO_ALIGN capital0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [2, 11], [8, 9], [9, 10], [2, 3], [7, 11], [1, 11], [3, 4], [2, 4]]}], "sql": ["SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = \"capital0\" ;"], "variables": [{"example": "albany", "location": "both", "name": "capital0", "type": "capital"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the state with the smallest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "dev", "text": "which is the smallest state", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "which state is the smallest", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what is the smallest state in the usa", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the smallest state by area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN by NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN by NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what state has the smallest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN state NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN smallest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the population density of the state with the smallest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN density NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN density NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}, {"question-split": "train", "text": "what is the population density of the smallest state", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN density NO_ALIGN smallest NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which rivers do not run through state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN do rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers not NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN do NO_ALIGN do NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4]]}, {"question-split": "train", "text": "what rivers do not run through state_name0", "variables": {"state_name0": "tennessee"}, "alignment": "NO_ALIGN do rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers not NO_ALIGN NO_ALIGN NO_ALIGN do NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN do NO_ALIGN do NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the height of mount mountain_name0", "variables": {"mountain_name0": "mckinley"}, "alignment": "NO_ALIGN height NO_ALIGN mount NO_ALIGN mount NO_ALIGN height NO_ALIGN height NO_ALIGN mount NO_ALIGN NO_ALIGN mount NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}], "sql": ["SELECT MOUNTAINalias0.MOUNTAIN_ALTITUDE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = \"mountain_name0\" ;"], "variables": [{"example": "mckinley", "location": "both", "name": "mountain_name0", "type": "mountain_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "which state borders most states", "variables": {}, "alignment": "NO_ALIGN most NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN most NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what state borders the most states", "variables": {}, "alignment": "NO_ALIGN most NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN most NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state borders the most states", "variables": {}, "alignment": "NO_ALIGN most NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN state NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN most NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what state borders most other states", "variables": {}, "alignment": "NO_ALIGN other NO_ALIGN other NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN other NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN other NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN other NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN other NO_ALIGN most NO_ALIGN most borders NO_ALIGN borders NO_ALIGN NO_ALIGN most NO_ALIGN borders NO_ALIGN borders most most borders NO_ALIGN other NO_ALIGN NO_ALIGN other NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT DERIVED_TABLEalias1.STATE_NAME FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias1.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias1.BORDER ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ;", "SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias1.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER ) AS DERIVED_TABLEalias0 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "which states do river_name0 river flow through", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN flow NO_ALIGN through NO_ALIGN river NO_ALIGN flow NO_ALIGN flow NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [3, 5]]}, {"question-split": "train", "text": "what states does the river_name0 river run through", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what states border the river_name0 river", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which states border the river_name0 river", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states does the river_name0 river run through", "variables": {"river_name0": "delaware"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what states does the river_name0 river run through", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what states does the river_name0 run through", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what states does the river_name0 river run through", "variables": {"river_name0": "ohio"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "where is the river_name0 river", "variables": {"river_name0": "chattahoochee"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "which states does the river_name0 river run through", "variables": {"river_name0": "chattahoochee"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"question-split": "test", "text": "which states does the river_name0 run through", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what states does the river_name0 river run through", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which states does the river_name0 river pass through", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"question-split": "exclude", "text": "what states does the river_name0 run through", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "which states does the river_name0 river run through", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"question-split": "test", "text": "what are the states that the river_name0 run through", "variables": {"river_name0": "potomac"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [3, 4], [2, 4], [7, 9]]}, {"question-split": "exclude", "text": "which states does the river_name0 river run through", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"question-split": "train", "text": "which state has the river_name0 river", "variables": {"river_name0": "red"}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what states have rivers named river_name0", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "through which states does the river_name0 flow", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN flow NO_ALIGN through NO_ALIGN through NO_ALIGN flow NO_ALIGN flow NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4]]}, {"question-split": "exclude", "text": "which states does the river_name0 river run through", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN river NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 6], [3, 4]]}, {"question-split": "train", "text": "what states are next to the river_name0", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "through which states does the river_name0 run", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN run NO_ALIGN through NO_ALIGN through NO_ALIGN run NO_ALIGN run NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [2, 3], [1, 7], [3, 7], [3, 4]]}, {"question-split": "train", "text": "what states does the river_name0 river go through", "variables": {"river_name0": "ohio"}, "alignment": "NO_ALIGN go NO_ALIGN through NO_ALIGN river NO_ALIGN go NO_ALIGN go NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many rivers are in the state with the largest population", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN population NO_ALIGN largest NO_ALIGN largest NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN in NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN in NO_ALIGN NO_ALIGN are population NO_ALIGN state NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [3, 11], [8, 9], [7, 11], [0, 3], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MAX( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) AND STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how long is the longest river in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN long NO_ALIGN longest NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN in long NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [3, 8], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what is the length of the longest river that runs through state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN river NO_ALIGN longest NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN that river NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [5, 8], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = \"state_name0\" ) AND RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "california", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the capital of the state with the longest river", "variables": {}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [7, 8], [6, 7], [10, 11], [4, 5], [5, 6], [8, 11], [5, 7], [2, 11], [8, 9], [9, 10], [2, 3], [7, 11], [1, 11], [3, 4], [2, 4]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the longest river in the state with the most major cities", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN state NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major most most cities NO_ALIGN state most most most NO_ALIGN cities NO_ALIGN cities NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN most most river NO_ALIGN longest most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[8, 13], [10, 11], [5, 6], [5, 13], [8, 9], [2, 5], [1, 2], [6, 7], [12, 13], [2, 13], [3, 4], [4, 5], [1, 13], [9, 10], [2, 3], [11, 12], [0, 1], [9, 13], [6, 8], [6, 13], [7, 8]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ORDER BY COUNT( CITYalias0.CITY_NAME ) DESC LIMIT 1 ) ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which state capital has the smallest population", "variables": {}, "alignment": "NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN capital NO_ALIGN population NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 , STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "name all the rivers in state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN name NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN name NO_ALIGN name NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}, {"question-split": "train", "text": "rivers in state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}, {"question-split": "train", "text": "what are all the rivers in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what are the rivers in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what rivers are in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what rivers are there in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what rivers run through state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what rivers flow through state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN flow NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN flow NO_ALIGN flow NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "what river flows through state_name0", "variables": {"state_name0": "kansas"}, "alignment": "NO_ALIGN flows NO_ALIGN flows NO_ALIGN river NO_ALIGN flows NO_ALIGN flows NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what are the rivers in the state of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [7, 9]]}, {"question-split": "exclude", "text": "what rivers are in state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "name the rivers in state_name0", "variables": {"state_name0": "arkansas"}, "alignment": "NO_ALIGN name NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN name NO_ALIGN name NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [1, 3], [4, 5], [0, 5], [2, 3], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "louisiana"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "west virginia"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers are in state_name0", "variables": {"state_name0": "nevada"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers are in state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what are the rivers in the state of state_name0", "variables": {"state_name0": "indiana"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4], [7, 9]]}, {"question-split": "exclude", "text": "what rivers flow through state_name0", "variables": {"state_name0": "missouri"}, "alignment": "NO_ALIGN flow NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN flow NO_ALIGN flow NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what are the rivers of state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "dev", "text": "which rivers are in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "which rivers flow through state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN flow NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN flow NO_ALIGN flow NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "test", "text": "what is the river that cross over state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN cross NO_ALIGN river NO_ALIGN river NO_ALIGN cross NO_ALIGN cross NO_ALIGN river NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what rivers run through state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what river flows through state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN flows NO_ALIGN flows NO_ALIGN river NO_ALIGN flows NO_ALIGN flows NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what river runs through state_name0", "variables": {"state_name0": "virginia"}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what rivers are in state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "exclude", "text": "what river runs through state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN through NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "name the major rivers in state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN name NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN name NO_ALIGN name NO_ALIGN major NO_ALIGN major major name NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}, {"question-split": "train", "text": "what are the major rivers in state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN major NO_ALIGN major major rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what are major rivers in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN major NO_ALIGN major major rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "what major rivers run through state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN major NO_ALIGN major major rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [0, 3], [3, 4]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > 750 AND RIVERalias0.TRAVERSE = \"state_name0\" ;"], "variables": [{"example": "florida", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "which states border the longest river in the usa", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the lowest point in usa", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "what is the lowest point in the united states", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}, {"question-split": "test", "text": "where is the lowest point in the us", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "what is the lowest point of the us", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the capital of states that have cities named city_name0", "variables": {"city_name0": "durham"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN cities NO_ALIGN city_name0 NO_ALIGN capital NO_ALIGN capital NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN that capital NO_ALIGN have NO_ALIGN city_name0 NO_ALIGN have NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [2, 11], [7, 8], [2, 4]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM CITY AS CITYalias0 , STATE AS STATEalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" AND STATEalias0.STATE_NAME = CITYalias0.STATE_NAME ;"], "variables": [{"example": "durham", "location": "both", "name": "city_name0", "type": "city_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "where is the highest point in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN where NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the highest point in state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "montana"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "virginia"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the high point of state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN high NO_ALIGN high NO_ALIGN point NO_ALIGN high NO_ALIGN high NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "where is the highest point in state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN where NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the highest mountain in state_name0", "variables": {"state_name0": "alaska"}, "alignment": "NO_ALIGN mountain NO_ALIGN highest NO_ALIGN highest NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "test", "text": "could you tell me what is the highest point in the state of state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [6, 14], [1, 2], [6, 7], [12, 13], [10, 12], [3, 4], [9, 14], [12, 14], [4, 5], [4, 14], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [13, 14], [5, 14], [10, 14], [7, 8]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "rhode island"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest mountain in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN mountain NO_ALIGN highest NO_ALIGN highest NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "new mexico"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "kansas"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "delaware"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the highest point in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "montana", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many major cities are in state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many major cities are in state_name0", "variables": {"state_name0": "arizona"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 4], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how many big cities are in state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN cities are cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 4], [3, 4]]}, {"question-split": "test", "text": "how many major cities are there in state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN there NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many major cities are in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [0, 4], [3, 4], [0, 2]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "florida", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the capital of the state with the largest population density", "variables": {}, "alignment": "NO_ALIGN the capital NO_ALIGN capital NO_ALIGN density NO_ALIGN capital NO_ALIGN capital NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border states that border states that border state_name0", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [7, 10], [1, 10], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME IN ( SELECT BORDER_INFOalias2.BORDER FROM BORDER_INFO AS BORDER_INFOalias2 WHERE BORDER_INFOalias2.STATE_NAME = \"state_name0\" ) ) ;"], "variables": [{"example": "florida", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the size of the largest state in the usa", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN size NO_ALIGN size NO_ALIGN NO_ALIGN of NO_ALIGN size NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 11], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [2, 11], [7, 8], [2, 4]]}, {"question-split": "train", "text": "what is the area of the largest state", "variables": {}, "alignment": "NO_ALIGN largest NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN area NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT MAX( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;", "SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border the most populous state", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN populous NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN populous NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 6], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what are the states that border the state with the greatest population", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN greatest NO_ALIGN state NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN greatest NO_ALIGN population NO_ALIGN NO_ALIGN greatest NO_ALIGN greatest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [2, 4], [9, 12]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;", "SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the longest river that passes the states that border the state that borders the most states", "variables": {}, "alignment": "NO_ALIGN most river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN most NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN borders NO_ALIGN longest NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN longest NO_ALIGN river NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN state NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN border NO_ALIGN border NO_ALIGN borders most most borders NO_ALIGN border borders most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN borders NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN border NO_ALIGN that most most that NO_ALIGN border NO_ALIGN NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN most most longest NO_ALIGN river NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [2, 18], [5, 6], [8, 9], [15, 16], [9, 18], [2, 5], [1, 2], [16, 17], [6, 7], [12, 13], [14, 18], [5, 18], [10, 18], [15, 18], [3, 4], [11, 18], [11, 13], [6, 18], [4, 5], [7, 18], [9, 10], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [17, 18], [13, 14], [1, 18], [13, 18], [7, 8]]}], "sql": ["SELECT DISTINCT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH IN ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias0 ) FROM ( SELECT MAX( RIVERalias1.LENGTH ) AS DERIVED_FIELDalias0 , RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 GROUP BY BORDER_INFOalias1.BORDER HAVING COUNT( 1 ) = ( SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias1 ) FROM ( SELECT BORDER_INFOalias2.BORDER , COUNT( 1 ) AS DERIVED_FIELDalias1 FROM BORDER_INFO AS BORDER_INFOalias2 GROUP BY BORDER_INFOalias2.BORDER ) AS DERIVED_TABLEalias0 ) ) ) GROUP BY RIVERalias1.TRAVERSE ) AS DERIVED_TABLEalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "train", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "arkansas"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "massachusetts"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "what is the lowest point in state_name0 in meters", "variables": {"state_name0": "nebraska"}, "alignment": "NO_ALIGN meters NO_ALIGN lowest NO_ALIGN point NO_ALIGN meters NO_ALIGN meters NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [5, 7], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4], [7, 9]]}, {"question-split": "train", "text": "what is the lowest point in the state of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "where is the lowest point in state_name0", "variables": {"state_name0": "maryland"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN where NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "wisconsin"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "oregon"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "louisiana"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in the state of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 8], [6, 7], [4, 5], [5, 6], [6, 10], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the lowest point in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the lowest point of state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN point NO_ALIGN lowest NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "where is the lowest spot in state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN spot NO_ALIGN lowest NO_ALIGN lowest NO_ALIGN spot NO_ALIGN spot NO_ALIGN where NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [2, 5], [3, 4]]}], "sql": ["SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "arkansas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many states border state_name1 and border state_name0", "variables": {"state_name0": "new mexico", "state_name1": "colorado"}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN NO_ALIGN state_name1 NO_ALIGN border NO_ALIGN border NO_ALIGN state_name1 NO_ALIGN state_name1 NO_ALIGN and NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN and border NO_ALIGN and NO_ALIGN NO_ALIGN state_name1 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [3, 8], [2, 3], [3, 4]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) AND BORDER_INFOalias0.STATE_NAME = \"state_name1\" ;"], "variables": [{"example": "new mexico", "location": "both", "name": "state_name0", "type": "state_name"}, {"example": "colorado", "location": "both", "name": "state_name1", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the density of the state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "test", "text": "what is the population density of state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the population density of state_name0", "variables": {"state_name0": "south dakota"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "exclude", "text": "what is the population density of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the density of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population density of state_name0", "variables": {"state_name0": "wyoming"}, "alignment": "NO_ALIGN of NO_ALIGN density NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "new york", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "what is the total length of all rivers in the usa", "variables": {}, "alignment": "NO_ALIGN total NO_ALIGN length NO_ALIGN length NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN length rivers NO_ALIGN length NO_ALIGN rivers NO_ALIGN length NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN length NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}], "sql": ["SELECT SUM( DERIVED_TABLEalias0.LENGTH ) FROM ( SELECT DISTINCT RIVERalias0.RIVER_NAME , RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 ) AS DERIVED_TABLEalias0 ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what are the major cities in the usa", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what are the major cities of the united states", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}, {"question-split": "dev", "text": "what are the major cities of the us", "variables": {}, "alignment": "NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population of the state with the largest area", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN population NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN area NO_ALIGN NO_ALIGN area NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [7, 11], [1, 11], [1, 2], [6, 7], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [5, 7], [2, 11], [7, 8], [2, 4]]}, {"question-split": "dev", "text": "what is the population of the largest state", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN population NO_ALIGN largest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the largest city in smallest state through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN smallest NO_ALIGN largest NO_ALIGN largest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN runs NO_ALIGN through NO_ALIGN through NO_ALIGN runs NO_ALIGN runs NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN in largest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN runs runs city NO_ALIGN city state NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [5, 8], [1, 2], [6, 7], [12, 13], [8, 10], [10, 12], [2, 13], [3, 4], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [6, 8], [7, 8]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = \"river_name0\" ) AND STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ) ) ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the height of the highest mountain in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN highest NO_ALIGN the mountain NO_ALIGN highest NO_ALIGN NO_ALIGN highest NO_ALIGN mountain NO_ALIGN mountain NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 10], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT MAX( DISTINCT HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how many states border the largest state", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN state NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "how many states border the river_name0 river", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN many NO_ALIGN river border NO_ALIGN border NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [0, 3], [3, 4]]}], "sql": ["SELECT COUNT( DISTINCT BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the length of the longest river in the usa", "variables": {}, "alignment": "NO_ALIGN length river NO_ALIGN longest NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 11], [5, 8], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [8, 11], [9, 10], [2, 3], [4, 11], [0, 1], [2, 11], [7, 8], [2, 4]]}, {"question-split": "train", "text": "how long is the longest river in the usa", "variables": {}, "alignment": "NO_ALIGN long long NO_ALIGN longest NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN longest NO_ALIGN NO_ALIGN NO_ALIGN longest NO_ALIGN longest NO_ALIGN longest NO_ALIGN NO_ALIGN river NO_ALIGN longest NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 9], [7, 8], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [3, 9], [2, 3], [3, 6], [3, 4], [0, 2], [7, 9]]}], "sql": ["SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "washington", "state_name0": "dc"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "train", "text": "how many people live in city_name0 state_name0", "variables": {"city_name0": "washington", "state_name0": "dc"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN in city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how many people live in city_name0 state_name0", "variables": {"city_name0": "minneapolis", "state_name0": "minnesota"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN in city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "atlanta", "state_name0": "georgia"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "erie", "state_name0": "pennsylvania"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "tempe", "state_name0": "arizona"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "boston", "state_name0": "massachusetts"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "springfield", "state_name0": "missouri"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "springfield", "state_name0": "south dakota"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [4, 7], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in city_name0 state_name0", "variables": {"city_name0": "austin", "state_name0": "texas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN in city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "portland", "state_name0": "maine"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "how many people live in city_name0 state_name0", "variables": {"city_name0": "spokane", "state_name0": "washington"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN people NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN in city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 7], [0, 3], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "austin", "state_name0": "texas"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the population of city_name0 state_name0", "variables": {"city_name0": "seattle", "state_name0": "washington"}, "alignment": "NO_ALIGN city_name0 NO_ALIGN population NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN city_name0 NO_ALIGN NO_ALIGN city_name0 NO_ALIGN state_name0 city_name0 NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = \"city_name0\" AND CITYalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "minneapolis", "location": "both", "name": "city_name0", "type": "city_name"}, {"example": "minnesota", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "how many rivers are in the state that has the most rivers", "variables": {}, "alignment": "NO_ALIGN many NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN rivers NO_ALIGN rivers most most rivers NO_ALIGN rivers most most many NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [0, 3], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [8, 12], [5, 7], [7, 8], [0, 2], [9, 12]]}], "sql": ["SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ORDER BY COUNT( RIVERalias0.RIVER_NAME ) DESC LIMIT 1 ;", "SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT COUNT( RIVERalias0.RIVER_NAME ) AS DERIVED_FIELDalias0 , RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 GROUP BY RIVERalias0.TRAVERSE ) AS DERIVED_TABLEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "what is the highest point in the state with the smallest population", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN point NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN state NO_ALIGN point NO_ALIGN state in population NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN state NO_ALIGN population NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [6, 8], [1, 12], [8, 12], [7, 8], [9, 12]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME AND STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MIN( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "which rivers run through the state with the largest city in the us", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN city NO_ALIGN state NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 6], [7, 10], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [6, 13], [7, 8], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what are the population densities of each us state", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN population NO_ALIGN of NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [6, 8], [2, 9], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the total population of the states that border state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN total NO_ALIGN of NO_ALIGN population NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN population NO_ALIGN of NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN that of NO_ALIGN state_name0 NO_ALIGN border NO_ALIGN border NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [2, 5], [1, 11], [1, 2], [6, 7], [9, 11], [3, 4], [5, 11], [4, 5], [6, 11], [8, 11], [9, 10], [2, 3], [0, 1], [6, 8], [2, 11], [7, 8]]}], "sql": ["SELECT SUM( STATEalias0.POPULATION ) FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the largest state that borders the state with the lowest point in the usa", "variables": {}, "alignment": "NO_ALIGN borders NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN point NO_ALIGN point NO_ALIGN state NO_ALIGN largest NO_ALIGN NO_ALIGN point NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN that NO_ALIGN largest NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN that point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN state borders largest NO_ALIGN largest state NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [15, 16], [2, 5], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [3, 4], [2, 16], [4, 5], [10, 13], [9, 10], [9, 16], [2, 3], [14, 15], [11, 12], [7, 9], [0, 1], [14, 16], [5, 16], [13, 14], [10, 16], [7, 8], [6, 16]]}], "sql": ["SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , HIGHLOW AS HIGHLOWalias0 , STATE AS STATEalias0 WHERE ( HIGHLOWalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND ( STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ) AND HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "what states border states that border state_name0", "variables": {"state_name0": "mississippi"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [4, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what states border states that border state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN that NO_ALIGN border NO_ALIGN border NO_ALIGN that NO_ALIGN that NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [4, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [3, 4], [2, 4]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what rivers flow through states that border the state with the largest population", "variables": {}, "alignment": "NO_ALIGN flow NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN flow NO_ALIGN flow NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN population NO_ALIGN NO_ALIGN population NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [5, 13], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [3, 4], [3, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [7, 9], [0, 1], [9, 13], [7, 13], [6, 13], [7, 8], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ) ;"], "variables": []}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what is the average population per square km in state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN square NO_ALIGN population NO_ALIGN square NO_ALIGN square NO_ALIGN population NO_ALIGN square NO_ALIGN square NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [5, 6], [8, 10], [2, 10], [8, 9], [9, 10], [2, 3], [1, 10], [2, 5], [3, 4], [5, 8]]}], "sql": ["SELECT STATEalias0.POPULATION / STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "pennsylvania", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "test", "text": "name the major lakes in state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN the NO_ALIGN major major lakes NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 6], [4, 5], [5, 6], [1, 4], [0, 6], [1, 6], [2, 3], [3, 4]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > 750 AND LAKEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "california", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what are the lakes in states bordering state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN lakes NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}], "sql": ["SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "test", "sentences": [{"question-split": "train", "text": "what are the capital city in state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}, {"question-split": "train", "text": "what is the capital of state_name0", "variables": {"state_name0": "california"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "colorado"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "illinois"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "massachusetts"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "new jersey"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "new york"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "north dakota"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "ohio"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "dev", "text": "what is the capital of the state_name0 state", "variables": {"state_name0": "florida"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "maryland"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what is capital of state_name0", "variables": {"state_name0": "iowa"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [1, 5], [2, 3], [2, 5], [3, 4], [3, 5]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "vermont"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "georgia"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "maine"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what is the capital of the state state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "washington"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "indiana"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of the state_name0 state", "variables": {"state_name0": "alabama"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "michigan"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "hawaii"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "exclude", "text": "what is the capital of state_name0", "variables": {"state_name0": "new hampshire"}, "alignment": "NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN capital NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [1, 6], [2, 3], [3, 4], [2, 4]]}, {"question-split": "train", "text": "can you tell me the capital of state_name0", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN can NO_ALIGN capital NO_ALIGN capital NO_ALIGN can NO_ALIGN can NO_ALIGN state_name0 NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 4]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = \"state_name0\" ;"], "variables": [{"example": "texas", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "how many major cities are in states bordering state_name0", "variables": {"state_name0": "utah"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [0, 4], [3, 4], [7, 9]]}, {"question-split": "exclude", "text": "how many major cities are in states bordering state_name0", "variables": {"state_name0": "nebraska"}, "alignment": "NO_ALIGN many NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN many NO_ALIGN major major cities NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [4, 9], [6, 7], [7, 8], [4, 5], [5, 6], [8, 9], [2, 3], [0, 4], [3, 4], [7, 9]]}], "sql": ["SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ;"], "variables": [{"example": "utah", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the population of the capital of the largest state through which the river_name0 runs", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN population NO_ALIGN population NO_ALIGN capital NO_ALIGN population NO_ALIGN population NO_ALIGN capital NO_ALIGN NO_ALIGN NO_ALIGN capital NO_ALIGN capital NO_ALIGN population NO_ALIGN capital NO_ALIGN capital NO_ALIGN largest NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN largest NO_ALIGN largest NO_ALIGN NO_ALIGN through NO_ALIGN river_name0 NO_ALIGN population NO_ALIGN largest NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN river_name0 NO_ALIGN largest largest NO_ALIGN state NO_ALIGN river_name0 NO_ALIGN through NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[11, 16], [10, 11], [5, 6], [8, 9], [15, 16], [7, 16], [1, 2], [6, 7], [12, 13], [1, 16], [13, 16], [3, 4], [8, 16], [11, 13], [2, 16], [4, 5], [8, 11], [13, 15], [4, 16], [9, 10], [2, 3], [14, 15], [11, 12], [0, 1], [5, 16], [13, 14], [5, 7], [7, 8], [2, 4]]}], "sql": ["SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM RIVER AS RIVERalias0 , STATE AS STATEalias1 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" AND STATEalias1.STATE_NAME = RIVERalias0.TRAVERSE ) ) ;"], "variables": [{"example": "mississippi", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "test", "sentences": [{"question-split": "dev", "text": "what is the area of the states", "variables": {}, "alignment": "NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN area NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [3, 4], [2, 4]]}], "sql": ["SELECT STATEalias0.AREA FROM STATE AS STATEalias0 ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "dev", "text": "which capitals are not major cities", "variables": {}, "alignment": "NO_ALIGN capitals NO_ALIGN capitals NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN capitals NO_ALIGN cities NO_ALIGN major capitals major major capitals NO_ALIGN capitals NO_ALIGN cities NO_ALIGN cities NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.CAPITAL FROM CITY AS CITYalias0 , STATE AS STATEalias0 WHERE CITYalias0.POPULATION <= 150000 AND STATEalias0.CAPITAL = CITYalias0.CITY_NAME ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what state has the largest urban population", "variables": {}, "alignment": "NO_ALIGN urban NO_ALIGN state NO_ALIGN population NO_ALIGN urban state urban urban NO_ALIGN state has urban urban NO_ALIGN urban NO_ALIGN population NO_ALIGN has NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what state bordering state_name0 has the largest population", "variables": {"state_name0": "nevada"}, "alignment": "NO_ALIGN population NO_ALIGN bordering NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN has state population NO_ALIGN population has NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [5, 6], [2, 3], [0, 4], [3, 4], [0, 2], [5, 8]]}, {"question-split": "test", "text": "which of the states bordering state_name0 has the largest population", "variables": {"state_name0": "pennsylvania"}, "alignment": "NO_ALIGN of NO_ALIGN bordering NO_ALIGN population NO_ALIGN of NO_ALIGN of NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN has states of NO_ALIGN population has NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [4, 6], [4, 5], [5, 6], [6, 10], [8, 9], [0, 6], [9, 10], [1, 6], [2, 3], [7, 10], [3, 4], [7, 8], [2, 4]]}, {"question-split": "test", "text": "what state that borders state_name0 has the highest population", "variables": {"state_name0": "texas"}, "alignment": "NO_ALIGN population NO_ALIGN state NO_ALIGN population NO_ALIGN population NO_ALIGN population NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN borders NO_ALIGN state NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN has borders population NO_ALIGN population has NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [5, 9], [6, 9], [1, 2], [6, 7], [5, 6], [4, 5], [8, 9], [0, 5], [2, 3], [3, 4], [2, 5], [7, 8], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what is the most populated state bordering state_name0", "variables": {"state_name0": "oklahoma"}, "alignment": "NO_ALIGN populated NO_ALIGN bordering NO_ALIGN state NO_ALIGN populated NO_ALIGN populated NO_ALIGN bordering NO_ALIGN NO_ALIGN NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN bordering NO_ALIGN NO_ALIGN state_name0 NO_ALIGN NO_ALIGN most most populated NO_ALIGN the most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [6, 8], [5, 6], [2, 8], [4, 5], [1, 8], [2, 3], [3, 4], [7, 8], [3, 5]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;", "SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" ) ;", "SELECT DISTINCT STATEalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 , STATE AS STATEalias0 WHERE BORDER_INFOalias0.STATE_NAME = \"state_name0\" AND STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM BORDER_INFO AS BORDER_INFOalias1 , STATE AS STATEalias1 WHERE BORDER_INFOalias1.STATE_NAME = \"state_name0\" AND STATEalias1.STATE_NAME = BORDER_INFOalias1.BORDER ) AND STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER ;"], "variables": [{"example": "nevada", "location": "both", "name": "state_name0", "type": "state_name"}]}, {"query-split": "train", "sentences": [{"question-split": "test", "text": "what is the state with the lowest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [7, 8], [4, 9], [6, 7], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [3, 4], [2, 4]]}, {"question-split": "train", "text": "what state has the lowest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which state has the lowest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the smallest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the sparsest population density", "variables": {}, "alignment": "NO_ALIGN sparsest NO_ALIGN state NO_ALIGN density NO_ALIGN sparsest NO_ALIGN sparsest NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "which state has the sparsest population density", "variables": {}, "alignment": "NO_ALIGN sparsest NO_ALIGN state NO_ALIGN density NO_ALIGN sparsest NO_ALIGN sparsest NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "dev", "text": "what state has the least population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN least NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN least NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which state has the least population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN least NO_ALIGN least NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN least NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what state has the smallest population density", "variables": {}, "alignment": "NO_ALIGN density NO_ALIGN state NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "how many states border the state that borders the most states", "variables": {}, "alignment": "NO_ALIGN state NO_ALIGN borders NO_ALIGN borders NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN border NO_ALIGN state NO_ALIGN many NO_ALIGN most border NO_ALIGN border NO_ALIGN NO_ALIGN borders NO_ALIGN border NO_ALIGN border most most border NO_ALIGN state NO_ALIGN NO_ALIGN borders NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 6], [10, 11], [6, 11], [4, 5], [5, 6], [8, 11], [3, 11], [8, 9], [9, 10], [2, 3], [7, 11], [0, 3], [3, 4], [4, 11]]}], "sql": ["SELECT MAX( DERIVED_TABLEalias0.DERIVED_FIELDalias0 ) FROM ( SELECT BORDER_INFOalias0.STATE_NAME , COUNT( DISTINCT BORDER_INFOalias0.BORDER ) AS DERIVED_FIELDalias0 FROM BORDER_INFO AS BORDER_INFOalias0 GROUP BY BORDER_INFOalias0.STATE_NAME ) AS DERIVED_TABLEalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what state contains the highest point of those the river_name0 river traverses", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN contains NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN contains NO_ALIGN contains NO_ALIGN NO_ALIGN point NO_ALIGN contains NO_ALIGN contains NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN traverses NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [7, 12], [8, 9], [2, 12], [7, 11], [1, 2], [6, 7], [3, 6], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [3, 12], [7, 8], [0, 2]]}], "sql": ["SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ) ) ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what states border the state with the most major cities", "variables": {}, "alignment": "NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN border NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN state NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN cities NO_ALIGN cities NO_ALIGN major NO_ALIGN major most most cities NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN most NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN most NO_ALIGN cities NO_ALIGN with NO_ALIGN with NO_ALIGN major NO_ALIGN major most most with NO_ALIGN state NO_ALIGN NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [5, 10], [6, 7], [4, 5], [5, 6], [3, 10], [6, 10], [2, 10], [8, 9], [9, 10], [2, 3], [3, 4], [0, 2], [3, 5]]}], "sql": ["SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > 150000 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MAX( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 WHERE CITYalias1.POPULATION > 150000 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "dev", "text": "what is the highest point in each state whose lowest point is sea level", "variables": {}, "alignment": "NO_ALIGN point NO_ALIGN highest NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [11, 14], [2, 5], [5, 8], [1, 2], [8, 14], [6, 7], [12, 13], [1, 14], [3, 4], [12, 14], [4, 5], [8, 11], [9, 10], [2, 3], [2, 14], [11, 12], [0, 1], [6, 8], [13, 14], [7, 8]]}], "sql": ["SELECT HIGHLOWalias0.HIGHEST_POINT , HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = 0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what city has the most people", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN people NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN city NO_ALIGN people NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what city in the united states has the highest population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [6, 7], [4, 5], [5, 6], [6, 10], [8, 9], [0, 6], [9, 10], [2, 3], [7, 10], [3, 6], [3, 4], [7, 8], [0, 2]]}, {"question-split": "train", "text": "what is the most populous city", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN populous NO_ALIGN NO_ALIGN NO_ALIGN the NO_ALIGN city NO_ALIGN populous NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [5, 6], [4, 5], [1, 6], [2, 3], [3, 4], [3, 5]]}, {"question-split": "train", "text": "which us city has the highest population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN has NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 7], [1, 3], [6, 7], [4, 5], [5, 6], [2, 3], [1, 7], [3, 7], [3, 4]]}, {"question-split": "train", "text": "what is the biggest city in the usa", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "test", "text": "whats the largest city", "variables": {}, "alignment": "NO_ALIGN whats NO_ALIGN city NO_ALIGN city NO_ALIGN whats NO_ALIGN whats NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [0, 1], [3, 4], [1, 2], [1, 4], [2, 3]]}, {"question-split": "train", "text": "what city has the largest population", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN population NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "test", "text": "what is the biggest city in the us", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [2, 5], [3, 4], [5, 8]]}, {"question-split": "train", "text": "what is the biggest city in usa", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [2, 7], [1, 2], [6, 7], [4, 5], [5, 6], [5, 7], [2, 3], [1, 7], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;"], "variables": []}, {"query-split": "dev", "sentences": [{"question-split": "test", "text": "how long is the river_name0 river", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "delaware"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "north platte"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "ohio"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "what is the length of the river_name0 river", "variables": {"river_name0": "colorado"}, "alignment": "NO_ALIGN length river NO_ALIGN length NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN length NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "exclude", "text": "what is the length of the river_name0 river", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN length river NO_ALIGN length NO_ALIGN river NO_ALIGN river NO_ALIGN river NO_ALIGN length NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [4, 8], [4, 5], [2, 8], [5, 6], [1, 8], [2, 3], [3, 4], [2, 4], [5, 8]]}, {"question-split": "dev", "text": "what length is the river_name0", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN length river_name0 NO_ALIGN length NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN river_name0 NO_ALIGN length NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "how long is the river_name0", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN long NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "how long is the river_name0 river in miles", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN long miles NO_ALIGN long NO_ALIGN river NO_ALIGN miles NO_ALIGN miles NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 5], [2, 8], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "mississippi"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "rio grande"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "exclude", "text": "how long is the river_name0 river", "variables": {"river_name0": "missouri"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN river NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "how long is river_name0", "variables": {"river_name0": "rio grande"}, "alignment": "NO_ALIGN long long NO_ALIGN long NO_ALIGN long NO_ALIGN long NO_ALIGN long NO_ALIGN river_name0 NO_ALIGN NO_ALIGN river_name0 NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 3], [2, 4], [3, 4], [0, 2]]}], "sql": ["SELECT DISTINCT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = \"river_name0\" ;"], "variables": [{"example": "colorado", "location": "both", "name": "river_name0", "type": "river_name"}]}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which rivers run through the state with the lowest elevation in the usa", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN elevation NO_ALIGN state NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN elevation NO_ALIGN lowest NO_ALIGN NO_ALIGN elevation NO_ALIGN elevation NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [4, 13], [2, 13], [7, 10], [3, 4], [11, 13], [3, 13], [4, 5], [1, 13], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [6, 13], [7, 8]]}, {"question-split": "train", "text": "what rivers run through the state with the lowest point in the usa", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN point NO_ALIGN state NO_ALIGN point NO_ALIGN point NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN NO_ALIGN lowest NO_ALIGN point NO_ALIGN lowest NO_ALIGN NO_ALIGN point NO_ALIGN point NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [5, 6], [8, 9], [1, 2], [6, 7], [12, 13], [2, 13], [3, 6], [7, 10], [3, 4], [11, 13], [4, 5], [10, 13], [9, 10], [2, 3], [11, 12], [0, 1], [4, 6], [7, 13], [6, 13], [7, 8], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the population of the state with the highest population density", "variables": {}, "alignment": "NO_ALIGN of NO_ALIGN population NO_ALIGN density NO_ALIGN of NO_ALIGN of NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN highest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [2, 12], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [1, 12], [8, 12], [5, 7], [7, 8], [2, 4]]}, {"question-split": "test", "text": "how many people live in the state with the largest population density", "variables": {}, "alignment": "NO_ALIGN live NO_ALIGN population NO_ALIGN density NO_ALIGN live NO_ALIGN live NO_ALIGN density NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN density NO_ALIGN density NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[10, 11], [7, 12], [5, 6], [8, 9], [4, 12], [0, 3], [1, 2], [6, 7], [5, 12], [3, 4], [4, 5], [9, 10], [2, 3], [11, 12], [0, 1], [3, 12], [8, 12], [5, 7], [7, 8], [0, 2]]}], "sql": ["SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what is the largest city in the smallest state in the usa", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN largest NO_ALIGN state NO_ALIGN smallest NO_ALIGN largest NO_ALIGN largest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN in city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN state NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[6, 9], [10, 11], [5, 6], [8, 9], [2, 12], [2, 5], [1, 2], [6, 7], [5, 12], [10, 12], [3, 4], [4, 5], [9, 10], [2, 3], [6, 12], [11, 12], [0, 1], [1, 12], [7, 8], [9, 12]]}, {"question-split": "train", "text": "what is the biggest city in the smallest state", "variables": {}, "alignment": "NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN NO_ALIGN biggest NO_ALIGN city NO_ALIGN city NO_ALIGN NO_ALIGN city NO_ALIGN city NO_ALIGN city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN state NO_ALIGN state NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN in city NO_ALIGN state NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN state NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN smallest NO_ALIGN smallest NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [5, 9], [6, 9], [6, 7], [7, 8], [2, 9], [4, 5], [5, 6], [8, 9], [2, 3], [1, 9], [2, 5], [3, 4]]}], "sql": ["SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "where are mountains", "variables": {}, "alignment": "NO_ALIGN mountains NO_ALIGN where NO_ALIGN mountains NO_ALIGN mountains NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 3], [2, 3], [1, 2]]}], "sql": ["SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "what river flows through the most states", "variables": {}, "alignment": "NO_ALIGN flows NO_ALIGN flows NO_ALIGN river NO_ALIGN flows most most NO_ALIGN flows NO_ALIGN flows NO_ALIGN most most most NO_ALIGN most flows NO_ALIGN through NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which river goes through the most states", "variables": {}, "alignment": "NO_ALIGN goes NO_ALIGN through NO_ALIGN river NO_ALIGN goes most most NO_ALIGN goes NO_ALIGN through NO_ALIGN most most most NO_ALIGN most goes NO_ALIGN through NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which river runs through most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river most most NO_ALIGN river NO_ALIGN through NO_ALIGN most most most NO_ALIGN most river NO_ALIGN through NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which river traverses most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN traverses NO_ALIGN river NO_ALIGN river most most NO_ALIGN river NO_ALIGN traverses NO_ALIGN most most most NO_ALIGN most river NO_ALIGN river NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [4, 5], [2, 3], [2, 5], [3, 4], [0, 2], [3, 5]]}, {"question-split": "train", "text": "what river traverses the most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN traverses NO_ALIGN river NO_ALIGN river most most NO_ALIGN river NO_ALIGN traverses NO_ALIGN most most most NO_ALIGN most river NO_ALIGN river NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [2, 6], [4, 5], [5, 6], [2, 3], [3, 6], [3, 4], [0, 2]]}, {"question-split": "train", "text": "which river runs through the most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river most most NO_ALIGN river NO_ALIGN through NO_ALIGN most most most NO_ALIGN most river NO_ALIGN through NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}, {"question-split": "test", "text": "what river runs through the most states", "variables": {}, "alignment": "NO_ALIGN river NO_ALIGN through NO_ALIGN river NO_ALIGN river most most NO_ALIGN river NO_ALIGN through NO_ALIGN most most most NO_ALIGN most river NO_ALIGN through NO_ALIGN most NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[2, 7], [0, 1], [1, 2], [4, 7], [6, 7], [4, 5], [5, 6], [2, 3], [3, 7], [3, 4], [0, 2]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVERalias0.RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;"], "variables": []}, {"query-split": "train", "sentences": [{"question-split": "train", "text": "which rivers run through states with fewest cities", "variables": {}, "alignment": "NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN rivers NO_ALIGN NO_ALIGN NO_ALIGN fewest NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN states NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN states NO_ALIGN cities NO_ALIGN cities states states cities NO_ALIGN states NO_ALIGN NO_ALIGN fewest NO_ALIGN fewest NO_ALIGN states NO_ALIGN NO_ALIGN NO_ALIGN with NO_ALIGN cities NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN NO_ALIGN cities NO_ALIGN cities NO_ALIGN with states states with NO_ALIGN states NO_ALIGN NO_ALIGN cities NO_ALIGN NO_ALIGN NO_ALIGN", "constituency_parser_spans": [[0, 1], [1, 2], [7, 8], [6, 7], [6, 8], [4, 8], [4, 5], [2, 8], [5, 6], [3, 8], [1, 8], [2, 3], [3, 4], [5, 8]]}], "sql": ["SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT DERIVED_TABLEalias0.STATE_NAME FROM ( SELECT CITYalias0.STATE_NAME , COUNT( 1 ) AS DERIVED_FIELDalias0 FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATE_NAME ) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = ( SELECT MIN( DERIVED_TABLEalias1.DERIVED_FIELDalias1 ) FROM ( SELECT COUNT( 1 ) AS DERIVED_FIELDalias1 FROM CITY AS CITYalias1 GROUP BY CITYalias1.STATE_NAME ) AS DERIVED_TABLEalias1 ) ) ;"], "variables": []}]