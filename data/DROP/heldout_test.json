[
    {
        "question_id": "DROP_train_history_101_6a03f1a4-1cbc-4211-b46a-154eac7ecb6c",
        "question_text": "About how many months did the Albanian refugees stay in Montenegro before they were forced to return to Kosovo Vilayet?",
        "split": "train",
        "decomposition": "return the months that the  Albanian refugees stay in  Montenegro ;return the month that the  Albanian refugees were forced to return to  Kosovo Vilayet ;return the lowest of  #1 ;return the difference of  #2 and #3",
        "program": [
            "SELECT['the months that the Albanian refugees stay in Montenegro']",
            "SELECT['the month that the Albanian refugees were forced to return to Kosovo Vilayet']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the month that the Albanian refugees were forced to return to Kosovo Vilayet"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "the months that the Albanian refugees stay in Montenegro"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month that the Albanian refugees were forced to return to Kosovo Vilayet)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the months that the Albanian refugees stay in Montenegro)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month that the Albanian refugees were forced to return to Kosovo Vilayet)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the months that the Albanian refugees stay in Montenegro)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1,
                    8
                ],
                [
                    4,
                    6,
                    7,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13,
                    15,
                    17
                ],
                [],
                [
                    14
                ],
                [
                    16,
                    18,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "About",
                "how",
                "many",
                "months",
                "did",
                "the",
                "Albanian",
                "refugees",
                "stay",
                "in",
                "Montenegro",
                "before",
                "they",
                "were",
                "forced",
                "to",
                "return",
                "to",
                "Kosovo",
                "Vilayet",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7,
                    11
                ],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    16
                ],
                [],
                [
                    18
                ],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    2
                ],
                [
                    0
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [
                    13
                ],
                [
                    12,
                    15,
                    17
                ],
                [],
                [],
                [],
                [
                    14,
                    19
                ],
                [
                    16,
                    18,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    19
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    19
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_485_364d6101-b581-49aa-bc14-a6fac222c5a6",
        "question_text": "How many yards difference was Laurence Maroney\u2019s touchdown compared to Tom Brady's first touchdown pass to Randy Moss?",
        "split": "train",
        "decomposition": "return yards of touchdown of  Laurence Maroney ;return yards of touchdown pass of  Tom Brady to Randy Moss ;return first of #2 ;return difference of #1 and  #3",
        "program": [
            "SELECT['yards of touchdown of Laurence Maroney']",
            "SELECT['yards of touchdown pass of Tom Brady to Randy Moss']",
            "AGGREGATE['min', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of touchdown of Laurence Maroney"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown pass of Tom Brady to Randy Moss"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown of Laurence Maroney)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown pass of Tom Brady to Randy Moss)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown of Laurence Maroney)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown pass of Tom Brady to Randy Moss)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10,
                    17
                ],
                [
                    2,
                    4,
                    8,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    18,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Laurence",
                "Maroney",
                "\u2019s",
                "touchdown",
                "compared",
                "to",
                "Tom",
                "Brady",
                "'s",
                "first",
                "touchdown",
                "pass",
                "to",
                "Randy",
                "Moss",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    11
                ],
                [
                    8,
                    13,
                    15,
                    16
                ],
                [],
                [
                    12
                ],
                [
                    18,
                    19
                ],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [],
                [
                    11,
                    12,
                    19
                ],
                [
                    10,
                    17
                ],
                [
                    2,
                    4,
                    8,
                    13,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    18
                ],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    19
                ],
                [
                    10,
                    19
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    19
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_58_1e20efd2-1b06-4809-9f4c-a63075c6ce7d",
        "question_text": "How many yards longer was J.P. Losman's pass to Lee Evans than Vince Young's shortest pass?",
        "split": "train",
        "decomposition": "return yards of the  pass of  J.P. Losman to Lee Evans ;return yards of passes of  Vince Young ;return the  shortest of #2 ;return the  difference of #1 and  #3",
        "program": [
            "SELECT['yards of the pass of J.P. Losman to Lee Evans']",
            "SELECT['yards of passes of Vince Young']",
            "AGGREGATE['min', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the pass of J.P. Losman to Lee Evans"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of passes of Vince Young"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the pass of J.P. Losman to Lee Evans)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passes of Vince Young)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the pass of J.P. Losman to Lee Evans)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passes of Vince Young)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    10,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    13,
                    15,
                    16,
                    17
                ],
                [
                    11,
                    14
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "J.P.",
                "Losman",
                "'s",
                "pass",
                "to",
                "Lee",
                "Evans",
                "than",
                "Vince",
                "Young",
                "'s",
                "shortest",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    4,
                    7,
                    8,
                    15,
                    16,
                    17
                ],
                [
                    13
                ],
                [
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    10
                ],
                [
                    11
                ],
                [],
                [],
                [
                    9,
                    12,
                    13
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    15
                ],
                [
                    16,
                    17
                ],
                [
                    14
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_227_ef94ebec-a145-4a1b-b4bc-e817e341fc04",
        "question_text": "How many more yards was Karney's field goal over Longwell's shortest field goal?",
        "split": "dev",
        "decomposition": "return yards of the  field goal  of  Karney ;return yards of field goals of  Longwell ;return shortest of #2 ;return the  difference of #1 and  #3",
        "program": [
            "SELECT['yards of the field goal of Karney']",
            "SELECT['yards of field goals of Longwell']",
            "AGGREGATE['min', '#2']",
            "ARITHMETIC['difference', '#1', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the field goal of Karney"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Longwell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the field goal of Karney)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Longwell)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the field goal of Karney)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Longwell)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Karney",
                "'s",
                "field",
                "goal",
                "over",
                "Longwell",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    7,
                    8,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    11
                ],
                [
                    7,
                    8,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1032_45e5f450-9658-4a3e-80ad-3c584cf32ded",
        "question_text": "Which force was larger, the one that invaded southern China or the one sent to the Middle East?",
        "split": "train",
        "decomposition": "return force that invaded southern China ;return size of #1 ;return force that was  sent to the  Middle East ;return size of #3 ;return which was  larger of #2 ,  #4",
        "program": [
            "SELECT['force that invaded southern China']",
            "PROJECT['size of #REF', '#1']",
            "SELECT['force that was sent to the Middle East']",
            "PROJECT['size of #REF', '#3']",
            "COMPARISON['max', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "size of #REF",
                [
                    "SELECT",
                    "force that invaded southern China"
                ]
            ],
            [
                "PROJECT",
                "size of #REF",
                [
                    "SELECT",
                    "force that was sent to the Middle East"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(size of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(force that invaded southern China)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(size of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(force that was sent to the Middle East)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(size of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(force that invaded southern China)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(size of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(force that was sent to the Middle East)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4,
                    11
                ],
                [
                    0,
                    2,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    17,
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "Which",
                "force",
                "was",
                "larger",
                ",",
                "the",
                "one",
                "that",
                "invaded",
                "southern",
                "China",
                "or",
                "the",
                "one",
                "sent",
                "to",
                "the",
                "Middle",
                "East",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    3
                ],
                [
                    2
                ],
                [
                    7
                ],
                [
                    1
                ],
                [],
                [],
                [
                    8
                ],
                [
                    6
                ],
                [
                    9,
                    10,
                    13
                ],
                [],
                [],
                [
                    11,
                    14
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    4,
                    11
                ],
                [
                    3
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    8
                ],
                [
                    10
                ],
                [
                    13
                ],
                [],
                [],
                [
                    17
                ],
                [
                    14
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2009_d52a1ca7-046e-4c3e-959a-15340ed942d2",
        "question_text": "Did commercial or broadcasting occupy a larger percentage of the revenue in the 2008-09 season?",
        "split": "train",
        "decomposition": "return the  revenue in  the 2008-09 season ;return the  percentage of #1 that commercial occupy ;return the  percentage of #1 that broadcasting occupy ;return which is larger of #2 ,  #3",
        "program": [
            "SELECT['the revenue in the 2008-09 season']",
            "PROJECT['the percentage of #REF that commercial occupy', '#1']",
            "PROJECT['the percentage of #REF that broadcasting occupy', '#1']",
            "COMPARISON['max', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "the percentage of #REF that commercial occupy",
                [
                    "SELECT",
                    "the revenue in the 2008-09 season"
                ]
            ],
            [
                "PROJECT",
                "the percentage of #REF that broadcasting occupy",
                [
                    "SELECT",
                    "the revenue in the 2008-09 season"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percentage of #REF that commercial occupy)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the revenue in the 2008-09 season)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percentage of #REF that broadcasting occupy)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the revenue in the 2008-09 season)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percentage of #REF that commercial occupy)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the revenue in the 2008-09 season)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percentage of #REF that broadcasting occupy)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the revenue in the 2008-09 season)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    6,
                    7,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    1
                ],
                [
                    4
                ],
                [],
                [
                    12
                ],
                [
                    13,
                    15
                ],
                [
                    14
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Did",
                "commercial",
                "or",
                "broadcasting",
                "occupy",
                "a",
                "larger",
                "percentage",
                "of",
                "the",
                "revenue",
                "in",
                "the",
                "2008",
                "-",
                "09",
                "season",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    13,
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    13,
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1910_d816d20c-e705-43c6-91d9-490ac94f4bc0",
        "question_text": "Who's field goals were longer Josh Browns or Ryan Succops?",
        "split": "train",
        "decomposition": "return field goals of Josh Browns ;return how long were #1 ;return field goals of Ryan Succops ;return how long were #3 ;return which is longer of #2 ,  #4",
        "program": [
            "SELECT['field goals of Josh Browns']",
            "PROJECT['how long were #REF', '#1']",
            "SELECT['field goals of Ryan Succops']",
            "PROJECT['how long were #REF', '#3']",
            "COMPARISON['max', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "how long were #REF",
                [
                    "SELECT",
                    "field goals of Josh Browns"
                ]
            ],
            [
                "PROJECT",
                "how long were #REF",
                [
                    "SELECT",
                    "field goals of Ryan Succops"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Josh Browns)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Ryan Succops)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Josh Browns)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Ryan Succops)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    5,
                    8
                ],
                [
                    0,
                    2
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "'s",
                "field",
                "goals",
                "were",
                "longer",
                "Josh",
                "Browns",
                "or",
                "Ryan",
                "Succops",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    5
                ],
                [],
                [
                    2
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2114_728fa7eb-e239-4893-9a6c-d11e21763609",
        "question_text": "Who threw a longer touchdown pass Freeman or Flacco?",
        "split": "dev",
        "decomposition": "return touchdown pass of Freeman ;return touchdown pass of Flacco ;return how long was  #1 ;return how long was  #2 ;return which is longer of #3 ,  #4",
        "program": [
            "SELECT['touchdown pass of Freeman']",
            "SELECT['touchdown pass of Flacco']",
            "PROJECT['how long was #REF', '#1']",
            "PROJECT['how long was #REF', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "how long was #REF",
                [
                    "SELECT",
                    "touchdown pass of Freeman"
                ]
            ],
            [
                "PROJECT",
                "how long was #REF",
                [
                    "SELECT",
                    "touchdown pass of Flacco"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass of Freeman)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass of Flacco)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass of Freeman)"
                ]
            ],
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass of Flacco)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    7
                ],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "a",
                "longer",
                "touchdown",
                "pass",
                "Freeman",
                "or",
                "Flacco",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1035_2105ed9b-5e93-44ba-a1b8-25ab0bb3112f",
        "question_text": "How many is the largest estimate of Mongol, Chinese and Korean soldiers in the Yuan fleet?",
        "split": "train",
        "decomposition": "return largest estimate of Mongol soldiers in  the  Yuan fleet ;return largest estimate of Chinese soldiers in  the  Yuan fleet ;return largest estimate of Korean soldiers in  the  Yuan fleet ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['largest estimate of Mongol soldiers in the Yuan fleet']",
            "SELECT['largest estimate of Chinese soldiers in the Yuan fleet']",
            "SELECT['largest estimate of Korean soldiers in the Yuan fleet']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "largest estimate of Korean soldiers in the Yuan fleet"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "largest estimate of Mongol soldiers in the Yuan fleet"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "largest estimate of Chinese soldiers in the Yuan fleet"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(largest estimate of Korean soldiers in the Yuan fleet)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(largest estimate of Mongol soldiers in the Yuan fleet)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(largest estimate of Chinese soldiers in the Yuan fleet)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(largest estimate of Korean soldiers in the Yuan fleet)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(largest estimate of Mongol soldiers in the Yuan fleet)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(largest estimate of Chinese soldiers in the Yuan fleet)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    7
                ],
                [],
                [
                    5,
                    8,
                    10,
                    11
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "is",
                "the",
                "largest",
                "estimate",
                "of",
                "Mongol",
                ",",
                "Chinese",
                "and",
                "Korean",
                "soldiers",
                "in",
                "the",
                "Yuan",
                "fleet",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    16
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12,
                    15
                ],
                [],
                [
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    16
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1610_e8b1ee79-cbf2-4080-9f8e-0bf1b0200ec8",
        "question_text": "How many men, horse, elephants combined in Nuri Khan army?",
        "split": "train",
        "decomposition": "return men in  Nuri Khan army ;return horses in  Nuri Khan army ;return elephants in  Nuri Khan army ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['men in Nuri Khan army']",
            "SELECT['horses in Nuri Khan army']",
            "SELECT['elephants in Nuri Khan army']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "elephants in Nuri Khan army"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "men in Nuri Khan army"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "horses in Nuri Khan army"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(elephants in Nuri Khan army)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men in Nuri Khan army)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(horses in Nuri Khan army)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(elephants in Nuri Khan army)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men in Nuri Khan army)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(horses in Nuri Khan army)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "men",
                ",",
                "horse",
                ",",
                "elephants",
                "combined",
                "in",
                "Nuri",
                "Khan",
                "army",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    3,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1642_360acea4-f135-4a38-a93e-34f5d3e15523",
        "question_text": "Of the initial force, how many were British, Canadian or Australian?",
        "split": "train",
        "decomposition": "return British in  the  initial force ;return Canadian in  the  initial force ;return Australian in  the  initial force ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['British in the initial force']",
            "SELECT['Canadian in the initial force']",
            "SELECT['Australian in the initial force']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Australian in the initial force"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "British in the initial force"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Canadian in the initial force"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Australian in the initial force)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(British in the initial force)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Canadian in the initial force)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Australian in the initial force)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(British in the initial force)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Canadian in the initial force)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    7,
                    9
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Of",
                "the",
                "initial",
                "force",
                ",",
                "how",
                "many",
                "were",
                "British",
                ",",
                "Canadian",
                "or",
                "Australian",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    0
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    7,
                    9
                ],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1858_581edf70-c282-4a7f-af57-15ff0f74ff7e",
        "question_text": "How many people, households, and families are in the county according to the 2010 census?",
        "split": "train",
        "decomposition": "return people in  the  county according to the 2010 census ;return households in  the  county according to the 2010 census ;return families in  the  county according to the 2010 census ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['people in the county according to the 2010 census']",
            "SELECT['households in the county according to the 2010 census']",
            "SELECT['families in the county according to the 2010 census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "families in the county according to the 2010 census"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people in the county according to the 2010 census"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "households in the county according to the 2010 census"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(families in the county according to the 2010 census)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in the county according to the 2010 census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households in the county according to the 2010 census)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(families in the county according to the 2010 census)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in the county according to the 2010 census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households in the county according to the 2010 census)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6,
                    8
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    16
                ],
                [
                    15,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                ",",
                "households",
                ",",
                "and",
                "families",
                "are",
                "in",
                "the",
                "county",
                "according",
                "to",
                "the",
                "2010",
                "census",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1960_e91d6bca-cbfd-4850-b9c9-c99ef61684ae",
        "question_text": "How many people, households, and families are in the county according to the census?",
        "split": "train",
        "decomposition": "return people in  the  county according to the census ;return households in  the  county according to the census ;return families in  the  county according to the census ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['people in the county according to the census']",
            "SELECT['households in the county according to the census']",
            "SELECT['families in the county according to the census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "families in the county according to the census"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people in the county according to the census"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "households in the county according to the census"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(families in the county according to the census)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in the county according to the census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households in the county according to the census)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(families in the county according to the census)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in the county according to the census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households in the county according to the census)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6,
                    8
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                ",",
                "households",
                ",",
                "and",
                "families",
                "are",
                "in",
                "the",
                "county",
                "according",
                "to",
                "the",
                "census",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2721_dfa8a157-966c-4bbb-9fd6-98f36ecae4be",
        "question_text": "How many motor vehicle thefts, robberies, and aggravated assaults were there in 2010?",
        "split": "train",
        "decomposition": "return motor vehicle thefts in  2010 ;return robberies in  2010 ;return aggravated assaults in  2010 ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['motor vehicle thefts in 2010']",
            "SELECT['robberies in 2010']",
            "SELECT['aggravated assaults in 2010']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "aggravated assaults in 2010"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "motor vehicle thefts in 2010"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "robberies in 2010"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(aggravated assaults in 2010)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(motor vehicle thefts in 2010)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(robberies in 2010)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(aggravated assaults in 2010)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(motor vehicle thefts in 2010)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(robberies in 2010)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "motor",
                "vehicle",
                "thefts",
                ",",
                "robberies",
                ",",
                "and",
                "aggravated",
                "assaults",
                "were",
                "there",
                "in",
                "2010",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7,
                    8,
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2800_5cb0f74d-0a10-4749-9435-d9bf9bdbbfa9",
        "question_text": "How many people claimed either Irish American, German American, or Arab American ancestry?",
        "split": "train",
        "decomposition": "return people who  claimed Irish American   ancestry ;return people who  claimed German American   ancestry ;return people who  claimed Arab American   ancestry ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['people who claimed Irish American ancestry']",
            "SELECT['people who claimed German American ancestry']",
            "SELECT['people who claimed Arab American ancestry']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people who claimed Arab American ancestry"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people who claimed Irish American ancestry"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people who claimed German American ancestry"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who claimed Arab American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people who claimed Irish American ancestry)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people who claimed German American ancestry)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who claimed Arab American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people who claimed Irish American ancestry)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people who claimed German American ancestry)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "claimed",
                "either",
                "Irish",
                "American",
                ",",
                "German",
                "American",
                ",",
                "or",
                "Arab",
                "American",
                "ancestry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    2
                ],
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    9,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    14
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2800_a39f9d33-3c83-4ec7-b234-673924045451",
        "question_text": "How many people claimed either English American, German American, or Arab American ancestry?",
        "split": "train",
        "decomposition": "return people that claimed English American   ancestry ;return people that claimed German American   ancestry ;return people that claimed Arab American   ancestry ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['people that claimed English American ancestry']",
            "SELECT['people that claimed German American ancestry']",
            "SELECT['people that claimed Arab American ancestry']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that claimed Arab American ancestry"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that claimed English American ancestry"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that claimed German American ancestry"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that claimed Arab American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that claimed English American ancestry)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that claimed German American ancestry)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that claimed Arab American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that claimed English American ancestry)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that claimed German American ancestry)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "claimed",
                "either",
                "English",
                "American",
                ",",
                "German",
                "American",
                ",",
                "or",
                "Arab",
                "American",
                "ancestry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    2
                ],
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    9,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    14
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_337_68807f8d-5553-4c7c-86ba-4551a514462f",
        "question_text": "How many years are treated in detail in contemporaneous sagas: Sverris saga, the Bagler sagas, and H\u00e5kon H\u00e5konsson's saga?",
        "split": "train",
        "decomposition": "return years treated in  detail in the  Sverris saga  ;return years treated in  detail in the  Bagler sagas  ;return years treated in  detail in the  H\u00e5kon H\u00e5konsson 's saga  ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['years treated in detail in the Sverris saga']",
            "SELECT['years treated in detail in the Bagler sagas']",
            "SELECT[\"years treated in detail in the H\\xe5kon H\\xe5konsson 's saga\"]",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years treated in detail in the H\u00e5kon H\u00e5konsson 's saga"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "years treated in detail in the Sverris saga"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "years treated in detail in the Bagler sagas"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years treated in detail in the H\u00e5kon H\u00e5konsson 's saga)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years treated in detail in the Sverris saga)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years treated in detail in the Bagler sagas)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years treated in detail in the H\u00e5kon H\u00e5konsson 's saga)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years treated in detail in the Sverris saga)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years treated in detail in the Bagler sagas)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4
                ],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    11,
                    12,
                    13,
                    16,
                    17,
                    18,
                    22
                ],
                [
                    15
                ],
                [
                    10
                ],
                [],
                [
                    19,
                    20
                ],
                [],
                [
                    23
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "are",
                "treated",
                "in",
                "detail",
                "in",
                "contemporaneous",
                "sagas",
                ":",
                "Sverris",
                "saga",
                ",",
                "the",
                "Bagler",
                "sagas",
                ",",
                "and",
                "H\u00e5kon",
                "H\u00e5konsson",
                "'s",
                "saga",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    13,
                    18
                ],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    15
                ],
                [],
                [
                    16
                ],
                [],
                [],
                [],
                [
                    19,
                    20
                ],
                [],
                [
                    22
                ],
                [
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    8,
                    11,
                    13,
                    17,
                    18
                ],
                [],
                [
                    12,
                    15,
                    16
                ],
                [],
                [],
                [],
                [],
                [
                    19,
                    20,
                    22
                ],
                [],
                [],
                [
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    22
                ],
                [
                    4,
                    22
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    22
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    22
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    22
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_864_f489c4b8-b0ff-4f70-9598-e6b7c8383250",
        "question_text": "How many volunteers were from Sofia, Tirnovo, and Pazardzhik combined?",
        "split": "train",
        "decomposition": "return volunteers from  Sofia ;return volunteers from  Tirnovo ;return volunteers from  Pazardzhik ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['volunteers from Sofia']",
            "SELECT['volunteers from Tirnovo']",
            "SELECT['volunteers from Pazardzhik']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "volunteers from Pazardzhik"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "volunteers from Sofia"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "volunteers from Tirnovo"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(volunteers from Pazardzhik)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(volunteers from Sofia)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(volunteers from Tirnovo)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(volunteers from Pazardzhik)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(volunteers from Sofia)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(volunteers from Tirnovo)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    5,
                    6,
                    8,
                    9,
                    11
                ],
                [],
                [],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "volunteers",
                "were",
                "from",
                "Sofia",
                ",",
                "Tirnovo",
                ",",
                "and",
                "Pazardzhik",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    6,
                    9,
                    11
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    8,
                    9,
                    11
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1308_f36bae23-6b4b-46de-bc9a-7fcc233905da",
        "question_text": "How many tanks, armoured and non-armoured loses were estimated to have been lost?",
        "split": "dev",
        "decomposition": "return tanks estimated to have been lost ;return armoured loses estimated to have been lost ;return non-armoured loses estimated to have been lost ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['tanks estimated to have been lost']",
            "SELECT['armoured loses estimated to have been lost']",
            "SELECT['non-armoured loses estimated to have been lost']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "non-armoured loses estimated to have been lost"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "tanks estimated to have been lost"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "armoured loses estimated to have been lost"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(non-armoured loses estimated to have been lost)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tanks estimated to have been lost)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(armoured loses estimated to have been lost)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(non-armoured loses estimated to have been lost)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tanks estimated to have been lost)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(armoured loses estimated to have been lost)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    7,
                    11
                ],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "tanks",
                ",",
                "armoured",
                "and",
                "non",
                "-",
                "armoured",
                "loses",
                "were",
                "estimated",
                "to",
                "have",
                "been",
                "lost",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    3
                ],
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    15
                ],
                [
                    14
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    8,
                    10
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2086_ded4bc12-bfdf-4ea9-8773-09784ca3b8e1",
        "question_text": "How many receiving touchdowns did Yancey Thigpen, Andre Hastings, and Ernie Mills have combined?",
        "split": "dev",
        "decomposition": "return receiving touchdowns of Yancey Thigpen ;return receiving touchdowns of Andre Hastings ;return receiving touchdowns of Ernie Mills ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #4 and  #5 ;return sum of #6 and  #7",
        "program": [
            "SELECT['receiving touchdowns of Yancey Thigpen']",
            "SELECT['receiving touchdowns of Andre Hastings']",
            "SELECT['receiving touchdowns of Ernie Mills']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['sum', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "receiving touchdowns of Ernie Mills"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "receiving touchdowns of Yancey Thigpen"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "receiving touchdowns of Andre Hastings"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(receiving touchdowns of Ernie Mills)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(receiving touchdowns of Yancey Thigpen)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(receiving touchdowns of Andre Hastings)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(receiving touchdowns of Ernie Mills)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(receiving touchdowns of Yancey Thigpen)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(receiving touchdowns of Andre Hastings)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    5,
                    7,
                    10,
                    11,
                    15
                ],
                [],
                [],
                [
                    9,
                    12,
                    13
                ],
                [
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "receiving",
                "touchdowns",
                "did",
                "Yancey",
                "Thigpen",
                ",",
                "Andre",
                "Hastings",
                ",",
                "and",
                "Ernie",
                "Mills",
                "have",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    10,
                    11,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    5,
                    7,
                    10,
                    11,
                    15
                ],
                [],
                [],
                [],
                [
                    8,
                    12,
                    13
                ],
                [
                    9
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1049_c6afca91-a21a-482f-a570-241089b70a41",
        "question_text": "How many years did the Kingdom of Mrauk-U rule over Rakhine State, Myanmar and Chittagong Division, Bangladesh?",
        "split": "train",
        "decomposition": "return years that Kingdom of Mrauk-U rule over Rakhine State ,  Myanmar ;return #1 that Kingdom of Mrauk-U rule over Chittagong Division ,  Bangladesh ;return number of  #2",
        "program": [
            "SELECT['years that Kingdom of Mrauk-U rule over Rakhine State , Myanmar']",
            "FILTER['#1', 'that Kingdom of Mrauk-U rule over Chittagong Division , Bangladesh']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years that Kingdom of Mrauk-U rule over Rakhine State , Myanmar"
                ],
                "that Kingdom of Mrauk-U rule over Chittagong Division , Bangladesh"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years that Kingdom of Mrauk-U rule over Rakhine State , Myanmar)"
                ],
                "GET_QUESTION_SPAN(that Kingdom of Mrauk-U rule over Chittagong Division , Bangladesh)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years that Kingdom of Mrauk-U rule over Rakhine State , Myanmar)"
                ],
                "GET_QUESTION_SPAN(that Kingdom of Mrauk-U rule over Chittagong Division , Bangladesh)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    11,
                    16
                ],
                [
                    7,
                    9,
                    12
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    8,
                    10,
                    14,
                    19
                ],
                [
                    13,
                    15,
                    17,
                    18
                ],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Kingdom",
                "of",
                "Mrauk",
                "-",
                "U",
                "rule",
                "over",
                "Rakhine",
                "State",
                ",",
                "Myanmar",
                "and",
                "Chittagong",
                "Division",
                ",",
                "Bangladesh",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    5,
                    8,
                    14
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13,
                    15,
                    16
                ],
                [
                    18,
                    19
                ],
                [
                    17
                ],
                [
                    20,
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    11,
                    16
                ],
                [
                    7,
                    9
                ],
                [
                    12,
                    15
                ],
                [
                    5,
                    8,
                    14,
                    19
                ],
                [
                    10,
                    17,
                    18
                ],
                [
                    13
                ],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    20
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1173_4879fd19-7425-4005-a4b9-98af9300f90e",
        "question_text": "Between 1918 and 1920, how many more Polish forces joined?",
        "split": "train",
        "decomposition": "return Polish forces ;return #1 that  joined Between 1918 and  1920 ;return number of #2",
        "program": [
            "SELECT['Polish forces']",
            "FILTER['#1', 'that joined Between 1918 and 1920']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "Polish forces"
                ],
                "that joined Between 1918 and 1920"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Polish forces)"
                ],
                "GET_QUESTION_SPAN(that joined Between 1918 and 1920)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Polish forces)"
                ],
                "GET_QUESTION_SPAN(that joined Between 1918 and 1920)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    4,
                    8,
                    10
                ],
                [
                    1,
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Between",
                "1918",
                "and",
                "1920",
                ",",
                "how",
                "many",
                "more",
                "Polish",
                "forces",
                "joined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    7
                ],
                [],
                [],
                [
                    5,
                    6,
                    10
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    3
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    2
                ],
                [],
                [
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    3,
                    9
                ],
                [
                    1
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_162_4680d448-2273-457c-a598-7a12c3bc8c06",
        "question_text": "How many of the 1000 refugees did not stay?",
        "split": "train",
        "decomposition": "return the  1000 refugees ;return #1 that did not  stay ;return number of  #2",
        "program": [
            "SELECT['the 1000 refugees']",
            "FILTER['#1', 'that did not stay']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "the 1000 refugees"
                ],
                "that did not stay"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 1000 refugees)"
                ],
                "GET_QUESTION_SPAN(that did not stay)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 1000 refugees)"
                ],
                "GET_QUESTION_SPAN(that did not stay)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    8
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "1000",
                "refugees",
                "did",
                "not",
                "stay",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    7
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1657_3f244569-be8f-4ec8-af30-d33ce810c171",
        "question_text": "How many years had the Ottomans controlled Bosnia and Herzegovina before 1908?",
        "split": "train",
        "decomposition": "return years the  Ottomans controlled Bosnia and  Herzegovina ;return #1 that are before 1908 ;return the  number of  #2",
        "program": [
            "SELECT['years the Ottomans controlled Bosnia and Herzegovina']",
            "FILTER['#1', 'that are before 1908']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years the Ottomans controlled Bosnia and Herzegovina"
                ],
                "that are before 1908"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years the Ottomans controlled Bosnia and Herzegovina)"
                ],
                "GET_QUESTION_SPAN(that are before 1908)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years the Ottomans controlled Bosnia and Herzegovina)"
                ],
                "GET_QUESTION_SPAN(that are before 1908)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "had",
                "the",
                "Ottomans",
                "controlled",
                "Bosnia",
                "and",
                "Herzegovina",
                "before",
                "1908",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [
                    3
                ],
                [
                    7,
                    10
                ],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1924_963a14c0-7b5e-4625-89f4-e5a9ec7d5d3a",
        "question_text": "How many workers weren't other workers?",
        "split": "train",
        "decomposition": "return workers ;return #1 that were n't other workers ;return number of  #2",
        "program": [
            "SELECT['workers']",
            "FILTER['#1', \"that were n't other workers\"]",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "workers"
                ],
                "that were n't other workers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(workers)"
                ],
                "GET_QUESTION_SPAN(that were n't other workers)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(workers)"
                ],
                "GET_QUESTION_SPAN(that were n't other workers)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "workers",
                "were",
                "n't",
                "other",
                "workers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2253_61641ae7-cd20-4769-9ed7-78d6427c78b9",
        "question_text": "How many dollars did the film bring in the first three weekends it was showing?",
        "split": "train",
        "decomposition": "return dollars the  film did bring in  ;return #1 the  first three weekends it was  showing ;return number of  #2",
        "program": [
            "SELECT['dollars the film did bring in']",
            "FILTER['#1', 'the first three weekends it was showing']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "dollars the film did bring in"
                ],
                "the first three weekends it was showing"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dollars the film did bring in)"
                ],
                "GET_QUESTION_SPAN(the first three weekends it was showing)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dollars the film did bring in)"
                ],
                "GET_QUESTION_SPAN(the first three weekends it was showing)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    3,
                    4,
                    8,
                    13
                ],
                [
                    11
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "dollars",
                "did",
                "the",
                "film",
                "bring",
                "in",
                "the",
                "first",
                "three",
                "weekends",
                "it",
                "was",
                "showing",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    5,
                    13
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    12
                ],
                [
                    2,
                    13
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_45_c15542d0-1292-4df2-8cb7-8b7d5a19b11f",
        "question_text": "How many of the Communists that participated survived?",
        "split": "train",
        "decomposition": "return Communists that participated ;return #1 that survived ;return number of  #2",
        "program": [
            "SELECT['Communists that participated']",
            "FILTER['#1', 'that survived']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "Communists that participated"
                ],
                "that survived"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Communists that participated)"
                ],
                "GET_QUESTION_SPAN(that survived)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Communists that participated)"
                ],
                "GET_QUESTION_SPAN(that survived)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "Communists",
                "that",
                "participated",
                "survived",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_666_d2223878-d8cf-4c82-b25c-3452c12b54de",
        "question_text": "How many people killed  in the uprising had nothing to do with it?",
        "split": "train",
        "decomposition": "return people killed in  the  uprising ;return #1 that had nothing to do with it ;return the  number of  #2",
        "program": [
            "SELECT['people killed in the uprising']",
            "FILTER['#1', 'that had nothing to do with it']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "people killed in the uprising"
                ],
                "that had nothing to do with it"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people killed in the uprising)"
                ],
                "GET_QUESTION_SPAN(that had nothing to do with it)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people killed in the uprising)"
                ],
                "GET_QUESTION_SPAN(that had nothing to do with it)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9,
                    10,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "killed",
                "in",
                "the",
                "uprising",
                "had",
                "nothing",
                "to",
                "do",
                "with",
                "it",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    10
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    3,
                    9,
                    10
                ],
                [
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    6
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_944_0d18673e-b0d1-4071-9185-7516d71f0d2c",
        "question_text": "How many years were measures passed for during the Six Statutes?",
        "split": "train",
        "decomposition": "return years that measures were passed for did ;return #1 during the  Six Statutes ;return number of  #2",
        "program": [
            "SELECT['years that measures were passed for did']",
            "FILTER['#1', 'during the Six Statutes']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years that measures were passed for did"
                ],
                "during the Six Statutes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years that measures were passed for did)"
                ],
                "GET_QUESTION_SPAN(during the Six Statutes)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years that measures were passed for did)"
                ],
                "GET_QUESTION_SPAN(during the Six Statutes)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "were",
                "measures",
                "passed",
                "for",
                "during",
                "the",
                "Six",
                "Statutes",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    5
                ],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1278_d65a71c0-2233-4677-ac1f-349be03a9a41",
        "question_text": "How many poins were scored in the first half?",
        "split": "train",
        "decomposition": "return poins that were scored in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['poins that were scored in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "poins that were scored in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(poins that were scored in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(poins that were scored)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "poins",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    4,
                    8
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1441_42663eda-78e1-4df8-9c36-15639e278e03",
        "question_text": "How many applications out of all that were sent in(Class of 2022) ended up being rejected?",
        "split": "train",
        "decomposition": "return the  applications that were sent in  ( Class of 2022 ) ;return #1 that ended up being rejected ;return number of  #2",
        "program": [
            "SELECT['the applications that were sent in ( Class of 2022 )']",
            "FILTER['#1', 'that ended up being rejected']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "the applications that were sent in ( Class of 2022 )"
                ],
                "that ended up being rejected"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the applications that were sent in ( Class of 2022 ))"
                ],
                "GET_QUESTION_SPAN(that ended up being rejected)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the applications that were sent in ( Class of 2022 ))"
                ],
                "GET_QUESTION_SPAN(that ended up being rejected)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    6,
                    9,
                    14
                ],
                [
                    3,
                    4,
                    5,
                    8,
                    10,
                    12,
                    13,
                    15
                ],
                [
                    11
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "applications",
                "out",
                "of",
                "all",
                "that",
                "were",
                "sent",
                "in(Class",
                "of",
                "2022",
                ")",
                "ended",
                "up",
                "being",
                "rejected",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    5
                ],
                [
                    14
                ],
                [
                    7
                ],
                [
                    3,
                    6,
                    16
                ],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    15
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    6,
                    9,
                    11,
                    14
                ],
                [
                    8,
                    12,
                    13
                ],
                [
                    3,
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    12
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2554_789cb073-7e10-49ee-b331-4df7660eb039",
        "question_text": "How many games had the Browns lost to the Ravens coming into this game?",
        "split": "train",
        "decomposition": "return games that the  Browns lost to the Ravens ;return #1 coming into this game ;return number of  #2",
        "program": [
            "SELECT['games that the Browns lost to the Ravens']",
            "FILTER['#1', 'coming into this game']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "games that the Browns lost to the Ravens"
                ],
                "coming into this game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(games that the Browns lost to the Ravens)"
                ],
                "GET_QUESTION_SPAN(coming into this game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(games that the Browns lost to the Ravens)"
                ],
                "GET_QUESTION_SPAN(coming into this game)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "games",
                "had",
                "the",
                "Browns",
                "lost",
                "to",
                "the",
                "Ravens",
                "coming",
                "into",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    9
                ],
                [
                    5,
                    6,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2717_d6b01013-656b-45a2-a514-f1ddaf108c12",
        "question_text": "How many Monday Night games have the Cowboys lost?",
        "split": "train",
        "decomposition": "return Monday Night games of the  Cowboys ;return #1 that the  Cowboys lost ;return number of  #2",
        "program": [
            "SELECT['Monday Night games of the Cowboys']",
            "FILTER['#1', 'that the Cowboys lost']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "Monday Night games of the Cowboys"
                ],
                "that the Cowboys lost"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Monday Night games of the Cowboys)"
                ],
                "GET_QUESTION_SPAN(that the Cowboys lost)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Monday Night games of the Cowboys)"
                ],
                "GET_QUESTION_SPAN(that the Cowboys lost)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    2
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Monday",
                "Night",
                "games",
                "have",
                "the",
                "Cowboys",
                "lost",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    2
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3223_1f78100d-e674-47ae-9524-2b4c5a1ae0ac",
        "question_text": "how many yards did tucker get in the second?",
        "split": "train",
        "decomposition": "return yards from  tucker ;return #1 in  the  second ;return the  number of  #2",
        "program": [
            "SELECT['yards from tucker']",
            "FILTER['#1', 'in the second']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards from tucker"
                ],
                "in the second"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards from tucker)"
                ],
                "GET_QUESTION_SPAN(in the second)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards from tucker)"
                ],
                "GET_QUESTION_SPAN(in the second)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    6,
                    8
                ],
                [
                    3,
                    5,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "tucker",
                "get",
                "in",
                "the",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3365_9966bee6-7800-4465-bee7-2359c1c13e19",
        "question_text": "How many passes did Tom Savage throw in the first half?",
        "split": "train",
        "decomposition": "return passes that Tom Savage throw ;return #1 in  the  first half ;return number of  #2",
        "program": [
            "SELECT['passes that Tom Savage throw']",
            "FILTER['#1', 'in the first half']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "passes that Tom Savage throw"
                ],
                "in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Tom Savage throw)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Tom Savage throw)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    9,
                    10
                ],
                [
                    3,
                    8
                ],
                [
                    6
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Tom",
                "Savage",
                "throw",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3424_808f4d7c-ba54-4de4-9e8a-ba420e9ab9b4",
        "question_text": "How many wins did the Eagles have after this game?",
        "split": "train",
        "decomposition": "return wins that the  Eagles have ;return #1 after this game ;return number of  #2",
        "program": [
            "SELECT['wins that the Eagles have']",
            "FILTER['#1', 'after this game']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "wins that the Eagles have"
                ],
                "after this game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins that the Eagles have)"
                ],
                "GET_QUESTION_SPAN(after this game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins that the Eagles have)"
                ],
                "GET_QUESTION_SPAN(after this game)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "wins",
                "did",
                "the",
                "Eagles",
                "have",
                "after",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    7
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_364_fa3a1651-1fc4-45e7-ba1c-b135ca88484a",
        "question_text": "How many incomplete passes did Seneca Wallace throw after coming into the game?",
        "split": "train",
        "decomposition": "return incomplete passes Seneca Wallace did throw ;return #1 after coming into the  game ;return number of  #2",
        "program": [
            "SELECT['incomplete passes Seneca Wallace did throw']",
            "FILTER['#1', 'after coming into the game']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "incomplete passes Seneca Wallace did throw"
                ],
                "after coming into the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(incomplete passes Seneca Wallace did throw)"
                ],
                "GET_QUESTION_SPAN(after coming into the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(incomplete passes Seneca Wallace did throw)"
                ],
                "GET_QUESTION_SPAN(after coming into the game)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4,
                    9,
                    11
                ],
                [
                    7,
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "incomplete",
                "passes",
                "did",
                "Seneca",
                "Wallace",
                "throw",
                "after",
                "coming",
                "into",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    8
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    8
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_920_8b576634-8cb0-45d2-a148-e22d624992b7",
        "question_text": "How many passes did Matt Ryan attempt in the first half?",
        "split": "train",
        "decomposition": "return passes that Matt Ryan attempt in  the  first half ;return the  number of  #1",
        "program": [
            "SELECT['passes that Matt Ryan attempt in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "passes that Matt Ryan attempt in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passes that Matt Ryan attempt in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Matt Ryan attempt)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    3,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Matt",
                "Ryan",
                "attempt",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    10
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1450_8be3e663-e0a6-41c6-9f2b-55f9a60bc54d",
        "question_text": "How many men of the twenty-five of his 150 men that were sick are still healthy?",
        "split": "dev",
        "decomposition": "return his men  that were sick ;return #1 that are still healthy ;return number of  #2",
        "program": [
            "SELECT['his men that were sick']",
            "FILTER['#1', 'that are still healthy']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "his men that were sick"
                ],
                "that are still healthy"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(his men that were sick)"
                ],
                "GET_QUESTION_SPAN(that are still healthy)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(his men that were sick)"
                ],
                "GET_QUESTION_SPAN(that are still healthy)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    9,
                    10,
                    11,
                    13
                ],
                [
                    5,
                    12
                ],
                [
                    3,
                    4,
                    6,
                    8,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "men",
                "of",
                "the",
                "twenty",
                "-",
                "five",
                "of",
                "his",
                "150",
                "men",
                "that",
                "were",
                "sick",
                "are",
                "still",
                "healthy",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    11
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    15
                ],
                [
                    6,
                    8
                ],
                [
                    12
                ],
                [
                    9,
                    10,
                    14
                ],
                [],
                [
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    13,
                    15
                ],
                [
                    2,
                    5,
                    7,
                    9,
                    11
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    6
                ],
                [],
                [
                    14,
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1853_176835fe-042f-4085-af4a-945ef3f1f903",
        "question_text": "How many years since 1981 did the robberies drop?",
        "split": "dev",
        "decomposition": "return years when  robberies drop ;return #1 that are higher than 1981 ;return number of  #2",
        "program": [
            "SELECT['years when robberies drop']",
            "FILTER['#1', 'that are higher than 1981']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "years when robberies drop"
                ],
                "that are higher than 1981"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when robberies drop)"
                ],
                "GET_QUESTION_SPAN(that are higher than 1981)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when robberies drop)"
                ],
                "GET_QUESTION_SPAN(that are higher than 1981)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    7,
                    8
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "since",
                "1981",
                "did",
                "the",
                "robberies",
                "drop",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    4,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    4,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2412_9fadc4cd-89cd-43a8-8381-9c69ca11572a",
        "question_text": "How many of the 72 high rises in Houston were built before the year 2000?",
        "split": "dev",
        "decomposition": "return high rises in  Houston ;return #1 that were built before the  year 2000 ;return number of  #2",
        "program": [
            "SELECT['high rises in Houston']",
            "FILTER['#1', 'that were built before the year 2000']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "high rises in Houston"
                ],
                "that were built before the year 2000"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(high rises in Houston)"
                ],
                "GET_QUESTION_SPAN(that were built before the year 2000)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(high rises in Houston)"
                ],
                "GET_QUESTION_SPAN(that were built before the year 2000)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    9
                ],
                [
                    6,
                    7,
                    11
                ],
                [
                    2,
                    3,
                    5,
                    8,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "72",
                "high",
                "rises",
                "in",
                "Houston",
                "were",
                "built",
                "before",
                "the",
                "year",
                "2000",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6,
                    9,
                    13
                ],
                [
                    5
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    4,
                    6,
                    14
                ],
                [],
                [
                    7,
                    11
                ],
                [
                    5,
                    10
                ],
                [],
                [
                    8
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1075_e4d7ba12-0554-4f1d-abfc-29d541599d2c",
        "question_text": "How many men were not cavalry?",
        "split": "train",
        "decomposition": "return men ;return #1 that were cavalry ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['men']",
            "FILTER['#1', 'that were cavalry']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "men"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "men"
                    ],
                    "that were cavalry"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men)"
                    ],
                    "GET_QUESTION_SPAN(that were cavalry)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(men)"
                    ],
                    "GET_QUESTION_SPAN(that were cavalry)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "men",
                "were",
                "not",
                "cavalry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1747_f3bd6c00-9ecf-4e80-90fb-9e654f104608",
        "question_text": "How many of the Central Americans living abroad in 2005 were not Costa Ricans?",
        "split": "train",
        "decomposition": "return the  Central Americans living abroad in  2005 ;return #1 that were Costa Ricans ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['the Central Americans living abroad in 2005']",
            "FILTER['#1', 'that were Costa Ricans']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the Central Americans living abroad in 2005"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the Central Americans living abroad in 2005"
                    ],
                    "that were Costa Ricans"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Central Americans living abroad in 2005)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Central Americans living abroad in 2005)"
                    ],
                    "GET_QUESTION_SPAN(that were Costa Ricans)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Central Americans living abroad in 2005)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the Central Americans living abroad in 2005)"
                    ],
                    "GET_QUESTION_SPAN(that were Costa Ricans)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [],
                [],
                [
                    4,
                    5,
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "Central",
                "Americans",
                "living",
                "abroad",
                "in",
                "2005",
                "were",
                "not",
                "Costa",
                "Ricans",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    11
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    8
                ],
                [],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1854_79e1da68-5f5b-44c1-80c1-b7e865d6c546",
        "question_text": "How many of the towns were not occupied by Union forces?",
        "split": "train",
        "decomposition": "return towns ;return #1 that were occupied by Union forces ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['towns']",
            "FILTER['#1', 'that were occupied by Union forces']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "towns"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "towns"
                    ],
                    "that were occupied by Union forces"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(towns)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(towns)"
                    ],
                    "GET_QUESTION_SPAN(that were occupied by Union forces)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(towns)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(towns)"
                    ],
                    "GET_QUESTION_SPAN(that were occupied by Union forces)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "towns",
                "were",
                "not",
                "occupied",
                "by",
                "Union",
                "forces",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1894_e4ba44f9-7140-4af2-8a61-70f1fe088a28",
        "question_text": "How many of the housing units were not occupied by renters?",
        "split": "train",
        "decomposition": "return housing units ;return #1 that were occupied by renters ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['housing units']",
            "FILTER['#1', 'that were occupied by renters']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "housing units"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "housing units"
                    ],
                    "that were occupied by renters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(housing units)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(housing units)"
                    ],
                    "GET_QUESTION_SPAN(that were occupied by renters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(housing units)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(housing units)"
                    ],
                    "GET_QUESTION_SPAN(that were occupied by renters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "housing",
                "units",
                "were",
                "not",
                "occupied",
                "by",
                "renters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1968_9903d799-b731-47f3-a41d-0551c22785dd",
        "question_text": "How many of the patients who died did not die between the 24 hours and 30 days following surgery?",
        "split": "train",
        "decomposition": "return patients that died ;return #1 between the  24 hours and  30 days following surgery ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['patients that died']",
            "FILTER['#1', 'between the 24 hours and 30 days following surgery']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "patients that died"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "patients that died"
                    ],
                    "between the 24 hours and 30 days following surgery"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(patients that died)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(patients that died)"
                    ],
                    "GET_QUESTION_SPAN(between the 24 hours and 30 days following surgery)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(patients that died)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(patients that died)"
                    ],
                    "GET_QUESTION_SPAN(between the 24 hours and 30 days following surgery)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    10,
                    16
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    9,
                    12
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    15
                ],
                [],
                [
                    17
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "patients",
                "who",
                "died",
                "did",
                "not",
                "die",
                "between",
                "the",
                "24",
                "hours",
                "and",
                "30",
                "days",
                "following",
                "surgery",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    16
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    15
                ],
                [
                    13
                ],
                [
                    17
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    16
                ],
                [
                    10
                ],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    15
                ],
                [
                    8
                ],
                [],
                [
                    17
                ],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1969_ef0fbf2c-a85c-4f69-8d2c-3a5f0efb9e88",
        "question_text": "How many jobs in the primary sector were not in agriculture?",
        "split": "train",
        "decomposition": "return jobs in  the  primary sector ;return #1 that were in  agriculture ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['jobs in the primary sector']",
            "FILTER['#1', 'that were in agriculture']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "jobs in the primary sector"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "jobs in the primary sector"
                    ],
                    "that were in agriculture"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(jobs in the primary sector)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(jobs in the primary sector)"
                    ],
                    "GET_QUESTION_SPAN(that were in agriculture)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(jobs in the primary sector)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(jobs in the primary sector)"
                    ],
                    "GET_QUESTION_SPAN(that were in agriculture)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    3,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "jobs",
                "in",
                "the",
                "primary",
                "sector",
                "were",
                "not",
                "in",
                "agriculture",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    3,
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1984_3584195e-54d2-40fc-8dd2-0477bd9ef5d7",
        "question_text": "How many people in Northern Cyprus were not Turkish Cypriots?",
        "split": "train",
        "decomposition": "return people in  Northern Cyprus ;return #1 that were Turkish Cypriots ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['people in Northern Cyprus']",
            "FILTER['#1', 'that were Turkish Cypriots']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in Northern Cyprus"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people in Northern Cyprus"
                    ],
                    "that were Turkish Cypriots"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in Northern Cyprus)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in Northern Cyprus)"
                    ],
                    "GET_QUESTION_SPAN(that were Turkish Cypriots)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in Northern Cyprus)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in Northern Cyprus)"
                    ],
                    "GET_QUESTION_SPAN(that were Turkish Cypriots)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    3,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "in",
                "Northern",
                "Cyprus",
                "were",
                "not",
                "Turkish",
                "Cypriots",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    3
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1993_03c4b77b-09dd-4805-826e-cd085b252246",
        "question_text": "How many German soldiers who were killed were not on the Sperrbrecher?",
        "split": "train",
        "decomposition": "return German soldiers who  were killed ;return #1 who  were on the  Sperrbrecher ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['German soldiers who were killed']",
            "FILTER['#1', 'who were on the Sperrbrecher']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "German soldiers who were killed"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "German soldiers who were killed"
                    ],
                    "who were on the Sperrbrecher"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(German soldiers who were killed)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(German soldiers who were killed)"
                    ],
                    "GET_QUESTION_SPAN(who were on the Sperrbrecher)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(German soldiers who were killed)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(German soldiers who were killed)"
                    ],
                    "GET_QUESTION_SPAN(who were on the Sperrbrecher)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "German",
                "soldiers",
                "who",
                "were",
                "killed",
                "were",
                "not",
                "on",
                "the",
                "Sperrbrecher",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [
                    2
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2027_95b5af14-21ef-46c2-9187-d07a584eb84d",
        "question_text": "In 2009 how many banks were not taken into receivership?",
        "split": "train",
        "decomposition": "return the  banks there  were in 2009 ;return #1 that were taken into receivership ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['the banks there were in 2009']",
            "FILTER['#1', 'that were taken into receivership']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the banks there were in 2009"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the banks there were in 2009"
                    ],
                    "that were taken into receivership"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the banks there were in 2009)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the banks there were in 2009)"
                    ],
                    "GET_QUESTION_SPAN(that were taken into receivership)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the banks there were in 2009)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the banks there were in 2009)"
                    ],
                    "GET_QUESTION_SPAN(that were taken into receivership)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    1
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    0,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "In",
                "2009",
                "how",
                "many",
                "banks",
                "were",
                "not",
                "taken",
                "into",
                "receivership",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    0,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2071_40d6c51a-c2d3-4e07-9407-e7b6c9cbab72",
        "question_text": "How many cases of measles in 1886 did not result in death?",
        "split": "train",
        "decomposition": "return cases of measles in  1886 ;return #1 that result in  death ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['cases of measles in 1886']",
            "FILTER['#1', 'that result in death']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "cases of measles in 1886"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "cases of measles in 1886"
                    ],
                    "that result in death"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cases of measles in 1886)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of measles in 1886)"
                    ],
                    "GET_QUESTION_SPAN(that result in death)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cases of measles in 1886)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cases of measles in 1886)"
                    ],
                    "GET_QUESTION_SPAN(that result in death)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    5,
                    8,
                    10
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "cases",
                "of",
                "measles",
                "in",
                "1886",
                "did",
                "not",
                "result",
                "in",
                "death",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    5,
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2182_97de11ab-6dfc-45f6-8fc1-7d703d9e5df9",
        "question_text": "How many Americans do not speak Spanish?",
        "split": "train",
        "decomposition": "return Americans ;return #1 that speak Spanish ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['Americans']",
            "FILTER['#1', 'that speak Spanish']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Americans"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "Americans"
                    ],
                    "that speak Spanish"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Americans)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Americans)"
                    ],
                    "GET_QUESTION_SPAN(that speak Spanish)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Americans)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Americans)"
                    ],
                    "GET_QUESTION_SPAN(that speak Spanish)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Americans",
                "do",
                "not",
                "speak",
                "Spanish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2315_8ff5a01e-5d34-429c-a25e-da8d17015274",
        "question_text": "How many of their wins for the season were not against teams with winning records?",
        "split": "train",
        "decomposition": "return their wins for the  season ;return #1 against teams with winning records ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['their wins for the season']",
            "FILTER['#1', 'against teams with winning records']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "their wins for the season"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "their wins for the season"
                    ],
                    "against teams with winning records"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(their wins for the season)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(their wins for the season)"
                    ],
                    "GET_QUESTION_SPAN(against teams with winning records)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(their wins for the season)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(their wins for the season)"
                    ],
                    "GET_QUESTION_SPAN(against teams with winning records)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    10,
                    12
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "their",
                "wins",
                "for",
                "the",
                "season",
                "were",
                "not",
                "against",
                "teams",
                "with",
                "winning",
                "records",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    14
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    12
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2316_10931dd7-8e90-47c3-a844-d3b7653847c2",
        "question_text": "How many of the schools were not private?",
        "split": "train",
        "decomposition": "return schools ;return #1 that were private ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['schools']",
            "FILTER['#1', 'that were private']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "schools"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "schools"
                    ],
                    "that were private"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(schools)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(schools)"
                    ],
                    "GET_QUESTION_SPAN(that were private)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(schools)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(schools)"
                    ],
                    "GET_QUESTION_SPAN(that were private)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "schools",
                "were",
                "not",
                "private",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2374_076bd564-b40c-4865-b934-e57ae1588169",
        "question_text": "How many of the whites in Bronx were not non-Hispanic whites?",
        "split": "train",
        "decomposition": "return whites in  the  Bronx ;return #1 that were non-Hispanic whites ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['whites in the Bronx']",
            "FILTER['#1', 'that were non-Hispanic whites']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "whites in the Bronx"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "whites in the Bronx"
                    ],
                    "that were non-Hispanic whites"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(whites in the Bronx)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(whites in the Bronx)"
                    ],
                    "GET_QUESTION_SPAN(that were non-Hispanic whites)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(whites in the Bronx)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(whites in the Bronx)"
                    ],
                    "GET_QUESTION_SPAN(that were non-Hispanic whites)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    12
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    5,
                    8,
                    11
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "whites",
                "in",
                "Bronx",
                "were",
                "not",
                "non",
                "-",
                "Hispanic",
                "whites",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    11
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    12
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    11
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2471_b2c8675b-b7a6-421d-b0f5-9f893b70c1e9",
        "question_text": "In 1812, how many inhabitants were not Jews?",
        "split": "train",
        "decomposition": "return inhabitants there  were in  1812 ;return #1 that were Jews ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['inhabitants there were in 1812']",
            "FILTER['#1', 'that were Jews']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "inhabitants there were in 1812"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "inhabitants there were in 1812"
                    ],
                    "that were Jews"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(inhabitants there were in 1812)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(inhabitants there were in 1812)"
                    ],
                    "GET_QUESTION_SPAN(that were Jews)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(inhabitants there were in 1812)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(inhabitants there were in 1812)"
                    ],
                    "GET_QUESTION_SPAN(that were Jews)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4,
                    5
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [
                    0,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "In",
                "1812",
                ",",
                "how",
                "many",
                "inhabitants",
                "were",
                "not",
                "Jews",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    3,
                    4
                ],
                [],
                [
                    1,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    0,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2584_81ea96ca-e60a-4fd5-b353-47797c93e318",
        "question_text": "How many of the foreigners that were naturalized in 2016 were not Macedonians?",
        "split": "train",
        "decomposition": "return foreigners that were naturalized in  2016 ;return #1 that were Macedonians ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['foreigners that were naturalized in 2016']",
            "FILTER['#1', 'that were Macedonians']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "foreigners that were naturalized in 2016"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "foreigners that were naturalized in 2016"
                    ],
                    "that were Macedonians"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(foreigners that were naturalized in 2016)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(foreigners that were naturalized in 2016)"
                    ],
                    "GET_QUESTION_SPAN(that were Macedonians)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(foreigners that were naturalized in 2016)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(foreigners that were naturalized in 2016)"
                    ],
                    "GET_QUESTION_SPAN(that were Macedonians)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    5,
                    8,
                    11
                ],
                [],
                [
                    9,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "foreigners",
                "that",
                "were",
                "naturalized",
                "in",
                "2016",
                "were",
                "not",
                "Macedonians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    11
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    10
                ],
                [
                    7
                ],
                [
                    11
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2592_92477bbf-b0ac-4ea8-b2b6-11a4658b657c",
        "question_text": "How many more people total were there than Hispanic?",
        "split": "train",
        "decomposition": "return the  people there  were ;return #1 that were Hispanic ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['the people there were']",
            "FILTER['#1', 'that were Hispanic']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the people there were"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the people there were"
                    ],
                    "that were Hispanic"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the people there were)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people there were)"
                    ],
                    "GET_QUESTION_SPAN(that were Hispanic)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the people there were)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people there were)"
                    ],
                    "GET_QUESTION_SPAN(that were Hispanic)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "total",
                "were",
                "there",
                "than",
                "Hispanic",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2880_c4a5cd40-0c67-47c3-8891-3760b14d7fc8",
        "question_text": "How many inhabited buildings were not single family homes?",
        "split": "train",
        "decomposition": "return inhabited buildings ;return number of  #1 ;return #1 that were single family homes ;return number of  #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['inhabited buildings']",
            "AGGREGATE['count', '#1']",
            "FILTER['#1', 'that were single family homes']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "inhabited buildings"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "inhabited buildings"
                    ],
                    "that were single family homes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(inhabited buildings)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(inhabited buildings)"
                    ],
                    "GET_QUESTION_SPAN(that were single family homes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(inhabited buildings)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(inhabited buildings)"
                    ],
                    "GET_QUESTION_SPAN(that were single family homes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "filter",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "inhabited",
                "buildings",
                "were",
                "not",
                "single",
                "family",
                "homes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    8
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3325_e103cdda-bd65-43fb-9adb-6a3ba331bc7e",
        "question_text": "How many people in Bulgaria are not ethnic Bulgarians?",
        "split": "train",
        "decomposition": "return people in  Bulgaria ;return #1 that are ethnic Bulgarians ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['people in Bulgaria']",
            "FILTER['#1', 'that are ethnic Bulgarians']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in Bulgaria"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people in Bulgaria"
                    ],
                    "that are ethnic Bulgarians"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in Bulgaria)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in Bulgaria)"
                    ],
                    "GET_QUESTION_SPAN(that are ethnic Bulgarians)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in Bulgaria)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people in Bulgaria)"
                    ],
                    "GET_QUESTION_SPAN(that are ethnic Bulgarians)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "in",
                "Bulgaria",
                "are",
                "not",
                "ethnic",
                "Bulgarians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3528_56ace885-1fbe-4922-b32c-97e4e4f5d8b6",
        "question_text": "How many people accepted did not enroll?",
        "split": "train",
        "decomposition": "return people that accepted ;return #1 that enroll ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['people that accepted']",
            "FILTER['#1', 'that enroll']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that accepted"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people that accepted"
                    ],
                    "that enroll"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that accepted)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that accepted)"
                    ],
                    "GET_QUESTION_SPAN(that enroll)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that accepted)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that accepted)"
                    ],
                    "GET_QUESTION_SPAN(that enroll)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "accepted",
                "did",
                "not",
                "enroll",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_38_48bec353-96d1-4a48-b22c-f1535843e94c",
        "question_text": "How many of the sepoys were not executed minimum?",
        "split": "train",
        "decomposition": "return sepoys ;return #1 that were executed ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['sepoys']",
            "FILTER['#1', 'that were executed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "sepoys"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "sepoys"
                    ],
                    "that were executed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(sepoys)"
                    ],
                    "GET_QUESTION_SPAN(that were executed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(sepoys)"
                    ],
                    "GET_QUESTION_SPAN(that were executed)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "sepoys",
                "were",
                "not",
                "executed",
                "minimum",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_675_69ddcfc0-22a3-41b6-b362-6f2ebc1ea34e",
        "question_text": "How many original districts was Prince-Bishopric of Hildesheim left without?",
        "split": "train",
        "decomposition": "return original districts ;return #1 that Prince-Bishopric of Hildesheim was  left with ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['original districts']",
            "FILTER['#1', 'that Prince-Bishopric of Hildesheim was left with']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "original districts"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "original districts"
                    ],
                    "that Prince-Bishopric of Hildesheim was left with"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(original districts)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(original districts)"
                    ],
                    "GET_QUESTION_SPAN(that Prince-Bishopric of Hildesheim was left with)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(original districts)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(original districts)"
                    ],
                    "GET_QUESTION_SPAN(that Prince-Bishopric of Hildesheim was left with)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "original",
                "districts",
                "was",
                "Prince",
                "-",
                "Bishopric",
                "of",
                "Hildesheim",
                "left",
                "without",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [
                    2,
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_729_75d6aaba-35a2-4680-96c5-804da6d5b008",
        "question_text": "How many of the Republican prisoners did not go on a hunger strike in 1923?",
        "split": "train",
        "decomposition": "return Republican prisoners ;return #1 that did go on a hunger strike in  1923 ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['Republican prisoners']",
            "FILTER['#1', 'that did go on a hunger strike in 1923']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Republican prisoners"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "Republican prisoners"
                    ],
                    "that did go on a hunger strike in 1923"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Republican prisoners)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Republican prisoners)"
                    ],
                    "GET_QUESTION_SPAN(that did go on a hunger strike in 1923)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Republican prisoners)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Republican prisoners)"
                    ],
                    "GET_QUESTION_SPAN(that did go on a hunger strike in 1923)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "Republican",
                "prisoners",
                "did",
                "not",
                "go",
                "on",
                "a",
                "hunger",
                "strike",
                "in",
                "1923",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    12,
                    13
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [
                    13
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2998_98026b4a-5208-41dc-a6a1-8963a9c821f1",
        "question_text": "How many of the Jets' takeaways were not interceptions?",
        "split": "train",
        "decomposition": "return takeaways of the  Jets ;return #1 that were interceptions ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['takeaways of the Jets']",
            "FILTER['#1', 'that were interceptions']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "takeaways of the Jets"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "takeaways of the Jets"
                    ],
                    "that were interceptions"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(takeaways of the Jets)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(takeaways of the Jets)"
                    ],
                    "GET_QUESTION_SPAN(that were interceptions)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(takeaways of the Jets)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(takeaways of the Jets)"
                    ],
                    "GET_QUESTION_SPAN(that were interceptions)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "Jets",
                "'",
                "takeaways",
                "were",
                "not",
                "interceptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3239_88078247-4b59-4739-97dc-073eacf44ce3",
        "question_text": "How many 3rd-down conversion attempts did Seattle not convert?",
        "split": "train",
        "decomposition": "return the 3rd-down conversion attempts of  Seattle ;return #1 that Seattle convert ;return the number of  #1 ;return the number of  #2 ;return the difference of  #3 and #4",
        "program": [
            "SELECT['the 3rd-down conversion attempts of Seattle']",
            "FILTER['#1', 'that Seattle convert']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the 3rd-down conversion attempts of Seattle"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the 3rd-down conversion attempts of Seattle"
                    ],
                    "that Seattle convert"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 3rd-down conversion attempts of Seattle)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the 3rd-down conversion attempts of Seattle)"
                    ],
                    "GET_QUESTION_SPAN(that Seattle convert)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 3rd-down conversion attempts of Seattle)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the 3rd-down conversion attempts of Seattle)"
                    ],
                    "GET_QUESTION_SPAN(that Seattle convert)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    9
                ],
                [],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "3rd",
                "-",
                "down",
                "conversion",
                "attempts",
                "did",
                "Seattle",
                "not",
                "convert",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3397_cfd3a80b-30a6-4ab0-a1c2-61323289108a",
        "question_text": "How many Derek Carr passes were not completed?",
        "split": "train",
        "decomposition": "return passes of Derek Carr ;return #1 that were completed ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['passes of Derek Carr']",
            "FILTER['#1', 'that were completed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes of Derek Carr"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "passes of Derek Carr"
                    ],
                    "that were completed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Derek Carr)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(passes of Derek Carr)"
                    ],
                    "GET_QUESTION_SPAN(that were completed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Derek Carr)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(passes of Derek Carr)"
                    ],
                    "GET_QUESTION_SPAN(that were completed)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Derek",
                "Carr",
                "passes",
                "were",
                "not",
                "completed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1720_b23e4c0a-0ab9-4f35-bc3b-f3f89a31105a",
        "question_text": "In May 2016, how many members of the Armed Forces were not active military personnel?",
        "split": "dev",
        "decomposition": "return members of the  Armed Forces in  May 2016 ;return #1 that were active military personnel ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['members of the Armed Forces in May 2016']",
            "FILTER['#1', 'that were active military personnel']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "members of the Armed Forces in May 2016"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "members of the Armed Forces in May 2016"
                    ],
                    "that were active military personnel"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(members of the Armed Forces in May 2016)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(members of the Armed Forces in May 2016)"
                    ],
                    "GET_QUESTION_SPAN(that were active military personnel)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(members of the Armed Forces in May 2016)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(members of the Armed Forces in May 2016)"
                    ],
                    "GET_QUESTION_SPAN(that were active military personnel)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [
                    1,
                    2,
                    6,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    0,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "In",
                "May",
                "2016",
                ",",
                "how",
                "many",
                "members",
                "of",
                "the",
                "Armed",
                "Forces",
                "were",
                "not",
                "active",
                "military",
                "personnel",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2,
                    9
                ],
                [
                    10
                ],
                [
                    6,
                    11
                ],
                [],
                [
                    0,
                    12
                ],
                [],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1744_7572789f-3881-4340-997d-ef6bb206a44e",
        "question_text": "How many refugees were not German citizens?",
        "split": "dev",
        "decomposition": "return refugees ;return #1 that were German citizens ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['refugees']",
            "FILTER['#1', 'that were German citizens']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "refugees"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "refugees"
                    ],
                    "that were German citizens"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(refugees)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(refugees)"
                    ],
                    "GET_QUESTION_SPAN(that were German citizens)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(refugees)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(refugees)"
                    ],
                    "GET_QUESTION_SPAN(that were German citizens)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "refugees",
                "were",
                "not",
                "German",
                "citizens",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2086_bd01ac93-f741-44d0-bc63-ea17da8d2cfe",
        "question_text": "How many passes did Neil ODonnell not complete?",
        "split": "dev",
        "decomposition": "return passes of Neil ODonnell ;return #1 that Neil ODonnell completes ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['passes of Neil ODonnell']",
            "FILTER['#1', 'that Neil ODonnell completes']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes of Neil ODonnell"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "passes of Neil ODonnell"
                    ],
                    "that Neil ODonnell completes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Neil ODonnell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(passes of Neil ODonnell)"
                    ],
                    "GET_QUESTION_SPAN(that Neil ODonnell completes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Neil ODonnell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(passes of Neil ODonnell)"
                    ],
                    "GET_QUESTION_SPAN(that Neil ODonnell completes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    5,
                    7
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Neil",
                "ODonnell",
                "not",
                "complete",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_228_16e4b810-0779-447e-98e2-fb80a94540d3",
        "question_text": "How many akinjis didn't return home alive?",
        "split": "dev",
        "decomposition": "return akinjis ;return #1 that did return home alive ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['akinjis']",
            "FILTER['#1', 'that did return home alive']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "akinjis"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "akinjis"
                    ],
                    "that did return home alive"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(akinjis)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(akinjis)"
                    ],
                    "GET_QUESTION_SPAN(that did return home alive)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(akinjis)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(akinjis)"
                    ],
                    "GET_QUESTION_SPAN(that did return home alive)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "akinjis",
                "did",
                "n't",
                "return",
                "home",
                "alive",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    2
                ],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2650_b06d3130-f65d-4da9-b87e-a20a62dd8191",
        "question_text": "How many of the Marines light tactical vehicle fleet by 2017 will not consist of the A2 series?",
        "split": "dev",
        "decomposition": "return light tactical vehicle fleet of the  Marines by 2017 ;return #1 that will consist of the  A2 series ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['light tactical vehicle fleet of the Marines by 2017']",
            "FILTER['#1', 'that will consist of the A2 series']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "light tactical vehicle fleet of the Marines by 2017"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "light tactical vehicle fleet of the Marines by 2017"
                    ],
                    "that will consist of the A2 series"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(light tactical vehicle fleet of the Marines by 2017)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(light tactical vehicle fleet of the Marines by 2017)"
                    ],
                    "GET_QUESTION_SPAN(that will consist of the A2 series)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(light tactical vehicle fleet of the Marines by 2017)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(light tactical vehicle fleet of the Marines by 2017)"
                    ],
                    "GET_QUESTION_SPAN(that will consist of the A2 series)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    5,
                    9,
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [],
                [
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "Marines",
                "light",
                "tactical",
                "vehicle",
                "fleet",
                "by",
                "2017",
                "will",
                "not",
                "consist",
                "of",
                "the",
                "A2",
                "series",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    5
                ],
                [
                    10
                ],
                [
                    6
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [
                    17
                ],
                [
                    16
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    17
                ],
                [
                    16
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    10
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1079_f2569055-aba2-4800-bea3-f10bf4441336",
        "question_text": "How many years was Baldouin the Pope's delegate?",
        "split": "train",
        "decomposition": "return delegate of Baldouin the  Pope ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['delegate of Baldouin the Pope']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "delegate of Baldouin the Pope"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(delegate of Baldouin the Pope)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(delegate of Baldouin the Pope)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "Baldouin",
                "the",
                "Pope",
                "'s",
                "delegate",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1206_d0c11b84-a054-46b2-8e7f-05a024ea01a3",
        "question_text": "How many years did the unrest in the Tibetan areas of the PRC last?",
        "split": "train",
        "decomposition": "return the  unrest in  the   Tibetan areas of the PRC ;return years that #1 did last ;return number of  #2",
        "program": [
            "SELECT['the unrest in the Tibetan areas of the PRC']",
            "PROJECT['years that #REF did last', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that #REF did last",
                [
                    "SELECT",
                    "the unrest in the Tibetan areas of the PRC"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the unrest in the Tibetan areas of the PRC)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the unrest in the Tibetan areas of the PRC)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    9
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    11,
                    13
                ],
                [
                    8
                ],
                [
                    6,
                    10
                ],
                [
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "unrest",
                "in",
                "the",
                "Tibetan",
                "areas",
                "of",
                "the",
                "PRC",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    9
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    9
                ],
                [
                    2
                ],
                [
                    4,
                    7,
                    10,
                    11,
                    13
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    12,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1322_40d0279b-ea40-49f9-a122-2659af42e831",
        "question_text": "How many former provinces were recogned by the Ottoman Empire as a result of the Treaty of San Stefano?",
        "split": "train",
        "decomposition": "return the  Treaty of San Stefano ;return former provinces recogned by the  Ottoman Empire as a result of #1 ;return number of  #2",
        "program": [
            "SELECT['the Treaty of San Stefano']",
            "PROJECT['former provinces recogned by the Ottoman Empire as a result of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "former provinces recogned by the Ottoman Empire as a result of #REF",
                [
                    "SELECT",
                    "the Treaty of San Stefano"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(former provinces recogned by the Ottoman Empire as a result of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Treaty of San Stefano)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(former provinces recogned by the Ottoman Empire as a result of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Treaty of San Stefano)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    2,
                    5,
                    7,
                    11,
                    14
                ],
                [
                    6,
                    9,
                    12
                ],
                [
                    8,
                    10,
                    13,
                    15,
                    16,
                    17
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "former",
                "provinces",
                "were",
                "recogned",
                "by",
                "the",
                "Ottoman",
                "Empire",
                "as",
                "a",
                "result",
                "of",
                "the",
                "Treaty",
                "of",
                "San",
                "Stefano",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [
                    2,
                    10,
                    11,
                    17
                ],
                [
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    7,
                    11,
                    12,
                    13,
                    14,
                    16
                ],
                [],
                [
                    8,
                    10,
                    15,
                    17
                ],
                [
                    6,
                    9
                ],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1404_088fd91c-4a4a-402f-bb77-ffecc549383f",
        "question_text": "How many years did a French group of gunners led by Chevalier Milard participated to the Burmese invasions of Siam, as an elite corps of the Burmese army?",
        "split": "train",
        "decomposition": "return the  French group of   gunners led by Chevalier Milard ;return years when  #1 participated as an elite corps of   the  Burmese army in  the Burmese  invasions of Siam ;return the  number of  #2",
        "program": [
            "SELECT['the French group of gunners led by Chevalier Milard']",
            "PROJECT['years when #REF participated as an elite corps of the Burmese army in the Burmese invasions of Siam', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years when #REF participated as an elite corps of the Burmese army in the Burmese invasions of Siam",
                [
                    "SELECT",
                    "the French group of gunners led by Chevalier Milard"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years when #REF participated as an elite corps of the Burmese army in the Burmese invasions of Siam)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the French group of gunners led by Chevalier Milard)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years when #REF participated as an elite corps of the Burmese army in the Burmese invasions of Siam)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the French group of gunners led by Chevalier Milard)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    17
                ],
                [
                    2,
                    4,
                    8,
                    9,
                    11,
                    12,
                    13,
                    15,
                    26
                ],
                [
                    5,
                    10,
                    19,
                    23
                ],
                [
                    6,
                    7,
                    14,
                    16,
                    18,
                    20,
                    21,
                    22,
                    25,
                    27,
                    28
                ],
                [
                    24,
                    29
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "a",
                "French",
                "group",
                "of",
                "gunners",
                "led",
                "by",
                "Chevalier",
                "Milard",
                "participated",
                "to",
                "the",
                "Burmese",
                "invasions",
                "of",
                "Siam",
                ",",
                "as",
                "an",
                "elite",
                "corps",
                "of",
                "the",
                "Burmese",
                "army",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [
                    4,
                    5,
                    10,
                    13,
                    14
                ],
                [],
                [
                    16,
                    17,
                    18,
                    20,
                    22,
                    27,
                    28
                ],
                [
                    19,
                    21,
                    25
                ],
                [
                    23,
                    24
                ],
                [],
                [
                    29
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    8,
                    17
                ],
                [
                    2,
                    9,
                    11,
                    12,
                    13
                ],
                [
                    4,
                    7,
                    15,
                    18,
                    25,
                    26
                ],
                [
                    23,
                    24
                ],
                [
                    5,
                    14,
                    16,
                    20,
                    21,
                    22,
                    27,
                    28
                ],
                [
                    10,
                    19
                ],
                [
                    29
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    28
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    28
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    28
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    28
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    25,
                    28
                ],
                [
                    26,
                    28
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ],
                [
                    28,
                    28
                ],
                [
                    29,
                    29
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1440_60f1ed0a-cf6a-499d-9c5c-e61b7dac63b1",
        "question_text": "How many prisons were the first prisoners of war sent to?",
        "split": "train",
        "decomposition": "return the  first prisoners of war ;return prisons that #1 were sent to ;return number of  #2",
        "program": [
            "SELECT['the first prisoners of war']",
            "PROJECT['prisons that #REF were sent to', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "prisons that #REF were sent to",
                [
                    "SELECT",
                    "the first prisoners of war"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(prisons that #REF were sent to)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first prisoners of war)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(prisons that #REF were sent to)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first prisoners of war)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "prisons",
                "were",
                "the",
                "first",
                "prisoners",
                "of",
                "war",
                "sent",
                "to",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1494_8d05c49f-7b3a-4643-96c8-6869ab784b2a",
        "question_text": "How many surrounding towns used to be included in Taunton's boundaries?",
        "split": "train",
        "decomposition": "return Taunton 's boundaries ;return surrounding towns that used to be included in  #1 ;return number of  #2",
        "program": [
            "SELECT[\"Taunton 's boundaries\"]",
            "PROJECT['surrounding towns that used to be included in #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "surrounding towns that used to be included in #REF",
                [
                    "SELECT",
                    "Taunton 's boundaries"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(surrounding towns that used to be included in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Taunton 's boundaries)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(surrounding towns that used to be included in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Taunton 's boundaries)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "surrounding",
                "towns",
                "used",
                "to",
                "be",
                "included",
                "in",
                "Taunton",
                "'s",
                "boundaries",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1502_7388ba49-9938-4592-ac3a-47e9f200e491",
        "question_text": "How many known epidemics were known to occur before the revolt in the the Tepehu\u00e1n region?",
        "split": "train",
        "decomposition": "return when  was  the  revolt in  the   Tepehu\u00e1n region ;return epidemics that were known to occur before #1 ;return the  number of  #2",
        "program": [
            "SELECT['when was the revolt in the Tepehu\\xe1n region']",
            "PROJECT['epidemics that were known to occur before #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "epidemics that were known to occur before #REF",
                [
                    "SELECT",
                    "when was the revolt in the Tepehu\u00e1n region"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(epidemics that were known to occur before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the revolt in the Tepehu\u00e1n region)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(epidemics that were known to occur before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the revolt in the Tepehu\u00e1n region)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    9,
                    12,
                    13
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    6,
                    11
                ],
                [
                    14,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "known",
                "epidemics",
                "were",
                "known",
                "to",
                "occur",
                "before",
                "the",
                "revolt",
                "in",
                "the",
                "the",
                "Tepehu\u00e1n",
                "region",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    5,
                    8
                ],
                [],
                [
                    9,
                    12,
                    13
                ],
                [
                    7
                ],
                [
                    6,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    14,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_182_6a95ac7e-d6e0-4d80-98e8-8f8e31d703d5",
        "question_text": "Over how many years did the two Zaov campaigns take place from the Russian military?",
        "split": "train",
        "decomposition": "return two Zaov campaigns of the  Russian military ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['two Zaov campaigns of the Russian military']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "two Zaov campaigns of the Russian military"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(two Zaov campaigns of the Russian military)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(two Zaov campaigns of the Russian military)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    8,
                    9
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    12
                ],
                [
                    10
                ],
                [
                    1,
                    11,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "Over",
                "how",
                "many",
                "years",
                "did",
                "the",
                "two",
                "Zaov",
                "campaigns",
                "take",
                "place",
                "from",
                "the",
                "Russian",
                "military",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    13
                ],
                [
                    10,
                    11,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4,
                    8,
                    9
                ],
                [
                    3,
                    7
                ],
                [
                    5,
                    6,
                    12
                ],
                [],
                [
                    14
                ],
                [
                    10,
                    13
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2491_70153009-1869-42a0-9e98-cf39c2d57952",
        "question_text": "How many justices were in the conservative majority?",
        "split": "train",
        "decomposition": "return the  conservative majority ;return justices in  #1 ;return number of  #2",
        "program": [
            "SELECT['the conservative majority']",
            "PROJECT['justices in #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "justices in #REF",
                [
                    "SELECT",
                    "the conservative majority"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(justices in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the conservative majority)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(justices in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the conservative majority)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    6
                ],
                [
                    4
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "justices",
                "were",
                "in",
                "the",
                "conservative",
                "majority",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3229_96344705-1e7c-4ed6-bd56-ce588f98d1e6",
        "question_text": "What stat was his lowest top 10 ranking in 2001?",
        "split": "train",
        "decomposition": "return all of these events ;return years that span #1 ;return number of  #2",
        "program": [
            "SELECT['all of these events']",
            "PROJECT['years that span #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that span #REF",
                [
                    "SELECT",
                    "all of these events"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that span #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(all of these events)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that span #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(all of these events)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1
                ],
                [
                    0,
                    2,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "stat",
                "was",
                "his",
                "lowest",
                "top",
                "10",
                "ranking",
                "in",
                "2001",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    1
                ],
                [
                    6
                ],
                [
                    0,
                    2,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_391_91a9a768-6820-4f40-852e-20e697757cde",
        "question_text": "For how many weeks were the first true Cuban rafters adrift at sea?",
        "split": "train",
        "decomposition": "return the  first true Cuban rafters ;return weeks that #1 were adrift at sea ;return number of  #2",
        "program": [
            "SELECT['the first true Cuban rafters']",
            "PROJECT['weeks that #REF were adrift at sea', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "weeks that #REF were adrift at sea",
                [
                    "SELECT",
                    "the first true Cuban rafters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(weeks that #REF were adrift at sea)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first true Cuban rafters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(weeks that #REF were adrift at sea)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first true Cuban rafters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7,
                    12
                ],
                [
                    6,
                    8,
                    10
                ],
                [
                    1,
                    9,
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "For",
                "how",
                "many",
                "weeks",
                "were",
                "the",
                "first",
                "true",
                "Cuban",
                "rafters",
                "adrift",
                "at",
                "sea",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    12
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_41_c6598cc6-2d52-44e5-aff0-6feda7edb577",
        "question_text": "How many yearsd id the campaign against SImko and the Kurds last?",
        "split": "train",
        "decomposition": "return the  campaign against SImko and  the Kurds ;return yearsd that #1 did last ;return number of  #2",
        "program": [
            "SELECT['the campaign against SImko and the Kurds']",
            "PROJECT['yearsd that #REF did last', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "yearsd that #REF did last",
                [
                    "SELECT",
                    "the campaign against SImko and the Kurds"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yearsd that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the campaign against SImko and the Kurds)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(yearsd that #REF did last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the campaign against SImko and the Kurds)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    10,
                    12
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    11,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yearsd",
                "i",
                "d",
                "the",
                "campaign",
                "against",
                "SImko",
                "and",
                "the",
                "Kurds",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    8,
                    10,
                    12
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    11,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_430_a01079cb-6abd-4f21-959f-3271fdca2e38",
        "question_text": "How many AME churches were larger than the AME Church in Charleston?",
        "split": "train",
        "decomposition": "return largeness of the  AME  Church in  Charleston ;return AME  churches that were larger than #1 ;return number of  #2",
        "program": [
            "SELECT['largeness of the AME Church in Charleston']",
            "PROJECT['AME churches that were larger than #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "AME churches that were larger than #REF",
                [
                    "SELECT",
                    "largeness of the AME Church in Charleston"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(AME churches that were larger than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(largeness of the AME Church in Charleston)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(AME churches that were larger than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(largeness of the AME Church in Charleston)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3,
                    7,
                    8
                ],
                [
                    5,
                    6,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "AME",
                "churches",
                "were",
                "larger",
                "than",
                "the",
                "AME",
                "Church",
                "in",
                "Charleston",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    5,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_552_39bd66a0-fc75-43fa-80c3-3d41e51e361c",
        "question_text": "How many years passed when the office of Navy Minister changed hands nine times?",
        "split": "train",
        "decomposition": "return office of Navy Minister changed hands nine times ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['office of Navy Minister changed hands nine times']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "office of Navy Minister changed hands nine times"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(office of Navy Minister changed hands nine times)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(office of Navy Minister changed hands nine times)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    13
                ],
                [
                    2,
                    5,
                    9
                ],
                [
                    6,
                    8,
                    11
                ],
                [
                    3,
                    4,
                    7,
                    10
                ],
                [
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "when",
                "the",
                "office",
                "of",
                "Navy",
                "Minister",
                "changed",
                "hands",
                "nine",
                "times",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    13
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    13
                ],
                [
                    2
                ],
                [
                    5,
                    7,
                    9,
                    12
                ],
                [
                    8,
                    11
                ],
                [
                    4,
                    6,
                    10
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_552_e384158c-da2a-485c-8eb8-35f82beca80c",
        "question_text": "How many years was the period where the office of Navy Minister changed hands nine times?",
        "split": "train",
        "decomposition": "return the  period where there  office of Navy Minister changed hands nine times ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['the period where there office of Navy Minister changed hands nine times']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "the period where there office of Navy Minister changed hands nine times"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the period where there office of Navy Minister changed hands nine times)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the period where there office of Navy Minister changed hands nine times)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    15
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    13,
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "period",
                "where",
                "the",
                "office",
                "of",
                "Navy",
                "Minister",
                "changed",
                "hands",
                "nine",
                "times",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    15
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    15
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7,
                    9,
                    11,
                    14
                ],
                [
                    10,
                    13
                ],
                [
                    8,
                    12
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    15
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_593_9b0a6f14-8b75-4833-ba6f-60f281abfef0",
        "question_text": "How many monarchies signed an alliance requiring that France be returned to her boundaries of 1659?",
        "split": "train",
        "decomposition": "return the  alliance requiring that France be returned to her boundaries of 1659 ;return the  monarchies that signed #1 ;return number of  #2",
        "program": [
            "SELECT['the alliance requiring that France be returned to her boundaries of 1659']",
            "PROJECT['the monarchies that signed #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "the monarchies that signed #REF",
                [
                    "SELECT",
                    "the alliance requiring that France be returned to her boundaries of 1659"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the monarchies that signed #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the alliance requiring that France be returned to her boundaries of 1659)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the monarchies that signed #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the alliance requiring that France be returned to her boundaries of 1659)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    3,
                    8,
                    12
                ],
                [
                    4,
                    5,
                    9,
                    10,
                    11,
                    14
                ],
                [
                    13,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "monarchies",
                "signed",
                "an",
                "alliance",
                "requiring",
                "that",
                "France",
                "be",
                "returned",
                "to",
                "her",
                "boundaries",
                "of",
                "1659",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8,
                    9
                ],
                [],
                [
                    4,
                    10
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    7,
                    14
                ],
                [
                    13
                ],
                [
                    3,
                    4,
                    5,
                    10,
                    11,
                    12
                ],
                [
                    8,
                    9
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_691_db261a30-148b-4be9-a6bd-63ccd312f54c",
        "question_text": "For how many years was the power in the hands of a series of councils?",
        "split": "train",
        "decomposition": "return a series of councils ;return years that the  power was  in  the hands of #1 ;return number of  #2",
        "program": [
            "SELECT['a series of councils']",
            "PROJECT['years that the power was in the hands of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that the power was in the hands of #REF",
                [
                    "SELECT",
                    "a series of councils"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that the power was in the hands of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(a series of councils)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that the power was in the hands of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(a series of councils)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    8,
                    11
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    7,
                    10,
                    13
                ],
                [
                    12,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "For",
                "how",
                "many",
                "years",
                "was",
                "the",
                "power",
                "in",
                "the",
                "hands",
                "of",
                "a",
                "series",
                "of",
                "councils",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    9
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    8,
                    10,
                    11,
                    13
                ],
                [
                    9
                ],
                [
                    6
                ],
                [
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_895_8f1a2488-a125-40fb-9438-127d629c1e54",
        "question_text": "How many years was the Lines of Communications built around London?",
        "split": "train",
        "decomposition": "return Lines of Communications built around London ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['Lines of Communications built around London']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "Lines of Communications built around London"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Lines of Communications built around London)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Lines of Communications built around London)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "Lines",
                "of",
                "Communications",
                "built",
                "around",
                "London",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_907_407cc4f9-52dd-43b2-bef0-20b407b877f3",
        "question_text": "How many months did the devastation upon the suburbs take place?",
        "split": "train",
        "decomposition": "return the  devastation upon the suburbs ;return months that #1 did take place ;return number of  #2",
        "program": [
            "SELECT['the devastation upon the suburbs']",
            "PROJECT['months that #REF did take place', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "months that #REF did take place",
                [
                    "SELECT",
                    "the devastation upon the suburbs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months that #REF did take place)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the devastation upon the suburbs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months that #REF did take place)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the devastation upon the suburbs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "did",
                "the",
                "devastation",
                "upon",
                "the",
                "suburbs",
                "take",
                "place",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    9
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_997_c67461dc-d675-4df3-a079-face93509bf0",
        "question_text": "How many years was the first Burmese invasion?",
        "split": "train",
        "decomposition": "return the  first Burmese invasion ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['the first Burmese invasion']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "the first Burmese invasion"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first Burmese invasion)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first Burmese invasion)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "first",
                "Burmese",
                "invasion",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1124_809eb5c8-3064-45d7-b4dc-312fa5eed27b",
        "question_text": "How many players caught touchdowns for the Vikings?",
        "split": "train",
        "decomposition": "return touchdowns of the  Vikings ;return players that caught #1 ;return the  number of  #2",
        "program": [
            "SELECT['touchdowns of the Vikings']",
            "PROJECT['players that caught #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "players that caught #REF",
                [
                    "SELECT",
                    "touchdowns of the Vikings"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that caught #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Vikings)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that caught #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Vikings)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "players",
                "caught",
                "touchdowns",
                "for",
                "the",
                "Vikings",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1655_f7da0809-9dcb-4fee-a78b-6331c90ad05f",
        "question_text": "How many games had the Rams won before the game with the Jaguars?",
        "split": "train",
        "decomposition": "return the  game with the   Jaguars ;return games the  Rams won before #1 ;return number of  #2",
        "program": [
            "SELECT['the game with the Jaguars']",
            "PROJECT['games the Rams won before #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "games the Rams won before #REF",
                [
                    "SELECT",
                    "the game with the Jaguars"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(games the Rams won before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the game with the Jaguars)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(games the Rams won before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the game with the Jaguars)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    8,
                    11
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    6,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "games",
                "had",
                "the",
                "Rams",
                "won",
                "before",
                "the",
                "game",
                "with",
                "the",
                "Jaguars",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [
                    9
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    3
                ],
                [
                    4,
                    8,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1709_76e03d1a-6e27-4fba-b7ff-4f38681099ce",
        "question_text": "How many field goals longer than the average yards of field goals were scored?",
        "split": "train",
        "decomposition": "return average yards of field goals ;return field goals that were longer than #1 ;return number of  #2",
        "program": [
            "SELECT['average yards of field goals']",
            "PROJECT['field goals that were longer than #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "field goals that were longer than #REF",
                [
                    "SELECT",
                    "average yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(field goals that were longer than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(average yards of field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(field goals that were longer than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(average yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    10,
                    11,
                    12
                ],
                [
                    4,
                    6,
                    13
                ],
                [
                    5,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "the",
                "average",
                "yards",
                "of",
                "field",
                "goals",
                "were",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    10,
                    11
                ],
                [
                    4
                ],
                [
                    13
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    8,
                    12
                ],
                [
                    2,
                    3,
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    4,
                    6,
                    9
                ],
                [],
                [
                    7
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2862_e673a9fc-4489-4291-8596-7ab0ab4e45c5",
        "question_text": "How many times in the last eight games did the 49ers get at least 20 points?",
        "split": "train",
        "decomposition": "return the  last eight games of the 49ers ;return times when  the  49ers get at least 20 points in  #1 ;return the  number of  #2",
        "program": [
            "SELECT['the last eight games of the 49ers']",
            "PROJECT['times when the 49ers get at least 20 points in #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "times when the 49ers get at least 20 points in #REF",
                [
                    "SELECT",
                    "the last eight games of the 49ers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(times when the 49ers get at least 20 points in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last eight games of the 49ers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(times when the 49ers get at least 20 points in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last eight games of the 49ers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    8,
                    14
                ],
                [
                    4,
                    5,
                    6,
                    9,
                    13
                ],
                [],
                [
                    3,
                    10,
                    11,
                    12,
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "times",
                "in",
                "the",
                "last",
                "eight",
                "games",
                "did",
                "the",
                "49ers",
                "get",
                "at",
                "least",
                "20",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [
                    5,
                    13
                ],
                [
                    3,
                    6
                ],
                [
                    8,
                    15
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7,
                    15
                ],
                [
                    2,
                    8,
                    14
                ],
                [],
                [
                    4,
                    5,
                    9,
                    13
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2978_d644921a-3c6f-4a76-ba15-736633815fb4",
        "question_text": "How many weeks into the season was this game?",
        "split": "train",
        "decomposition": "return when  was  this game ;return weeks into the  season of #1 ;return number of  #2",
        "program": [
            "SELECT['when was this game']",
            "PROJECT['weeks into the season of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "weeks into the season of #REF",
                [
                    "SELECT",
                    "when was this game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(weeks into the season of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was this game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(weeks into the season of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was this game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "weeks",
                "into",
                "the",
                "season",
                "was",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3108_0344fc42-5bfa-44b5-ab42-19c52648be02",
        "question_text": "How many offenses in the league were better than Washington's?",
        "split": "train",
        "decomposition": "return Washington 's offense ;return offenses in  the  league that were better than #1 ;return number of  #2",
        "program": [
            "SELECT[\"Washington 's offense\"]",
            "PROJECT['offenses in the league that were better than #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "offenses in the league that were better than #REF",
                [
                    "SELECT",
                    "Washington 's offense"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(offenses in the league that were better than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Washington 's offense)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(offenses in the league that were better than #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Washington 's offense)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    3,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "offenses",
                "in",
                "the",
                "league",
                "were",
                "better",
                "than",
                "Washington",
                "'s",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    2
                ],
                [],
                [
                    4,
                    10
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3345_78ddb2a0-1317-4939-b366-d8abeacba36b",
        "question_text": "How many different players caught a touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return different players that caught #1 ;return number of  #2",
        "program": [
            "SELECT['touchdown passes']",
            "PROJECT['different players that caught #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "different players that caught #REF",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(different players that caught #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(different players that caught #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "different",
                "players",
                "caught",
                "a",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_653_e387f856-1a7a-4dc6-98e6-ee602c7800f9",
        "question_text": "How many games did the Chiefs win in their last four?",
        "split": "train",
        "decomposition": "return last four games of the  Chiefs ;return wins of the  Chiefs in  #1 ;return number of  #2",
        "program": [
            "SELECT['last four games of the Chiefs']",
            "PROJECT['wins of the Chiefs in #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "wins of the Chiefs in #REF",
                [
                    "SELECT",
                    "last four games of the Chiefs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(wins of the Chiefs in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(last four games of the Chiefs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(wins of the Chiefs in #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(last four games of the Chiefs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    9
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "games",
                "did",
                "the",
                "Chiefs",
                "win",
                "in",
                "their",
                "last",
                "four",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    4,
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    6,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_914_2ec144da-5659-4a00-b549-8a04bb148180",
        "question_text": "How many touchdown passes of at least 50 yards were thrown?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return touchdown passes where #1 at least 50 ;return number of  #2",
        "program": [
            "SELECT['yards of touchdown passes']",
            "PROJECT['touchdown passes where #REF at least 50', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "touchdown passes where #REF at least 50",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(touchdown passes where #REF at least 50)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(touchdown passes where #REF at least 50)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    7,
                    9,
                    10
                ],
                [
                    2,
                    6
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "of",
                "at",
                "least",
                "50",
                "yards",
                "were",
                "thrown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8,
                    9
                ],
                [
                    3,
                    7,
                    10
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1423_def573d3-68e4-411c-81e0-327ef19ffec3",
        "question_text": "How many years was the time span when the Ming dynasty first conquered the Yunnan borderlands?",
        "split": "dev",
        "decomposition": "return the  time span when  the   Ming dynasty first conquered the Yunnan borderlands ;return the  years of #1 ;return the  number of  #2",
        "program": [
            "SELECT['the time span when the Ming dynasty first conquered the Yunnan borderlands']",
            "PROJECT['the years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "the years of #REF",
                [
                    "SELECT",
                    "the time span when the Ming dynasty first conquered the Yunnan borderlands"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the time span when the Ming dynasty first conquered the Yunnan borderlands)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the time span when the Ming dynasty first conquered the Yunnan borderlands)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    8,
                    13
                ],
                [
                    5,
                    9,
                    11
                ],
                [
                    7,
                    10,
                    12
                ],
                [
                    14,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "time",
                "span",
                "when",
                "the",
                "Ming",
                "dynasty",
                "first",
                "conquered",
                "the",
                "Yunnan",
                "borderlands",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    9
                ],
                [
                    6
                ],
                [
                    7,
                    10,
                    12
                ],
                [
                    11
                ],
                [],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5,
                    8,
                    11,
                    13
                ],
                [
                    9
                ],
                [
                    7,
                    10,
                    12
                ],
                [
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2060_5dc37d3d-4702-4f94-9f77-f1145f8e2c65",
        "question_text": "How many people authored the study released in 2013?",
        "split": "dev",
        "decomposition": "return the  study that was  released in  2013 ;return people that authored #1 ;return number of  #2",
        "program": [
            "SELECT['the study that was released in 2013']",
            "PROJECT['people that authored #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "people that authored #REF",
                [
                    "SELECT",
                    "the study that was released in 2013"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(people that authored #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the study that was released in 2013)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(people that authored #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the study that was released in 2013)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "authored",
                "the",
                "study",
                "released",
                "in",
                "2013",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1223_a53fea0a-aa37-4b00-bc01-4a6ac26628eb",
        "question_text": "How many quarters had been played before Rivers threw a touchdown pass to Floyd?",
        "split": "dev",
        "decomposition": "return quarter when  Rivers threw a touchdown pass to Floyd ;return quarters that had been played before #1 ;return number of  #2",
        "program": [
            "SELECT['quarter when Rivers threw a touchdown pass to Floyd']",
            "PROJECT['quarters that had been played before #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "quarters that had been played before #REF",
                [
                    "SELECT",
                    "quarter when Rivers threw a touchdown pass to Floyd"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(quarters that had been played before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarter when Rivers threw a touchdown pass to Floyd)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(quarters that had been played before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarter when Rivers threw a touchdown pass to Floyd)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    7,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "quarters",
                "had",
                "been",
                "played",
                "before",
                "Rivers",
                "threw",
                "a",
                "touchdown",
                "pass",
                "to",
                "Floyd",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    8
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1454_5d0590e6-f1ad-4e48-9fce-a0aa6a1bcfed",
        "question_text": "During the game how many players scored touchdowns?",
        "split": "dev",
        "decomposition": "return touchdowns in  the  game ;return players that scored #1 ;return the  number of  #2",
        "program": [
            "SELECT['touchdowns in the game']",
            "PROJECT['players that scored #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "players that scored #REF",
                [
                    "SELECT",
                    "touchdowns in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that scored #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that scored #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    4,
                    7
                ],
                [
                    0,
                    1,
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "During",
                "the",
                "game",
                "how",
                "many",
                "players",
                "scored",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1743_34f96c58-9e46-4a4d-8b21-65799d79dfa8",
        "question_text": "How many different players threw a TD pass for the Jets?",
        "split": "dev",
        "decomposition": "return TD passes of the  Jets ;return different players that threw #1 ;return number of  #2",
        "program": [
            "SELECT['TD passes of the Jets']",
            "PROJECT['different players that threw #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "different players that threw #REF",
                [
                    "SELECT",
                    "TD passes of the Jets"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(different players that threw #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the Jets)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(different players that threw #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the Jets)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "different",
                "players",
                "threw",
                "a",
                "TD",
                "pass",
                "for",
                "the",
                "Jets",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    10
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1769_09b90451-e508-4b2e-9c96-948b18573bac",
        "question_text": "How many players helped to take the early Bears lead?",
        "split": "dev",
        "decomposition": "return the  early Bears lead ;return players that helped to take #1 ;return number of  #2",
        "program": [
            "SELECT['the early Bears lead']",
            "PROJECT['players that helped to take #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "players that helped to take #REF",
                [
                    "SELECT",
                    "the early Bears lead"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that helped to take #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the early Bears lead)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(players that helped to take #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the early Bears lead)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    7
                ],
                [
                    3,
                    4,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "players",
                "helped",
                "to",
                "take",
                "the",
                "early",
                "Bears",
                "lead",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    8
                ],
                [
                    2
                ],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2262_78f903a9-c9bc-4c21-876a-b955f331cce8",
        "question_text": "How many losses did the Saints have coming into this game?",
        "split": "dev",
        "decomposition": "return the  Saints coming into the game ;return the  losses of #1 ;return the  number of  #2",
        "program": [
            "SELECT['the Saints coming into the game']",
            "PROJECT['the losses of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "the losses of #REF",
                [
                    "SELECT",
                    "the Saints coming into the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the losses of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Saints coming into the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the losses of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the Saints coming into the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "losses",
                "did",
                "the",
                "Saints",
                "have",
                "coming",
                "into",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1172_986693f5-bcff-423c-8c6c-4e3070835090",
        "question_text": "How many Red Army personnel combined the South west and Western front  numbered by Galicia?",
        "split": "train",
        "decomposition": "return Red Army personnel of the  South west front ;return Red Army personnel of the  Western front ;return numbered #1 ;return numbered #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['Red Army personnel of the South west front']",
            "SELECT['Red Army personnel of the Western front']",
            "PROJECT['numbered #REF', '#1']",
            "PROJECT['numbered #REF', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "PROJECT",
                "numbered #REF",
                [
                    "SELECT",
                    "Red Army personnel of the South west front"
                ]
            ],
            [
                "PROJECT",
                "numbered #REF",
                [
                    "SELECT",
                    "Red Army personnel of the Western front"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(numbered #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Red Army personnel of the South west front)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(numbered #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Red Army personnel of the Western front)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(numbered #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Red Army personnel of the South west front)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(numbered #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Red Army personnel of the Western front)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    5,
                    9
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    12
                ],
                [
                    10,
                    11,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Red",
                "Army",
                "personnel",
                "combined",
                "the",
                "South",
                "west",
                "and",
                "Western",
                "front",
                "numbered",
                "by",
                "Galicia",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5,
                    9
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    7
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    11
                ],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    9
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [
                    12
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2173_4f0dd3e4-524f-45da-a927-5bca621fa3c4",
        "question_text": "How many percent of the population was at or above the poverty line?",
        "split": "train",
        "decomposition": "return population that was  at the  poverty line ;return population that was  above the  poverty line ;return percent of #1 ;return percent of #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['population that was at the poverty line']",
            "SELECT['population that was above the poverty line']",
            "PROJECT['percent of #REF', '#1']",
            "PROJECT['percent of #REF', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "PROJECT",
                "percent of #REF",
                [
                    "SELECT",
                    "population that was at the poverty line"
                ]
            ],
            [
                "PROJECT",
                "percent of #REF",
                [
                    "SELECT",
                    "population that was above the poverty line"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(population that was at the poverty line)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(population that was above the poverty line)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(population that was at the poverty line)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(population that was above the poverty line)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "population",
                "was",
                "at",
                "or",
                "above",
                "the",
                "poverty",
                "line",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_237_98680ce0-f45c-44f2-a06c-24008a77f053",
        "question_text": "How many kilometres long and wide was the plain that Skanderbeg chosen?",
        "split": "train",
        "decomposition": "return the  plain that Skanderbeg chose ;return how long was  #1 in  kilometres ;return how wide was  #1 in  kilometres ;return the  sum of #2 and  #3",
        "program": [
            "SELECT['the plain that Skanderbeg chose']",
            "PROJECT['how long was #REF in kilometres', '#1']",
            "PROJECT['how wide was #REF in kilometres', '#1']",
            "ARITHMETIC['sum', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "PROJECT",
                "how long was #REF in kilometres",
                [
                    "SELECT",
                    "the plain that Skanderbeg chose"
                ]
            ],
            [
                "PROJECT",
                "how wide was #REF in kilometres",
                [
                    "SELECT",
                    "the plain that Skanderbeg chose"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(how long was #REF in kilometres)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the plain that Skanderbeg chose)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(how wide was #REF in kilometres)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the plain that Skanderbeg chose)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(how long was #REF in kilometres)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the plain that Skanderbeg chose)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(how wide was #REF in kilometres)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the plain that Skanderbeg chose)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "kilometres",
                "long",
                "and",
                "wide",
                "was",
                "the",
                "plain",
                "that",
                "Skanderbeg",
                "chosen",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    5,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1391_f502d3a6-a81a-468f-ba1c-892373f71c3a",
        "question_text": "How many months after a wireless station was built at Misratah did Sayed Ahmed board a German submarine at al-Aquila and go into exile in Turkey?",
        "split": "train",
        "decomposition": "return when  a  wireless station was  built at  Misratah ;return when  Sayed Ahmed board a  German submarine at  al-Aquila and  go into exile in  Turkey ;return the month of #1 ;return the month of #2 ;return the difference of #4 and  #3",
        "program": [
            "SELECT['when a wireless station was built at Misratah']",
            "SELECT['when Sayed Ahmed board a German submarine at al-Aquila and go into exile in Turkey']",
            "PROJECT['the month of #REF', '#1']",
            "PROJECT['the month of #REF', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the month of #REF",
                [
                    "SELECT",
                    "when Sayed Ahmed board a German submarine at al-Aquila and go into exile in Turkey"
                ]
            ],
            [
                "PROJECT",
                "the month of #REF",
                [
                    "SELECT",
                    "when a wireless station was built at Misratah"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the month of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when Sayed Ahmed board a German submarine at al-Aquila and go into exile in Turkey)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the month of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when a wireless station was built at Misratah)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the month of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when Sayed Ahmed board a German submarine at al-Aquila and go into exile in Turkey)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the month of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when a wireless station was built at Misratah)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    7,
                    10
                ],
                [
                    5,
                    12
                ],
                [
                    8,
                    9,
                    18
                ],
                [
                    13,
                    14,
                    16
                ],
                [
                    22
                ],
                [
                    15,
                    17,
                    21
                ],
                [
                    24,
                    25
                ],
                [
                    19,
                    20,
                    23
                ],
                [
                    27,
                    28
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "after",
                "a",
                "wireless",
                "station",
                "was",
                "built",
                "at",
                "Misratah",
                "did",
                "Sayed",
                "Ahmed",
                "board",
                "a",
                "German",
                "submarine",
                "at",
                "al",
                "-",
                "Aquila",
                "and",
                "go",
                "into",
                "exile",
                "in",
                "Turkey",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    5,
                    8
                ],
                [
                    7,
                    10
                ],
                [],
                [
                    9,
                    14
                ],
                [
                    6,
                    12
                ],
                [
                    13
                ],
                [
                    16
                ],
                [],
                [],
                [
                    17,
                    19
                ],
                [],
                [
                    18
                ],
                [],
                [
                    23
                ],
                [
                    24
                ],
                [
                    21,
                    25
                ],
                [],
                [
                    27
                ],
                [
                    28
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    11
                ],
                [
                    6
                ],
                [],
                [
                    4,
                    10,
                    15
                ],
                [
                    12,
                    13
                ],
                [
                    8
                ],
                [
                    5,
                    14
                ],
                [
                    17
                ],
                [],
                [
                    22
                ],
                [],
                [
                    21
                ],
                [
                    25
                ],
                [
                    19,
                    23
                ],
                [],
                [
                    27,
                    28
                ]
            ],
            "question_spans": [
                [
                    0,
                    10
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    27
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    27
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    21
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    15,
                    21
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    23,
                    27
                ],
                [
                    24,
                    24
                ],
                [
                    24,
                    25
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    26,
                    27
                ],
                [
                    27,
                    27
                ],
                [
                    28,
                    28
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1724_e176ddcf-f155-438a-9517-1045dcdfc3a5",
        "question_text": "The first time the Packers beat the Bears, how many points did they win by?",
        "split": "train",
        "decomposition": "return first time the Packers beat the  Bears ;return points of the Packers in  #1 ;return points of the Bears in  #1 ;return the difference of #2 and  #3",
        "program": [
            "SELECT['first time the Packers beat the Bears']",
            "PROJECT['points of the Packers in #REF', '#1']",
            "PROJECT['points of the Bears in #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "points of the Packers in #REF",
                [
                    "SELECT",
                    "first time the Packers beat the Bears"
                ]
            ],
            [
                "PROJECT",
                "points of the Bears in #REF",
                [
                    "SELECT",
                    "first time the Packers beat the Bears"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of the Packers in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first time the Packers beat the Bears)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of the Bears in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first time the Packers beat the Bears)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of the Packers in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first time the Packers beat the Bears)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of the Bears in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first time the Packers beat the Bears)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    10
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [
                    0,
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    9,
                    11,
                    13
                ],
                [],
                [
                    14
                ],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "The",
                "first",
                "time",
                "the",
                "Packers",
                "beat",
                "the",
                "Bears",
                ",",
                "how",
                "many",
                "points",
                "did",
                "they",
                "win",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1749_28146c42-04ab-4c6c-a3cb-ee9a97b2e009",
        "question_text": "Between 2004 and 2014, how many more percent of Gagauz people have moved to the area controlled by Chisinau?",
        "split": "train",
        "decomposition": "return the area controlled by Chisinau ;return percent of Gagauz people that  moved to #1 in  2004 ;return percent of Gagauz people that  moved to #1 in  2014 ;return the difference of #3 and  #2",
        "program": [
            "SELECT['the area controlled by Chisinau']",
            "PROJECT['percent of Gagauz people that moved to #REF in 2004', '#1']",
            "PROJECT['percent of Gagauz people that moved to #REF in 2014', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "percent of Gagauz people that moved to #REF in 2014",
                [
                    "SELECT",
                    "the area controlled by Chisinau"
                ]
            ],
            [
                "PROJECT",
                "percent of Gagauz people that moved to #REF in 2004",
                [
                    "SELECT",
                    "the area controlled by Chisinau"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of Gagauz people that moved to #REF in 2014)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the area controlled by Chisinau)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of Gagauz people that moved to #REF in 2004)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the area controlled by Chisinau)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of Gagauz people that moved to #REF in 2014)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the area controlled by Chisinau)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of Gagauz people that moved to #REF in 2004)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the area controlled by Chisinau)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    1
                ],
                [],
                [
                    13
                ],
                [
                    10,
                    14,
                    16
                ],
                [],
                [
                    18
                ],
                [
                    17
                ],
                [
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "Between",
                "2004",
                "and",
                "2014",
                ",",
                "how",
                "many",
                "more",
                "percent",
                "of",
                "Gagauz",
                "people",
                "have",
                "moved",
                "to",
                "the",
                "area",
                "controlled",
                "by",
                "Chisinau",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6,
                    7,
                    8
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [
                    16,
                    17
                ],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    5,
                    6
                ],
                [
                    0,
                    8
                ],
                [
                    7,
                    11
                ],
                [],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    12
                ],
                [
                    10,
                    14
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    19,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_185_9b075f52-ac9f-48de-963d-f90418d1b6ab",
        "question_text": "How many months after being selected by the Tsar was the first Russian military base founded on the cape?",
        "split": "train",
        "decomposition": "return first Russian military base on the  cape ;return month that #1 was  selected by the  Tsar ;return month that #1 was  founded ;return difference of #3 and  #2",
        "program": [
            "SELECT['first Russian military base on the cape']",
            "PROJECT['month that #REF was selected by the Tsar', '#1']",
            "PROJECT['month that #REF was founded', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "month that #REF was founded",
                [
                    "SELECT",
                    "first Russian military base on the cape"
                ]
            ],
            [
                "PROJECT",
                "month that #REF was selected by the Tsar",
                [
                    "SELECT",
                    "first Russian military base on the cape"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(month that #REF was founded)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first Russian military base on the cape)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(month that #REF was selected by the Tsar)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first Russian military base on the cape)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(month that #REF was founded)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first Russian military base on the cape)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(month that #REF was selected by the Tsar)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first Russian military base on the cape)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    5,
                    9
                ],
                [
                    6,
                    8
                ],
                [
                    4,
                    12
                ],
                [
                    11
                ],
                [
                    14
                ],
                [],
                [],
                [
                    13,
                    15,
                    16
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "after",
                "being",
                "selected",
                "by",
                "the",
                "Tsar",
                "was",
                "the",
                "first",
                "Russian",
                "military",
                "base",
                "founded",
                "on",
                "the",
                "cape",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    12,
                    15
                ],
                [
                    16
                ],
                [
                    14
                ],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    14
                ],
                [
                    15
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1864_f8a789f8-0676-4741-a065-2c0da67b4530",
        "question_text": "How many years difference is there between the most recent record maximum temperature and record minimum temperature?",
        "split": "train",
        "decomposition": "return most recent record  maximum temperature ;return year of #1 ;return most recent record  minimum temperature ;return year of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['most recent record maximum temperature']",
            "PROJECT['year of #REF', '#1']",
            "SELECT['most recent record minimum temperature']",
            "PROJECT['year of #REF', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "year of #REF",
                [
                    "SELECT",
                    "most recent record maximum temperature"
                ]
            ],
            [
                "PROJECT",
                "year of #REF",
                [
                    "SELECT",
                    "most recent record minimum temperature"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(most recent record maximum temperature)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(most recent record minimum temperature)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(most recent record maximum temperature)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(most recent record minimum temperature)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    2,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12,
                    13,
                    15,
                    16
                ],
                [
                    11
                ],
                [
                    14
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "difference",
                "is",
                "there",
                "between",
                "the",
                "most",
                "recent",
                "record",
                "maximum",
                "temperature",
                "and",
                "record",
                "minimum",
                "temperature",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    6,
                    15
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [
                    14
                ],
                [
                    12
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    12,
                    13,
                    15,
                    16
                ],
                [],
                [
                    10,
                    11,
                    14
                ],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_412_0aa6f185-4dab-4d9e-a92d-9b2f29b61780",
        "question_text": "How many years passed between the signing of the Treaty of Br\u00f6msebro and the Treaty of Roskilde?",
        "split": "train",
        "decomposition": "return when  was  the  signing of   the   Treaty  of Br\u00f6msebro ;return the  year of   #1 ;return when  was  the  signing of   the   Treaty  of Roskilde ;return the  year of   #3 ;return the  difference of   #2 and  #4",
        "program": [
            "SELECT['when was the signing of the Treaty of Br\\xf6msebro']",
            "PROJECT['the year of #REF', '#1']",
            "SELECT['when was the signing of the Treaty of Roskilde']",
            "PROJECT['the year of #REF', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the year of #REF",
                [
                    "SELECT",
                    "when was the signing of the Treaty of Br\u00f6msebro"
                ]
            ],
            [
                "PROJECT",
                "the year of #REF",
                [
                    "SELECT",
                    "when was the signing of the Treaty of Roskilde"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when was the signing of the Treaty of Br\u00f6msebro)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when was the signing of the Treaty of Roskilde)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when was the signing of the Treaty of Br\u00f6msebro)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when was the signing of the Treaty of Roskilde)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ],
                [],
                [
                    6,
                    9
                ],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "the",
                "signing",
                "of",
                "the",
                "Treaty",
                "of",
                "Br\u00f6msebro",
                "and",
                "the",
                "Treaty",
                "of",
                "Roskilde",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_743_e5b52630-cee5-4e66-8465-91341d7e060a",
        "question_text": "How many years did it take the proportion of Southern Irish Protestants to decline from 10 to 3%?",
        "split": "train",
        "decomposition": "return division of 10 and  100 ;return year when  proportion of Southern Irish Protestants was  #1 ;return division of 3 and  100 ;return year when  proportion of Southern Irish Protestants was  #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['division of 10 and 100']",
            "PROJECT['year when proportion of Southern Irish Protestants was #REF', '#1']",
            "SELECT['division of 3 and 100']",
            "PROJECT['year when proportion of Southern Irish Protestants was #REF', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "year when proportion of Southern Irish Protestants was #REF",
                [
                    "SELECT",
                    "division of 10 and 100"
                ]
            ],
            [
                "PROJECT",
                "year when proportion of Southern Irish Protestants was #REF",
                [
                    "SELECT",
                    "division of 3 and 100"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year when proportion of Southern Irish Protestants was #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(division of 10 and 100)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year when proportion of Southern Irish Protestants was #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(division of 3 and 100)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year when proportion of Southern Irish Protestants was #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(division of 10 and 100)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year when proportion of Southern Irish Protestants was #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(division of 3 and 100)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    16
                ],
                [
                    17
                ],
                [
                    15
                ],
                [
                    13
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "it",
                "take",
                "the",
                "proportion",
                "of",
                "Southern",
                "Irish",
                "Protestants",
                "to",
                "decline",
                "from",
                "10",
                "to",
                "3",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ],
                [
                    15,
                    17,
                    18
                ],
                [],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    16
                ],
                [],
                [],
                [
                    15,
                    17
                ],
                [
                    13
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    18
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_874_a0b9de1b-606a-440e-a6b7-358e65eac880",
        "question_text": "Between 1890 and 1914, how many hours did the average work week fall to for unionized manufacturing employees in the US?",
        "split": "train",
        "decomposition": "return average work week for unionized manufacturing employees in  the US in 1890 ;return average work week for unionized manufacturing employees in  the US in 1914 ;return hours of #1 ;return hours of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['average work week for unionized manufacturing employees in the US in 1890']",
            "SELECT['average work week for unionized manufacturing employees in the US in 1914']",
            "PROJECT['hours of #REF', '#1']",
            "PROJECT['hours of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "hours of #REF",
                [
                    "SELECT",
                    "average work week for unionized manufacturing employees in the US in 1890"
                ]
            ],
            [
                "PROJECT",
                "hours of #REF",
                [
                    "SELECT",
                    "average work week for unionized manufacturing employees in the US in 1914"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(hours of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(average work week for unionized manufacturing employees in the US in 1890)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(hours of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(average work week for unionized manufacturing employees in the US in 1914)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(hours of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(average work week for unionized manufacturing employees in the US in 1890)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(hours of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(average work week for unionized manufacturing employees in the US in 1914)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6
                ],
                [
                    2,
                    5,
                    7
                ],
                [
                    3
                ],
                [
                    1
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    10,
                    13,
                    14,
                    21
                ],
                [
                    16
                ],
                [
                    17
                ],
                [
                    15,
                    18
                ],
                [
                    22
                ]
            ],
            "question_tokens": [
                "Between",
                "1890",
                "and",
                "1914",
                ",",
                "how",
                "many",
                "hours",
                "did",
                "the",
                "average",
                "work",
                "week",
                "fall",
                "to",
                "for",
                "unionized",
                "manufacturing",
                "employees",
                "in",
                "the",
                "US",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    21
                ],
                [],
                [],
                [
                    12,
                    13,
                    15
                ],
                [],
                [
                    18
                ],
                [],
                [
                    16,
                    17
                ],
                [],
                [],
                [
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    5,
                    6
                ],
                [
                    0
                ],
                [
                    3
                ],
                [
                    7,
                    8
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    1,
                    11
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    10,
                    14,
                    21
                ],
                [
                    16
                ],
                [],
                [
                    17
                ],
                [
                    18
                ],
                [],
                [
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    21
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    21
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    21
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    21
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1289_6dcc0705-78ef-4c16-9cc1-4ce49cbbedeb",
        "question_text": "How many yards was the difference between the first and second touchdowns in the game?",
        "split": "train",
        "decomposition": "return the   first touchdown in  the game ;return the   second touchdown in  the game ;return yards of #1 ;return yards of #2 ;return the   difference of #3 and  #4",
        "program": [
            "SELECT['the first touchdown in the game']",
            "SELECT['the second touchdown in the game']",
            "PROJECT['yards of #REF', '#1']",
            "PROJECT['yards of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "the first touchdown in the game"
                ]
            ],
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "the second touchdown in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the first touchdown in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the second touchdown in the game)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the first touchdown in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the second touchdown in the game)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    9
                ],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "difference",
                "between",
                "the",
                "first",
                "and",
                "second",
                "touchdowns",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2515_f826143c-380e-4707-9771-9d1b1be2989c",
        "question_text": "How many yards longer was Kordell Stewart's touchdown run than Griffins?",
        "split": "train",
        "decomposition": "return touchdown run from  Kordell Stewart ;return touchdown run from  Griffin ;return the  yards of #1 ;return the  yards of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdown run from Kordell Stewart']",
            "SELECT['touchdown run from Griffin']",
            "PROJECT['the yards of #REF', '#1']",
            "PROJECT['the yards of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "SELECT",
                    "touchdown run from Kordell Stewart"
                ]
            ],
            [
                "PROJECT",
                "the yards of #REF",
                [
                    "SELECT",
                    "touchdown run from Griffin"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdown run from Kordell Stewart)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdown run from Griffin)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdown run from Kordell Stewart)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdown run from Griffin)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Kordell",
                "Stewart",
                "'s",
                "touchdown",
                "run",
                "than",
                "Griffins",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_261_902e6f5f-9c64-4400-8066-34511f4aada6",
        "question_text": "How many yards shorter was John Carney's second field goal compared to his first?",
        "split": "train",
        "decomposition": "return first field goal of  John Carney ;return second field goal of  John Carney ;return yards of  #1 ;return yards of  #2 ;return the difference of  #3 and #4",
        "program": [
            "SELECT['first field goal of John Carney']",
            "SELECT['second field goal of John Carney']",
            "PROJECT['yards of #REF', '#1']",
            "PROJECT['yards of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "first field goal of John Carney"
                ]
            ],
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "second field goal of John Carney"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first field goal of John Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(second field goal of John Carney)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first field goal of John Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(second field goal of John Carney)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "John",
                "Carney",
                "'s",
                "second",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [
                    10,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2683_1cace430-486f-4df9-b0a6-2d904225229e",
        "question_text": "How many points did Green Bay win Washington by in the highest scoring game of Monday Night Football history?",
        "split": "train",
        "decomposition": "return highest scoring game of Monday Night Football history ;return points of Green Bay in  #1 ;return points of Washington in  #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['highest scoring game of Monday Night Football history']",
            "PROJECT['points of Green Bay in #REF', '#1']",
            "PROJECT['points of Washington in #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "points of Green Bay in #REF",
                [
                    "SELECT",
                    "highest scoring game of Monday Night Football history"
                ]
            ],
            [
                "PROJECT",
                "points of Washington in #REF",
                [
                    "SELECT",
                    "highest scoring game of Monday Night Football history"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of Green Bay in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(highest scoring game of Monday Night Football history)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of Washington in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(highest scoring game of Monday Night Football history)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of Green Bay in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(highest scoring game of Monday Night Football history)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of Washington in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(highest scoring game of Monday Night Football history)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    6,
                    8
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    16
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    15,
                    17
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Green",
                "Bay",
                "win",
                "Washington",
                "by",
                "in",
                "the",
                "highest",
                "scoring",
                "game",
                "of",
                "Monday",
                "Night",
                "Football",
                "history",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    15,
                    17
                ],
                [
                    16
                ],
                [],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    13
                ],
                [],
                [
                    16
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    15,
                    17
                ],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    18
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_853_0dfe385a-28d5-489d-a200-0c3ec0ea3c3f",
        "question_text": "How many yards shorter was Josh Brown's first field goal from his last?",
        "split": "train",
        "decomposition": "return first field goal of  Josh Brown ;return last field goal of  Josh Brown ;return yards of  #1 ;return yards of  #2 ;return difference of  #4 and #3",
        "program": [
            "SELECT['first field goal of Josh Brown']",
            "SELECT['last field goal of Josh Brown']",
            "PROJECT['yards of #REF', '#1']",
            "PROJECT['yards of #REF', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "last field goal of Josh Brown"
                ]
            ],
            [
                "PROJECT",
                "yards of #REF",
                [
                    "SELECT",
                    "first field goal of Josh Brown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(last field goal of Josh Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first field goal of Josh Brown)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(last field goal of Josh Brown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(yards of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(first field goal of Josh Brown)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7,
                    10,
                    12
                ],
                [
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "Josh",
                "Brown",
                "'s",
                "first",
                "field",
                "goal",
                "from",
                "his",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                [
                    12
                ],
                [],
                [
                    8,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1898_505ee78a-8aa7-489d-b9c9-3fe72ec96d74",
        "question_text": "How many more, in percentage, were households were non-families than were Marriage living together?",
        "split": "dev",
        "decomposition": "return the households that  were   non-families ;return the households that  were   Marriage living together ;return percentage of #1 ;return percentage of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['the households that were non-families']",
            "SELECT['the households that were Marriage living together']",
            "PROJECT['percentage of #REF', '#1']",
            "PROJECT['percentage of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "percentage of #REF",
                [
                    "SELECT",
                    "the households that were non-families"
                ]
            ],
            [
                "PROJECT",
                "percentage of #REF",
                [
                    "SELECT",
                    "the households that were Marriage living together"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the households that were non-families)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the households that were Marriage living together)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the households that were non-families)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the households that were Marriage living together)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8,
                    16
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    13,
                    17
                ],
                [],
                [
                    12,
                    15
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                ",",
                "in",
                "percentage",
                ",",
                "were",
                "households",
                "were",
                "non",
                "-",
                "families",
                "than",
                "were",
                "Marriage",
                "living",
                "together",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    8,
                    16
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    9,
                    14
                ],
                [
                    10,
                    13,
                    17
                ],
                [],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1954_2c054bf0-1177-4f44-865c-a6e02d20494e",
        "question_text": "How many more people, in terms of percentage, were in the two biggest racial groups combined compared to the two smallest groups combined?",
        "split": "dev",
        "decomposition": "return two biggest racial groups combined  ;return two smallest racial groups combined  ;return percentage of #1 ;return percentage of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['two biggest racial groups combined']",
            "SELECT['two smallest racial groups combined']",
            "PROJECT['percentage of #REF', '#1']",
            "PROJECT['percentage of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "percentage of #REF",
                [
                    "SELECT",
                    "two biggest racial groups combined"
                ]
            ],
            [
                "PROJECT",
                "percentage of #REF",
                [
                    "SELECT",
                    "two smallest racial groups combined"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(two biggest racial groups combined)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(two smallest racial groups combined)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(two biggest racial groups combined)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percentage of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(two smallest racial groups combined)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [],
                [],
                [],
                [
                    16
                ],
                [],
                [
                    14,
                    15,
                    17,
                    18,
                    19,
                    24
                ],
                [
                    13,
                    21
                ],
                [],
                [
                    22,
                    23
                ],
                [
                    25
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "in",
                "the",
                "two",
                "biggest",
                "racial",
                "groups",
                "combined",
                "compared",
                "to",
                "the",
                "two",
                "smallest",
                "groups",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    14,
                    18
                ],
                [
                    15,
                    16
                ],
                [
                    13,
                    21
                ],
                [],
                [
                    23
                ],
                [],
                [
                    22
                ],
                [],
                [],
                [
                    24
                ],
                [
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    16,
                    17,
                    23,
                    24
                ],
                [
                    14,
                    15,
                    18,
                    19
                ],
                [],
                [
                    21
                ],
                [],
                [],
                [],
                [
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    24
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    24
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    24
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    23
                ],
                [
                    20,
                    24
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1959_af721dbb-7360-4929-a0c6-948ba581a32f",
        "question_text": "How many more percent of people were white than Pacific Islander?",
        "split": "dev",
        "decomposition": "return people that  were white ;return percent of #1 ;return people that  were Pacific Islander ;return percent of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['people that were white']",
            "PROJECT['percent of #REF', '#1']",
            "SELECT['people that were Pacific Islander']",
            "PROJECT['percent of #REF', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "percent of #REF",
                [
                    "SELECT",
                    "people that were white"
                ]
            ],
            [
                "PROJECT",
                "percent of #REF",
                [
                    "SELECT",
                    "people that were Pacific Islander"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were white)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were Pacific Islander)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were white)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(percent of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were Pacific Islander)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "of",
                "people",
                "were",
                "white",
                "than",
                "Pacific",
                "Islander",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2064_62cb5db3-892a-4868-a275-6de1b975ff9d",
        "question_text": "How many points higher was the 49ers' margin of victory against the Chicago Bears compared to against the Giants?",
        "split": "dev",
        "decomposition": "return 49ers margin of victory against  the  Chicago Bears ;return points of #1 ;return 49ers margin of victory against  the  Giants ;return points of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['49ers margin of victory against the Chicago Bears']",
            "PROJECT['points of #REF', '#1']",
            "SELECT['49ers margin of victory against the Giants']",
            "PROJECT['points of #REF', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "points of #REF",
                [
                    "SELECT",
                    "49ers margin of victory against the Chicago Bears"
                ]
            ],
            [
                "PROJECT",
                "points of #REF",
                [
                    "SELECT",
                    "49ers margin of victory against the Giants"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(49ers margin of victory against the Chicago Bears)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(49ers margin of victory against the Giants)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(49ers margin of victory against the Chicago Bears)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(49ers margin of victory against the Giants)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    7
                ],
                [
                    4
                ],
                [
                    8
                ],
                [
                    6
                ],
                [
                    10,
                    11
                ],
                [
                    13,
                    15,
                    16
                ],
                [],
                [
                    14,
                    17
                ],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "higher",
                "was",
                "the",
                "49ers",
                "'",
                "margin",
                "of",
                "victory",
                "against",
                "the",
                "Chicago",
                "Bears",
                "compared",
                "to",
                "against",
                "the",
                "Giants",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [],
                [
                    19
                ],
                [
                    17
                ],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [],
                [
                    13,
                    15,
                    16
                ],
                [],
                [],
                [],
                [
                    19
                ],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1483_abe83b62-5a71-4941-976b-64ac2caf1a02",
        "question_text": "How many years after  Manco Inca Yupanqui died did his son die?",
        "split": "train",
        "decomposition": "return year that Manco Inca Yupanqui died ;return son of Manco Inca Yupanqui ;return year that #2 died ;return difference of #3 and  #1",
        "program": [
            "SELECT['year that Manco Inca Yupanqui died']",
            "SELECT['son of Manco Inca Yupanqui']",
            "PROJECT['year that #REF died', '#2']",
            "ARITHMETIC['difference', '#3', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "year that #REF died",
                [
                    "SELECT",
                    "son of Manco Inca Yupanqui"
                ]
            ],
            [
                "SELECT",
                "year that Manco Inca Yupanqui died"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year that #REF died)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(son of Manco Inca Yupanqui)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Manco Inca Yupanqui died)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year that #REF died)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(son of Manco Inca Yupanqui)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Manco Inca Yupanqui died)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "Manco",
                "Inca",
                "Yupanqui",
                "died",
                "did",
                "his",
                "son",
                "die",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1628_af2d26e9-be61-49a2-a656-1eb11dbd459e",
        "question_text": "How many years after Maria Antonia married Maximillian Emanuel did the Treaty make their six year old son heir to the bulk of the Spanish Monarchy?",
        "split": "train",
        "decomposition": "return year when  Maria Antonia married Maximillian Emanuel ;return when  the  Treaty make the   six year old son of Maria Antonia ,  Maximillian Emanuel heir to the bulk of  Spanish Monarchy ;return the  year of #2 ;return the  difference of #3 and  #1",
        "program": [
            "SELECT['year when Maria Antonia married Maximillian Emanuel']",
            "SELECT['when the Treaty make the six year old son of Maria Antonia , Maximillian Emanuel heir to the bulk of Spanish Monarchy']",
            "PROJECT['the year of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "the year of #REF",
                [
                    "SELECT",
                    "when the Treaty make the six year old son of Maria Antonia , Maximillian Emanuel heir to the bulk of Spanish Monarchy"
                ]
            ],
            [
                "SELECT",
                "year when Maria Antonia married Maximillian Emanuel"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when the Treaty make the six year old son of Maria Antonia , Maximillian Emanuel heir to the bulk of Spanish Monarchy)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Maria Antonia married Maximillian Emanuel)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the year of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(when the Treaty make the six year old son of Maria Antonia , Maximillian Emanuel heir to the bulk of Spanish Monarchy)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Maria Antonia married Maximillian Emanuel)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    7,
                    8,
                    10,
                    15
                ],
                [
                    12,
                    13,
                    14
                ],
                [
                    4,
                    6,
                    9,
                    11,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    19,
                    21
                ],
                [
                    24
                ],
                [
                    25,
                    26
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "Maria",
                "Antonia",
                "married",
                "Maximillian",
                "Emanuel",
                "did",
                "the",
                "Treaty",
                "make",
                "their",
                "six",
                "year",
                "old",
                "son",
                "heir",
                "to",
                "the",
                "bulk",
                "of",
                "the",
                "Spanish",
                "Monarchy",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    15
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    13,
                    17
                ],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    16,
                    24
                ],
                [],
                [
                    21
                ],
                [
                    25
                ],
                [
                    26
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    15
                ],
                [],
                [
                    14
                ],
                [
                    6,
                    11
                ],
                [
                    12,
                    16
                ],
                [
                    17,
                    18
                ],
                [],
                [
                    19,
                    21
                ],
                [
                    24
                ],
                [],
                [
                    25,
                    26
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    25
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    25
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    25
                ],
                [
                    20,
                    25
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    25
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    25
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_216_57bc0196-65fe-4d3d-91e2-5706daca9ed9",
        "question_text": "How many years after the battlefield became an official national historical memorial site was a new reception hall and exhibition building completed?",
        "split": "train",
        "decomposition": "return battlefield that became an official national historical memorial site ;return year of new reception hall and  exhibition building completed in  #1 ;return year when  battlefield became an official national historical memorial site ;return difference of #2 and  #3",
        "program": [
            "SELECT['battlefield that became an official national historical memorial site']",
            "PROJECT['year of new reception hall and exhibition building completed in #REF', '#1']",
            "SELECT['year when battlefield became an official national historical memorial site']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "year of new reception hall and exhibition building completed in #REF",
                [
                    "SELECT",
                    "battlefield that became an official national historical memorial site"
                ]
            ],
            [
                "SELECT",
                "year when battlefield became an official national historical memorial site"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of new reception hall and exhibition building completed in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(battlefield that became an official national historical memorial site)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when battlefield became an official national historical memorial site)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of new reception hall and exhibition building completed in #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(battlefield that became an official national historical memorial site)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when battlefield became an official national historical memorial site)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    8,
                    9
                ],
                [
                    2,
                    4,
                    11,
                    13,
                    14,
                    16,
                    21
                ],
                [
                    10
                ],
                [
                    5,
                    6,
                    7,
                    15
                ],
                [
                    12,
                    17
                ],
                [
                    18
                ],
                [],
                [
                    19,
                    20,
                    22
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "battlefield",
                "became",
                "an",
                "official",
                "national",
                "historical",
                "memorial",
                "site",
                "was",
                "a",
                "new",
                "reception",
                "hall",
                "and",
                "exhibition",
                "building",
                "completed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    21
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    10
                ],
                [],
                [
                    16
                ],
                [
                    13
                ],
                [
                    18
                ],
                [],
                [
                    15
                ],
                [
                    20
                ],
                [
                    17,
                    19
                ],
                [],
                [
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    13
                ],
                [],
                [
                    8
                ],
                [
                    21
                ],
                [
                    11,
                    14,
                    16
                ],
                [
                    10
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    12,
                    15
                ],
                [],
                [],
                [],
                [
                    18
                ],
                [
                    17
                ],
                [],
                [
                    19,
                    20,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    12
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    20
                ],
                [
                    14,
                    21
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3215_cb2a1822-d7ae-4a2a-bb41-ede3c8803e37",
        "question_text": "How many of his teams points in the Bucks game were scored by players other than Gasol?",
        "split": "train",
        "decomposition": "return team of Gasol ;return points of #1 in  the  Bucks game ;return points of Gasol in  the  Bucks games ;return difference of #2 and  #3",
        "program": [
            "SELECT['team of Gasol']",
            "PROJECT['points of #REF in the Bucks game', '#1']",
            "SELECT['points of Gasol in the Bucks games']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "points of #REF in the Bucks game",
                [
                    "SELECT",
                    "team of Gasol"
                ]
            ],
            [
                "SELECT",
                "points of Gasol in the Bucks games"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF in the Bucks game)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(team of Gasol)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Gasol in the Bucks games)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(points of #REF in the Bucks game)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(team of Gasol)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Gasol in the Bucks games)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    11,
                    13
                ],
                [
                    9
                ],
                [
                    4
                ],
                [
                    12
                ],
                [
                    10,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "his",
                "teams",
                "points",
                "in",
                "the",
                "Bucks",
                "game",
                "were",
                "scored",
                "by",
                "players",
                "other",
                "than",
                "Gasol",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    11,
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    14,
                    16
                ],
                [
                    12
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [],
                [
                    10,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_938_0d4ff646-fe0d-42e4-9c5d-9b171dc2021c",
        "question_text": "How many years passed between the arrival of Fran\u00e7ois Jarret and the death of his son at the hands of the Iroquis?",
        "split": "train",
        "decomposition": "return year of   arrival of Fran\u00e7ois Jarret ;return son of   Fran\u00e7ois Jarret ;return year of   death of #2 ;return difference of   #3 and  #1",
        "program": [
            "SELECT['year of arrival of Fran\\xe7ois Jarret']",
            "SELECT['son of Fran\\xe7ois Jarret']",
            "PROJECT['year of death of #REF', '#2']",
            "ARITHMETIC['difference', '#3', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "year of death of #REF",
                [
                    "SELECT",
                    "son of Fran\u00e7ois Jarret"
                ]
            ],
            [
                "SELECT",
                "year of arrival of Fran\u00e7ois Jarret"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of death of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(son of Fran\u00e7ois Jarret)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of arrival of Fran\u00e7ois Jarret)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(year of death of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(son of Fran\u00e7ois Jarret)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of arrival of Fran\u00e7ois Jarret)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    4,
                    6,
                    10
                ],
                [
                    2,
                    5
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    12,
                    15,
                    18
                ],
                [
                    14
                ],
                [
                    16
                ],
                [
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "the",
                "arrival",
                "of",
                "Fran\u00e7ois",
                "Jarret",
                "and",
                "the",
                "death",
                "of",
                "his",
                "son",
                "at",
                "the",
                "hands",
                "of",
                "the",
                "Iroquis",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    15,
                    16
                ],
                [
                    18
                ],
                [
                    21
                ],
                [
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    12
                ],
                [],
                [],
                [
                    15,
                    18
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    21,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    21
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    21
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    21
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    21
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    21
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1670_32a672c3-7f81-4b86-a2ad-cc9555693ebc",
        "question_text": "According to one estimate, how many billion dollars did all members of the Allies except for the US and UK spend on the war combined?",
        "split": "train",
        "decomposition": "return how many billion dollars the   members of the  Allies spend on the war combined ;return how many billion dollars the   US spend on the  war ;return how many billion dollars the   UK spend on the  war ;return sum of #2 and #3 ;return difference of #1 and #4",
        "program": [
            "SELECT['how many billion dollars the members of the Allies spend on the war combined']",
            "SELECT['how many billion dollars the US spend on the war']",
            "SELECT['how many billion dollars the UK spend on the war']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "how many billion dollars the members of the Allies spend on the war combined"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "how many billion dollars the US spend on the war"
                ],
                [
                    "SELECT",
                    "how many billion dollars the UK spend on the war"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many billion dollars the members of the Allies spend on the war combined)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(how many billion dollars the US spend on the war)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(how many billion dollars the UK spend on the war)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(how many billion dollars the members of the Allies spend on the war combined)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(how many billion dollars the US spend on the war)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(how many billion dollars the UK spend on the war)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    6,
                    8
                ],
                [
                    1,
                    5
                ],
                [
                    0,
                    10
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    7,
                    19,
                    25
                ],
                [
                    11,
                    15
                ],
                [
                    16
                ],
                [
                    14
                ],
                [
                    18,
                    20
                ],
                [
                    21,
                    22
                ],
                [
                    24,
                    26
                ]
            ],
            "question_tokens": [
                "According",
                "to",
                "one",
                "estimate",
                ",",
                "how",
                "many",
                "billion",
                "dollars",
                "did",
                "all",
                "members",
                "of",
                "the",
                "Allies",
                "except",
                "for",
                "the",
                "US",
                "and",
                "UK",
                "spend",
                "on",
                "the",
                "war",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    10
                ],
                [
                    4,
                    19,
                    25
                ],
                [],
                [
                    8,
                    11
                ],
                [
                    14,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    18,
                    20
                ],
                [
                    21
                ],
                [],
                [
                    22
                ],
                [],
                [
                    24
                ],
                [],
                [
                    26
                ]
            ],
            "fastalign.grammar": [
                [
                    5,
                    6
                ],
                [
                    0
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    3
                ],
                [],
                [],
                [
                    14
                ],
                [
                    7
                ],
                [
                    4,
                    19,
                    25
                ],
                [
                    10,
                    11
                ],
                [
                    15,
                    18
                ],
                [],
                [
                    21
                ],
                [],
                [],
                [
                    20
                ],
                [],
                [],
                [
                    26
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    25
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    20
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    25
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1936_5af95047-d1cf-4a32-91bd-619bbc3b1e8c",
        "question_text": "How many more percent of people spoke English as opposed to German or French at home?",
        "split": "train",
        "decomposition": "return percent of people that spoke English at home ;return percent of people that spoke German at home ;return percent of people that spoke French at home ;return the  sum of #2 and  #3 ;return the  difference of #1 and  #4",
        "program": [
            "SELECT['percent of people that spoke English at home']",
            "SELECT['percent of people that spoke German at home']",
            "SELECT['percent of people that spoke French at home']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of people that spoke English at home"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of people that spoke German at home"
                ],
                [
                    "SELECT",
                    "percent of people that spoke French at home"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that spoke English at home)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that spoke German at home)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that spoke French at home)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that spoke English at home)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that spoke German at home)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that spoke French at home)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    12,
                    13
                ],
                [],
                [
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "of",
                "people",
                "spoke",
                "English",
                "as",
                "opposed",
                "to",
                "German",
                "or",
                "French",
                "at",
                "home",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1944_545ab5ba-0a39-41c4-9ef2-d2035d65d656",
        "question_text": "How many more people were in the 45 to 64 age range than over 64 and 18 to 24 combined, in percent?",
        "split": "train",
        "decomposition": "return percent of people in  the  45 to 64 age range ;return percent of people in  the  over 64 age range ;return percent of people in  the  18 to 24 age range ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percent of people in the 45 to 64 age range']",
            "SELECT['percent of people in the over 64 age range']",
            "SELECT['percent of people in the 18 to 24 age range']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of people in the 45 to 64 age range"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of people in the over 64 age range"
                ],
                [
                    "SELECT",
                    "percent of people in the 18 to 24 age range"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in the 45 to 64 age range)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people in the over 64 age range)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people in the 18 to 24 age range)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in the 45 to 64 age range)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people in the over 64 age range)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people in the 18 to 24 age range)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    22
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    3,
                    4,
                    15,
                    19,
                    20
                ],
                [
                    8,
                    11,
                    12,
                    13
                ],
                [],
                [
                    14,
                    16,
                    18
                ],
                [
                    17
                ],
                [],
                [
                    23
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "in",
                "the",
                "45",
                "to",
                "64",
                "age",
                "range",
                "than",
                "over",
                "64",
                "and",
                "18",
                "to",
                "24",
                "combined",
                ",",
                "in",
                "percent",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    3,
                    15,
                    19
                ],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    22
                ],
                [],
                [],
                [],
                [
                    18
                ],
                [],
                [],
                [
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    22
                ],
                [
                    4,
                    15,
                    19,
                    20
                ],
                [],
                [
                    11,
                    12,
                    16
                ],
                [],
                [],
                [
                    14,
                    18
                ],
                [],
                [],
                [],
                [],
                [
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    22
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2132_0cc0f637-51c6-4fb7-9f17-defb9f09eb70",
        "question_text": "By how many more percentage points were trans women or transvestites victims of homicide than lestians?",
        "split": "train",
        "decomposition": "return percentage of  homicide that are  transvestite victims ;return percentage of  homicide that are  lestian victims ;return percentage of  homicides that are  trans women victims ;return sum of  #1 and #3 ;return difference of  #2 and #4",
        "program": [
            "SELECT['percentage of homicide that are transvestite victims']",
            "SELECT['percentage of homicide that are lestian victims']",
            "SELECT['percentage of homicides that are trans women victims']",
            "ARITHMETIC['sum', '#1', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of homicide that are lestian victims"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of homicide that are transvestite victims"
                ],
                [
                    "SELECT",
                    "percentage of homicides that are trans women victims"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of homicide that are lestian victims)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of homicide that are transvestite victims)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of homicides that are trans women victims)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of homicide that are lestian victims)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of homicide that are transvestite victims)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of homicides that are trans women victims)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4
                ],
                [
                    1,
                    5
                ],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7,
                    10
                ],
                [],
                [
                    9
                ],
                [
                    11,
                    13,
                    14
                ],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "By",
                "how",
                "many",
                "more",
                "percentage",
                "points",
                "were",
                "trans",
                "women",
                "or",
                "transvestites",
                "victims",
                "of",
                "homicide",
                "than",
                "lestians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    2
                ],
                [
                    0
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    7,
                    10,
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2267_8a4572fa-14a5-40b2-a627-6b29e0622f52",
        "question_text": "How many percent more was the African American population over whites and Native Americans?",
        "split": "train",
        "decomposition": "return percent of population that is African American ;return percent of population that is white ;return percent of population that is Native American ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percent of population that is African American']",
            "SELECT['percent of population that is white']",
            "SELECT['percent of population that is Native American']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of population that is African American"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of population that is white"
                ],
                [
                    "SELECT",
                    "percent of population that is Native American"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of population that is African American)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of population that is white)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of population that is Native American)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of population that is African American)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of population that is white)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of population that is Native American)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6,
                    7,
                    11,
                    12
                ],
                [
                    9
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "more",
                "was",
                "the",
                "African",
                "American",
                "population",
                "over",
                "whites",
                "and",
                "Native",
                "Americans",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2280_f15669bd-1c81-4b0f-8740-841c7120dd45",
        "question_text": "How many more imports, in terms of percentage, did Macau receive from Mainland China compared to Hong Kong and France combined?",
        "split": "train",
        "decomposition": "return percentage of imports that Macau did receive from  Mainland China ;return percentage of imports that Macau did receive from  Hong Kong ;return percentage of imports that Macau did receive from  France ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percentage of imports that Macau did receive from Mainland China']",
            "SELECT['percentage of imports that Macau did receive from Hong Kong']",
            "SELECT['percentage of imports that Macau did receive from France']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of imports that Macau did receive from Mainland China"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of imports that Macau did receive from Hong Kong"
                ],
                [
                    "SELECT",
                    "percentage of imports that Macau did receive from France"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of imports that Macau did receive from Mainland China)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of imports that Macau did receive from Hong Kong)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of imports that Macau did receive from France)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of imports that Macau did receive from Mainland China)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of imports that Macau did receive from Hong Kong)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of imports that Macau did receive from France)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    6,
                    9,
                    11,
                    20,
                    22
                ],
                [],
                [
                    12
                ],
                [
                    14,
                    15,
                    18,
                    19
                ],
                [
                    16,
                    17
                ],
                [],
                [
                    21,
                    23
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "imports",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "did",
                "Macau",
                "receive",
                "from",
                "Mainland",
                "China",
                "compared",
                "to",
                "Hong",
                "Kong",
                "and",
                "France",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    20,
                    22
                ],
                [],
                [
                    8
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    15
                ],
                [],
                [
                    16
                ],
                [],
                [],
                [],
                [
                    18,
                    19
                ],
                [
                    21
                ],
                [],
                [
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    6,
                    9,
                    11,
                    20,
                    22
                ],
                [
                    10
                ],
                [
                    16
                ],
                [],
                [
                    12,
                    14,
                    15,
                    18
                ],
                [
                    19
                ],
                [],
                [],
                [],
                [],
                [
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    22
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2303_9cd25c3e-69b8-4b8b-adca-80dd5800c30b",
        "question_text": "How many more percent was market services over non-market services and agriculture?",
        "split": "train",
        "decomposition": "return percent that was  market services ;return percent that was  non-market services ;return percent that was  agriculture ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percent that was market services']",
            "SELECT['percent that was non-market services']",
            "SELECT['percent that was agriculture']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent that was market services"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent that was non-market services"
                ],
                [
                    "SELECT",
                    "percent that was agriculture"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that was market services)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that was non-market services)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that was agriculture)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that was market services)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that was non-market services)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that was agriculture)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    8,
                    10,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "was",
                "market",
                "services",
                "over",
                "non",
                "-",
                "market",
                "services",
                "and",
                "agriculture",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [
                    5,
                    10,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    10,
                    12
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2303_e15f3e21-effb-4a45-a319-551f16cb206d",
        "question_text": "How many percent more was market services over agriculture and construction combined?",
        "split": "train",
        "decomposition": "return percent that is market services ;return percent that is agriculture ;return percent that is construction ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percent that is market services']",
            "SELECT['percent that is agriculture']",
            "SELECT['percent that is construction']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent that is market services"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent that is agriculture"
                ],
                [
                    "SELECT",
                    "percent that is construction"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that is market services)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that is agriculture)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that is construction)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that is market services)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that is agriculture)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent that is construction)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    9,
                    11
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "more",
                "was",
                "market",
                "services",
                "over",
                "agriculture",
                "and",
                "construction",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    9,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    9,
                    11
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2628_4edbcda5-7ae1-48a9-b83d-29239415eb4e",
        "question_text": "How many more people, in terms of percentage, viewed the United States positively in the Philippines compared to Egypt and Jordan combined?",
        "split": "train",
        "decomposition": "return percentage of people in  the Philippines that  viewed the  United States positively ;return percentage of people in  Egypt that  viewed the United States positively ;return percentage of people in  Jordan that  viewed the United States positively ;return the sum of #2 and  #3 ;return the difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people in the Philippines that viewed the United States positively']",
            "SELECT['percentage of people in Egypt that viewed the United States positively']",
            "SELECT['percentage of people in Jordan that viewed the United States positively']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people in the Philippines that viewed the United States positively"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people in Egypt that viewed the United States positively"
                ],
                [
                    "SELECT",
                    "percentage of people in Jordan that viewed the United States positively"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people in the Philippines that viewed the United States positively)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Egypt that viewed the United States positively)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Jordan that viewed the United States positively)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people in the Philippines that viewed the United States positively)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Egypt that viewed the United States positively)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Jordan that viewed the United States positively)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    14,
                    21,
                    23
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    17,
                    18,
                    19
                ],
                [
                    20,
                    22
                ],
                [
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "viewed",
                "the",
                "United",
                "States",
                "positively",
                "in",
                "the",
                "Philippines",
                "compared",
                "to",
                "Egypt",
                "and",
                "Jordan",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    21,
                    23
                ],
                [
                    10
                ],
                [
                    8
                ],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    18
                ],
                [],
                [
                    22
                ],
                [],
                [
                    20
                ],
                [],
                [],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    10,
                    21,
                    23
                ],
                [],
                [
                    14,
                    17
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [
                    18
                ],
                [
                    22
                ],
                [
                    20
                ],
                [
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    23
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    22
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2628_68e71cbf-aff7-439a-822f-a72664c1ddd7",
        "question_text": "How many more people, in terms of percentage, viewed the United States positively in the Philippines compared to Egypt and Pakistan combined?",
        "split": "train",
        "decomposition": "return percentage of people in  the  Philippines that viewed the United States positively ;return percentage of people in  Egypt that viewed the  United States positively ;return percentage of people in  Pakistan that viewed the  United States positively ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people in the Philippines that viewed the United States positively']",
            "SELECT['percentage of people in Egypt that viewed the United States positively']",
            "SELECT['percentage of people in Pakistan that viewed the United States positively']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people in the Philippines that viewed the United States positively"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people in Egypt that viewed the United States positively"
                ],
                [
                    "SELECT",
                    "percentage of people in Pakistan that viewed the United States positively"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people in the Philippines that viewed the United States positively)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Egypt that viewed the United States positively)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Pakistan that viewed the United States positively)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people in the Philippines that viewed the United States positively)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Egypt that viewed the United States positively)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people in Pakistan that viewed the United States positively)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    14,
                    21,
                    23
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    17,
                    18,
                    19
                ],
                [
                    20
                ],
                [
                    22,
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "viewed",
                "the",
                "United",
                "States",
                "positively",
                "in",
                "the",
                "Philippines",
                "compared",
                "to",
                "Egypt",
                "and",
                "Pakistan",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    21,
                    23
                ],
                [
                    10
                ],
                [
                    8
                ],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    18
                ],
                [],
                [],
                [],
                [
                    20
                ],
                [
                    22
                ],
                [],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    10,
                    21,
                    23
                ],
                [],
                [
                    14,
                    17
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [
                    18
                ],
                [],
                [
                    20,
                    22
                ],
                [
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    23
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    23
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    22
                ],
                [
                    20,
                    23
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2673_0b63b556-5941-46b2-ad5d-83d887591eaa",
        "question_text": "How many more people, in terms of percentage, were Overseas Filipino compared to Korean diaspora and other Asian combined in Guam as of 2010?",
        "split": "train",
        "decomposition": "return percentage of people that were Overseas Filipino in  Guam as of  2010 ;return percentage of people that were Korean diaspora in  Guam as of  2010 ;return percentage of people that were other Asian in  Guam as of  2010 ;return the  sum of #2 and  #3 ;return the  difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people that were Overseas Filipino in Guam as of 2010']",
            "SELECT['percentage of people that were Korean diaspora in Guam as of 2010']",
            "SELECT['percentage of people that were other Asian in Guam as of 2010']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people that were Overseas Filipino in Guam as of 2010"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that were Korean diaspora in Guam as of 2010"
                ],
                [
                    "SELECT",
                    "percentage of people that were other Asian in Guam as of 2010"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were Overseas Filipino in Guam as of 2010)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Korean diaspora in Guam as of 2010)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were other Asian in Guam as of 2010)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were Overseas Filipino in Guam as of 2010)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Korean diaspora in Guam as of 2010)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were other Asian in Guam as of 2010)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    11,
                    12,
                    15,
                    17,
                    20
                ],
                [
                    13,
                    14,
                    16
                ],
                [
                    18
                ],
                [
                    19
                ],
                [
                    22,
                    25
                ],
                [
                    23
                ],
                [
                    26
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "Overseas",
                "Filipino",
                "compared",
                "to",
                "Korean",
                "diaspora",
                "and",
                "other",
                "Asian",
                "combined",
                "in",
                "Guam",
                "as",
                "of",
                "2010",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    10,
                    17,
                    20
                ],
                [
                    11,
                    12
                ],
                [
                    8,
                    13
                ],
                [],
                [],
                [],
                [
                    15,
                    16
                ],
                [
                    19
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    22
                ],
                [],
                [
                    25
                ],
                [
                    26
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    4,
                    6,
                    9,
                    10,
                    15,
                    17,
                    20
                ],
                [],
                [
                    13,
                    16
                ],
                [
                    12
                ],
                [],
                [],
                [],
                [
                    22,
                    25
                ],
                [],
                [],
                [
                    26
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    25
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    25
                ],
                [
                    14,
                    22
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    20
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    22
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    25
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    24,
                    25
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2773_d083fed2-4b32-42c7-9206-e82d8c2c2d5e",
        "question_text": "How many more people, in terms of percentages, are Ukrainians compared to Crimean Tatars and Tatars combined?",
        "split": "train",
        "decomposition": "return percentage of people that are Ukrainians ;return percentage of people that are Crimean Tatars ;return percentage of people that are Tatars ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people that are Ukrainians']",
            "SELECT['percentage of people that are Crimean Tatars']",
            "SELECT['percentage of people that are Tatars']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people that are Ukrainians"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that are Crimean Tatars"
                ],
                [
                    "SELECT",
                    "percentage of people that are Tatars"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that are Ukrainians)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that are Crimean Tatars)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that are Tatars)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that are Ukrainians)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that are Crimean Tatars)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that are Tatars)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    16,
                    18
                ],
                [
                    11,
                    12
                ],
                [
                    14
                ],
                [],
                [
                    13,
                    15,
                    17
                ],
                [],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentages",
                ",",
                "are",
                "Ukrainians",
                "compared",
                "to",
                "Crimean",
                "Tatars",
                "and",
                "Tatars",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    16,
                    18
                ],
                [],
                [
                    8,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [],
                [
                    15,
                    17
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    4,
                    6,
                    9,
                    16,
                    18
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [
                    14
                ],
                [],
                [
                    15,
                    17
                ],
                [],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2803_ee3d0988-45af-4646-a5bd-dc24b3bbda25",
        "question_text": "How many percent more Asians were there than Native American and Pacific Islander?",
        "split": "train",
        "decomposition": "return the percent of Asians ;return the percent of Native American ;return the percent of Pacific Islander ;return the sum of #2 and  #3 ;return the difference of #1 and  #4",
        "program": [
            "SELECT['the percent of Asians']",
            "SELECT['the percent of Native American']",
            "SELECT['the percent of Pacific Islander']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the percent of Asians"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "the percent of Native American"
                ],
                [
                    "SELECT",
                    "the percent of Pacific Islander"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of Asians)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percent of Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percent of Pacific Islander)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the percent of Asians)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percent of Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percent of Pacific Islander)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    8,
                    9,
                    10
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "more",
                "Asians",
                "were",
                "there",
                "than",
                "Native",
                "American",
                "and",
                "Pacific",
                "Islander",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    9,
                    10
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    9,
                    10
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2986_517efd4a-9cfd-4f2e-a64f-0f36fa79648f",
        "question_text": "How many more tons of peanuts were produced compared to cotton and Yam combined?",
        "split": "train",
        "decomposition": "return tons of peanuts that were produced ;return tons of cotton that were produced ;return tons of Yam that were produced ;return the  sum of #2 and  #3 ;return the  difference of #1 and  #4",
        "program": [
            "SELECT['tons of peanuts that were produced']",
            "SELECT['tons of cotton that were produced']",
            "SELECT['tons of Yam that were produced']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "tons of peanuts that were produced"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "tons of cotton that were produced"
                ],
                [
                    "SELECT",
                    "tons of Yam that were produced"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons of peanuts that were produced)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tons of cotton that were produced)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tons of Yam that were produced)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons of peanuts that were produced)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tons of cotton that were produced)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(tons of Yam that were produced)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5,
                    6,
                    11,
                    13
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "tons",
                "of",
                "peanuts",
                "were",
                "produced",
                "compared",
                "to",
                "cotton",
                "and",
                "Yam",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    11,
                    13
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    11,
                    13
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3065_347505c1-d359-4dab-a50d-4e296f741cbb",
        "question_text": "How many more Germans were living in the city in 1941 compared to Romanians and Hungarians combined?",
        "split": "train",
        "decomposition": "return Germans living in  the  city in 1941 ;return Romanians living in  the  city in 1941 ;return Hungarians living in  the  city in 1941 ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['Germans living in the city in 1941']",
            "SELECT['Romanians living in the city in 1941']",
            "SELECT['Hungarians living in the city in 1941']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "Germans living in the city in 1941"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "Romanians living in the city in 1941"
                ],
                [
                    "SELECT",
                    "Hungarians living in the city in 1941"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Germans living in the city in 1941)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Romanians living in the city in 1941)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Hungarians living in the city in 1941)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Germans living in the city in 1941)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Romanians living in the city in 1941)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Hungarians living in the city in 1941)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    8
                ],
                [
                    4,
                    14,
                    16
                ],
                [
                    11
                ],
                [],
                [
                    10
                ],
                [
                    12,
                    15
                ],
                [
                    13
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Germans",
                "were",
                "living",
                "in",
                "the",
                "city",
                "in",
                "1941",
                "compared",
                "to",
                "Romanians",
                "and",
                "Hungarians",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    14,
                    16
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13,
                    15
                ],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    14,
                    16
                ],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ],
                [
                    10
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_4005_877e033e-7cfb-44ad-8c3c-c2541b569d1e",
        "question_text": "How many more percent of households were married living together than had a male householders with no spouse present and were households made up of individuals combined? ?",
        "split": "train",
        "decomposition": "return percent of households  that were married living together ;return percent of households  that had a male householder with  no spouse present ;return percent of households  that were made up of  individuals ;return the  sum of #2 and  #3 ;return the  difference of #1 and  #4",
        "program": [
            "SELECT['percent of households that were married living together']",
            "SELECT['percent of households that had a male householder with no spouse present']",
            "SELECT['percent of households that were made up of individuals']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of households that were married living together"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of households that had a male householder with no spouse present"
                ],
                [
                    "SELECT",
                    "percent of households that were made up of individuals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of households that were married living together)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of households that had a male householder with no spouse present)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of households that were made up of individuals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of households that were married living together)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of households that had a male householder with no spouse present)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of households that were made up of individuals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8,
                    21
                ],
                [
                    9
                ],
                [
                    7,
                    12
                ],
                [
                    14
                ],
                [
                    6,
                    19,
                    20,
                    26
                ],
                [
                    10,
                    13,
                    16
                ],
                [
                    17
                ],
                [
                    15,
                    18
                ],
                [],
                [
                    23,
                    25
                ],
                [
                    27,
                    28
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "of",
                "households",
                "were",
                "married",
                "living",
                "together",
                "than",
                "had",
                "a",
                "male",
                "householders",
                "with",
                "no",
                "spouse",
                "present",
                "and",
                "were",
                "households",
                "made",
                "up",
                "of",
                "individuals",
                "combined",
                "?",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    6,
                    19,
                    26
                ],
                [
                    11
                ],
                [
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    14,
                    16
                ],
                [
                    18
                ],
                [
                    17
                ],
                [
                    21
                ],
                [],
                [
                    23
                ],
                [],
                [
                    25
                ],
                [],
                [
                    27
                ],
                [
                    28
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    5,
                    8,
                    21
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    7
                ],
                [
                    14
                ],
                [],
                [],
                [
                    6,
                    19,
                    20,
                    26
                ],
                [],
                [
                    13,
                    16
                ],
                [
                    17
                ],
                [
                    18
                ],
                [],
                [],
                [],
                [],
                [
                    25
                ],
                [
                    27,
                    28
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    18
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    26
                ],
                [
                    20,
                    27
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    26
                ],
                [
                    22,
                    26
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    24,
                    25
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ],
                [
                    28,
                    28
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_4088_07fed26c-057e-4737-ab1d-bf0c54a965ee",
        "question_text": "How many more percent of the population married than single and widowed or divorced combined?",
        "split": "train",
        "decomposition": "return percent of the  population that is married ;return percent of the  population that is single ;return percent of the  population that is widowed or  divorced ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percent of the population that is married']",
            "SELECT['percent of the population that is single']",
            "SELECT['percent of the population that is widowed or divorced']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of the population that is married"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of the population that is single"
                ],
                [
                    "SELECT",
                    "percent of the population that is widowed or divorced"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the population that is married)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of the population that is single)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of the population that is widowed or divorced)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the population that is married)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of the population that is single)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of the population that is widowed or divorced)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [
                    10,
                    14
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    12
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "of",
                "the",
                "population",
                "married",
                "than",
                "single",
                "and",
                "widowed",
                "or",
                "divorced",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    14
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    14
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    12
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1954_c503951a-fd5d-48a9-88a5-8647d27e5841",
        "question_text": "How many more people, in terms of percentage, were White compared to Native American and African American combined?",
        "split": "dev",
        "decomposition": "return percentage of people that were White ;return percentage of people that were Native American  ;return percentage of people that were African American  ;return sum of #2 and  #3 ;return difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people that were White']",
            "SELECT['percentage of people that were Native American']",
            "SELECT['percentage of people that were African American']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people that were White"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that were Native American"
                ],
                [
                    "SELECT",
                    "percentage of people that were African American"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were White)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were African American)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were White)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were African American)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19
                ],
                [
                    12,
                    13
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "White",
                "compared",
                "to",
                "Native",
                "American",
                "and",
                "African",
                "American",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    15,
                    16,
                    18,
                    19
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    14
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    10,
                    15,
                    16,
                    17,
                    18,
                    19
                ],
                [],
                [
                    12,
                    14
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    19
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1954_f1f8bebc-c409-4e4f-9c1c-1accef5d39c9",
        "question_text": "How many more people, in terms of percentage, were White compared to Native American and Asian combined?",
        "split": "dev",
        "decomposition": "return percentage of people that  were White ;return percentage of people that  were Native American ;return percentage of people that  were Asian ;return the sum of #2 and  #3 ;return the difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people that were White']",
            "SELECT['percentage of people that were Native American']",
            "SELECT['percentage of people that were Asian']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people that were White"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that were Native American"
                ],
                [
                    "SELECT",
                    "percentage of people that were Asian"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were White)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Asian)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that were White)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Native American)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that were Asian)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    10,
                    14,
                    15,
                    16,
                    18
                ],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [
                    13
                ],
                [],
                [
                    17,
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "were",
                "White",
                "compared",
                "to",
                "Native",
                "American",
                "and",
                "Asian",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    15,
                    16,
                    18
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    14
                ],
                [],
                [],
                [],
                [
                    17
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    10,
                    15,
                    16,
                    18
                ],
                [],
                [
                    12
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    17
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2162_3c1da219-7fc4-43a3-9543-f7310b8c4281",
        "question_text": "How many more people, in terms of percentage, belonged to the biggest age group compared to the 2nd and 3rd biggest age groups combined?",
        "split": "dev",
        "decomposition": "return percentage of people that belonged to the  biggest  age  group ;return percentage of people that belonged to the  2nd biggest  age  group ;return percentage of people that belonged to the  3rd biggest  age  group ;return sum of #2 and  #3 ;return the  difference of #1 and  #4",
        "program": [
            "SELECT['percentage of people that belonged to the biggest age group']",
            "SELECT['percentage of people that belonged to the 2nd biggest age group']",
            "SELECT['percentage of people that belonged to the 3rd biggest age group']",
            "ARITHMETIC['sum', '#2', '#3']",
            "ARITHMETIC['difference', '#1', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of people that belonged to the biggest age group"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percentage of people that belonged to the 2nd biggest age group"
                ],
                [
                    "SELECT",
                    "percentage of people that belonged to the 3rd biggest age group"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that belonged to the biggest age group)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that belonged to the 2nd biggest age group)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that belonged to the 3rd biggest age group)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of people that belonged to the biggest age group)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that belonged to the 2nd biggest age group)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percentage of people that belonged to the 3rd biggest age group)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    9,
                    20,
                    25
                ],
                [
                    10,
                    11,
                    13,
                    16,
                    17
                ],
                [
                    15
                ],
                [
                    19,
                    21
                ],
                [
                    22
                ],
                [
                    24
                ],
                [
                    26
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "belonged",
                "to",
                "the",
                "biggest",
                "age",
                "group",
                "compared",
                "to",
                "the",
                "2nd",
                "and",
                "3rd",
                "biggest",
                "age",
                "groups",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    20,
                    25
                ],
                [],
                [
                    8,
                    10,
                    13
                ],
                [
                    15
                ],
                [],
                [],
                [],
                [
                    19
                ],
                [],
                [
                    16,
                    22
                ],
                [
                    24
                ],
                [],
                [],
                [
                    21
                ],
                [],
                [],
                [
                    26
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    9,
                    20,
                    25
                ],
                [],
                [
                    13,
                    16
                ],
                [],
                [
                    19,
                    21
                ],
                [],
                [
                    24
                ],
                [
                    22
                ],
                [],
                [],
                [
                    26
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    25
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    11,
                    25
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    25
                ],
                [
                    17,
                    25
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    24
                ],
                [
                    18,
                    25
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1715_efe0bb25-099b-4c18-aaa6-6cd3d3f02c15",
        "question_text": "How many more African American people were there compared to Native Americans and Pacific Islanders combined?",
        "split": "train",
        "decomposition": "return African American people that were there  ;return Native Americans that were there  ;return Pacific Islanders that were there  ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['African American people that were there']",
            "SELECT['Native Americans that were there']",
            "SELECT['Pacific Islanders that were there']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "African American people that were there"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Native Americans that were there"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Pacific Islanders that were there"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(African American people that were there)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Native Americans that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Pacific Islanders that were there)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(African American people that were there)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Native Americans that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Pacific Islanders that were there)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    10,
                    12,
                    15
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "African",
                "American",
                "people",
                "were",
                "there",
                "compared",
                "to",
                "Native",
                "Americans",
                "and",
                "Pacific",
                "Islanders",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    12,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    12,
                    15
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1745_6779a413-2d8b-4341-87f4-12b629046693",
        "question_text": "How many more Egyptians were recorded by the embassy in Tripoli than Tunisians and Moroccans combined?",
        "split": "train",
        "decomposition": "return Egyptians recorded by the  embassy in  Tripoli ;return number of  #1 ;return Tunisians recorded by the  embassy in  Tripoli ;return Moroccans recorded by the  embassy in  Tripoli ;return number of  #3 ;return number of  #4 ;return sum of #5 and  #6 ;return difference of #2 and  #7",
        "program": [
            "SELECT['Egyptians recorded by the embassy in Tripoli']",
            "AGGREGATE['count', '#1']",
            "SELECT['Tunisians recorded by the embassy in Tripoli']",
            "SELECT['Moroccans recorded by the embassy in Tripoli']",
            "AGGREGATE['count', '#3']",
            "AGGREGATE['count', '#4']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#2', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Egyptians recorded by the embassy in Tripoli"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Tunisians recorded by the embassy in Tripoli"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Moroccans recorded by the embassy in Tripoli"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Egyptians recorded by the embassy in Tripoli)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Tunisians recorded by the embassy in Tripoli)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Moroccans recorded by the embassy in Tripoli)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Egyptians recorded by the embassy in Tripoli)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Tunisians recorded by the embassy in Tripoli)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Moroccans recorded by the embassy in Tripoli)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    4,
                    13,
                    15
                ],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    12,
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Egyptians",
                "were",
                "recorded",
                "by",
                "the",
                "embassy",
                "in",
                "Tripoli",
                "than",
                "Tunisians",
                "and",
                "Moroccans",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    4,
                    13,
                    15
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    13,
                    15
                ],
                [],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11
                ],
                [
                    12,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1780_8e263580-82ac-4175-b3cc-59d88718a4b3",
        "question_text": "How many more touchdowns did Larry Brown score compared to both Charley Taylor and Roy Jefferson?",
        "split": "train",
        "decomposition": "return touchdowns that Larry Brown did score ;return touchdowns that Charley Taylor did score ;return touchdowns that Roy Jefferson did score ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['touchdowns that Larry Brown did score']",
            "SELECT['touchdowns that Charley Taylor did score']",
            "SELECT['touchdowns that Roy Jefferson did score']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that Larry Brown did score"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "touchdowns that Charley Taylor did score"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "touchdowns that Roy Jefferson did score"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Larry Brown did score)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that Charley Taylor did score)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that Roy Jefferson did score)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Larry Brown did score)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that Charley Taylor did score)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that Roy Jefferson did score)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    13
                ],
                [
                    6,
                    7,
                    10
                ],
                [
                    12
                ],
                [
                    11
                ],
                [
                    15
                ],
                [],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "did",
                "Larry",
                "Brown",
                "score",
                "compared",
                "to",
                "both",
                "Charley",
                "Taylor",
                "and",
                "Roy",
                "Jefferson",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    7
                ],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2077_783885f6-d5e8-4467-a5dd-113dd40fe2a4",
        "question_text": "How many more percent were Chinese than Europeans and Eurasians in 1901?",
        "split": "train",
        "decomposition": "return Chinese in  1901 ;return Europeans in  1901 ;return Eurasians in  1901 ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7 in  percents",
        "program": [
            "SELECT['Chinese in 1901']",
            "SELECT['Europeans in 1901']",
            "SELECT['Eurasians in 1901']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Chinese in 1901"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Europeans in 1901"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Eurasians in 1901"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chinese in 1901)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Europeans in 1901)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Eurasians in 1901)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chinese in 1901)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Europeans in 1901)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Eurasians in 1901)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percent",
                "were",
                "Chinese",
                "than",
                "Europeans",
                "and",
                "Eurasians",
                "in",
                "1901",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2077_e68c0ed7-aee3-4edd-b7b5-b4e2e103d790",
        "question_text": "How many more Chinese were there living in Singapore in 1860 compared to Europeans and Eurasians?",
        "split": "train",
        "decomposition": "return Chinese that were living in  Singapore in 1860 ;return Europeans that were living in  Singapore in 1860 ;return Eurasians that were living in  Singapore in 1860 ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['Chinese that were living in Singapore in 1860']",
            "SELECT['Europeans that were living in Singapore in 1860']",
            "SELECT['Eurasians that were living in Singapore in 1860']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Chinese that were living in Singapore in 1860"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Europeans that were living in Singapore in 1860"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Eurasians that were living in Singapore in 1860"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chinese that were living in Singapore in 1860)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Europeans that were living in Singapore in 1860)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Eurasians that were living in Singapore in 1860)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Chinese that were living in Singapore in 1860)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Europeans that were living in Singapore in 1860)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Eurasians that were living in Singapore in 1860)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6,
                    11
                ],
                [],
                [
                    3
                ],
                [
                    8
                ],
                [
                    4,
                    14
                ],
                [],
                [],
                [
                    10
                ],
                [
                    13,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "Chinese",
                "were",
                "there",
                "living",
                "in",
                "Singapore",
                "in",
                "1860",
                "compared",
                "to",
                "Europeans",
                "and",
                "Eurasians",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    14
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    13
                ],
                [
                    11
                ],
                [
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2158_1dcf0cce-1d41-478f-a99b-ab002f1a3550",
        "question_text": "Which nations produced more cocoa beans, African or Asia and Oceania?",
        "split": "train",
        "decomposition": "return cocoa beans that African produced ;return cocoa beans that Asia produced ;return cocoa beans that Oceania produced ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['cocoa beans that African produced']",
            "SELECT['cocoa beans that Asia produced']",
            "SELECT['cocoa beans that Oceania produced']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "cocoa beans that African produced"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "cocoa beans that Asia produced"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "cocoa beans that Oceania produced"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cocoa beans that African produced)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cocoa beans that Asia produced)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cocoa beans that Oceania produced)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(cocoa beans that African produced)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cocoa beans that Asia produced)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(cocoa beans that Oceania produced)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3
                ],
                [
                    1
                ],
                [
                    0
                ],
                [
                    2
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "nations",
                "produced",
                "more",
                "cocoa",
                "beans",
                ",",
                "African",
                "or",
                "Asia",
                "and",
                "Oceania",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    3
                ],
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    6,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    3
                ],
                [],
                [
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [
                    6,
                    7,
                    10
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2158_26d3c9d4-3f33-4639-a3b8-9c8bffcbd1f1",
        "question_text": "How many more million tonnes of cocoa did African nations produce than Asia and Oceania did?",
        "split": "train",
        "decomposition": "return million tonnes of cocoa African nations did produce ;return million tonnes of cocoa Asia did produce ;return million tonnes of cocoa Oceania did produce ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['million tonnes of cocoa African nations did produce']",
            "SELECT['million tonnes of cocoa Asia did produce']",
            "SELECT['million tonnes of cocoa Oceania did produce']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "million tonnes of cocoa African nations did produce"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "million tonnes of cocoa Asia did produce"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "million tonnes of cocoa Oceania did produce"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million tonnes of cocoa African nations did produce)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(million tonnes of cocoa Asia did produce)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(million tonnes of cocoa Oceania did produce)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million tonnes of cocoa African nations did produce)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(million tonnes of cocoa Asia did produce)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(million tonnes of cocoa Oceania did produce)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [],
                [
                    4
                ],
                [],
                [
                    6,
                    8,
                    13
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "million",
                "tonnes",
                "of",
                "cocoa",
                "did",
                "African",
                "nations",
                "produce",
                "than",
                "Asia",
                "and",
                "Oceania",
                "did",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    13
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    13
                ],
                [],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2180_2dbad952-92ec-4611-96f2-ab5ce7e8e80b",
        "question_text": "How many more non-gang robberies were there compared to kidnappings and arson cases combined?",
        "split": "train",
        "decomposition": "return non-gang robberies that were there  ;return kidnappings that were there  ;return arson cases that were there  ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['non-gang robberies that were there']",
            "SELECT['kidnappings that were there']",
            "SELECT['arson cases that were there']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "non-gang robberies that were there"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "kidnappings that were there"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "arson cases that were there"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(non-gang robberies that were there)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(kidnappings that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(arson cases that were there)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(non-gang robberies that were there)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(kidnappings that were there)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(arson cases that were there)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8,
                    9,
                    14
                ],
                [],
                [
                    4
                ],
                [],
                [
                    3,
                    5,
                    6,
                    7,
                    12,
                    15
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "non",
                "-",
                "gang",
                "robberies",
                "were",
                "there",
                "compared",
                "to",
                "kidnappings",
                "and",
                "arson",
                "cases",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    12,
                    15
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8,
                    14
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    3,
                    7,
                    12,
                    15
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2445_a93ed503-2e65-4230-8075-f0a9a2ed65eb",
        "question_text": "How many more males in the population are from India than Bangladesh and Pakistan?",
        "split": "train",
        "decomposition": "return males in  the  population that are from  India ;return males in  the  population that are from  Bangladesh ;return males in  the  population that are from  Pakistan ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['males in the population that are from India']",
            "SELECT['males in the population that are from Bangladesh']",
            "SELECT['males in the population that are from Pakistan']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "males in the population that are from India"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "males in the population that are from Bangladesh"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "males in the population that are from Pakistan"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(males in the population that are from India)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(males in the population that are from Bangladesh)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(males in the population that are from Pakistan)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(males in the population that are from India)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(males in the population that are from Bangladesh)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(males in the population that are from Pakistan)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    10
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    12
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "males",
                "in",
                "the",
                "population",
                "are",
                "from",
                "India",
                "than",
                "Bangladesh",
                "and",
                "Pakistan",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2471_d58904d6-adec-4224-87e6-8feb1fca9edd",
        "question_text": "How many people in 1861 were not Catholics or Jews?",
        "split": "train",
        "decomposition": "return people in  1861 ;return Catholics in  1861 ;return Jews in  1861 ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['people in 1861']",
            "SELECT['Catholics in 1861']",
            "SELECT['Jews in 1861']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in 1861"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Catholics in 1861"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Jews in 1861"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in 1861)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1861)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people in 1861)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Catholics in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Jews in 1861)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "in",
                "1861",
                "were",
                "not",
                "Catholics",
                "or",
                "Jews",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2800_7a5058f0-eddb-4339-815b-7c1abc25c8ec",
        "question_text": "How many more people were of American ancestry compared to those of either French or Italian descent?",
        "split": "train",
        "decomposition": "return people of American ancestry ;return people of French descent ;return people of Italian descent ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['people of American ancestry']",
            "SELECT['people of French descent']",
            "SELECT['people of Italian descent']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people of American ancestry"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people of French descent"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people of Italian descent"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people of American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people of French descent)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people of Italian descent)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people of American ancestry)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people of French descent)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people of Italian descent)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [
                    3,
                    4,
                    6,
                    12
                ],
                [],
                [],
                [
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "of",
                "American",
                "ancestry",
                "compared",
                "to",
                "those",
                "of",
                "either",
                "French",
                "or",
                "Italian",
                "descent",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    3,
                    4,
                    6,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    12
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3094_de0c63a0-bf61-47e4-a16d-303d00086991",
        "question_text": "How many fewer Republicans are registered to vote than Democrats and those who declined to state a party?",
        "split": "train",
        "decomposition": "return Republicans registered to vote ;return Democrats registered to vote ;return those who  declined to state a party registered to  vote ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['Republicans registered to vote']",
            "SELECT['Democrats registered to vote']",
            "SELECT['those who declined to state a party registered to vote']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Republicans registered to vote"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Democrats registered to vote"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "those who declined to state a party registered to vote"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Republicans registered to vote)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Democrats registered to vote)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(those who declined to state a party registered to vote)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Republicans registered to vote)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Democrats registered to vote)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(those who declined to state a party registered to vote)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    4,
                    10
                ],
                [],
                [
                    9,
                    12,
                    13
                ],
                [
                    11,
                    15
                ],
                [],
                [
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fewer",
                "Republicans",
                "are",
                "registered",
                "to",
                "vote",
                "than",
                "Democrats",
                "and",
                "those",
                "who",
                "declined",
                "to",
                "state",
                "a",
                "party",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    10
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    12
                ],
                [],
                [
                    17
                ],
                [],
                [
                    15,
                    16
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    13
                ],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3315_f680ef76-3621-4fa4-a7e3-215220c9c460",
        "question_text": "How many more people were there in 2015 than in births and deaths in the last census?",
        "split": "train",
        "decomposition": "return people there  were in   2015 ;return births there  were in   the  last census ;return deaths there  were in   the  last census ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['people there were in 2015']",
            "SELECT['births there were in the last census']",
            "SELECT['deaths there were in the last census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people there were in 2015"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "births there were in the last census"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "deaths there were in the last census"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people there were in 2015)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(births there were in the last census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(deaths there were in the last census)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people there were in 2015)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(births there were in the last census)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(deaths there were in the last census)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [
                    3,
                    4,
                    11
                ],
                [],
                [
                    10,
                    12
                ],
                [],
                [],
                [
                    16
                ],
                [
                    15,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "there",
                "in",
                "2015",
                "than",
                "in",
                "births",
                "and",
                "deaths",
                "in",
                "the",
                "last",
                "census",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    3,
                    4,
                    11
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    4,
                    11
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3658_06aa51df-81cb-444c-8df6-7c9a550f65e0",
        "question_text": "How many more dollars did Final Destination gross in other territories compared to the United States and Canada?",
        "split": "train",
        "decomposition": "return dollars that Final Destination did gross in  other territories ;return dollars that Final Destination did gross in  the  United States ;return dollars that Final Destination did gross in  Canada ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['dollars that Final Destination did gross in other territories']",
            "SELECT['dollars that Final Destination did gross in the United States']",
            "SELECT['dollars that Final Destination did gross in Canada']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "dollars that Final Destination did gross in other territories"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "dollars that Final Destination did gross in the United States"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "dollars that Final Destination did gross in Canada"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dollars that Final Destination did gross in other territories)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(dollars that Final Destination did gross in the United States)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(dollars that Final Destination did gross in Canada)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dollars that Final Destination did gross in other territories)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(dollars that Final Destination did gross in the United States)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(dollars that Final Destination did gross in Canada)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    6,
                    16
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    15
                ],
                [],
                [
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "dollars",
                "did",
                "Final",
                "Destination",
                "gross",
                "in",
                "other",
                "territories",
                "compared",
                "to",
                "the",
                "United",
                "States",
                "and",
                "Canada",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    16
                ],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    16
                ],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3721_f91c44e5-cb4b-4426-af2e-61c8148e2e35",
        "question_text": "How many more people were in Namangan than in Fergana and Marghelan?",
        "split": "train",
        "decomposition": "return the  people that were in  Namangan ;return the  people that were in  Fergana ;return the  people that were in  Marghelan ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['the people that were in Namangan']",
            "SELECT['the people that were in Fergana']",
            "SELECT['the people that were in Marghelan']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the people that were in Namangan"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "the people that were in Fergana"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "the people that were in Marghelan"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the people that were in Namangan)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people that were in Fergana)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people that were in Marghelan)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the people that were in Namangan)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people that were in Fergana)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the people that were in Marghelan)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    10
                ],
                [
                    6
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "in",
                "Namangan",
                "than",
                "in",
                "Fergana",
                "and",
                "Marghelan",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    10
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    10
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3814_6acf4b0e-5e73-47d8-a452-d3ae26dc42cf",
        "question_text": "How many more natural streams were named arroyo compared to rio and wash combined?",
        "split": "train",
        "decomposition": "return natural streams that were named arroyo ;return natural streams that were named rio ;return natural streams that were named wash ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['natural streams that were named arroyo']",
            "SELECT['natural streams that were named rio']",
            "SELECT['natural streams that were named wash']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "natural streams that were named arroyo"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "natural streams that were named rio"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "natural streams that were named wash"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(natural streams that were named arroyo)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(natural streams that were named rio)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(natural streams that were named wash)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(natural streams that were named arroyo)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(natural streams that were named rio)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(natural streams that were named wash)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    11,
                    13
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    10,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "natural",
                "streams",
                "were",
                "named",
                "arroyo",
                "compared",
                "to",
                "rio",
                "and",
                "wash",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    11,
                    13
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    5,
                    11,
                    13
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3963_aa604ff5-86b8-46b5-8e54-2bfc71ed26d5",
        "question_text": "How many more of the fifth book sold than the fourth and second?",
        "split": "train",
        "decomposition": "return How many of the  fifth book sold ;return How many of the  fourth book sold ;return How many of the  second book sold ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['How many of the fifth book sold']",
            "SELECT['How many of the fourth book sold']",
            "SELECT['How many of the second book sold']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "How many of the fifth book sold"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "How many of the fourth book sold"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "How many of the second book sold"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(How many of the fifth book sold)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(How many of the fourth book sold)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(How many of the second book sold)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(How many of the fifth book sold)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(How many of the fourth book sold)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(How many of the second book sold)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [
                    11
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    10
                ],
                [],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "of",
                "the",
                "fifth",
                "book",
                "sold",
                "than",
                "the",
                "fourth",
                "and",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    11
                ],
                [
                    8
                ],
                [],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_4150_f739416c-1b4c-4feb-ac47-453fd4d56dfc",
        "question_text": "How many more people were subscribed to the paper in 1904 over 1861 and 1869 combined?",
        "split": "train",
        "decomposition": "return people that were subscribed to the  paper in  1861 ;return people that were subscribed to the  paper in  1869 ;return people that were subscribed to the  paper in  1904 ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #4 and  #5 ;return the  difference of #6 and  #7",
        "program": [
            "SELECT['people that were subscribed to the paper in 1861']",
            "SELECT['people that were subscribed to the paper in 1869']",
            "SELECT['people that were subscribed to the paper in 1904']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['difference', '#6', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that were subscribed to the paper in 1904"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that were subscribed to the paper in 1861"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that were subscribed to the paper in 1869"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were subscribed to the paper in 1904)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were subscribed to the paper in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were subscribed to the paper in 1869)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were subscribed to the paper in 1904)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were subscribed to the paper in 1861)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were subscribed to the paper in 1869)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5,
                    12,
                    13,
                    15
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "subscribed",
                "to",
                "the",
                "paper",
                "in",
                "1904",
                "over",
                "1861",
                "and",
                "1869",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    3,
                    4,
                    13,
                    15
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    13,
                    15
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1167_532fb2d0-6912-42e6-98a5-3af190d13bd2",
        "question_text": "How many was the difference beween Sobieski's force and the Turks and Tatars?",
        "split": "dev",
        "decomposition": "return Sobieski 's force ;return number of  #1 ;return Turks ;return number of  #3 ;return Tatars ;return number of  #5 ;return sum of  #4 and #6 ;return difference of  #2 and #7",
        "program": [
            "SELECT[\"Sobieski 's force\"]",
            "AGGREGATE['count', '#1']",
            "SELECT['Turks']",
            "AGGREGATE['count', '#3']",
            "SELECT['Tatars']",
            "AGGREGATE['count', '#5']",
            "ARITHMETIC['sum', '#4', '#6']",
            "ARITHMETIC['difference', '#2', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Sobieski 's force"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Turks"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Tatars"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Sobieski 's force)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Turks)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Tatars)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Sobieski 's force)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Turks)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Tatars)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    5,
                    9,
                    12
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "was",
                "the",
                "difference",
                "beween",
                "Sobieski",
                "'s",
                "force",
                "and",
                "the",
                "Turks",
                "and",
                "Tatars",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    9,
                    12
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9,
                    12
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    11
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1708_2b959aed-f25f-4b71-88e4-7bbcb999fd49",
        "question_text": "How many Korean immigrants were more men than woman and children?",
        "split": "dev",
        "decomposition": "return Korean immigrants that  were men ;return Korean immigrants that  were women ;return Korean immigrants that  were children ;return number of #1 ;return number of #2 ;return number of #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['Korean immigrants that were men']",
            "SELECT['Korean immigrants that were women']",
            "SELECT['Korean immigrants that were children']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Korean immigrants that were men"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Korean immigrants that were women"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Korean immigrants that were children"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Korean immigrants that were men)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Korean immigrants that were women)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Korean immigrants that were children)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Korean immigrants that were men)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Korean immigrants that were women)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Korean immigrants that were children)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    9
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Korean",
                "immigrants",
                "were",
                "more",
                "men",
                "than",
                "woman",
                "and",
                "children",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    5
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    6
                ],
                [
                    2,
                    4,
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1748_7167e544-08eb-4aa3-a570-e51759d67f53",
        "question_text": "How many more people are in Chi\u015fin\u0103u compared to Soroca and Orhei combined?",
        "split": "dev",
        "decomposition": "return people that are in  Chi\u015fin\u0103u ;return people that are in  Soroca ;return people that are in  Orhei ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['people that are in Chi\\u015fin\\u0103u']",
            "SELECT['people that are in Soroca']",
            "SELECT['people that are in Orhei']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that are in Chi\u015fin\u0103u"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that are in Soroca"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that are in Orhei"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that are in Chi\u015fin\u0103u)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that are in Soroca)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that are in Orhei)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that are in Chi\u015fin\u0103u)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that are in Soroca)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that are in Orhei)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    10,
                    12
                ],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "are",
                "in",
                "Chi\u015fin\u0103u",
                "compared",
                "to",
                "Soroca",
                "and",
                "Orhei",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    10,
                    12
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    10,
                    12
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2609_0ca05637-43b9-444f-9c0a-3d27a214d83d",
        "question_text": "How many more people were German than English or Danish?",
        "split": "dev",
        "decomposition": "return people that were German ;return people that were English ;return people that were Danish ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #5 and  #6 ;return the  difference of #4 and  #7",
        "program": [
            "SELECT['people that were German']",
            "SELECT['people that were English']",
            "SELECT['people that were Danish']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that were German"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that were English"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "people that were Danish"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were German)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were English)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were Danish)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were German)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were English)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people that were Danish)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "German",
                "than",
                "English",
                "or",
                "Danish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2609_eb1581c9-d297-47aa-a54d-c30be2e81530",
        "question_text": "How many more people were German than Irish and Danish?",
        "split": "dev",
        "decomposition": "return German people ;return Irish people ;return Danish people ;return number of  #1 ;return number of  #2 ;return number of  #3 ;return sum of #5 and  #6 ;return difference of #4 and  #7",
        "program": [
            "SELECT['German people']",
            "SELECT['Irish people']",
            "SELECT['Danish people']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#5', '#6']",
            "ARITHMETIC['difference', '#4', '#7']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "German people"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Irish people"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "Danish people"
                    ]
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(German people)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Irish people)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Danish people)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(German people)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Irish people)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(Danish people)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "were",
                "German",
                "than",
                "Irish",
                "and",
                "Danish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1732_1c9b7f92-cfcb-4393-9b2e-65517caf55ab",
        "question_text": "How many more people, in terms of percentage, belonged to the two smallest age groups combined compared to the largest age group?",
        "split": "train",
        "decomposition": "return the  two smallest age  groups in  terms of percentages ;return the  largest age  group in  terms of percentage ;return the  sum of #1 ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['the two smallest age groups in terms of percentages']",
            "SELECT['the largest age group in terms of percentage']",
            "AGGREGATE['sum', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "the two smallest age groups in terms of percentages"
                ]
            ],
            [
                "SELECT",
                "the largest age group in terms of percentage"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two smallest age groups in terms of percentages)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the largest age group in terms of percentage)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the two smallest age groups in terms of percentages)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the largest age group in terms of percentage)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [
                    13,
                    17
                ],
                [
                    4,
                    5,
                    7,
                    9,
                    12,
                    14,
                    15
                ],
                [],
                [
                    10,
                    11,
                    18,
                    19
                ],
                [
                    16,
                    20,
                    21,
                    22,
                    23
                ],
                [
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                ",",
                "in",
                "terms",
                "of",
                "percentage",
                ",",
                "belonged",
                "to",
                "the",
                "two",
                "smallest",
                "age",
                "groups",
                "combined",
                "compared",
                "to",
                "the",
                "largest",
                "age",
                "group",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    17
                ],
                [],
                [
                    9
                ],
                [
                    14
                ],
                [],
                [],
                [
                    15
                ],
                [
                    8,
                    10,
                    18
                ],
                [
                    16,
                    22,
                    23
                ],
                [
                    21
                ],
                [],
                [],
                [],
                [
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    13,
                    17
                ],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ],
                [
                    10,
                    11,
                    18,
                    19,
                    21
                ],
                [],
                [],
                [
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    23
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    23
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    23
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    23
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_838_df492708-df01-4362-ac10-b1643a5a455c",
        "question_text": "How many yards longer was Jeff Wilkins' total yards of field goals than John Kasay's one?",
        "split": "train",
        "decomposition": "return yards  of field goals of  Jeff Wilkins ;return yards  of field goals of  John Kasay ;return the  sum of #1 ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['yards of field goals of Jeff Wilkins']",
            "SELECT['yards of field goals of John Kasay']",
            "AGGREGATE['sum', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Jeff Wilkins"
                ]
            ],
            [
                "SELECT",
                "yards of field goals of John Kasay"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Jeff Wilkins)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    8,
                    9,
                    11,
                    12
                ],
                [
                    4,
                    5,
                    10
                ],
                [
                    6
                ],
                [
                    7,
                    13,
                    15,
                    16
                ],
                [
                    14
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Jeff",
                "Wilkins",
                "'",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "than",
                "John",
                "Kasay",
                "'s",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    8,
                    9,
                    12
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [
                    16
                ],
                [
                    15
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    8,
                    9,
                    12
                ],
                [
                    6
                ],
                [],
                [],
                [
                    11,
                    15
                ],
                [
                    7,
                    13,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2412_54b3be33-59da-4860-86b5-5c5c17833ee6",
        "question_text": "How many more millions of square feet of office space total is there than class A office space?",
        "split": "dev",
        "decomposition": "return millions of square feet of  office  spaces ;return sum of #1 ;return millions of square feet of  class A office  space  ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['millions of square feet of office spaces']",
            "AGGREGATE['sum', '#1']",
            "SELECT['millions of square feet of class A office space']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "millions of square feet of office spaces"
                ]
            ],
            [
                "SELECT",
                "millions of square feet of class A office space"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of square feet of office spaces)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of square feet of class A office space)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of square feet of office spaces)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of square feet of class A office space)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    11
                ],
                [
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    5,
                    9,
                    12,
                    13,
                    14,
                    17
                ],
                [],
                [
                    15,
                    16,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "millions",
                "of",
                "square",
                "feet",
                "of",
                "office",
                "space",
                "total",
                "is",
                "there",
                "than",
                "class",
                "A",
                "office",
                "space",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    10
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    5,
                    12,
                    13
                ],
                [],
                [],
                [
                    15,
                    16
                ],
                [
                    14
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    11,
                    12
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    5,
                    13,
                    14
                ],
                [
                    16,
                    17
                ],
                [
                    15
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1775_147a15a7-f255-41e4-8b5a-caa9c42c2765",
        "question_text": "By how many percent is the largest industry ahead of the second place industry?",
        "split": "train",
        "decomposition": "return the percents of  the  industries ;return the highest of  #1 ;return the second highest of  #1 ;return the difference of  #2 and #3",
        "program": [
            "SELECT['the percents of the industries']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the percents of the industries"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the percents of the industries"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the industries)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the industries)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the industries)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the percents of the industries)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4
                ],
                [
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "By",
                "how",
                "many",
                "percent",
                "is",
                "the",
                "largest",
                "industry",
                "ahead",
                "of",
                "the",
                "second",
                "place",
                "industry",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    8
                ],
                [
                    12
                ],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    1,
                    2
                ],
                [
                    0,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1009_4990361a-5123-4711-8a53-d88f91c8edb2",
        "question_text": "How many yards longer was Romo's longest TD pass over Palmer's longest one?",
        "split": "train",
        "decomposition": "return yards of TD passes of  Romo ;return yards of TD passes of  Palmer ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of TD passes of Romo']",
            "SELECT['yards of TD passes of Palmer']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes of Romo"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes of Palmer"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Romo)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Palmer)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Romo)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Palmer)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Romo",
                "'s",
                "longest",
                "TD",
                "pass",
                "over",
                "Palmer",
                "'s",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    9,
                    12,
                    13,
                    14
                ],
                [
                    11
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1058_e7412d48-dc89-4e46-af54-68defeb47d7b",
        "question_text": "How many more yards was Bironas longest field goal compared to Crosbys?",
        "split": "train",
        "decomposition": "return yards of field goals of  Bironas ;return yards of field goals of  Crosbys ;return the longest of #1 ;return the longest of #2 ;return the difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Bironas']",
            "SELECT['yards of field goals of Crosbys']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Bironas"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Crosbys"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Bironas)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Crosbys)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Bironas)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Crosbys)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    7,
                    8,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Bironas",
                "longest",
                "field",
                "goal",
                "compared",
                "to",
                "Crosbys",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1066_fc3bbcd5-16f4-4dec-b098-682fdc0e1c3d",
        "question_text": "How many yards longer was Ben Roethlisberger's longest touchdown pass than Matt Schaub's longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of Ben Roethlisberger 's  touchdown passes ;return yards of Matt Schaub 's  touchdown passes ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT[\"yards of Ben Roethlisberger 's touchdown passes\"]",
            "SELECT[\"yards of Matt Schaub 's touchdown passes\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Ben Roethlisberger 's touchdown passes"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Matt Schaub 's touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Roethlisberger 's touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Matt Schaub 's touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Roethlisberger 's touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Matt Schaub 's touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    12
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Ben",
                "Roethlisberger",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "than",
                "Matt",
                "Schaub",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1143_0ce44675-509a-422e-988e-341a6fe5a266",
        "question_text": "How many yards longer was Carney's longest field goal over his second longest one?",
        "split": "train",
        "decomposition": "return yards of field goals of  Carney ;return the  longest of #1 ;return the  second longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Carney']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Carney"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Carney"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Carney)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Carney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Carney)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Carney",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "his",
                "second",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_14_4da7b4c9-ff8e-4dbe-9f54-e2ab33833e23",
        "question_text": "How many yards longer was John Kasay's longest field goal over his second longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  John Kasay ;return longest of #1 ;return second longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of John Kasay']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of John Kasay"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of John Kasay"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [],
                [
                    12
                ],
                [
                    10,
                    11,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "John",
                "Kasay",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "his",
                "second",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    11,
                    12,
                    13,
                    16
                ],
                [
                    14,
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    16
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1447_5dd69133-a66e-413a-8b40-5060d88f3c0d",
        "question_text": "How many yards longer was Mason Crosby's longest second quarter field goal over his second longest?",
        "split": "train",
        "decomposition": "return yards of Mason Crosby 's field goals in  the  second  quarter ;return the  longest of #1 ;return the  second  longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT[\"yards of Mason Crosby 's field goals in the second quarter\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Mason Crosby 's field goals in the second quarter"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Mason Crosby 's field goals in the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Mason Crosby 's field goals in the second quarter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Mason Crosby 's field goals in the second quarter)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Mason Crosby 's field goals in the second quarter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Mason Crosby 's field goals in the second quarter)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    14
                ],
                [
                    11,
                    12,
                    13,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Mason",
                "Crosby",
                "'s",
                "longest",
                "second",
                "quarter",
                "field",
                "goal",
                "over",
                "his",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    12,
                    15,
                    16
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    4,
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    16
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    16
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_147_8e0a3a3d-b450-4730-9840-2648be5d76b9",
        "question_text": "How many yards longer was Joe Nedney's longest field goal than Hanson's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Joe Nedney ;return yards of field goals of  Hanson ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Joe Nedney']",
            "SELECT['yards of field goals of Hanson']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Joe Nedney"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Hanson"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Joe Nedney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Hanson)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Joe Nedney)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Hanson)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Joe",
                "Nedney",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Hanson",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    8,
                    9,
                    10,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10,
                    16
                ],
                [
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    16
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1642_1f2b4717-8390-4946-b08a-6bc7f03ca751",
        "question_text": "How many more yards was Olindo Mare's longest field goal over Robbie Gould?",
        "split": "train",
        "decomposition": "return yards of field goals of  Olindo Mare ;return longest of #1 ;return yards of field goals of  Robbie Gould ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Olindo Mare']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of field goals of Robbie Gould']",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Olindo Mare"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Robbie Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Olindo Mare)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Olindo Mare)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Olindo",
                "Mare",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "Robbie",
                "Gould",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_172_8ecff79a-8f68-4e0e-b9f0-f2c86303fa70",
        "question_text": "How many more yards was the touchdown with the most yards than the next longest?",
        "split": "train",
        "decomposition": "return yards  of touchdowns ;return the  longest of #1 ;return the  next longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    14
                ],
                [],
                [
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "the",
                "touchdown",
                "with",
                "the",
                "most",
                "yards",
                "than",
                "the",
                "next",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    14
                ],
                [],
                [],
                [
                    9
                ],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    14
                ],
                [],
                [
                    13
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1777_7b1ae531-2d55-41f9-abf5-ce2ab1926482",
        "question_text": "How many yards longer was Gould's longest field goal over Longwell's longest one?",
        "split": "train",
        "decomposition": "return yards of Gould 's  field goals ;return yards of Longwell 's  field goals ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT[\"yards of Gould 's field goals\"]",
            "SELECT[\"yards of Longwell 's field goals\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Gould 's field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Longwell 's field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Gould 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Longwell 's field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Gould 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Longwell 's field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Gould",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "Longwell",
                "'s",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2026_cedb578d-b08b-4482-91b2-8ef87a016e69",
        "question_text": "How many yards longer was David Akers' longest field goal than Robbie Gould's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  David Akers ;return yards of field goals of  Robbie Gould ;return the longest  of #1 ;return the longest  of #2 ;return the difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of David Akers']",
            "SELECT['yards of field goals of Robbie Gould']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of David Akers"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Robbie Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of David Akers)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of David Akers)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "David",
                "Akers",
                "'",
                "longest",
                "field",
                "goal",
                "than",
                "Robbie",
                "Gould",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10,
                    17
                ],
                [
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2094_d27b444b-6837-4f74-a4d9-e9059aca414b",
        "question_text": "How many yards difference is between the longest field goal and the longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of field goals ;return yards of touchdown passes ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals']",
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "is",
                "between",
                "the",
                "longest",
                "field",
                "goal",
                "and",
                "the",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    7,
                    8,
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    2
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2141_680af511-68b2-43db-9c4a-e7ba44751851",
        "question_text": "How many yards longer was Graham Gano's longest field goal than Jason Hanson's longest field goal?",
        "split": "train",
        "decomposition": "return yards of Graham Gano 's  field goals ;return yards of Jason Hanson 's  field goals ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT[\"yards of Graham Gano 's field goals\"]",
            "SELECT[\"yards of Jason Hanson 's field goals\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Graham Gano 's field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Jason Hanson 's field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Graham Gano 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Jason Hanson 's field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Graham Gano 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Jason Hanson 's field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Graham",
                "Gano",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Jason",
                "Hanson",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    10,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    6
                ],
                [],
                [
                    12
                ],
                [
                    11
                ],
                [
                    10,
                    17
                ],
                [
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2215_0aef8562-0f14-4f9c-914d-7fe45987c319",
        "question_text": "How many yards longer was the longest offensive touchdown when compared to the longest defensive touchdown?",
        "split": "train",
        "decomposition": "return yards of offensive touchdowns ;return yards of defensive touchdowns ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of offensive touchdowns']",
            "SELECT['yards of defensive touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of offensive touchdowns"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of defensive touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of offensive touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of defensive touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of offensive touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of defensive touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    13,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "offensive",
                "touchdown",
                "when",
                "compared",
                "to",
                "the",
                "longest",
                "defensive",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    8,
                    13,
                    15
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_231_5f80bfc1-d6b7-4e49-897b-38ba5367d218",
        "question_text": "How many yards longer was the longest touchdown of the game relative to the second longest?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  game ;return the  longest of #1 ;return the  second longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns in the game']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns in the game"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns in the game)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns in the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns in the game)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "touchdown",
                "of",
                "the",
                "game",
                "relative",
                "to",
                "the",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    11,
                    14
                ],
                [
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2333_c3c9c324-cb23-4fa5-bab0-41a5fb524d3b",
        "question_text": "How many yards difference was there between Gould's longest field goal kick and Graham's?",
        "split": "train",
        "decomposition": "return yards of field goals of  Gould ;return yards of field goals of  Graham ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Gould']",
            "SELECT['yards of field goals of Graham']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Gould"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Graham"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    2,
                    4,
                    7,
                    8
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    9,
                    10,
                    11,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "there",
                "between",
                "Gould",
                "'s",
                "longest",
                "field",
                "goal",
                "kick",
                "and",
                "Graham",
                "'s",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11,
                    15
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [
                    10,
                    11
                ],
                [
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2557_f13e4c09-1ece-4153-8e34-a67e2f9f3dc1",
        "question_text": "How many yards longer was Dan Carpenter's longest field goal compared to Billy Cundiff's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Dan Carpenter ;return longest of #1 ;return yards of Billy Cundiff 's  field goals ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Dan Carpenter']",
            "AGGREGATE['max', '#1']",
            "SELECT[\"yards of Billy Cundiff 's field goals\"]",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Dan Carpenter"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Billy Cundiff 's field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Billy Cundiff 's field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Billy Cundiff 's field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    11,
                    12
                ],
                [
                    15,
                    16,
                    17,
                    18
                ],
                [
                    13,
                    14
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Dan",
                "Carpenter",
                "'s",
                "longest",
                "field",
                "goal",
                "compared",
                "to",
                "Billy",
                "Cundiff",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    15,
                    16,
                    17,
                    18
                ],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    10
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    6
                ],
                [
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    18
                ],
                [
                    15,
                    16,
                    17
                ],
                [],
                [
                    14
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    18
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2657_5064f78b-5a1c-4582-b7fc-2f7cb770e998",
        "question_text": "How many yards of differential separated the longest passing touchdowns and the longest defensive touchdown?",
        "split": "train",
        "decomposition": "return yards of passing touchdowns ;return yards of defensive touchdowns ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of passing touchdowns']",
            "SELECT['yards of defensive touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of passing touchdowns"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of defensive touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passing touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of defensive touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passing touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of defensive touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "differential",
                "separated",
                "the",
                "longest",
                "passing",
                "touchdowns",
                "and",
                "the",
                "longest",
                "defensive",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    7,
                    12,
                    14
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2828_8d9a7375-67a4-456c-a1bf-88dd100816c8",
        "question_text": "How many yards longer was the longest touchdown pass compared to the second longest?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return longest of #1 ;return second longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    8,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "compared",
                "to",
                "the",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    7,
                    8,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3432_ec94d516-f55a-450b-a6ba-fbd62e3079ea",
        "question_text": "How many yards longer was Matt Prater's longest field goal than Chris Boswell's longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Matt Prater ;return longest of #1 ;return yards of field goals of  Chris Boswell ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Matt Prater']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of field goals of Chris Boswell']",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Matt Prater"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Chris Boswell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Chris Boswell)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Chris Boswell)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Matt",
                "Prater",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Chris",
                "Boswell",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    12,
                    14,
                    15,
                    16,
                    17
                ],
                [
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    17
                ],
                [
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3434_855f6683-3797-4872-9078-7df6922f5747",
        "question_text": "How many yards longer was Ben Rothlisberger's longest touchdown pass over his second longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of Ben Rothlisberger 's touchdown passes ;return longest of #1 ;return second longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT[\"yards of Ben Rothlisberger 's touchdown passes\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Ben Rothlisberger 's touchdown passes"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Ben Rothlisberger 's touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Rothlisberger 's touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Rothlisberger 's touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Rothlisberger 's touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Ben Rothlisberger 's touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    10,
                    11,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Ben",
                "Rothlisberger",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "over",
                "his",
                "second",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15,
                    16
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    16
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_435_f921696c-54bf-4efd-82a9-0f833862167a",
        "question_text": "How many yards more was the longest field goal of the game than the second longest?",
        "split": "train",
        "decomposition": "return yards of  field goals of the   game ;return longest of  #1 ;return second longest of  #1 ;return difference of  #2 and #3",
        "program": [
            "SELECT['yards of field goals of the game']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of the game"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of the game)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of the game)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of the game)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "more",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "than",
                "the",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    8,
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_608_01628489-1ff0-4329-a802-ad5b3931e21e",
        "question_text": "How many yards longer was Favre's longest touchdown pass compared to his second longest?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Favre ;return the  longest of #1 ;return the  second longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Favre']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Favre"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Favre"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Favre)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Favre)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Favre)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Favre)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [
                    10,
                    11,
                    12
                ],
                [
                    8,
                    9,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Favre",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "compared",
                "to",
                "his",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    7,
                    8,
                    9,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    9,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_754_cb9887a9-3bd9-4f48-a398-79627c55c794",
        "question_text": "How many yards longer was Sebastian Janikowski's longest field goal than Rob Bironas' longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Sebastian Janikowski ;return yards of field goals of  Rob Bironas ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Sebastian Janikowski']",
            "SELECT['yards of field goals of Rob Bironas']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Sebastian Janikowski"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Rob Bironas"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Rob Bironas)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Rob Bironas)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [],
                [
                    11,
                    14
                ],
                [
                    10,
                    15,
                    16,
                    17
                ],
                [
                    12,
                    13
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Sebastian",
                "Janikowski",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Rob",
                "Bironas",
                "'",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    15,
                    16,
                    17
                ],
                [],
                [
                    14
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    11
                ],
                [
                    10,
                    17
                ],
                [
                    15,
                    16
                ],
                [
                    12
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_791_b007a78d-1431-4eb9-b960-baee163c20ea",
        "question_text": "How many yards longer was Garrard's longest TD pass over Roethlisberger's longest one?",
        "split": "train",
        "decomposition": "return yards of TD passes of  Garrard ;return yards of TD passes of  Roethlisberger ;return the  longest of #1 ;return the  longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of TD passes of Garrard']",
            "SELECT['yards of TD passes of Roethlisberger']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes of Garrard"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of TD passes of Roethlisberger"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Garrard)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Roethlisberger)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Garrard)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of TD passes of Roethlisberger)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Garrard",
                "'s",
                "longest",
                "TD",
                "pass",
                "over",
                "Roethlisberger",
                "'s",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10
                ],
                [
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_833_8a9d4e36-b68d-44fe-8790-bb017e7f9c5a",
        "question_text": "How many yards difference exists between the longest and second longest touchdown runs?",
        "split": "train",
        "decomposition": "return yards of touchdown runs ;return longest of #1 ;return second longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown runs']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown runs"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9,
                    10,
                    11
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "exists",
                "between",
                "the",
                "longest",
                "and",
                "second",
                "longest",
                "touchdown",
                "runs",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [
                    7,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_834_38e8d951-7a44-4ff1-9e4d-4d553a143beb",
        "question_text": "How many yards separated the longest touchdown from the second longest touchdown?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return the  longest of #1 ;return the  second longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "separated",
                "the",
                "longest",
                "touchdown",
                "from",
                "the",
                "second",
                "longest",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_919_91b0378a-02c0-4632-a661-b051972c5834",
        "question_text": "How many yards longer was Elam's longest field goal over Kasay's one?",
        "split": "train",
        "decomposition": "return yards of field goals of  Elam ;return longest of #1 ;return yards of field goals of  Kasay ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Elam']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of field goals of Kasay']",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Elam"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Kasay"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Elam)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Elam)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Elam",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "Kasay",
                "'s",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    12
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_104_2d43aca4-9996-4bb0-99aa-8009591f76bb",
        "question_text": "How many yards longer was the longest field goal over the second longest?",
        "split": "dev",
        "decomposition": "return yards of field goals ;return longest of #1 ;return second longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "over",
                "the",
                "second",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11
                ],
                [
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1222_35c2174f-2eb4-45eb-9658-c6ebbc99ea7b",
        "question_text": "How many yards longer was Kaeding's longest field goal than Mehlhaff's longest field goal?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Kaeding ;return longest of #1 ;return yards of field goals of  Mehlhaff ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Kaeding']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of field goals of Mehlhaff']",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Kaeding"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Mehlhaff"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kaeding)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mehlhaff)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kaeding)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mehlhaff)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    9,
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Kaeding",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Mehlhaff",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    9,
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9,
                    15
                ],
                [
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_fadb0169-392d-4f10-939d-83e5890bc3f4",
        "question_text": "How many more yards was Janikowski's longest field goal over Brown's longest one?",
        "split": "dev",
        "decomposition": "return yards of Janikowski 's  field goals ;return yards of Brown 's  field goals ;return longest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT[\"yards of Janikowski 's field goals\"]",
            "SELECT[\"yards of Brown 's field goals\"]",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Janikowski 's field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Brown 's field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Janikowski 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Brown 's field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Janikowski 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Brown 's field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [
                    11
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Janikowski",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "Brown",
                "'s",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_12d7ab9f-8547-4fe1-94f6-610d9a468769",
        "question_text": "How many  yards longer was Robbie Gould's longest field goal than Ryan Longwell's longest field goal?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Robbie Gould ;return yards of field goals of  Ryan Longwell ;return longest of #1 ;return longest of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Robbie Gould']",
            "SELECT['yards of field goals of Ryan Longwell']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Robbie Gould"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Ryan Longwell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Longwell)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Robbie Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Longwell)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Robbie",
                "Gould",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "Ryan",
                "Longwell",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    10,
                    12,
                    17
                ],
                [
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_829385ee-9fe0-4663-a9dd-38dd57812ad0",
        "question_text": "How many yards longer was Jay Cutler's longest touchdown pass than Brett Favre's longest touchdown pass?",
        "split": "dev",
        "decomposition": "return yards of touchdown passes of  Jay Cutler ;return longest of #1 ;return yards of touchdown passes of  Brett Favre ;return longest of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of touchdown passes of Jay Cutler']",
            "AGGREGATE['max', '#1']",
            "SELECT['yards of touchdown passes of Brett Favre']",
            "AGGREGATE['max', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Jay Cutler"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Brett Favre"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Brett Favre)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Brett Favre)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    10,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Jay",
                "Cutler",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "than",
                "Brett",
                "Favre",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    9,
                    10,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    17
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1781_eee8cc63-c485-4111-b66e-097e9f79eef1",
        "question_text": "How many passes did Michael Irvin and Alvin Harper catch in all during the season?",
        "split": "train",
        "decomposition": "return passes that Michael Irvin catches during the  season ;return passes that Alvin Harper catches during the  season ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['passes that Michael Irvin catches during the season']",
            "SELECT['passes that Alvin Harper catches during the season']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes that Michael Irvin catches during the season"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passes that Alvin Harper catches during the season"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Michael Irvin catches during the season)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Alvin Harper catches during the season)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Michael Irvin catches during the season)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Alvin Harper catches during the season)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    6,
                    8
                ],
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    12,
                    14
                ],
                [
                    10,
                    11,
                    13
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Michael",
                "Irvin",
                "and",
                "Alvin",
                "Harper",
                "catch",
                "in",
                "all",
                "during",
                "the",
                "season",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    6
                ],
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    8,
                    11
                ],
                [
                    9,
                    12,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1437_c2bcd918-c1ab-467c-8216-0765533966e3",
        "question_text": "How many touchdown receptions did Hines Ward and Mike Wallace combine for?",
        "split": "train",
        "decomposition": "return touchdown receptions of Hines Ward ;return touchdown receptions of Mike Wallace ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['touchdown receptions of Hines Ward']",
            "SELECT['touchdown receptions of Mike Wallace']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown receptions of Hines Ward"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown receptions of Mike Wallace"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Hines Ward)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Mike Wallace)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Hines Ward)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Mike Wallace)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    7
                ],
                [
                    0,
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    6
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "receptions",
                "did",
                "Hines",
                "Ward",
                "and",
                "Mike",
                "Wallace",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    7
                ],
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2267_d6250161-b876-4542-9558-37effc0b48ac",
        "question_text": "How many touchdowns and interceptions combined did Eli Manning throw?",
        "split": "train",
        "decomposition": "return touchdowns that Eli Manning throws ;return interceptions that Eli Manning throws ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['touchdowns that Eli Manning throws']",
            "SELECT['interceptions that Eli Manning throws']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that Eli Manning throws"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "interceptions that Eli Manning throws"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Eli Manning throws)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(interceptions that Eli Manning throws)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that Eli Manning throws)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(interceptions that Eli Manning throws)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    5
                ],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "and",
                "interceptions",
                "combined",
                "did",
                "Eli",
                "Manning",
                "throw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_567_66ebd016-9b39-4dd7-9300-67097070cf5e",
        "question_text": "How many total field goals were attempted, both made and missed?",
        "split": "train",
        "decomposition": "return field goals that were made ;return field goals that were missed ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['field goals that were made']",
            "SELECT['field goals that were missed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that were made"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that were missed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were missed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were missed)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    7,
                    10
                ],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    11
                ],
                [
                    9
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "field",
                "goals",
                "were",
                "attempted",
                ",",
                "both",
                "made",
                "and",
                "missed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    2,
                    10
                ],
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    11
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    7,
                    10
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1810_866c1dfb-c488-4c78-a590-3631d7911136",
        "question_text": "How many more females are there to males in Hyderabad than the national average?",
        "split": "train",
        "decomposition": "return females there  are to males in  Hyderabad ;return the  national average of females there  are to males ;return the  number of  #1 ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['females there are to males in Hyderabad']",
            "SELECT['the national average of females there are to males']",
            "AGGREGATE['count', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "females there are to males in Hyderabad"
                ]
            ],
            [
                "SELECT",
                "the national average of females there are to males"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(females there are to males in Hyderabad)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the national average of females there are to males)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(females there are to males in Hyderabad)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the national average of females there are to males)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    9
                ],
                [
                    3,
                    5,
                    6,
                    10,
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "females",
                "are",
                "there",
                "to",
                "males",
                "in",
                "Hyderabad",
                "than",
                "the",
                "national",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    3,
                    5,
                    7,
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    6,
                    10,
                    13
                ],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_227_bc94d5da-bedc-4713-afd4-b6014391d766",
        "question_text": "How many many people were in the peninsula compared to a pre-war population?",
        "split": "dev",
        "decomposition": "return people that  were in  the peninsula ;return the pre-war population ;return the number of #1 ;return the difference of #3 and  #2",
        "program": [
            "SELECT['people that were in the peninsula']",
            "SELECT['the pre-war population']",
            "AGGREGATE['count', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that were in the peninsula"
                ]
            ],
            [
                "SELECT",
                "the pre-war population"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were in the peninsula)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the pre-war population)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were in the peninsula)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the pre-war population)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8,
                    9,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "many",
                "people",
                "were",
                "in",
                "the",
                "peninsula",
                "compared",
                "to",
                "a",
                "pre",
                "-",
                "war",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    3,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    11,
                    14
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2390_4445e01a-164b-46ff-aced-6bf497cdc6b9",
        "question_text": "How many more men did the Finnish estimate were prisoners of war compared to the official number from the Soviet Union?",
        "split": "dev",
        "decomposition": "return men that the  Finnish estimate were prisoners of war ;return the  official number of prisoners of  war from  the   Soviet Union ;return number of  #1 ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['men that the Finnish estimate were prisoners of war']",
            "SELECT['the official number of prisoners of war from the Soviet Union']",
            "AGGREGATE['count', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "men that the Finnish estimate were prisoners of war"
                ]
            ],
            [
                "SELECT",
                "the official number of prisoners of war from the Soviet Union"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that the Finnish estimate were prisoners of war)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the official number of prisoners of war from the Soviet Union)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that the Finnish estimate were prisoners of war)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the official number of prisoners of war from the Soviet Union)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    3,
                    6,
                    7,
                    12,
                    13,
                    15,
                    16,
                    19
                ],
                [
                    14,
                    17,
                    18
                ],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "men",
                "did",
                "the",
                "Finnish",
                "estimate",
                "were",
                "prisoners",
                "of",
                "war",
                "compared",
                "to",
                "the",
                "official",
                "number",
                "from",
                "the",
                "Soviet",
                "Union",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    3,
                    6,
                    12,
                    13,
                    16
                ],
                [
                    15
                ],
                [],
                [
                    17
                ],
                [
                    19
                ],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    8
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [
                    3,
                    6,
                    7,
                    12,
                    13,
                    15,
                    16,
                    19
                ],
                [],
                [],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    20
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    20
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1849_3bc54012-0aa2-4e91-8664-3051e07b4966",
        "question_text": "How many in percent from the county weren't 25 to 44?",
        "split": "train",
        "decomposition": "return the  population in  the county ;return the  percent of #1 that was  from  25 to 44 ;return the  difference of 100 and  #2",
        "program": [
            "SELECT['the population in the county']",
            "PROJECT['the percent of #REF that was from 25 to 44', '#1']",
            "PROJECT['the difference of 100 and #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "PROJECT",
                "the percent of #REF that was from 25 to 44",
                [
                    "SELECT",
                    "the population in the county"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percent of #REF that was from 25 to 44)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the population in the county)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the percent of #REF that was from 25 to 44)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the population in the county)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "from",
                "the",
                "county",
                "were",
                "n't",
                "25",
                "to",
                "44",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2450_7070d57e-bc9e-4892-b4c9-a8d94db5375c",
        "question_text": "How many percent of residents over the age of 5 do not speak English as their primary language at home?",
        "split": "train",
        "decomposition": "return residents over the  age of 5 ;return the  percent of #1 that speak English as their primary language at home ;return the  difference of 100 and  #2",
        "program": [
            "SELECT['residents over the age of 5']",
            "PROJECT['the percent of #REF that speak English as their primary language at home', '#1']",
            "PROJECT['the difference of 100 and #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "PROJECT",
                "the percent of #REF that speak English as their primary language at home",
                [
                    "SELECT",
                    "residents over the age of 5"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percent of #REF that speak English as their primary language at home)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(residents over the age of 5)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the percent of #REF that speak English as their primary language at home)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(residents over the age of 5)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    10,
                    11,
                    12,
                    14,
                    15,
                    17
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    9,
                    13,
                    16
                ],
                [
                    18
                ],
                [
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "residents",
                "over",
                "the",
                "age",
                "of",
                "5",
                "do",
                "not",
                "speak",
                "English",
                "as",
                "their",
                "primary",
                "language",
                "at",
                "home",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    8,
                    10,
                    11,
                    12
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    14,
                    15,
                    18
                ],
                [
                    13,
                    16
                ],
                [
                    17
                ],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3,
                    7,
                    8,
                    10,
                    11,
                    12,
                    14,
                    17
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    16
                ],
                [],
                [
                    9,
                    13,
                    15,
                    18,
                    19
                ],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    19
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2188_420c9197-ccfb-4354-8f62-0f9ea5282d17",
        "question_text": "How many in percent in the county from the census of 2000 weren't German?",
        "split": "dev",
        "decomposition": "return population of the  county from the 2000 census ;return the  percent of #1 that  were German ;return the  difference of 100 and #2",
        "program": [
            "SELECT['population of the county from the 2000 census']",
            "PROJECT['the percent of #REF that were German', '#1']",
            "PROJECT['the difference of 100 and #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "PROJECT",
                "the percent of #REF that were German",
                [
                    "SELECT",
                    "population of the county from the 2000 census"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the percent of #REF that were German)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(population of the county from the 2000 census)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(the percent of #REF that were German)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(population of the county from the 2000 census)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [
                    5,
                    8
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "in",
                "the",
                "county",
                "from",
                "the",
                "census",
                "of",
                "2000",
                "were",
                "n't",
                "German",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    9,
                    11,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    11
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1851_e1ad03c1-a8f5-4a88-8883-960c4339935d",
        "question_text": "Which groups in percent are larger than 23%?",
        "split": "train",
        "decomposition": "return percents of groups ;return #1 that are larger than 23 % ;return groups with a percent that is any of #2",
        "program": [
            "SELECT['percents of groups']",
            "FILTER['#1', 'that are larger than 23 %']",
            "PROJECT['groups with a percent that is any of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "groups with a percent that is any of #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "percents of groups"
                ],
                "that are larger than 23 %"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(groups with a percent that is any of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percents of groups)"
                ],
                "GET_QUESTION_SPAN(that are larger than 23 %)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(groups with a percent that is any of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percents of groups)"
                ],
                "GET_QUESTION_SPAN(that are larger than 23 %)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3
                ],
                [],
                [
                    1,
                    2,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "groups",
                "in",
                "percent",
                "are",
                "larger",
                "than",
                "23",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    3
                ],
                [
                    1,
                    2,
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    2,
                    6,
                    8
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1015_2bc6b3b8-4d14-4af4-9ad8-d1150128bf36",
        "question_text": "Which player caught a pass for a TD in the second quarter?",
        "split": "train",
        "decomposition": "return the  TD pass in  the second quarter ;return player that caught #1",
        "program": [
            "SELECT['the TD pass in the second quarter']",
            "PROJECT['player that caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "player that caught #REF",
            [
                "SELECT",
                "the TD pass in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the TD pass in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that caught #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the TD pass)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    9
                ],
                [],
                [
                    8,
                    10,
                    11
                ],
                [
                    5
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "a",
                "pass",
                "for",
                "a",
                "TD",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    11
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    5
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    11
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1214_92236715-8ed3-4d74-a183-eb4de15b0c19",
        "question_text": "Which players had field goals in the first half?",
        "split": "train",
        "decomposition": "return field goals in  the  first half ;return players that had #1",
        "program": [
            "SELECT['field goals in the first half']",
            "PROJECT['players that had #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that had #REF",
            [
                "SELECT",
                "field goals in the first half"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that had #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that had #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "had",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1334_be6ff18b-9e61-4974-a7c6-2ef29a4b8530",
        "question_text": "Who had fourth quarter touchdown receptions?",
        "split": "train",
        "decomposition": "return touchdown receptions in  the  fourth quarter ;return who  had #1",
        "program": [
            "SELECT['touchdown receptions in the fourth quarter']",
            "PROJECT['who had #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who had #REF",
            [
                "SELECT",
                "touchdown receptions in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who had #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown receptions in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who had #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "fourth",
                "quarter",
                "touchdown",
                "receptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2332_4905d567-2d92-48ab-9c7c-a7121d10dcc5",
        "question_text": "How many different ways did the Bears score in the first quarter?",
        "split": "train",
        "decomposition": "return ways that the  Bears score in  the first quarter ;return number of  different #1",
        "program": [
            "SELECT['ways that the Bears score in the first quarter']",
            "PROJECT['number of different #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "number of different #REF",
            [
                "SELECT",
                "ways that the Bears score in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of different #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ways that the Bears score in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of different #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(ways that the Bears score)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    9
                ],
                [],
                [
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    4
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "different",
                "ways",
                "did",
                "the",
                "Bears",
                "score",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    7,
                    11
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2354_bb9ebabe-8c22-4cd7-8f46-c2399d939a73",
        "question_text": "Who scored more points in the first quarter?",
        "split": "train",
        "decomposition": "return points ;return #1 in  the  first quarter ;return who  scored more #2",
        "program": [
            "SELECT['points']",
            "FILTER['#1', 'in the first quarter']",
            "PROJECT['who scored more #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored more #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "points"
                ],
                "in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored more #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored more #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    7
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1
                ],
                [
                    5
                ],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2640_d9cc969d-a693-477e-8e99-645660e7fa05",
        "question_text": "Which players scored touchdowns between 20 and 30 yards long in the first half?",
        "split": "train",
        "decomposition": "return touchdowns between 20 and  30 yards long in  the  first half ;return players that scored #1",
        "program": [
            "SELECT['touchdowns between 20 and 30 yards long in the first half']",
            "PROJECT['players that scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that scored #REF",
            [
                "SELECT",
                "touchdowns between 20 and 30 yards long in the first half"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns between 20 and 30 yards long in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns between 20 and 30 yards long)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9,
                    11
                ],
                [
                    6
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    10,
                    12,
                    13
                ],
                [
                    4
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "touchdowns",
                "between",
                "20",
                "and",
                "30",
                "yards",
                "long",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    3,
                    5,
                    7,
                    13
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    9
                ],
                [
                    11
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    7,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2673_ec47de73-3fcf-441c-b981-4a575c5bb7f1",
        "question_text": "How many yards was the Seahawks second quarter touchdown?",
        "split": "train",
        "decomposition": "return touchdown from  the  Seahawks ;return #1 in  the  second quarter ;return yards of #2",
        "program": [
            "SELECT['touchdown from the Seahawks']",
            "FILTER['#1', 'in the second quarter']",
            "PROJECT['yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "yards of #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdown from the Seahawks"
                ],
                "in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(yards of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown from the Seahawks)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(yards of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown from the Seahawks)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    8
                ],
                [],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "Seahawks",
                "second",
                "quarter",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    7
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2734_5c5ebe31-7246-49ef-828a-ff5e925e3fa6",
        "question_text": "How long were each of Connor Barth's field goals in the second half?",
        "split": "train",
        "decomposition": "return Connor Barth 's field goals ;return #1 in  the second half ;return how long were each of  #2",
        "program": [
            "SELECT[\"Connor Barth 's field goals\"]",
            "FILTER['#1', 'in the second half']",
            "PROJECT['how long were each of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long were each of #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "Connor Barth 's field goals"
                ],
                "in the second half"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Connor Barth 's field goals)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were each of #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Connor Barth 's field goals)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    11
                ],
                [],
                [
                    2,
                    5,
                    6,
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "each",
                "of",
                "Connor",
                "Barth",
                "'s",
                "field",
                "goals",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    8,
                    9,
                    13
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    11
                ],
                [],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_334_c3789b2f-a929-4294-8624-f469dbd08708",
        "question_text": "How long were each of Damon Huard's TD passes in the first quarter?",
        "split": "train",
        "decomposition": "return TD passes of  Damon Huard ;return #1 in  the first quarter ;return how long were #2",
        "program": [
            "SELECT['TD passes of Damon Huard']",
            "FILTER['#1', 'in the first quarter']",
            "PROJECT['how long were #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long were #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "TD passes of Damon Huard"
                ],
                "in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of Damon Huard)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long were #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of Damon Huard)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    8,
                    11
                ],
                [],
                [
                    2,
                    5,
                    6,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "each",
                "of",
                "Damon",
                "Huard",
                "'s",
                "TD",
                "passes",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6,
                    9,
                    13
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    11
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_461_965d636b-1f2c-4281-8a2d-64844902932d",
        "question_text": "Who scored the longest touchdown in the fourth quarter?",
        "split": "train",
        "decomposition": "return the  longest touchdown in  the fourth quarter ;return who  scored #1",
        "program": [
            "SELECT['the longest touchdown in the fourth quarter']",
            "PROJECT['who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "SELECT",
                "the longest touchdown in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the longest touchdown in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the longest touchdown)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "touchdown",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_468_f01b9dba-7f40-49d1-810e-a0f1790a0834",
        "question_text": "Who caught a touchdown pass in the second quarter?",
        "split": "train",
        "decomposition": "return touchdown pass in  the  second quarter ;return who  caught #1",
        "program": [
            "SELECT['touchdown pass in the second quarter']",
            "PROJECT['who caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "SELECT",
                "touchdown pass in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown pass in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "a",
                "touchdown",
                "pass",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_57_c4aad0b0-1c9d-4cb4-880f-65b5751c66b9",
        "question_text": "Who scored a touchdown on a pass in the fourth quarter?",
        "split": "train",
        "decomposition": "return touchdown passes in  the  fourth quarter ;return who  scored #1",
        "program": [
            "SELECT['touchdown passes in the fourth quarter']",
            "PROJECT['who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "SELECT",
                "touchdown passes in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    4
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "a",
                "touchdown",
                "on",
                "a",
                "pass",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    4
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_616_ff55ef3e-9c36-4a40-91fb-67356ecd03fb",
        "question_text": "Which players scored touchdowns for the Jaguars in the fourth quarter?",
        "split": "train",
        "decomposition": "return touchdowns for the  Jaguars in  the fourth quarter ;return players who  scored #1",
        "program": [
            "SELECT['touchdowns for the Jaguars in the fourth quarter']",
            "PROJECT['players who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "players who scored #REF",
            [
                "SELECT",
                "touchdowns for the Jaguars in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns for the Jaguars in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players who scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns for the Jaguars)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8
                ],
                [],
                [
                    3,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "touchdowns",
                "for",
                "the",
                "Jaguars",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    3,
                    9,
                    10
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    5,
                    8
                ],
                [],
                [
                    3
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_776_582268ca-cd9b-449d-8c7f-a6350dd48686",
        "question_text": "Who caught an interception in the fourth quarter?",
        "split": "train",
        "decomposition": "return the  interceptions in  the fourth quarter ;return who  caught #1",
        "program": [
            "SELECT['the interceptions in the fourth quarter']",
            "PROJECT['who caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "SELECT",
                "the interceptions in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the interceptions in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the interceptions)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "an",
                "interception",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    5
                ],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_776_e7a64614-7e1e-453c-8a5e-5d3f4e328a2d",
        "question_text": "Who scored a field goal in the fourth quarter?",
        "split": "train",
        "decomposition": "return field goals in  the  fourth quarter ;return who  scored #1",
        "program": [
            "SELECT['field goals in the fourth quarter']",
            "PROJECT['who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "SELECT",
                "field goals in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "a",
                "field",
                "goal",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_99_ab845561-475d-4675-a558-e1686dcde52e",
        "question_text": "Which side scored a field goal in the third quarter?",
        "split": "train",
        "decomposition": "return field goal in  the  third quarter ;return side that scored #1",
        "program": [
            "SELECT['field goal in the third quarter']",
            "PROJECT['side that scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "side that scored #REF",
            [
                "SELECT",
                "field goal in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(side that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goal in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(side that scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [
                    4,
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "side",
                "scored",
                "a",
                "field",
                "goal",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    9
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    7
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1503_2de31cfa-c0dc-42a6-bdc5-8d13d88bef54",
        "question_text": "Which quarterback threw a touchdown pass in the first half?",
        "split": "dev",
        "decomposition": "return touchdown passes in  the  first half ;return the  quarterback that threw #1",
        "program": [
            "SELECT['touchdown passes in the first half']",
            "PROJECT['the quarterback that threw #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the quarterback that threw #REF",
            [
                "SELECT",
                "touchdown passes in the first half"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "a",
                "touchdown",
                "pass",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2255_7cf9bc14-f919-4e3c-a313-098e063e48fd",
        "question_text": "Which player caught two touchdown passes in the third quarter?",
        "split": "dev",
        "decomposition": "return touchdown passes in  the  third quarter ;return player that caught two #1",
        "program": [
            "SELECT['touchdown passes in the third quarter']",
            "PROJECT['player that caught two #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "player that caught two #REF",
            [
                "SELECT",
                "touchdown passes in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that caught two #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that caught two #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "two",
                "touchdown",
                "passes",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    9
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1890_c33bfb11-bfdd-4f40-85b1-41d2094c2542",
        "question_text": "How many less White, Irish were there are their count fell?",
        "split": "train",
        "decomposition": "return the  White ,  Irish there  were ;return #1 when  their count fell ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #4 and  #3",
        "program": [
            "SELECT['the White , Irish there were']",
            "FILTER['#1', 'when their count fell']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the White , Irish there were"
                    ],
                    "when their count fell"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the White , Irish there were"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the White , Irish there were)"
                    ],
                    "GET_QUESTION_SPAN(when their count fell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the White , Irish there were)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the White , Irish there were)"
                    ],
                    "GET_QUESTION_SPAN(when their count fell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the White , Irish there were)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    9
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "less",
                "White",
                ",",
                "Irish",
                "were",
                "there",
                "are",
                "their",
                "count",
                "fell",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2599_6f08d4b7-393d-4d4d-bc65-e23fb1898d99",
        "question_text": "How many more planes did the fleet expand in 2012?",
        "split": "train",
        "decomposition": "return planes of the  fleet ;return #1 in  2012 ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #4 and  #3",
        "program": [
            "SELECT['planes of the fleet']",
            "FILTER['#1', 'in 2012']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "planes of the fleet"
                    ],
                    "in 2012"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "planes of the fleet"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(planes of the fleet)"
                    ],
                    "GET_QUESTION_SPAN(in 2012)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(planes of the fleet)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(planes of the fleet)"
                    ],
                    "GET_QUESTION_SPAN(in 2012)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(planes of the fleet)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "planes",
                "did",
                "the",
                "fleet",
                "expand",
                "in",
                "2012",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1043_f772b0f3-bab4-497b-b8c3-0ecd4f06bb5c",
        "question_text": "How many people  less were there in the peninsula after the war?",
        "split": "dev",
        "decomposition": "return people there  were in  the  peninsula ;return #1 after the  war ;return number of  #1 ;return number of  #2 ;return the  difference of #4 and  #3",
        "program": [
            "SELECT['people there were in the peninsula']",
            "FILTER['#1', 'after the war']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people there were in the peninsula"
                    ],
                    "after the war"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people there were in the peninsula"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people there were in the peninsula)"
                    ],
                    "GET_QUESTION_SPAN(after the war)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people there were in the peninsula)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people there were in the peninsula)"
                    ],
                    "GET_QUESTION_SPAN(after the war)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people there were in the peninsula)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    9
                ],
                [
                    4
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "less",
                "were",
                "there",
                "in",
                "the",
                "peninsula",
                "after",
                "the",
                "war",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2024_a649c03b-36e2-4371-bdd5-770c7d2fc7fe",
        "question_text": "Is the life expectancy at birth higher among males or females?",
        "split": "train",
        "decomposition": "return life expectancy at birth ;return #1 among males ;return #1 among females ;return which  Is highest of #2 , #3",
        "program": [
            "SELECT['life expectancy at birth']",
            "FILTER['#1', 'among males']",
            "FILTER['#1', 'among females']",
            "COMPARISON['max', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "life expectancy at birth"
                ],
                "among males"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "life expectancy at birth"
                ],
                "among females"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(life expectancy at birth)"
                ],
                "GET_QUESTION_SPAN(among males)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(life expectancy at birth)"
                ],
                "GET_QUESTION_SPAN(among females)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(life expectancy at birth)"
                ],
                "GET_QUESTION_SPAN(among males)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(life expectancy at birth)"
                ],
                "GET_QUESTION_SPAN(among females)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Is",
                "the",
                "life",
                "expectancy",
                "at",
                "birth",
                "higher",
                "among",
                "males",
                "or",
                "females",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    9
                ],
                [
                    5,
                    6,
                    8,
                    10
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2461_0c652045-b5e0-4104-97bb-8e1ba9dc9349",
        "question_text": "Did the male or female population have a higher literacy rate in 1991?",
        "split": "train",
        "decomposition": "return literacy rate in 1991 ;return #1 of male population ;return #1 of female population ;return which  is  higher of #2 ,  #3",
        "program": [
            "SELECT['literacy rate in 1991']",
            "FILTER['#1', 'of male population']",
            "FILTER['#1', 'of female population']",
            "COMPARISON['max', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "literacy rate in 1991"
                ],
                "of male population"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "literacy rate in 1991"
                ],
                "of female population"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(literacy rate in 1991)"
                ],
                "GET_QUESTION_SPAN(of male population)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(literacy rate in 1991)"
                ],
                "GET_QUESTION_SPAN(of female population)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(literacy rate in 1991)"
                ],
                "GET_QUESTION_SPAN(of male population)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(literacy rate in 1991)"
                ],
                "GET_QUESTION_SPAN(of female population)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    5,
                    8,
                    10
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    7
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "male",
                "or",
                "female",
                "population",
                "have",
                "a",
                "higher",
                "literacy",
                "rate",
                "in",
                "1991",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    8,
                    10
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1015_f7644e0f-4387-414e-b248-adbbd77442c6",
        "question_text": "Did Romo have more passing touchdown yards in the first half or the second half?",
        "split": "train",
        "decomposition": "return passing touchdown yards of  Romo in  the first half  ;return passing touchdown yards of  Romo in  the second half  ;return which is  more of  #1 , #2",
        "program": [
            "SELECT['passing touchdown yards of Romo in the first half']",
            "SELECT['passing touchdown yards of Romo in the second half']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "passing touchdown yards of Romo in the first half"
            ],
            [
                "SELECT",
                "passing touchdown yards of Romo in the second half"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passing touchdown yards of Romo in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(passing touchdown yards of Romo in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing touchdown yards of Romo)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing touchdown yards of Romo)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    11
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    7,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "Romo",
                "have",
                "more",
                "passing",
                "touchdown",
                "yards",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    3
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    9,
                    10,
                    14
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    11
                ],
                [
                    3
                ],
                [],
                [
                    7
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_842_a7d1472e-68d2-4943-b7a9-d036655c772d",
        "question_text": "Who had the longer field goal kick in the first quarter, Jeff Wilkins or Neil Rackers?",
        "split": "train",
        "decomposition": "return field goal of Jeff Wilkins in  the  first quarter ;return field goal of Neil Rackers in  the  first quarter ;return which was  longer of #1 ,  #2",
        "program": [
            "SELECT['field goal of Jeff Wilkins in the first quarter']",
            "SELECT['field goal of Neil Rackers in the first quarter']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "field goal of Jeff Wilkins in the first quarter"
            ],
            [
                "SELECT",
                "field goal of Neil Rackers in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goal of Jeff Wilkins in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goal of Neil Rackers in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal of Jeff Wilkins)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal of Neil Rackers)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    11,
                    14
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    9,
                    10,
                    13,
                    15
                ],
                [
                    12
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "the",
                "longer",
                "field",
                "goal",
                "kick",
                "in",
                "the",
                "first",
                "quarter",
                ",",
                "Jeff",
                "Wilkins",
                "or",
                "Neil",
                "Rackers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ],
                [],
                [
                    15,
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    11,
                    14
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    15
                ],
                [
                    12
                ],
                [
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1390_58e44ab0-915f-4859-a0f7-63aa417da8cb",
        "question_text": "Did Palmer have more touchdown yards in the first quarter or the second quarter?",
        "split": "dev",
        "decomposition": "return touchdown yards of  Palmer in  the first quarter ;return touchdown yards of  Palmer in  the second quarter ;return which is  more of  #1 , #2",
        "program": [
            "SELECT['touchdown yards of Palmer in the first quarter']",
            "SELECT['touchdown yards of Palmer in the second quarter']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "touchdown yards of Palmer in the first quarter"
            ],
            [
                "SELECT",
                "touchdown yards of Palmer in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown yards of Palmer in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown yards of Palmer in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown yards of Palmer)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown yards of Palmer)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    10
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "Palmer",
                "have",
                "more",
                "touchdown",
                "yards",
                "in",
                "the",
                "first",
                "quarter",
                "or",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    3
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9,
                    13
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    10
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2061_3721ca8e-d3c3-47e1-88da-0bacb713ca7d",
        "question_text": "About how many percent of the current population in Slovakia is not Jewish?",
        "split": "train",
        "decomposition": "return current population in Slovakia ;return #1 that  is  Jewish ;return #1 besides #2 ;return percent of #3",
        "program": [
            "SELECT['current population in Slovakia']",
            "FILTER['#1', 'that is Jewish']",
            "DISCARD['#1', '#2']",
            "PROJECT['percent of #REF', '#3']"
        ],
        "nested_expression": [
            "PROJECT",
            "percent of #REF",
            [
                "DISCARD",
                [
                    "SELECT",
                    "current population in Slovakia"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "current population in Slovakia"
                    ],
                    "that is Jewish"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(current population in Slovakia)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(current population in Slovakia)"
                    ],
                    "GET_QUESTION_SPAN(that is Jewish)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(current population in Slovakia)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(current population in Slovakia)"
                    ],
                    "GET_QUESTION_SPAN(that is Jewish)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [
                    1,
                    3,
                    11
                ],
                [],
                [
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "About",
                "how",
                "many",
                "percent",
                "of",
                "the",
                "current",
                "population",
                "in",
                "Slovakia",
                "is",
                "not",
                "Jewish",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [
                    3,
                    11
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    1,
                    3,
                    11
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2061_de2380bf-b7e7-4914-84cc-ec4ea64ad091",
        "question_text": "In 2004, how many percent church members did not regularly attend services?",
        "split": "train",
        "decomposition": "return church members In 2004 ;return #1 that regularly attend services ;return #1 besides  #2 ;return percent of #3",
        "program": [
            "SELECT['church members In 2004']",
            "FILTER['#1', 'that regularly attend services']",
            "DISCARD['#1', '#2']",
            "PROJECT['percent of #REF', '#3']"
        ],
        "nested_expression": [
            "PROJECT",
            "percent of #REF",
            [
                "DISCARD",
                [
                    "SELECT",
                    "church members In 2004"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "church members In 2004"
                    ],
                    "that regularly attend services"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(church members In 2004)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(church members In 2004)"
                    ],
                    "GET_QUESTION_SPAN(that regularly attend services)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(church members In 2004)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(church members In 2004)"
                    ],
                    "GET_QUESTION_SPAN(that regularly attend services)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [],
                [
                    1
                ],
                [
                    0,
                    3,
                    5,
                    9
                ],
                [
                    2
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "In",
                "2004",
                ",",
                "how",
                "many",
                "percent",
                "church",
                "members",
                "did",
                "not",
                "regularly",
                "attend",
                "services",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [],
                [],
                [],
                [
                    0,
                    5,
                    9
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    1,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    0,
                    3,
                    5,
                    9
                ],
                [],
                [
                    1
                ],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2973_db6718a9-bbe2-4b9f-ac52-9edd8e5646ef",
        "question_text": "How many percent of deaths in Russia were not a result of suicide in 2012?",
        "split": "train",
        "decomposition": "return deaths in  Russia in 2012 ;return #1 that were a result of suicide ;return #1 besides  #2 ;return percent of #3",
        "program": [
            "SELECT['deaths in Russia in 2012']",
            "FILTER['#1', 'that were a result of suicide']",
            "DISCARD['#1', '#2']",
            "PROJECT['percent of #REF', '#3']"
        ],
        "nested_expression": [
            "PROJECT",
            "percent of #REF",
            [
                "DISCARD",
                [
                    "SELECT",
                    "deaths in Russia in 2012"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "deaths in Russia in 2012"
                    ],
                    "that were a result of suicide"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(deaths in Russia in 2012)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(deaths in Russia in 2012)"
                    ],
                    "GET_QUESTION_SPAN(that were a result of suicide)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(deaths in Russia in 2012)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(deaths in Russia in 2012)"
                    ],
                    "GET_QUESTION_SPAN(that were a result of suicide)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    9
                ],
                [],
                [
                    2,
                    4,
                    8
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    5,
                    7,
                    13
                ],
                [],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "deaths",
                "in",
                "Russia",
                "were",
                "not",
                "a",
                "result",
                "of",
                "suicide",
                "in",
                "2012",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    8
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    8
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    5,
                    13
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1859_68af093c-5f19-4b7e-ab4a-85e7bec27b3d",
        "question_text": "How many in percent of households were in a Marriage and not living together?",
        "split": "dev",
        "decomposition": "return households that were in  a Marriage ;return #1 that are living together ;return #1 besides  #2 ;return percent of #3",
        "program": [
            "SELECT['households that were in a Marriage']",
            "FILTER['#1', 'that are living together']",
            "DISCARD['#1', '#2']",
            "PROJECT['percent of #REF', '#3']"
        ],
        "nested_expression": [
            "PROJECT",
            "percent of #REF",
            [
                "DISCARD",
                [
                    "SELECT",
                    "households that were in a Marriage"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "households that were in a Marriage"
                    ],
                    "that are living together"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(households that were in a Marriage)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households that were in a Marriage)"
                    ],
                    "GET_QUESTION_SPAN(that are living together)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(percent of #REF)",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(households that were in a Marriage)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(households that were in a Marriage)"
                    ],
                    "GET_QUESTION_SPAN(that are living together)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    8
                ],
                [],
                [
                    3,
                    11
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "of",
                "households",
                "were",
                "in",
                "a",
                "Marriage",
                "and",
                "not",
                "living",
                "together",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    2
                ],
                [
                    1
                ],
                [
                    3,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    8
                ],
                [],
                [
                    5
                ],
                [
                    3,
                    11
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    2,
                    7
                ],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2085_6051d5fa-e88d-4898-9cb3-182552717176",
        "question_text": "How many yards did Troy Aikman and Emmitt Smith have combined?",
        "split": "train",
        "decomposition": "return yards of Troy Aikman ;return yards of Emmitt Smith ;return sum of #1 ;return sum of #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['yards of Troy Aikman']",
            "SELECT['yards of Emmitt Smith']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Troy Aikman"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Emmitt Smith"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Troy Aikman)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Emmitt Smith)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Troy Aikman)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Emmitt Smith)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    6,
                    10
                ],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "Troy",
                "Aikman",
                "and",
                "Emmitt",
                "Smith",
                "have",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    6,
                    10
                ],
                [],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    10
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1115_8c2de0cf-20fe-4872-a15b-273481f2cfa0",
        "question_text": "How many yards were gained on all touchdowns and field goals that happened in the first two quarters of play?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  first two quarters ;return yards of field goals in  the  first two quarters ;return the  sum of #1 ;return the  sum of #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['yards of touchdowns in the first two quarters']",
            "SELECT['yards of field goals in the first two quarters']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns in the first two quarters"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals in the first two quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns in the first two quarters)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the first two quarters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns in the first two quarters)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    8
                ],
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    10,
                    16
                ],
                [
                    13,
                    14,
                    18
                ],
                [
                    17,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "gained",
                "on",
                "all",
                "touchdowns",
                "and",
                "field",
                "goals",
                "that",
                "happened",
                "in",
                "the",
                "first",
                "two",
                "quarters",
                "of",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    8
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    15,
                    16,
                    19
                ],
                [
                    17
                ],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    8
                ],
                [
                    9
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [],
                [
                    19
                ],
                [
                    17,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    19
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    19
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    19
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    19
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3425_8231f5d7-b191-4113-8aaf-e4e06cbcdefc",
        "question_text": "How many points did the Steelers score in the third and fourth quarters combined?",
        "split": "train",
        "decomposition": "return third quarter points of the  Steelers ;return fourth quarter points of the  Steelers ;return sum of #1 ;return sum of #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['third quarter points of the Steelers']",
            "SELECT['fourth quarter points of the Steelers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "third quarter points of the Steelers"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "fourth quarter points of the Steelers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(third quarter points of the Steelers)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(fourth quarter points of the Steelers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(third quarter points of the Steelers)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(fourth quarter points of the Steelers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    10,
                    13
                ],
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11,
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Steelers",
                "score",
                "in",
                "the",
                "third",
                "and",
                "fourth",
                "quarters",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    10,
                    13
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    10,
                    13
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2207_3d8c81f5-5534-4031-a8ee-a854c9f4f630",
        "question_text": "How many more people living in Indianapolis city under the age of 18 were living below the poverty line compared to those who were 65 or older?",
        "split": "train",
        "decomposition": "return people living  in  Indianapolis city that were living below the  poverty line ;return #1 that were under the  age of 18 ;return #1 that were 65 or  older ;return the  number of  #2 ;return the  number of  #3 ;return the  difference of #4 and  #5",
        "program": [
            "SELECT['people living in Indianapolis city that were living below the poverty line']",
            "FILTER['#1', 'that were under the age of 18']",
            "FILTER['#1', 'that were 65 or older']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#4', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people living in Indianapolis city that were living below the poverty line"
                    ],
                    "that were under the age of 18"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people living in Indianapolis city that were living below the poverty line"
                    ],
                    "that were 65 or older"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people living in Indianapolis city that were living below the poverty line)"
                    ],
                    "GET_QUESTION_SPAN(that were under the age of 18)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people living in Indianapolis city that were living below the poverty line)"
                    ],
                    "GET_QUESTION_SPAN(that were 65 or older)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people living in Indianapolis city that were living below the poverty line)"
                    ],
                    "GET_QUESTION_SPAN(that were under the age of 18)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people living in Indianapolis city that were living below the poverty line)"
                    ],
                    "GET_QUESTION_SPAN(that were 65 or older)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    14,
                    19
                ],
                [],
                [
                    5,
                    10
                ],
                [
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    15,
                    17,
                    18
                ],
                [
                    13,
                    23
                ],
                [],
                [
                    22
                ],
                [
                    21,
                    24,
                    25
                ],
                [
                    26,
                    27
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "people",
                "living",
                "in",
                "Indianapolis",
                "city",
                "under",
                "the",
                "age",
                "of",
                "18",
                "were",
                "living",
                "below",
                "the",
                "poverty",
                "line",
                "compared",
                "to",
                "those",
                "who",
                "were",
                "65",
                "or",
                "older",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    10
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    15
                ],
                [
                    12
                ],
                [
                    17,
                    18
                ],
                [],
                [],
                [],
                [],
                [
                    22
                ],
                [
                    21
                ],
                [],
                [],
                [
                    24,
                    25
                ],
                [],
                [
                    26
                ],
                [
                    27
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    14
                ],
                [],
                [],
                [
                    10
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    15,
                    18
                ],
                [
                    13,
                    17,
                    19,
                    23
                ],
                [],
                [],
                [],
                [],
                [
                    24,
                    25
                ],
                [
                    26
                ],
                [
                    27
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    26
                ],
                [
                    14,
                    26
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    26
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    26
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    26
                ],
                [
                    22,
                    26
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    26
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    26
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1061_8735dd2c-4430-4d4e-8fd2-d7b280893eab",
        "question_text": "How many more touchdowns were scored in the first half than in the second?",
        "split": "train",
        "decomposition": "return touchdowns scored in  the  first half ;return touchdowns scored in  the  second half ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns scored in the first half']",
            "SELECT['touchdowns scored in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns scored in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns scored in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns scored in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns scored in the second half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns scored)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns scored)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "than",
                "in",
                "the",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1153_acbcfd6c-46e4-4e65-98bb-bfb30a1ebd63",
        "question_text": "How many more field goals were scored in the first quarter over the second quarter?",
        "split": "train",
        "decomposition": "return field goals scored in  the  first quarter ;return field goals scored in  the  second quarter ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals scored in the first quarter']",
            "SELECT['field goals scored in the second quarter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals scored in the first quarter"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals scored in the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals scored in the first quarter)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals scored in the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals scored)"
                    ],
                    "GET_QUESTION_SPAN(in the first quarter)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals scored)"
                    ],
                    "GET_QUESTION_SPAN(in the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "quarter",
                "over",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    3,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1635_5a1726ff-4651-442b-8aad-1306b80e69f9",
        "question_text": "How many more field goals did Stover kick in the first half than in the second half?",
        "split": "train",
        "decomposition": "return field goals of Stover in  the  first half  ;return field goals of Stover in  the  second half  ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Stover in the first half']",
            "SELECT['field goals of Stover in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Stover in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Stover in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Stover in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Stover in the second half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Stover)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Stover)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11,
                    13,
                    15,
                    16
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Stover",
                "kick",
                "in",
                "the",
                "first",
                "half",
                "than",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    16
                ],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [
                    10,
                    11,
                    13,
                    15,
                    16
                ],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2023_9bcb321c-0120-40bf-90ca-9e03d495397f",
        "question_text": "How many more field goals were kicked in the first half than the second half?",
        "split": "train",
        "decomposition": "return field goals kicked in  the  first half  ;return field goals kicked in  the  second half  ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals kicked in the first half']",
            "SELECT['field goals kicked in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the second half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals kicked)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals kicked)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "were",
                "kicked",
                "in",
                "the",
                "first",
                "half",
                "than",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2101_7003d0a2-25c8-4f13-b228-74087c8577c9",
        "question_text": "How many more field goals were kicked during the first half compared to the second half?",
        "split": "train",
        "decomposition": "return field goals kicked in  the  first half  ;return field goals kicked in  the  second half  ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals kicked in the first half']",
            "SELECT['field goals kicked in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals kicked in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked in the second half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals kicked)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals kicked)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    14,
                    15
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "were",
                "kicked",
                "during",
                "the",
                "first",
                "half",
                "compared",
                "to",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10,
                    15
                ],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    9,
                    10,
                    14,
                    15
                ],
                [],
                [],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3293_e1488f18-19ee-413d-a511-3d885d8bcfa0",
        "question_text": "How many more touchdowns were scored in the first half compared to the second half?",
        "split": "train",
        "decomposition": "return touchdowns that were scored ;return #1 in  the  first half  ;return #1 in  the  second half  ;return number of  #2 ;return number of  #3 ;return difference of #4 and  #5",
        "program": [
            "SELECT['touchdowns that were scored']",
            "FILTER['#1', 'in the first half']",
            "FILTER['#1', 'in the second half']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#4', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "touchdowns that were scored"
                    ],
                    "in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "touchdowns that were scored"
                    ],
                    "in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that were scored)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that were scored)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that were scored)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns that were scored)"
                    ],
                    "GET_QUESTION_SPAN(in the second half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "compared",
                "to",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    9,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_447_6abf1991-9f46-4791-baf4-e898a039fa6c",
        "question_text": "How many more touchdowns did the Vikings get than the Falcons in the first half?",
        "split": "train",
        "decomposition": "return touchdowns of the  Vikings in  the   first half ;return touchdowns of the  Falcons in  the   first half ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns of the Vikings in the first half']",
            "SELECT['touchdowns of the Falcons in the first half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of the Vikings in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of the Falcons in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Vikings in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Falcons in the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns of the Vikings)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(touchdowns of the Falcons)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    11,
                    13,
                    14
                ],
                [
                    10
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "did",
                "the",
                "Vikings",
                "get",
                "than",
                "the",
                "Falcons",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1258_06ddbb40-8f15-4ee6-98a0-93da477abddd",
        "question_text": "How many more of the 293 comuneros who were excluded from pardon were executed compared to those that died in prison?",
        "split": "dev",
        "decomposition": "return the  comuneros who  were excluded from  pardon ;return #1 that were executed ;return #1 that died in  prison ;return number of  #2 ;return number of  #3 ;return the  difference of #4 and  #5",
        "program": [
            "SELECT['the comuneros who were excluded from pardon']",
            "FILTER['#1', 'that were executed']",
            "FILTER['#1', 'that died in prison']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['difference', '#4', '#5']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the comuneros who were excluded from pardon"
                    ],
                    "that were executed"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the comuneros who were excluded from pardon"
                    ],
                    "that died in prison"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the comuneros who were excluded from pardon)"
                    ],
                    "GET_QUESTION_SPAN(that were executed)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the comuneros who were excluded from pardon)"
                    ],
                    "GET_QUESTION_SPAN(that died in prison)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the comuneros who were excluded from pardon)"
                    ],
                    "GET_QUESTION_SPAN(that were executed)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the comuneros who were excluded from pardon)"
                    ],
                    "GET_QUESTION_SPAN(that died in prison)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    14
                ],
                [
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    17,
                    19
                ],
                [],
                [
                    16,
                    18,
                    20
                ],
                [
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "of",
                "the",
                "293",
                "comuneros",
                "who",
                "were",
                "excluded",
                "from",
                "pardon",
                "were",
                "executed",
                "compared",
                "to",
                "those",
                "that",
                "died",
                "in",
                "prison",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    13,
                    16
                ],
                [],
                [],
                [],
                [],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    8
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    19
                ],
                [],
                [],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    11
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    20
                ],
                [
                    15,
                    20
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    20
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_237_8d5eefa1-d425-4acc-8b6d-1cd38ef8b0f9",
        "question_text": "What was the name of the plain was chose for battle at the time of the battle?",
        "split": "train",
        "decomposition": "return the  plain that was  chose for battle  ;return name of #1 ;return #2 at the  time of battle",
        "program": [
            "SELECT['the plain that was chose for battle']",
            "PROJECT['name of #REF', '#1']",
            "FILTER['#2', 'at the time of battle']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "name of #REF",
                [
                    "SELECT",
                    "the plain that was chose for battle"
                ]
            ],
            "at the time of battle"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(name of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the plain that was chose for battle)"
                ]
            ],
            "GET_QUESTION_SPAN(at the time of battle)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(name of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the plain that was chose for battle)"
                ]
            ],
            "GET_QUESTION_SPAN(at the time of battle)"
        ],
        "operators": [
            "select",
            "project",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    12,
                    15
                ],
                [
                    8,
                    10
                ],
                [
                    4,
                    9,
                    11,
                    14
                ],
                [
                    13
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "name",
                "of",
                "the",
                "plain",
                "was",
                "chose",
                "for",
                "battle",
                "at",
                "the",
                "time",
                "of",
                "the",
                "battle",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    10,
                    11,
                    13
                ],
                [],
                [],
                [
                    14,
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    7
                ],
                [],
                [],
                [
                    3,
                    6
                ],
                [
                    2,
                    4,
                    5,
                    8,
                    12,
                    13,
                    14,
                    15
                ],
                [],
                [
                    10,
                    16
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1665_0e654ddb-d39f-45fc-982e-1b0bba2e2862",
        "question_text": "What government owned control of passages in the Carpathian Mountains before the end of the War?",
        "split": "dev",
        "decomposition": "return passages in  the  Carpathian Mountains ;return government that owned control of #1 ;return #2 before the  end of the   War",
        "program": [
            "SELECT['passages in the Carpathian Mountains']",
            "PROJECT['government that owned control of #REF', '#1']",
            "FILTER['#2', 'before the end of the War']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "government that owned control of #REF",
                [
                    "SELECT",
                    "passages in the Carpathian Mountains"
                ]
            ],
            "before the end of the War"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(government that owned control of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passages in the Carpathian Mountains)"
                ]
            ],
            "GET_QUESTION_SPAN(before the end of the War)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(government that owned control of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passages in the Carpathian Mountains)"
                ]
            ],
            "GET_QUESTION_SPAN(before the end of the War)"
        ],
        "operators": [
            "select",
            "project",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    6,
                    10
                ],
                [
                    0,
                    5,
                    7,
                    11,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    1,
                    3,
                    4,
                    12,
                    13
                ],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "What",
                "government",
                "owned",
                "control",
                "of",
                "passages",
                "in",
                "the",
                "Carpathian",
                "Mountains",
                "before",
                "the",
                "end",
                "of",
                "the",
                "War",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [
                    3,
                    4,
                    6,
                    8
                ],
                [],
                [
                    1
                ],
                [
                    9,
                    10,
                    12
                ],
                [],
                [],
                [
                    13,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    10
                ],
                [],
                [
                    4,
                    7,
                    8,
                    11,
                    13,
                    14
                ],
                [
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    12,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2497_8a52c6cf-51a3-4122-b70a-93e83c92404c",
        "question_text": "How many percent did the 3 smallest religious groups make up in 1901?",
        "split": "train",
        "decomposition": "return percents of the  religious groups in  1901 ;return the  3 smallest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['percents of the religious groups in 1901']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "percents of the religious groups in 1901"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percents of the religious groups in 1901)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percents of the religious groups in 1901)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    2,
                    4,
                    8,
                    10,
                    11
                ],
                [
                    5,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "did",
                "the",
                "3",
                "smallest",
                "religious",
                "groups",
                "make",
                "up",
                "in",
                "1901",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    7,
                    10
                ],
                [
                    5,
                    11
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    3,
                    9
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    5,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1221_ab184868-98df-4b21-b338-606ea68695ca",
        "question_text": "How many yards combined are the two shortest touchdown passes?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return the  two shortest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "combined",
                "are",
                "the",
                "two",
                "shortest",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1692_c630b191-694b-4931-8e27-c031260072a4",
        "question_text": "How many yards were accumulated on the two shortest rushing touchdowns?",
        "split": "train",
        "decomposition": "return yards of rushing touchdowns ;return the  two shortest #1 ;return the  sum of #2",
        "program": [
            "SELECT['yards of rushing touchdowns']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of rushing touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of rushing touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of rushing touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "accumulated",
                "on",
                "the",
                "two",
                "shortest",
                "rushing",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    9,
                    10
                ],
                [
                    3
                ],
                [
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    7,
                    9,
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1715_ea618072-2d97-47a6-8ddd-5674a0441673",
        "question_text": "How many yards are the three shortest touchdown passes combined?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return the  three shortest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8,
                    9
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "are",
                "the",
                "three",
                "shortest",
                "touchdown",
                "passes",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    9
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    8,
                    9
                ],
                [
                    3,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2130_5912df0c-1161-4e12-b460-4977fed300ea",
        "question_text": "How many total yards were the two shortest field goals?",
        "split": "train",
        "decomposition": "return yards of field goals ;return the  two shortest of #1 ;return the  sum of #2",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "were",
                "the",
                "two",
                "shortest",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    9
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6,
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_314_dbdb8d8c-d06a-4351-b5ce-f9a595d67fde",
        "question_text": "How many container seaports in North America are larger than Charleston's seaport?",
        "split": "train",
        "decomposition": "return container seaports in  North America ;return size of #1 ;return size of Charleston 's seaport ;return #1 where #2 larger than #3 ;return number of  #4",
        "program": [
            "SELECT['container seaports in North America']",
            "PROJECT['size of #REF', '#1']",
            "SELECT[\"size of Charleston 's seaport\"]",
            "COMPARATIVE['#1', '#2', 'larger than #3']",
            "AGGREGATE['count', '#4']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "container seaports in North America"
                ],
                [
                    "PROJECT",
                    "size of #REF",
                    [
                        "SELECT",
                        "container seaports in North America"
                    ]
                ],
                "larger than #3"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(container seaports in North America)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(size of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(larger than #3)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(container seaports in North America)"
                ],
                [
                    "PARTIAL_SELECT_SINGLE_NUM",
                    "GET_QUESTION_SPAN(size of #REF)"
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(larger than #3)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "select",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    11
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    4,
                    9,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "container",
                "seaports",
                "in",
                "North",
                "America",
                "are",
                "larger",
                "than",
                "Charleston",
                "'s",
                "seaport",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    4,
                    9
                ],
                [
                    12,
                    13
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1750_c54ea42e-07a6-4d8b-9288-8bbc6d8bb65a",
        "question_text": "How many one yard tds did Rashard Mendenhall score?",
        "split": "train",
        "decomposition": "return tds of Rashard Mendenhall ;return yards of #1 ;return #1 where #2 equal one ;return number of  #3",
        "program": [
            "SELECT['tds of Rashard Mendenhall']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'equal one']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "tds of Rashard Mendenhall"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "tds of Rashard Mendenhall"
                    ]
                ],
                "equal one"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tds of Rashard Mendenhall)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(equal one)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tds of Rashard Mendenhall)"
                ],
                [
                    "PARTIAL_SELECT_SINGLE_NUM",
                    "GET_QUESTION_SPAN(yards of #REF)"
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(equal one)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "one",
                "yard",
                "tds",
                "did",
                "Rashard",
                "Mendenhall",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    2,
                    8
                ],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1945_3c054bdf-c0da-4a26-9d04-48d0f98ecb25",
        "question_text": "How many countries had a lower relative poverty rate in the OECD compared to Denmark?",
        "split": "dev",
        "decomposition": "return poverty rate in  Denmark ;return countries in  OECD besides  Denmark ;return poverty rates of #2 ;return #2 where #3 is lower than #1 ;return number of  #4",
        "program": [
            "SELECT['poverty rate in Denmark']",
            "SELECT['countries in OECD besides Denmark']",
            "PROJECT['poverty rates of #REF', '#2']",
            "COMPARATIVE['#2', '#3', 'is lower than #1']",
            "AGGREGATE['count', '#4']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "countries in OECD besides Denmark"
                ],
                [
                    "PROJECT",
                    "poverty rates of #REF",
                    [
                        "SELECT",
                        "countries in OECD besides Denmark"
                    ]
                ],
                "is lower than #1"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(countries in OECD besides Denmark)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(poverty rates of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is lower than #1)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(countries in OECD besides Denmark)"
                ],
                [
                    "PARTIAL_SELECT_SINGLE_NUM",
                    "GET_QUESTION_SPAN(poverty rates of #REF)"
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is lower than #1)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    13
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "countries",
                "had",
                "a",
                "lower",
                "relative",
                "poverty",
                "rate",
                "in",
                "the",
                "OECD",
                "compared",
                "to",
                "Denmark",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    3
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7,
                    12
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [],
                [
                    9
                ],
                [
                    14,
                    15
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2153_3f49f693-488a-47d4-9c68-e09cae496276",
        "question_text": "How many places have the same lowest truancy percentages of 2.5?",
        "split": "dev",
        "decomposition": "return places ;return truancy percentages of #1 ;return #1 where #2 is 2.5 ;return number of  #3",
        "program": [
            "SELECT['places']",
            "PROJECT['truancy percentages of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is 2.5']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "places"
                ],
                [
                    "PROJECT",
                    "truancy percentages of #REF",
                    [
                        "SELECT",
                        "places"
                    ]
                ],
                "is 2.5"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(places)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(truancy percentages of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is 2.5)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(places)"
                ],
                [
                    "PARTIAL_SELECT_SINGLE_NUM",
                    "GET_QUESTION_SPAN(truancy percentages of #REF)"
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is 2.5)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    8
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "places",
                "have",
                "the",
                "same",
                "lowest",
                "truancy",
                "percentages",
                "of",
                "2.5",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_648_0f3190d6-687d-415c-9ec6-1753323a7556",
        "question_text": "After the battles of 1683, how many years did the war with the Ottoman Empire last?",
        "split": "train",
        "decomposition": "return the   years of  the war with the  Ottoman Empire ;return the   highest of  #1 ;return the   difference of  #2 and 1683",
        "program": [
            "SELECT['the years of the war with the Ottoman Empire']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the difference of #REF and 1683', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF and 1683",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the years of the war with the Ottoman Empire"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF and 1683)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the years of the war with the Ottoman Empire)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF and 1683)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the years of the war with the Ottoman Empire)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8,
                    10,
                    13,
                    16
                ],
                [
                    11
                ],
                [],
                [
                    3,
                    5,
                    6,
                    9,
                    14
                ],
                [
                    12,
                    15,
                    17
                ]
            ],
            "question_tokens": [
                "After",
                "the",
                "battles",
                "of",
                "1683",
                ",",
                "how",
                "many",
                "years",
                "did",
                "the",
                "war",
                "with",
                "the",
                "Ottoman",
                "Empire",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    14,
                    15
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    6,
                    7,
                    9
                ],
                [
                    0,
                    2,
                    8
                ],
                [
                    1,
                    3,
                    4,
                    10,
                    13,
                    16
                ],
                [],
                [],
                [],
                [
                    5,
                    14
                ],
                [
                    11,
                    12,
                    15
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_718_37c1ee96-c2f9-41bf-a745-e95f2e6e0ba1",
        "question_text": "Before the Indian Massacre of 1622, how many years had it been since John Smith had been to Virginia?",
        "split": "train",
        "decomposition": "return years when  John Smith had been to Virginia ;return the highest of  #1 ;return the difference of  1622 and #2",
        "program": [
            "SELECT['years when John Smith had been to Virginia']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the difference of 1622 and #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 1622 and #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "years when John Smith had been to Virginia"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 1622 and #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when John Smith had been to Virginia)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 1622 and #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when John Smith had been to Virginia)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5,
                    9,
                    10,
                    13,
                    16
                ],
                [
                    12
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7,
                    11,
                    14,
                    15,
                    18
                ],
                [
                    17,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "Before",
                "the",
                "Indian",
                "Massacre",
                "of",
                "1622",
                ",",
                "how",
                "many",
                "years",
                "had",
                "it",
                "been",
                "since",
                "John",
                "Smith",
                "had",
                "been",
                "to",
                "Virginia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    10,
                    16
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    12,
                    17,
                    19
                ],
                [
                    15
                ],
                [
                    18
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    7,
                    8
                ],
                [
                    3,
                    9,
                    10,
                    13,
                    16
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    12,
                    14,
                    15,
                    17
                ],
                [
                    2,
                    18,
                    19
                ],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    19
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1115_efd24406-42ff-4931-8b91-0f7df8111b97",
        "question_text": "Which player scored the longest touchdown of the second quarter?",
        "split": "train",
        "decomposition": "return touchdowns of the second quarter ;return the longest of #1 ;return the player that  scored #2",
        "program": [
            "SELECT['touchdowns of the second quarter']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns of the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "longest",
                "touchdown",
                "of",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1139_4d75d975-b06e-4e09-94a9-0167e7a9d066",
        "question_text": "Which team made the longest touchdown?",
        "split": "train",
        "decomposition": "return touchdowns ;return the  longest of #1 ;return the  team that made #2",
        "program": [
            "SELECT['touchdowns']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the team that made #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the team that made #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that made #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that made #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "made",
                "the",
                "longest",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1219_94fde0b9-7ccf-4878-9ba6-4f8c363eed76",
        "question_text": "Which QB had the longest passing TD?",
        "split": "train",
        "decomposition": "return passing TDS ;return the  longest of #1 ;return the  QB that had #2",
        "program": [
            "SELECT['passing TDS']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the QB that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the QB that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "passing TDS"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the QB that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing TDS)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the QB that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing TDS)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    1
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "QB",
                "had",
                "the",
                "longest",
                "passing",
                "TD",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1246_df551e80-7702-4651-907b-26ae028e1376",
        "question_text": "How many yards difference is there between the two longest field goals?",
        "split": "train",
        "decomposition": "return yards of field goals ;return the  two longest of #1 ;return the  difference of #2",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the difference of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    7
                ],
                [],
                [
                    2,
                    3,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "is",
                "there",
                "between",
                "the",
                "two",
                "longest",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    2,
                    3,
                    8,
                    9,
                    10
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_133_93ff5af2-ac2c-4a80-884d-11a8776ebdf8",
        "question_text": "What quarter was the second longest field goal in?",
        "split": "train",
        "decomposition": "return field goals ;return the  second longest of #1 ;return in  what  quarter was  #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['max', '#1']",
            "PROJECT['in what quarter was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "in what quarter was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in what quarter was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in what quarter was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "quarter",
                "was",
                "the",
                "second",
                "longest",
                "field",
                "goal",
                "in",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    3
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1371_91679d85-b60e-451e-a3a1-4413d41c48f4",
        "question_text": "Which quarter was the longest field goal kicked?",
        "split": "train",
        "decomposition": "return field goals kicked ;return the  longest of #1 ;return in  which quarter was  #2",
        "program": [
            "SELECT['field goals kicked']",
            "AGGREGATE['max', '#1']",
            "PROJECT['in which quarter was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "in which quarter was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals kicked"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals kicked)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    7
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "quarter",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "kicked",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    7
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1421_4254c678-808f-456a-99a9-d27e4575181b",
        "question_text": "Which player had the longest touchdown reception of the game?",
        "split": "train",
        "decomposition": "return touchdown receptions of the  game ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown receptions of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown receptions of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "reception",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_145_fa901219-605b-46b3-97b7-7e2ad5c14010",
        "question_text": "Which quarterback threw the longest touchdown pass of the first two quarters?",
        "split": "train",
        "decomposition": "return touchdown passes of the  first two quarters ;return the  longest of #1 ;return the  quarterback that threw #2",
        "program": [
            "SELECT['touchdown passes of the first two quarters']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the quarterback that threw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the quarterback that threw #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes of the first two quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the first two quarters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the quarterback that threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8,
                    11
                ],
                [],
                [
                    4,
                    5,
                    6,
                    10
                ],
                [
                    7
                ],
                [
                    9,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "the",
                "longest",
                "touchdown",
                "pass",
                "of",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    10
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    4,
                    6,
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1567_d44e1737-77e7-449f-9a12-9d7b985a1cb3",
        "question_text": "Who kicked the longest field goal in the first two quarters?",
        "split": "train",
        "decomposition": "return field goals in  the  first two quarters ;return the  longest of #1 ;return who  kicked #2",
        "program": [
            "SELECT['field goals in the first two quarters']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals in the first two quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the first two quarters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    10
                ],
                [],
                [
                    3,
                    4,
                    5,
                    9
                ],
                [
                    6
                ],
                [
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "the",
                "longest",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    7,
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    3,
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1614_917de1ef-3a17-4762-87ca-32a18e2df75e",
        "question_text": "Which player caught the longest TD pass of the first quarter?",
        "split": "train",
        "decomposition": "return TD passes of the  first quarter ;return the  longest of #1 ;return the  player that caught #2",
        "program": [
            "SELECT['TD passes of the first quarter']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that caught #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that caught #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD passes of the first quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that caught #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that caught #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the first quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "the",
                "longest",
                "TD",
                "pass",
                "of",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1620_bd6e22bc-fb24-4114-abea-011254123a21",
        "question_text": "Who made the touchdown on the longest scoring play?",
        "split": "train",
        "decomposition": "return scoring plays ;return the  longest of #1 ;return who  made the  touchdown on #2",
        "program": [
            "SELECT['scoring plays']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who made the touchdown on #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who made the touchdown on #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "scoring plays"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made the touchdown on #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scoring plays)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made the touchdown on #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scoring plays)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    7
                ],
                [],
                [
                    3,
                    6,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "made",
                "the",
                "touchdown",
                "on",
                "the",
                "longest",
                "scoring",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1649_1e29b972-01ec-4c4f-84a6-6cdad7cf4813",
        "question_text": "Who completed the fourth longest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return the  fourth longest of #1 ;return who  completed #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who completed #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who completed #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "completed",
                "the",
                "fourth",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1675_97c5904d-59ba-4cd8-9590-8e23974d314a",
        "question_text": "Which player had the longest reception for a touchdown in the game?",
        "split": "train",
        "decomposition": "return touchdown receptions in  the  game ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown receptions in the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown receptions in the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions in the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    10
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    6,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "reception",
                "for",
                "a",
                "touchdown",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [
                    4
                ],
                [
                    9
                ],
                [
                    6
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    11
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_169_312a4316-8b5d-4af2-b471-6fd2e2a7b9c8",
        "question_text": "Who kicked the fourth longest field goal of the game?",
        "split": "train",
        "decomposition": "return field goals of the  game ;return the  fourth longest of #1 ;return who  kicked #2",
        "program": [
            "SELECT['field goals of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "the",
                "fourth",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    7,
                    8
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1748_035ed0c6-4e04-49a2-b48d-539c13c722ee",
        "question_text": "How long was the longest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return longest of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1820_43de0ec9-784f-4d6b-a81f-96c1169fc2ed",
        "question_text": "In what quarter did David Garrard throw his third longest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes of David Garrard ;return the  third longest of #1 ;return in  which quarter did David Garrard throw #2",
        "program": [
            "SELECT['touchdown passes of David Garrard']",
            "AGGREGATE['max', '#1']",
            "PROJECT['in which quarter did David Garrard throw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "in which quarter did David Garrard throw #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes of David Garrard"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter did David Garrard throw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of David Garrard)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter did David Garrard throw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of David Garrard)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    8
                ],
                [
                    4,
                    5,
                    7,
                    9,
                    10,
                    11
                ],
                [
                    3
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "In",
                "what",
                "quarter",
                "did",
                "David",
                "Garrard",
                "throw",
                "his",
                "third",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    5,
                    7
                ],
                [
                    9,
                    11
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1847_953f844c-0ee3-4414-bc5e-cdc83cea87c7",
        "question_text": "Who made the longest touchdown run in the NFL that season?",
        "split": "train",
        "decomposition": "return touchdown runs in  the  NFL that season ;return the  longest of #1 ;return who  made #2",
        "program": [
            "SELECT['touchdown runs in the NFL that season']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who made #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who made #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown runs in the NFL that season"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs in the NFL that season)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs in the NFL that season)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    9
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "made",
                "the",
                "longest",
                "touchdown",
                "run",
                "in",
                "the",
                "NFL",
                "that",
                "season",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    7,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1896_4a55acd2-e896-4704-bf48-2fcce1e86f63",
        "question_text": "How long was the second longest passing touchdown?",
        "split": "train",
        "decomposition": "return passing touchdown ;return second longest of  #1 ;return how long was #2",
        "program": [
            "SELECT['passing touchdown']",
            "AGGREGATE['max', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "passing touchdown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing touchdown)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing touchdown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "longest",
                "passing",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    7
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1965_55128915-dba7-4b7a-aa64-9b4c222387d3",
        "question_text": "Who caught the longest TD pass?",
        "split": "train",
        "decomposition": "return TD passes ;return the  longest of #1 ;return who  caught #2",
        "program": [
            "SELECT['TD passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who caught #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "the",
                "longest",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2079_da272085-afdb-4452-8c1f-834fc5ed12a9",
        "question_text": "Which player received the longest pass for a touchdown?",
        "split": "train",
        "decomposition": "return touchdown passes ;return the  longest of #1 ;return the  player that received #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that received #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that received #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that received #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that received #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "received",
                "the",
                "longest",
                "pass",
                "for",
                "a",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2100_feddba34-86d3-488b-b084-92066e75f494",
        "question_text": "Which player had the longest play of the game?",
        "split": "train",
        "decomposition": "return plays of the  game ;return the  longest of #1 ;return which player had #2",
        "program": [
            "SELECT['plays of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['which player had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "plays of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(plays of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2299_89d6a186-6319-4cb7-b7b0-536a9fc8c8c4",
        "question_text": "How long was the longest touchdown play?",
        "split": "train",
        "decomposition": "return touchdown plays ;return longest of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown plays']",
            "AGGREGATE['max', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown plays"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "longest",
                "touchdown",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2567_7a118559-8e2a-4c14-b7ac-e38cfc131b48",
        "question_text": "Which player kicked  the longest field goal?",
        "split": "train",
        "decomposition": "return field goals ;return the  longest of #1 ;return the  player that kicked #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that kicked #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "the",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2621_31f9d8a0-5b75-4c7d-99c0-c46bc192767c",
        "question_text": "How long was Kenbrell Thompkins's second longest touchdown reception?",
        "split": "train",
        "decomposition": "return touchdown receptions of Kenbrell Thompkins ;return second longest of #1 ;return How long was  #2",
        "program": [
            "SELECT['touchdown receptions of Kenbrell Thompkins']",
            "AGGREGATE['max', '#1']",
            "PROJECT['How long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "How long was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown receptions of Kenbrell Thompkins"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Kenbrell Thompkins)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(How long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of Kenbrell Thompkins)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    9
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "Kenbrell",
                "Thompkins",
                "'s",
                "second",
                "longest",
                "touchdown",
                "reception",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    8,
                    9
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2621_5d180996-7ed6-4546-88e8-b953626666d7",
        "question_text": "Which player kicked the longest field goal of the game?",
        "split": "train",
        "decomposition": "return field goals of the  game ;return the  longest of #1 ;return the  player that kicked #2",
        "program": [
            "SELECT['field goals of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that kicked #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "the",
                "longest",
                "field",
                "goal",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2627_7705991d-8ee6-4bf9-8b8e-eb8262381b66",
        "question_text": "Which player threw the fifth longest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return the  fifth longest of #1 ;return the  player that threw #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that threw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that threw #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "the",
                "fifth",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2651_7784e678-ef07-4397-be29-f1bb16860351",
        "question_text": "Which player had the longest TD run?",
        "split": "train",
        "decomposition": "return TD runs ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['TD runs']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "TD",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2673_de82f42d-04cf-4dd5-b5c7-83dd2fe4351f",
        "question_text": "Which team had the longest scoring play of the game?",
        "split": "train",
        "decomposition": "return scoring plays of the  game ;return longest of #1 ;return team of #2",
        "program": [
            "SELECT['scoring plays of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['team of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "team of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "scoring plays of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(team of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scoring plays of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(team of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(scoring plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "the",
                "longest",
                "scoring",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2715_43a6a186-2031-4283-9119-a2b7f3d90908",
        "question_text": "Which kicker had the highest accuracy of the three mentioned?",
        "split": "train",
        "decomposition": "return accuracy of the  mentioned kickers ;return highest of #1 ;return kicker of #2",
        "program": [
            "SELECT['accuracy of the mentioned kickers']",
            "AGGREGATE['max', '#1']",
            "PROJECT['kicker of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "kicker of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "accuracy of the mentioned kickers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(kicker of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(accuracy of the mentioned kickers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(kicker of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(accuracy of the mentioned kickers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "the",
                "highest",
                "accuracy",
                "of",
                "the",
                "three",
                "mentioned",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2734_1e17abdb-575c-4831-8387-f90855b70117",
        "question_text": "Which player had the longest touchdown catch of the first half of play?",
        "split": "train",
        "decomposition": "return touchdown catches in  the  first half of play ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown catches in the first half of play']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown catches in the first half of play"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown catches in the first half of play)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown catches in the first half of play)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    6
                ],
                [
                    4,
                    5,
                    12
                ],
                [
                    7,
                    11
                ],
                [
                    9,
                    10,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "catch",
                "of",
                "the",
                "first",
                "half",
                "of",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    6,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8,
                    9,
                    11
                ],
                [
                    6
                ],
                [],
                [
                    4,
                    12
                ],
                [],
                [],
                [
                    10,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3045_3fc5bc7c-4f6b-4a01-9484-4df82df92e3a",
        "question_text": "Who threw the longest touchdown pass in overtime?",
        "split": "train",
        "decomposition": "return touchdown passes in  overtime ;return the  longest of #1 ;return who  threw #2",
        "program": [
            "SELECT['touchdown passes in overtime']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who threw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who threw #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes in overtime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in overtime)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes in overtime)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "the",
                "longest",
                "touchdown",
                "pass",
                "in",
                "overtime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_326_8583a25d-13a7-4f72-a866-b92a768546cd",
        "question_text": "Who scored the longest touchdown reception of the game?",
        "split": "train",
        "decomposition": "return touchdown receptions of the  game ;return the  longest of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdown receptions of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown receptions of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    7
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "touchdown",
                "reception",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3295_c921e71b-5c49-498f-9e3c-d75422e1bd90",
        "question_text": "Which player had the longest run for a touchdown before halftime?",
        "split": "train",
        "decomposition": "return touchdown runs before halftime ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown runs before halftime']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown runs before halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs before halftime)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs before halftime)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "run",
                "for",
                "a",
                "touchdown",
                "before",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    5
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3302_f50734fa-2a9e-4215-8cdd-189fc570714d",
        "question_text": "Who threw the longest touchdown pass of the first half?",
        "split": "train",
        "decomposition": "return touchdown passes of the  first half ;return longest of #1 ;return who  threw #2",
        "program": [
            "SELECT['touchdown passes of the first half']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who threw #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who threw #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown passes of the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "the",
                "longest",
                "touchdown",
                "pass",
                "of",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3333_e9bed43f-9fa9-486f-94dd-e7fb03fb9185",
        "question_text": "Which player had the longest touchdown reception at halftime?",
        "split": "train",
        "decomposition": "return touchdown receptions at halftime ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown receptions at halftime']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown receptions at halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions at halftime)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions at halftime)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "reception",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_364_7fb830a9-8b75-4105-b1c0-c50b62812880",
        "question_text": "How long was the second longest touchdown play?",
        "split": "train",
        "decomposition": "return touchdown plays ;return second longest of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown plays']",
            "AGGREGATE['max', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown plays"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "longest",
                "touchdown",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_522_912763ea-3103-40c7-81c5-aded302df0d3",
        "question_text": "Which player completed the eighth longest TD pass of the game?",
        "split": "train",
        "decomposition": "return TD passes of the  game ;return eighth longest of #1 ;return player that completed #2",
        "program": [
            "SELECT['TD passes of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['player that completed #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "player that completed #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD passes of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(player that completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "completed",
                "the",
                "eighth",
                "longest",
                "TD",
                "pass",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_522_b5b1c329-9266-4516-9a45-ddec53943d85",
        "question_text": "Which player completed the eleventh longest TD pass of the game?",
        "split": "train",
        "decomposition": "return TD passes of the  game ;return the  eleventh longest of #1 ;return which player completed #2",
        "program": [
            "SELECT['TD passes of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['which player completed #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player completed #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD passes of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player completed #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "completed",
                "the",
                "eleventh",
                "longest",
                "TD",
                "pass",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_555_7223ebac-326e-4da1-970a-8cf41a7415f8",
        "question_text": "Which player had the longest touchdown score of the game?",
        "split": "train",
        "decomposition": "return touchdown scores of the  game ;return the  longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown scores of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown scores of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown scores of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown scores of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "score",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_571_03281bd9-5580-49df-b411-3985e1787f9f",
        "question_text": "Which player scored the third longest touchdown?",
        "split": "train",
        "decomposition": "return longness of touchdowns ;return third highest of #1 ;return the  player that scored #2",
        "program": [
            "SELECT['longness of touchdowns']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "longness of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(longness of touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(longness of touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "third",
                "longest",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_672_71e07c4c-e7cd-41f3-bbb0-6ab3d3ded4ee",
        "question_text": "Who scored the longest touchdown of the game?",
        "split": "train",
        "decomposition": "return touchdowns of the  game ;return the  longest of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdowns of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_833_4957636a-f212-405f-8355-b4150dbe46f6",
        "question_text": "Which receiver had the longest pass for a TD?",
        "split": "train",
        "decomposition": "return TD passes ;return the  longest of #1 ;return the  receiver that had #2",
        "program": [
            "SELECT['TD passes']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the receiver that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the receiver that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "TD passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the receiver that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the receiver that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "receiver",
                "had",
                "the",
                "longest",
                "pass",
                "for",
                "a",
                "TD",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_104_a565bddc-a727-4956-b14e-6e6d6f57abd9",
        "question_text": "Which player had the longest touchdown?",
        "split": "dev",
        "decomposition": "return touchdowns ;return longest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdowns']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "longest",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1136_500eb537-6c16-447b-ae0d-f480eb336156",
        "question_text": "Who scored a touchdown from the farthest distance?",
        "split": "dev",
        "decomposition": "return distances of touchdowns ;return the  highest of #1 ;return who  scored a touchdown from  #2",
        "program": [
            "SELECT['distances of touchdowns']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored a touchdown from #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored a touchdown from #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "distances of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored a touchdown from #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(distances of touchdowns)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored a touchdown from #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(distances of touchdowns)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [],
                [
                    3,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "a",
                "touchdown",
                "from",
                "the",
                "farthest",
                "distance",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1789_d86bde75-14f0-4758-a17b-581cd9f5e150",
        "question_text": "What team had the longest fumble return of the game?",
        "split": "dev",
        "decomposition": "return fumble returns of the  game ;return the  longest of #1 ;return the  team of #2",
        "program": [
            "SELECT['fumble returns of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the team of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the team of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "fumble returns of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(fumble returns of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(fumble returns of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "team",
                "had",
                "the",
                "longest",
                "fumble",
                "return",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    7,
                    8
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1873_40fab99c-46f8-40ec-8987-2d36c1a73b82",
        "question_text": "Who scored on the longest play for a touchdown?",
        "split": "dev",
        "decomposition": "return touchdown plays ;return the  longest of #1 ;return who  scored on #2",
        "program": [
            "SELECT['touchdown plays']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored on #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored on #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdown plays"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored on #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored on #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown plays)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "on",
                "the",
                "longest",
                "play",
                "for",
                "a",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    4,
                    8
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1996_c2d0c5dc-a6d9-45cf-a3db-904264b3a27a",
        "question_text": "Who scored the longest touchdown of the entire game?",
        "split": "dev",
        "decomposition": "return touchdowns of the  game ;return longest of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdowns of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "touchdown",
                "of",
                "the",
                "entire",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    3,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1996_d0817b74-3b67-4268-9a74-393de312f9a9",
        "question_text": "Who scored the longest touchdown of the first two quarters?",
        "split": "dev",
        "decomposition": "return touchdowns of the  first two quarters ;return the  longest of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdowns of the first two quarters']",
            "AGGREGATE['max', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "touchdowns of the first two quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the first two quarters)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the first two quarters)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6,
                    9
                ],
                [],
                [
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    7,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "touchdown",
                "of",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    8
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    3,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_102_72da542f-6d8b-41bc-b468-c310090ce86e",
        "question_text": "How many field goals did Dawson have between 30 and 40 yards?",
        "split": "train",
        "decomposition": "return yards of field goals of  Dawson ;return #1 that are at least 30 yards ;return #2 that are at most 40 yards ;return the  number of  #3",
        "program": [
            "SELECT['yards of field goals of Dawson']",
            "FILTER['#1', 'that are at least 30 yards']",
            "FILTER['#2', 'that are at most 40 yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "yards of field goals of Dawson"
                    ],
                    "that are at least 30 yards"
                ],
                "that are at most 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dawson)"
                    ],
                    "GET_QUESTION_SPAN(that are at least 30 yards)"
                ],
                "GET_QUESTION_SPAN(that are at most 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "FILTER_NUM_GT_EQ",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dawson)"
                    ],
                    "GET_QUESTION_NUMBER(30)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    3,
                    8,
                    10
                ],
                [],
                [
                    12
                ],
                [
                    5,
                    11
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Dawson",
                "have",
                "between",
                "30",
                "and",
                "40",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    5
                ],
                [
                    8,
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1593_9f08a551-ea6e-4dcd-b7b5-ed2880d1dbaa",
        "question_text": "How many field goals meaured between 40-yards and 55-yards in length?",
        "split": "train",
        "decomposition": "return lengths of field goals ;return #1 that are at least 40-yards ;return #2 that are at most 55-yards ;return the  number of  #3",
        "program": [
            "SELECT['lengths of field goals']",
            "FILTER['#1', 'that are at least 40-yards']",
            "FILTER['#2', 'that are at most 55-yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "lengths of field goals"
                    ],
                    "that are at least 40-yards"
                ],
                "that are at most 55-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(lengths of field goals)"
                    ],
                    "GET_QUESTION_SPAN(that are at least 40-yards)"
                ],
                "GET_QUESTION_SPAN(that are at most 55-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "FILTER_NUM_GT_EQ",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(lengths of field goals)"
                    ],
                    "GET_QUESTION_NUMBER(40)"
                ],
                "GET_QUESTION_NUMBER(55)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    6,
                    8,
                    10
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "meaured",
                "between",
                "40-yards",
                "and",
                "55-yards",
                "in",
                "length",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    8,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1849_19bf623b-6d24-418d-961b-ae69ba71cd84",
        "question_text": "How many touchdowns were scored between 10 and 20 yards, inclusively?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return #1 that are at least 10 yards ;return #2 that are at most 20 yards ;return the  number of  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "FILTER['#1', 'that are at least 10 yards']",
            "FILTER['#2', 'that are at most 20 yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "yards of touchdowns"
                    ],
                    "that are at least 10 yards"
                ],
                "that are at most 20 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ],
                    "GET_QUESTION_SPAN(that are at least 10 yards)"
                ],
                "GET_QUESTION_SPAN(that are at most 20 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "FILTER_NUM_GT_EQ",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ],
                    "GET_QUESTION_NUMBER(10)"
                ],
                "GET_QUESTION_NUMBER(20)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    7
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    3,
                    4,
                    6,
                    8,
                    9,
                    11
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "were",
                "scored",
                "between",
                "10",
                "and",
                "20",
                "yards",
                ",",
                "inclusively",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3,
                    6,
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    4,
                    9,
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2217_787da4be-fc3b-4a91-88e7-bd31689bc8d8",
        "question_text": "How many field goals between 30 and 40 yards did Mason Crosby make?",
        "split": "train",
        "decomposition": "return yards of field goals of  Mason Crosby ;return #1 that are at least 30 yards ;return #2 that are at most 40 yards ;return the  number of  #3",
        "program": [
            "SELECT['yards of field goals of Mason Crosby']",
            "FILTER['#1', 'that are at least 30 yards']",
            "FILTER['#2', 'that are at most 40 yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "yards of field goals of Mason Crosby"
                    ],
                    "that are at least 30 yards"
                ],
                "that are at most 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ],
                    "GET_QUESTION_SPAN(that are at least 30 yards)"
                ],
                "GET_QUESTION_SPAN(that are at most 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "FILTER_NUM_GT_EQ",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Mason Crosby)"
                    ],
                    "GET_QUESTION_NUMBER(30)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [
                    13
                ],
                [
                    8,
                    10,
                    11,
                    12
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "between",
                "30",
                "and",
                "40",
                "yards",
                "did",
                "Mason",
                "Crosby",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    13
                ],
                [
                    8,
                    10,
                    11,
                    12
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2389_17167581-c43a-4903-a290-49fa692b5986",
        "question_text": "How many touchdown passes between 10 and 30 yards were there?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return #1 that are at least 10 yards ;return #2 that are at most 30 yards ;return the  number of  #3",
        "program": [
            "SELECT['yards of touchdown passes']",
            "FILTER['#1', 'that are at least 10 yards']",
            "FILTER['#2', 'that are at most 30 yards']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "yards of touchdown passes"
                    ],
                    "that are at least 10 yards"
                ],
                "that are at most 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ],
                    "GET_QUESTION_SPAN(that are at least 10 yards)"
                ],
                "GET_QUESTION_SPAN(that are at most 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT_EQ",
                [
                    "FILTER_NUM_GT_EQ",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ],
                    "GET_QUESTION_NUMBER(10)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    2,
                    11
                ],
                [
                    5,
                    8,
                    9
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "between",
                "10",
                "and",
                "30",
                "yards",
                "were",
                "there",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1046_7c7a226b-22f5-413b-896d-88a26dc4832b",
        "question_text": "Were more touchdowns scored in the first half or the second half?",
        "split": "train",
        "decomposition": "return touchdowns scored in  the  first half  ;return touchdowns scored in  the  second half  ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdowns scored in the first half']",
            "SELECT['touchdowns scored in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns scored in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns scored in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns scored in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns scored in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns scored)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns scored)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    8
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Were",
                "more",
                "touchdowns",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1046_a5461acc-e328-4e8d-9271-0ecdf5d3d172",
        "question_text": "Were more field goals scored in the first half or the second half?",
        "split": "train",
        "decomposition": "return field goals scored in  the  first half  ;return field goals scored in  the  second half  ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals scored in the first half']",
            "SELECT['field goals scored in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals scored in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals scored in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals scored in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals scored in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals scored)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals scored)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Were",
                "more",
                "field",
                "goals",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    12
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1347_5a263311-fee2-4fda-87c5-17f8e9d9bfc9",
        "question_text": "Did Hauschka kick more field goals in the first half or the second half?",
        "split": "train",
        "decomposition": "return field goals that Hauschka kick in  the first half  ;return field goals that Hauschka kick in  the second half  ;return the number of  #1 ;return the number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['field goals that Hauschka kick in the first half']",
            "SELECT['field goals that Hauschka kick in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Hauschka kick in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Hauschka kick in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Hauschka kick in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Hauschka kick in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "Hauschka",
                "kick",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "half",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    2,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9,
                    13
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    10
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1347_a247c3a4-c564-4623-a9aa-a2f62dc8c832",
        "question_text": "Did Hauschka kick more field goals in the first half or second half?",
        "split": "train",
        "decomposition": "return field goals that Hauschka kick in  the first half  ;return field goals that Hauschka kick in  the second half  ;return number of  #1 ;return number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['field goals that Hauschka kick in the first half']",
            "SELECT['field goals that Hauschka kick in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Hauschka kick in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Hauschka kick in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Hauschka kick in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Hauschka kick in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Hauschka kick)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Did",
                "Hauschka",
                "kick",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "half",
                "or",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    8,
                    9,
                    12
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    10
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1754_45601736-83fa-4572-8316-7c191a887955",
        "question_text": "Did John Kasay kick more field goals in the first or second quarter?",
        "split": "train",
        "decomposition": "return field goals that John Kasay kick in  the first quarter ;return field goals that John Kasay kick in  the second quarter ;return number of  #1 ;return number of  #2 ;return which is  more of  #3 , #4",
        "program": [
            "SELECT['field goals that John Kasay kick in the first quarter']",
            "SELECT['field goals that John Kasay kick in the second quarter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that John Kasay kick in the first quarter"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that John Kasay kick in the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that John Kasay kick in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that John Kasay kick in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that John Kasay kick)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that John Kasay kick)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    5,
                    6,
                    10
                ],
                [
                    3
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    7,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Did",
                "John",
                "Kasay",
                "kick",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "or",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    12
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    10
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3229_1f2b3f85-82d5-4a7d-a3c5-adbf16b48f99",
        "question_text": "Which half had the most field goals, the first or second?",
        "split": "train",
        "decomposition": "return field goals in  the  first half ;return field goals in  the  second half ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals in the first half']",
            "SELECT['field goals in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals in the first half"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the first half)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    1,
                    4
                ],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "half",
                "had",
                "the",
                "most",
                "field",
                "goals",
                ",",
                "the",
                "first",
                "or",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    7,
                    10
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    1,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1873_0341eaa0-e154-432e-85d5-a88ee3de7bfc",
        "question_text": "Which team scored more touchdowns in the first quarter, Texans or Chargers?",
        "split": "dev",
        "decomposition": "return touchdowns of the  Texans in  the first quarter ;return touchdowns of the  Chargers in  the first quarter ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdowns of the Texans in the first quarter']",
            "SELECT['touchdowns of the Chargers in the first quarter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of the Texans in the first quarter"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of the Chargers in the first quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Texans in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Chargers in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Texans)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Chargers)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    9,
                    11
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "more",
                "touchdowns",
                "in",
                "the",
                "first",
                "quarter",
                ",",
                "Texans",
                "or",
                "Chargers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3
                ],
                [],
                [
                    1,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9,
                    11
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1089_e9bb1666-88db-4efe-a468-bfe21c2d1a2e",
        "question_text": "How many yards longer was Adam Vinatieri's shortest field goal than his longest?",
        "split": "train",
        "decomposition": "return yards of field goals of  Adam Vinatieri ;return shortest of #1 ;return longest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Adam Vinatieri']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Adam Vinatieri"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Adam Vinatieri"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Adam Vinatieri)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Adam Vinatieri)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Adam Vinatieri)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Adam Vinatieri)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    8,
                    9,
                    10,
                    12
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    2,
                    3,
                    7,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Adam",
                "Vinatieri",
                "'s",
                "shortest",
                "field",
                "goal",
                "than",
                "his",
                "longest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    8,
                    12
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    3,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    8,
                    9,
                    10,
                    12
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1247_bb78a71f-1414-4703-a0da-4f3bbb4fd8c6",
        "question_text": "How many yards shorter was the shortest field goal than the longest one?",
        "split": "train",
        "decomposition": "return yards of field goals ;return the  shortest of #1 ;return the  longest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    2,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "the",
                "shortest",
                "field",
                "goal",
                "than",
                "the",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2945_1b806ba0-8c8b-4cf7-8826-23a254cd4331",
        "question_text": "How many yards longer was the first touchdown than the last one?",
        "split": "train",
        "decomposition": "return yards of touchdowns ;return first of #1 ;return last of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    2,
                    3,
                    11
                ],
                [],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "first",
                "touchdown",
                "than",
                "the",
                "last",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    3,
                    7
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_838_ec8d7cec-65e0-45d3-99ab-2fd5577aad9e",
        "question_text": "How many yards longer was Delhomme's shortest TD pass than Bulger's longest one?",
        "split": "train",
        "decomposition": "return yards of Delhomme 's  TD passes ;return yards of Bulger 's  TD passes ;return shortest of #1 ;return longest of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT[\"yards of Delhomme 's TD passes\"]",
            "SELECT[\"yards of Bulger 's TD passes\"]",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of Delhomme 's TD passes"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of Bulger 's TD passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Delhomme 's TD passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Bulger 's TD passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Delhomme 's TD passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Bulger 's TD passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    2,
                    3,
                    6,
                    8,
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Delhomme",
                "'s",
                "shortest",
                "TD",
                "pass",
                "than",
                "Bulger",
                "'s",
                "longest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    3,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    10
                ],
                [],
                [
                    6,
                    8,
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_912_8b9b6b7c-f6d6-432c-90e8-662bce3806f6",
        "question_text": "How many yards difference was Donovan McNabb's first touchdown pass compared to his last?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Donovan McNabb ;return first of #1 ;return last of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Donovan McNabb']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes of Donovan McNabb"
                ]
            ],
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Donovan McNabb"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    6,
                    8,
                    9,
                    13
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    7,
                    10
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Donovan",
                "McNabb",
                "'s",
                "first",
                "touchdown",
                "pass",
                "compared",
                "to",
                "his",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    13
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    8,
                    13
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    9
                ],
                [
                    7,
                    10
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_114_742bd9f9-20f1-4084-8764-4bc105559829",
        "question_text": "How many yards shorter was the shortest rushing touchdown compared to the shortest field goal?",
        "split": "train",
        "decomposition": "return yards of rushing touchdown ;return shortest  of #1 ;return yards of field goals ;return shortest  of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of rushing touchdown']",
            "AGGREGATE['min', '#1']",
            "SELECT['yards of field goals']",
            "AGGREGATE['min', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of rushing touchdown"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of rushing touchdown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of rushing touchdown)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    8,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "the",
                "shortest",
                "rushing",
                "touchdown",
                "compared",
                "to",
                "the",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    12,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1988_06a690b9-db22-4973-92a2-78e5d3e35916",
        "question_text": "How many yards of difference are there between the shortest field goal and the second shortest field goal?",
        "split": "train",
        "decomposition": "return yards of  field goal  ;return the shortest  of  #1 ;return the second shortest  of  #1 ;return the difference of  #2 and #3",
        "program": [
            "SELECT['yards of field goal']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goal"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goal"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goal)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goal)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goal)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goal)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    2,
                    5,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    10,
                    11,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "difference",
                "are",
                "there",
                "between",
                "the",
                "shortest",
                "field",
                "goal",
                "and",
                "the",
                "second",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    12
                ],
                [],
                [
                    9,
                    10,
                    11,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    2,
                    5
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    12
                ],
                [
                    14
                ],
                [
                    11,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_438_22c17025-3df9-4493-b03d-abf5d87b23c1",
        "question_text": "How many yards were there between Kasay's shortest and second shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Kasay ;return the  second shortest  of #1 ;return the  shortest  of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Kasay']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Kasay"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Kasay"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Kasay)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "there",
                "between",
                "Kasay",
                "'s",
                "shortest",
                "and",
                "second",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    5,
                    9
                ],
                [],
                [
                    7,
                    8,
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1149_aec6b309-c05e-453e-974c-1c701549ddc3",
        "question_text": "Which kicker had the longest field goal in the second quarter?",
        "split": "train",
        "decomposition": "return field goals in  the  second quarter ;return the  longest of #1 ;return which kicker had #2",
        "program": [
            "SELECT['field goals in the second quarter']",
            "AGGREGATE['max', '#1']",
            "PROJECT['which kicker had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which kicker had #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals in the second quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which kicker had #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the second quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which kicker had #REF)",
            [
                "AGGREGATE_max",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals)"
                    ],
                    "GET_QUESTION_SPAN(in the second quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "the",
                "longest",
                "field",
                "goal",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    5,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    1
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1804_bf7165ac-1fc8-40f2-b2d4-2d9c61df6de8",
        "question_text": "Which player kicked the longest field goal in the first quarter?",
        "split": "train",
        "decomposition": "return field goals in  the  first quarter ;return the  longest of #1 ;return which player kicked #2",
        "program": [
            "SELECT['field goals in the first quarter']",
            "AGGREGATE['max', '#1']",
            "PROJECT['which player kicked #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player kicked #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals in the first quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player kicked #REF)",
            [
                "AGGREGATE_max",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals)"
                    ],
                    "GET_QUESTION_SPAN(in the first quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "kicked",
                "the",
                "longest",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    5,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_13_a5f02b9e-84c3-4e11-b7ff-f22289d9aee8",
        "question_text": "How many yards longer was Nedney's average length of field goals than Rackers' average length of field goals?",
        "split": "train",
        "decomposition": "return yards of field goals of  Nedney ;return yards of field goals of  Rackers ;return the  average of #1 ;return the  average of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Nedney']",
            "SELECT['yards of field goals of Rackers']",
            "AGGREGATE['avg', '#1']",
            "AGGREGATE['avg', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "yards of field goals of Nedney"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "yards of field goals of Rackers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Nedney)"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Rackers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Nedney)"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Rackers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    12
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    9
                ],
                [],
                [
                    10,
                    11,
                    13,
                    14,
                    15,
                    16,
                    18,
                    19
                ],
                [
                    17
                ],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Nedney",
                "'s",
                "average",
                "length",
                "of",
                "field",
                "goals",
                "than",
                "Rackers",
                "'",
                "average",
                "length",
                "of",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    15,
                    16
                ],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    6,
                    7,
                    8,
                    11
                ],
                [],
                [
                    13
                ],
                [],
                [
                    10,
                    12,
                    18
                ],
                [
                    14,
                    15,
                    16,
                    19
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    19
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    19
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3303_48a534f1-af65-4514-b54b-fe0ad749f308",
        "question_text": "How many yards longer was Bullock's average yards of field goal than Gonzalez's average yards of field goals?",
        "split": "train",
        "decomposition": "return yards  of field goals from  Bullock ;return yards  of field goals from  Gonzalez ;return the  average of #1 ;return the  average of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals from Bullock']",
            "SELECT['yards of field goals from Gonzalez']",
            "AGGREGATE['avg', '#1']",
            "AGGREGATE['avg', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "yards of field goals from Bullock"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "yards of field goals from Gonzalez"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Bullock)"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Gonzalez)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Bullock)"
                ]
            ],
            [
                "AGGREGATE_avg",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals from Gonzalez)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    12
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    13,
                    14,
                    15,
                    16,
                    18,
                    19
                ],
                [
                    17
                ],
                [
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Bullock",
                "'s",
                "average",
                "yards",
                "of",
                "field",
                "goal",
                "than",
                "Gonzalez",
                "'s",
                "average",
                "yards",
                "of",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    11,
                    13
                ],
                [],
                [
                    14,
                    15,
                    16
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    2,
                    6,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [
                    10,
                    11,
                    12,
                    18
                ],
                [
                    13,
                    14,
                    15,
                    16,
                    19
                ],
                [],
                [],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    19
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    19
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1336_c62b083d-ca86-4e31-9e59-8af2b600feec",
        "question_text": "How many yards did the shortest rushing touchdown and the shortest passing touchdown combine for?",
        "split": "train",
        "decomposition": "return yards of rushing touchdowns ;return shortest  of #1 ;return yards of passing touchdowns ;return shortest  of #3 ;return sum of #2 and  #4",
        "program": [
            "SELECT['yards of rushing touchdowns']",
            "AGGREGATE['min', '#1']",
            "SELECT['yards of passing touchdowns']",
            "AGGREGATE['min', '#3']",
            "ARITHMETIC['sum', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of rushing touchdowns"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of passing touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of rushing touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passing touchdowns)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of rushing touchdowns)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of passing touchdowns)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    8
                ],
                [
                    1
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [],
                [
                    10,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "the",
                "shortest",
                "rushing",
                "touchdown",
                "and",
                "the",
                "shortest",
                "passing",
                "touchdown",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [],
                [],
                [],
                [
                    2,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    10,
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    2,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [
                    12
                ],
                [
                    10
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1245_b9c10490-949f-4d61-9720-b5fef389e04e",
        "question_text": "How many yards do the shortest touchdown run and the shortest touchdown pass combine for?",
        "split": "dev",
        "decomposition": "return yards of touchdown runs ;return shortest  of #1 ;return yards of touchdown passes ;return shortest  of #3 ;return sum of #2 and  #4",
        "program": [
            "SELECT['yards of touchdown runs']",
            "AGGREGATE['min', '#1']",
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['min', '#3']",
            "ARITHMETIC['sum', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown runs"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "do",
                "the",
                "shortest",
                "touchdown",
                "run",
                "and",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [],
                [],
                [
                    3
                ],
                [
                    2,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    10,
                    11,
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    2,
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    11
                ],
                [
                    10,
                    12
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1649_16955033-8b08-4af4-915f-d827f28cbfee",
        "question_text": "How many yards in all were Favre's touchdown passes in the second quarter?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Favre in  the  second quarter ;return the  sum of #1",
        "program": [
            "SELECT['yards of touchdown passes of Favre in the second quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdown passes of Favre in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Favre in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Favre)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    9
                ],
                [
                    3,
                    5,
                    10,
                    12,
                    13
                ],
                [
                    6,
                    7,
                    11
                ],
                [
                    8
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "in",
                "all",
                "were",
                "Favre",
                "'s",
                "touchdown",
                "passes",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [
                    3,
                    9,
                    13
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    10,
                    11,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    9
                ],
                [
                    3,
                    10,
                    12,
                    13
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1673_8ab884ea-60ae-4c23-a56d-211e3921792c",
        "question_text": "How many yards of touchdowns were scored in the first half?",
        "split": "train",
        "decomposition": "return yards of touchdowns that were scored in  the  first half ;return the  sum of #1",
        "program": [
            "SELECT['yards of touchdowns that were scored in the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdowns that were scored in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns that were scored in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns that were scored)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    3,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "touchdowns",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1726_8a36f377-150f-481e-ba54-51eebf89134e",
        "question_text": "How many yards of field goals were kicked in the second quarter?",
        "split": "train",
        "decomposition": "return yards of field goals that were kicked in  the  second quarter ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals that were kicked in the second quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals that were kicked in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals that were kicked in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were kicked)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    3,
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "field",
                "goals",
                "were",
                "kicked",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    4,
                    5,
                    7,
                    11
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1952_96d21a75-3ba4-4d79-a571-a47d5ba8c7b5",
        "question_text": "How many points did the Patriots get on their first drive of the third quarter?",
        "split": "train",
        "decomposition": "return points that the  Patriots did get ;return #1 on their first drive of the  third quarter ;return sum of #2",
        "program": [
            "SELECT['points that the Patriots did get']",
            "FILTER['#1', 'on their first drive of the third quarter']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "points that the Patriots did get"
                ],
                "on their first drive of the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Patriots did get)"
                ],
                "GET_QUESTION_SPAN(on their first drive of the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the Patriots did get)"
                ],
                "GET_QUESTION_SPAN(on their first drive of the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    6,
                    7
                ],
                [
                    9,
                    13,
                    14
                ],
                [
                    2,
                    4,
                    5,
                    8,
                    11,
                    12
                ],
                [
                    10
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Patriots",
                "get",
                "on",
                "their",
                "first",
                "drive",
                "of",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    6
                ],
                [
                    2
                ],
                [
                    14
                ],
                [],
                [
                    5
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    9,
                    13,
                    14
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2300_d4ccb1a9-815e-4f96-863a-bc6ed9984c11",
        "question_text": "how many yards did Cundoff make in the second quarter?",
        "split": "train",
        "decomposition": "return yards that Cundoff make in  the  second quarter ;return the  sum of #1",
        "program": [
            "SELECT['yards that Cundoff make in the second quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Cundoff make in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Cundoff make in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Cundoff make)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    8,
                    9
                ],
                [
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "Cundoff",
                "make",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    9
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2380_9da60ee6-0e72-469d-9ea0-2d1c9fa7de1c",
        "question_text": "How many field goal yards did Rob Bironas get in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals of  Rob Bironas in  the  first half ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Rob Bironas in the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Rob Bironas in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Rob Bironas in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Rob Bironas)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    6,
                    7,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goal",
                "yards",
                "did",
                "Rob",
                "Bironas",
                "get",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [
                    2,
                    12
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6,
                    8
                ],
                [
                    2
                ],
                [
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2654_d174d8fb-39bb-4769-9ae4-5987d18e59be",
        "question_text": "How many yards in touchdown scoring plays were there in the first half?",
        "split": "train",
        "decomposition": "return yards of touchdown scoring plays that were there  in  the  first half ;return sum of #1",
        "program": [
            "SELECT['yards of touchdown scoring plays that were there in the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdown scoring plays that were there in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown scoring plays that were there in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown scoring plays that were there)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    9,
                    11,
                    12
                ],
                [
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "in",
                "touchdown",
                "scoring",
                "plays",
                "were",
                "there",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    6,
                    12
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    6
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2801_faacbd41-faad-44c2-aae3-43d0cb0f3026",
        "question_text": "How many total yards of field goals did Mason Crosby have in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals that Mason Crosby have in  the  first half ;return sum of #1",
        "program": [
            "SELECT['yards of field goals that Mason Crosby have in the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals that Mason Crosby have in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals that Mason Crosby have in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Mason Crosby have)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [
                    6,
                    11,
                    13,
                    14
                ],
                [
                    4,
                    9,
                    12
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Mason",
                "Crosby",
                "have",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    5,
                    6,
                    14
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    2,
                    3,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    11,
                    13,
                    14
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2828_689e42e5-96b2-48cf-a425-b432f40cda6e",
        "question_text": "how many points did the steelers score in the first?",
        "split": "train",
        "decomposition": "return points that the  steelers score ;return #1 in  the  first ;return sum of #2",
        "program": [
            "SELECT['points that the steelers score']",
            "FILTER['#1', 'in the first']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "points that the steelers score"
                ],
                "in the first"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the steelers score)"
                ],
                "GET_QUESTION_SPAN(in the first)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points that the steelers score)"
                ],
                "GET_QUESTION_SPAN(in the first)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [
                    2,
                    4,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "points",
                "did",
                "the",
                "steelers",
                "score",
                "in",
                "the",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2906_fc738978-f62e-467d-b606-68f38f9bcb68",
        "question_text": "How many points did the Bengals score in the second quarter?",
        "split": "train",
        "decomposition": "return the  points that Bengals score ;return #1 in  the  second quarter ;return sum of #2",
        "program": [
            "SELECT['the points that Bengals score']",
            "FILTER['#1', 'in the second quarter']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "the points that Bengals score"
                ],
                "in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the points that Bengals score)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the points that Bengals score)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    2,
                    4,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Bengals",
                "score",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2988_85612bf4-d907-44b9-9f6c-bb8da22443b2",
        "question_text": "How many total yards did Gostkowski attempt to kick for field goals in the second half?",
        "split": "train",
        "decomposition": "return yards of field goals that Gostkowski attempts to kick in  the  second half ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals that Gostkowski attempts to kick in the second half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals that Gostkowski attempts to kick in the second half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals that Gostkowski attempts to kick in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Gostkowski attempts to kick)"
                ],
                "GET_QUESTION_SPAN(in the second half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    6,
                    8,
                    11,
                    12,
                    14,
                    15
                ],
                [
                    7,
                    9,
                    13
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "did",
                "Gostkowski",
                "attempt",
                "to",
                "kick",
                "for",
                "field",
                "goals",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    8,
                    10,
                    11,
                    15
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    9
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    10,
                    11
                ],
                [
                    8,
                    12,
                    14,
                    15
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3153_7b020725-5c5c-4a89-8e08-631d0efd70a8",
        "question_text": "how many yards did prater get in the third quarter?",
        "split": "train",
        "decomposition": "return yards of prater in  the  third quarter ;return sum of #1",
        "program": [
            "SELECT['yards of prater in the third quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of prater in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of prater in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of prater)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    8,
                    9
                ],
                [
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "prater",
                "get",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3338_d9bb1bc4-3771-49d7-864b-7fbd38131a41",
        "question_text": "How many yards did the two scores the Steelers got in the third quarter amount to?",
        "split": "train",
        "decomposition": "return yards of the  scores of  the   Steelers in  the third quarter ;return the  sum of #1",
        "program": [
            "SELECT['yards of the scores of the Steelers in the third quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of the scores of the Steelers in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the scores of the Steelers in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the scores of the Steelers)"
                ],
                "GET_QUESTION_SPAN(in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    6,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    4,
                    7,
                    8,
                    11,
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "the",
                "two",
                "scores",
                "the",
                "Steelers",
                "got",
                "in",
                "the",
                "third",
                "quarter",
                "amount",
                "to",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    5,
                    6,
                    13
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    12,
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [
                    8,
                    14
                ],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_630_ea1fd99d-2446-4948-84f8-bd52d93da276",
        "question_text": "How many total yards of passing touchdowns were scored in the first half?",
        "split": "train",
        "decomposition": "return yards of passing touchdowns in  the  first half ;return the  sum of #1",
        "program": [
            "SELECT['yards of passing touchdowns in the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of passing touchdowns in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing touchdowns in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of passing touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [
                    4,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "passing",
                "touchdowns",
                "were",
                "scored",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    8,
                    12
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_946_cabc3333-1df6-4f53-ad05-a8f1fa23a055",
        "question_text": "how many yards did moorman attempt but not get?",
        "split": "train",
        "decomposition": "return yards that moorman did attempt ;return #1 that moorman did not  get ;return sum of #2",
        "program": [
            "SELECT['yards that moorman did attempt']",
            "FILTER['#1', 'that moorman did not get']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards that moorman did attempt"
                ],
                "that moorman did not get"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that moorman did attempt)"
                ],
                "GET_QUESTION_SPAN(that moorman did not get)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that moorman did attempt)"
                ],
                "GET_QUESTION_SPAN(that moorman did not get)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "moorman",
                "attempt",
                "but",
                "not",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    7
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1390_f5206a46-fa68-4918-b981-721c2fb3b834",
        "question_text": "How many touchdown yards did Palmer have in the first quarter?",
        "split": "dev",
        "decomposition": "return yards of touchdowns of  Palmer in  the  first quarter ;return sum of #1",
        "program": [
            "SELECT['yards of touchdowns of Palmer in the first quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdowns of Palmer in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Palmer in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns of Palmer)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    2
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "yards",
                "did",
                "Palmer",
                "have",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4
                ],
                [],
                [
                    10
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_9bfd2c2f-7e89-4093-a547-4982ad999651",
        "question_text": "how many yards did Gould nail in the first quarter?",
        "split": "dev",
        "decomposition": "return yards that Gould did nail in  the  first quarter ;return sum of #1",
        "program": [
            "SELECT['yards that Gould did nail in the first quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Gould did nail in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Gould did nail in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Gould did nail)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    8,
                    9
                ],
                [
                    7
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "Gould",
                "nail",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    9
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_16_44343536-3610-4ed2-b478-d3e4d10417fe",
        "question_text": "How many combined yardage did  John Carney kick in the second quarter?",
        "split": "dev",
        "decomposition": "return yardage of John Carney in  the  second quarter ;return sum of #1",
        "program": [
            "SELECT['yardage of John Carney in the second quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yardage of John Carney in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yardage of John Carney in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yardage of John Carney)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    5,
                    6,
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "combined",
                "yardage",
                "did",
                "John",
                "Carney",
                "kick",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    5
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2036_5a6fd11f-fcbe-4711-9a96-bb0a8392483d",
        "question_text": "How many total yards did Carpenter have during the first quarter?",
        "split": "dev",
        "decomposition": "return yards of Carpenter in  the  first quarter ;return sum of #1",
        "program": [
            "SELECT['yards of Carpenter in the first quarter']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of Carpenter in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Carpenter in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Carpenter)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    5
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "did",
                "Carpenter",
                "have",
                "during",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    10
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [],
                [
                    5
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1673_055df216-0eff-4c84-99bb-c59118607f29",
        "question_text": "How many yards long, to the nearest integer, was the average touchdown in the first half?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  first half ;return the  average of #1 to the   nearest integer",
        "program": [
            "SELECT['yards of touchdowns in the first half']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of touchdowns in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    12
                ],
                [
                    14,
                    16,
                    17
                ],
                [
                    5,
                    6,
                    10,
                    11,
                    15
                ],
                [
                    13
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                ",",
                "to",
                "the",
                "nearest",
                "integer",
                ",",
                "was",
                "the",
                "average",
                "touchdown",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    12
                ],
                [],
                [
                    17
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    13,
                    14,
                    15,
                    16
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    13
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    12
                ],
                [],
                [
                    14,
                    16,
                    17
                ],
                [
                    5
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2654_7d4d7394-f383-4ee9-bb54-20641960d6a0",
        "question_text": "How many yards long, to one decimal place, were touchdowns in the first half on average?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  first half ;return the  average of #1 to one decimal place",
        "program": [
            "SELECT['yards of touchdowns in the first half']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of touchdowns in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    16,
                    17
                ],
                [
                    10,
                    11,
                    12,
                    14,
                    15
                ],
                [
                    5,
                    13
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                ",",
                "to",
                "one",
                "decimal",
                "place",
                ",",
                "were",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    9,
                    17
                ],
                [],
                [
                    11,
                    15
                ],
                [
                    10
                ],
                [],
                [
                    8,
                    12
                ],
                [
                    6
                ],
                [
                    14,
                    16
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    16,
                    17
                ],
                [
                    11
                ],
                [
                    12,
                    14,
                    15
                ],
                [
                    5
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    17
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2750_353619be-d41f-487e-86da-4ff2c8e6e0e9",
        "question_text": "How many yards on average were field goals kicked in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals kicked in  the  first half ;return average of #1",
        "program": [
            "SELECT['yards of field goals kicked in the first half']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of field goals kicked in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals kicked in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [
                    5,
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "on",
                "average",
                "were",
                "field",
                "goals",
                "kicked",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    6,
                    7,
                    8,
                    12
                ],
                [
                    5
                ],
                [],
                [
                    3,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_786_b5bd65bd-0593-45e8-91c2-12dba7f24860",
        "question_text": "How many yards long was the average field goal in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  first half ;return average of #1",
        "program": [
            "SELECT['yards of field goals in the first half']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of field goals in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    4,
                    5,
                    10
                ],
                [
                    8
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                "was",
                "the",
                "average",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    7,
                    12
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    2,
                    3,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_821_aee9fbea-0ca2-44c5-9f02-b1ad4dfb4b7f",
        "question_text": "How many yards long was the average touchdown in the first half?",
        "split": "train",
        "decomposition": "return yards of touchdowns in  the  first half ;return average of #1",
        "program": [
            "SELECT['yards of touchdowns in the first half']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of touchdowns in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    4,
                    5,
                    9
                ],
                [
                    7
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                "was",
                "the",
                "average",
                "touchdown",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1819_9359f7ca-5469-4ae6-b719-4303a9e15562",
        "question_text": "how many yards over 20 did kicker buehler get?",
        "split": "train",
        "decomposition": "return yards of kicker buehler ;return #1 over 20 ;return sum of #2",
        "program": [
            "SELECT['yards of kicker buehler']",
            "FILTER['#1', 'over 20']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of kicker buehler"
                ],
                "over 20"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicker buehler)"
                ],
                "GET_QUESTION_SPAN(over 20)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicker buehler)"
                ],
                "GET_QUESTION_NUMBER(20)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    8
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    2,
                    4,
                    7
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "over",
                "20",
                "did",
                "kicker",
                "buehler",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    8
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [
                    9
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1988_c994de15-e647-4287-9173-6f9e4eadc458",
        "question_text": "How many total yards were made on field goals longer than 40 yards?",
        "split": "train",
        "decomposition": "return yards  of field goals ;return #1 that were longer than 40 yards  ;return sum of #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that were longer than 40 yards']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "that were longer than 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(that were longer than 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [
                    13
                ],
                [
                    3,
                    4,
                    5,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "were",
                "made",
                "on",
                "field",
                "goals",
                "longer",
                "than",
                "40",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    12
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    5,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    13
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1867_334219f2-9adf-4069-baf9-6f79bd34eeee",
        "question_text": "Which players scored field goals longer than 40 yards?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 that are longer than 40 yards ;return players that scored #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that are longer than 40 yards']",
            "PROJECT['players that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that scored #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "that are longer than 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(that are longer than 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "field",
                "goals",
                "longer",
                "than",
                "40",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1996_e92d782f-9cb1-4cfe-8074-bebd50e9551f",
        "question_text": "Which players scored a touchdown longer than 10 yards in the first two quarters?",
        "split": "dev",
        "decomposition": "return touchdowns in  the  first two quarters ;return #1 that are longer than 10 yards ;return players that scored #2",
        "program": [
            "SELECT['touchdowns in the first two quarters']",
            "FILTER['#1', 'that are longer than 10 yards']",
            "PROJECT['players that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "players that scored #REF",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdowns in the first two quarters"
                ],
                "that are longer than 10 yards"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the first two quarters)"
                ],
                "GET_QUESTION_SPAN(that are longer than 10 yards)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(players that scored #REF)",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns in the first two quarters)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    10,
                    12,
                    13
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    11,
                    14
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "scored",
                "a",
                "touchdown",
                "longer",
                "than",
                "10",
                "yards",
                "in",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    12
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    13
                ],
                [
                    3,
                    4,
                    10,
                    11,
                    12
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    14
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2201_f703d43d-73fa-4fda-8913-d81bd5569700",
        "question_text": "How long was the Lion's longest field goal?",
        "split": "train",
        "decomposition": "return field goals of the  Lion ;return how long was  #1 ;return the  longest of #2",
        "program": [
            "SELECT['field goals of the Lion']",
            "PROJECT['how long was #REF', '#1']",
            "AGGREGATE['max', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "how long was #REF",
                [
                    "SELECT",
                    "field goals of the Lion"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the Lion)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of the Lion)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "Lion",
                "'s",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    5,
                    6,
                    8
                ],
                [],
                [
                    1
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2582_d28da8f3-4d14-49e0-86b5-761f6a329ca8",
        "question_text": "How long was the second longest touchdown run?",
        "split": "train",
        "decomposition": "return touchdown runs ;return how long was #1 ;return the second highest of  #2",
        "program": [
            "SELECT['touchdown runs']",
            "PROJECT['how long was #REF', '#1']",
            "AGGREGATE['max', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "how long was #REF",
                [
                    "SELECT",
                    "touchdown runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "longest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    1
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3174_67fc18f6-2219-4c2e-9f00-626c5ae1a1e2",
        "question_text": "How long were the two longest touchdown receptions?",
        "split": "train",
        "decomposition": "return touchdown receptions ;return how long were #1 ;return the  two longest of #2",
        "program": [
            "SELECT['touchdown receptions']",
            "PROJECT['how long were #REF', '#1']",
            "AGGREGATE['max', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "how long were #REF",
                [
                    "SELECT",
                    "touchdown receptions"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long were #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    4,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "were",
                "the",
                "two",
                "longest",
                "touchdown",
                "receptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    1,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_827_d30e9554-7055-4670-8ab6-a6dff750584c",
        "question_text": "How long was the longer TD run?",
        "split": "train",
        "decomposition": "return TD run ;return how long was  #1 ;return the  highest of #2",
        "program": [
            "SELECT['TD run']",
            "PROJECT['how long was #REF', '#1']",
            "AGGREGATE['max', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "how long was #REF",
                [
                    "SELECT",
                    "TD run"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD run)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(how long was #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD run)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "longer",
                "TD",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    }
]