[
    {
        "question_id": "DROP_dev_nfl_1245_ed8e8505-f012-4f5a-89fd-ffebfb642a3d",
        "question_text": "How many more field goals did Nedney make than Mare?",
        "split": "dev",
        "decomposition": "return field goals that Nedney makes ;return field goals that Mare makes ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals that Nedney makes']",
            "SELECT['field goals that Mare makes']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nedney makes"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Mare makes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nedney makes)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Mare makes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Nedney makes)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Mare makes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Nedney",
                "make",
                "than",
                "Mare",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1489_7ac4a330-0235-45b5-ac32-bd7e3eb43368",
        "question_text": "What players threw multiple touchdowns in the game?",
        "split": "train",
        "decomposition": "return players ;return touchdowns #1 threw ;return number of  #2 for each #1 ;return #1 where #3 is multiple",
        "program": [
            "SELECT['players']",
            "PROJECT['touchdowns #REF threw', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is multiple']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns #REF threw",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is multiple"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns #REF threw)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is multiple)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns #REF threw)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is multiple)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "players",
                "threw",
                "multiple",
                "touchdowns",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_571_bb930298-39ae-4e2b-a97a-a1c120f13739",
        "question_text": "Melite was originally called what?",
        "split": "train",
        "decomposition": "return what  was  Melite originally called",
        "program": [
            "SELECT['what was Melite originally called']"
        ],
        "nested_expression": [
            "SELECT",
            "what was Melite originally called"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what was Melite originally called)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what was Melite originally called)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5
                ]
            ],
            "question_tokens": [
                "Melite",
                "was",
                "originally",
                "called",
                "what",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_848_0cdec830-c13a-4a9d-8b3c-d04900010f9d",
        "question_text": "Which Rams quarterback had the most touchdowns?",
        "split": "train",
        "decomposition": "return Rams quarterback ;return #1 that had the  most touchdowns",
        "program": [
            "SELECT['Rams quarterback']",
            "FILTER['#1', 'that had the most touchdowns']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "Rams quarterback"
            ],
            "that had the most touchdowns"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Rams quarterback)"
            ],
            "GET_QUESTION_SPAN(that had the most touchdowns)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Rams quarterback)"
            ],
            "GET_QUESTION_SPAN(that had the most touchdowns)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "Rams",
                "quarterback",
                "had",
                "the",
                "most",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2,
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1368_466fb427-0a10-466e-80f0-8099974c869c",
        "question_text": "How many years passed between Edward Balliol relinquishing his claim in Scotland and The Treaty of Berwick?",
        "split": "train",
        "decomposition": "return what  year did Edward Balliol relinquish his claim in  Scotland ;return what  year was  The Treaty of Berwick ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['what year did Edward Balliol relinquish his claim in Scotland']",
            "SELECT['what year was The Treaty of Berwick']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "what year was The Treaty of Berwick"
            ],
            [
                "SELECT",
                "what year did Edward Balliol relinquish his claim in Scotland"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(what year was The Treaty of Berwick)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(what year did Edward Balliol relinquish his claim in Scotland)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what year was The Treaty of Berwick)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what year did Edward Balliol relinquish his claim in Scotland)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    12,
                    14
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10,
                    11,
                    13,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "Edward",
                "Balliol",
                "relinquishing",
                "his",
                "claim",
                "in",
                "Scotland",
                "and",
                "The",
                "Treaty",
                "of",
                "Berwick",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    13
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    12,
                    14,
                    15
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [],
                [],
                [],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_4031_470bc087-04a0-40c1-bfae-9082fbe1244c",
        "question_text": "Which Galway group has the largest percentage, non Irish or white Europeans?",
        "split": "train",
        "decomposition": "return percentage of non Irish Galway group ;return percentage of white Europeans Galway group ;return which is largest of #1 ,  #2",
        "program": [
            "SELECT['percentage of non Irish Galway group']",
            "SELECT['percentage of white Europeans Galway group']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "percentage of non Irish Galway group"
            ],
            [
                "SELECT",
                "percentage of white Europeans Galway group"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of non Irish Galway group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of white Europeans Galway group)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of non Irish Galway group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of white Europeans Galway group)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "Galway",
                "group",
                "has",
                "the",
                "largest",
                "percentage",
                ",",
                "non",
                "Irish",
                "or",
                "white",
                "Europeans",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    7,
                    10
                ],
                [
                    3,
                    5,
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_899_63e18112-cb2c-47db-b3d6-5cbc7434ef28",
        "question_text": "Which ruled first, the Shang dynasty, or the Zhou dynasty?",
        "split": "train",
        "decomposition": "return when  did the  Shang dynasty rule ;return when  did the  Zhou dynasty rule ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when did the Shang dynasty rule']",
            "SELECT['when did the Zhou dynasty rule']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did the Shang dynasty rule"
            ],
            [
                "SELECT",
                "when did the Zhou dynasty rule"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Shang dynasty rule)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Zhou dynasty rule)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Shang dynasty rule)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Zhou dynasty rule)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    8
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "ruled",
                "first",
                ",",
                "the",
                "Shang",
                "dynasty",
                ",",
                "or",
                "the",
                "Zhou",
                "dynasty",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    9,
                    11
                ],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3,
                    7,
                    8
                ],
                [
                    2,
                    6,
                    11
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1849_4c649734-4402-481a-a677-c7bc7f31c888",
        "question_text": "How many in percent from the county weren't 45 to 64?",
        "split": "train",
        "decomposition": "return percent from  the  county that were 45 to 64 ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent from the county that were 45 to 64']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent from the county that were 45 to 64"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent from the county that were 45 to 64)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent from the county that were 45 to 64)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    2,
                    5
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "from",
                "the",
                "county",
                "were",
                "n't",
                "45",
                "to",
                "64",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1014_e3a1ff85-8dae-43f9-9af5-b47cf2e898b7",
        "question_text": "How many yards do the shortest passing touchdown and the shortest rushing touchdown combine for?",
        "split": "train",
        "decomposition": "return yards of shortest  passing touchdown ;return yards of shortest  rushing touchdown ;return sum of #1 and  #2",
        "program": [
            "SELECT['yards of shortest passing touchdown']",
            "SELECT['yards of shortest rushing touchdown']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "yards of shortest passing touchdown"
            ],
            [
                "SELECT",
                "yards of shortest rushing touchdown"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of shortest passing touchdown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of shortest rushing touchdown)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of shortest passing touchdown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of shortest rushing touchdown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    8,
                    11
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    9
                ],
                [
                    7
                ],
                [
                    10,
                    13
                ],
                [
                    14
                ],
                [
                    12,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "do",
                "the",
                "shortest",
                "passing",
                "touchdown",
                "and",
                "the",
                "shortest",
                "rushing",
                "touchdown",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    10,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3257_da7dc718-f330-4e9e-b8d3-0af6a8b2b376",
        "question_text": "Which player scored more field goals, Graham Gano  or Robbie Gould?",
        "split": "train",
        "decomposition": "return field goals of Graham Gano ;return field goals of Robbie Gould ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Graham Gano']",
            "SELECT['field goals of Robbie Gould']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Graham Gano"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Robbie Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Graham Gano)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Robbie Gould)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Graham Gano)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Robbie Gould)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Graham",
                "Gano",
                "or",
                "Robbie",
                "Gould",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1732_d666ceec-ea8e-487d-8a7e-e9ba858630dd",
        "question_text": "How many fewer touchdowns were there compared to field goals?",
        "split": "train",
        "decomposition": "return touchdowns that were there  ;return field goals that were there  ;return number of  #1 ;return number of  #2 ;return difference of #4 and  #3",
        "program": [
            "SELECT['touchdowns that were there']",
            "SELECT['field goals that were there']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that were there"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns that were there"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were there)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were there)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were there)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns that were there)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fewer",
                "touchdowns",
                "were",
                "there",
                "compared",
                "to",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1939_1da13a2a-f6c6-4eba-a568-cd9aa39265b0",
        "question_text": "Which team scored the first touchdown of the game?",
        "split": "train",
        "decomposition": "return touchdowns of the  game ;return first of #1 ;return the  team that scored #2",
        "program": [
            "SELECT['touchdowns of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the team that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the team that scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdowns of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "first",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_947_00113527-4c69-4cd8-8015-ac409050d871",
        "question_text": "How many yards did all three touchdowns combine for?",
        "split": "train",
        "decomposition": "return yards of three touchdowns ;return sum of #1",
        "program": [
            "SELECT['yards of three touchdowns']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of three touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of three touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of three touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "all",
                "three",
                "touchdowns",
                "combine",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_e48db11c-c0cd-4a24-8390-63bd3d33c813",
        "question_text": "How many field goals of at least 40 yards did Gould make?",
        "split": "dev",
        "decomposition": "return yards of field goals that Gould did make ;return #1 that was  at least 40 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that Gould did make']",
            "FILTER['#1', 'that was at least 40 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that Gould did make"
                ],
                "that was at least 40 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Gould did make)"
                ],
                "GET_QUESTION_SPAN(that was at least 40 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that Gould did make)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9,
                    10
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    12
                ],
                [
                    8,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "40",
                "yards",
                "did",
                "Gould",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [
                    8,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2356_ec6c6df9-ae70-453e-9344-cada0102393a",
        "question_text": "How many yards longer was Josh Gordon's touchdown compared to Greg Little's touchdown?",
        "split": "train",
        "decomposition": "return yards of the  touchdown of  Josh Gordon ;return yards of the  touchdown of  Greg Little ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['yards of the touchdown of Josh Gordon']",
            "SELECT['yards of the touchdown of Greg Little']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the touchdown of Josh Gordon"
            ],
            [
                "SELECT",
                "yards of the touchdown of Greg Little"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown of Josh Gordon)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown of Greg Little)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown of Josh Gordon)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the touchdown of Greg Little)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    8,
                    11
                ],
                [
                    9,
                    10,
                    13
                ],
                [
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Josh",
                "Gordon",
                "'s",
                "touchdown",
                "compared",
                "to",
                "Greg",
                "Little",
                "'s",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    11,
                    14
                ],
                [
                    9,
                    10,
                    13
                ],
                [
                    12
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_292_0d56d4d8-8a04-4526-87af-8d0161bf8c10",
        "question_text": "What was the maximum year for the civil war?",
        "split": "train",
        "decomposition": "return years for the  civil war ;return maximum of #1",
        "program": [
            "SELECT['years for the civil war']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "years for the civil war"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years for the civil war)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years for the civil war)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3
                ],
                [
                    0,
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "maximum",
                "year",
                "for",
                "the",
                "civil",
                "war",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_13_f2b82f8f-00b7-4542-a2d2-67a3c7c9d5b3",
        "question_text": "How many more field goals did Nedney need to equal Rackers' total number of field goals?",
        "split": "train",
        "decomposition": "return field goals of Rackers ;return field goals of Nedney ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Rackers']",
            "SELECT['field goals of Nedney']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Rackers"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Nedney"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Rackers)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nedney)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Rackers)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nedney)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10,
                    13
                ],
                [
                    9,
                    12,
                    15,
                    16
                ],
                [
                    11,
                    14
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Nedney",
                "need",
                "to",
                "equal",
                "Rackers",
                "'",
                "total",
                "number",
                "of",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    15,
                    16
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    13
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    15,
                    16
                ],
                [
                    11
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1747_cff42c9c-2b8c-48a5-9aef-fcc8d856cd1a",
        "question_text": "Which Central American group had the second most living abroad in 2005?",
        "split": "train",
        "decomposition": "return Central American groups ;return those living abroad in  2005 of #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is the  second highest",
        "program": [
            "SELECT['Central American groups']",
            "PROJECT['those living abroad in 2005 of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the second highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "Central American groups"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "those living abroad in 2005 of #REF",
                    [
                        "SELECT",
                        "Central American groups"
                    ]
                ],
                [
                    "SELECT",
                    "Central American groups"
                ]
            ],
            "is the second highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Central American groups)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(those living abroad in 2005 of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the second highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Central American groups)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(those living abroad in 2005 of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the second highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "Central",
                "American",
                "group",
                "had",
                "the",
                "second",
                "most",
                "living",
                "abroad",
                "in",
                "2005",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    4,
                    6,
                    7,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_31_414fc80e-a585-464c-a87b-8f57eb1a218d",
        "question_text": "How many years after the Revolution of 1905 was the Russian Constitution put into place?",
        "split": "train",
        "decomposition": "return year of Revolution of  1905 ;return year that Russian Constitution put into place ;return difference of #2 and  #1",
        "program": [
            "SELECT['year of Revolution of 1905']",
            "SELECT['year that Russian Constitution put into place']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year that Russian Constitution put into place"
            ],
            [
                "SELECT",
                "year of Revolution of 1905"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Russian Constitution put into place)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Revolution of 1905)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Russian Constitution put into place)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Revolution of 1905)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "Revolution",
                "of",
                "1905",
                "was",
                "the",
                "Russian",
                "Constitution",
                "put",
                "into",
                "place",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_811_8c92feaa-ed8f-4a3f-beb3-546c28f39ddb",
        "question_text": "How many total touchdown passing yards did Matt Hasselbeck throw for?",
        "split": "train",
        "decomposition": "return yards of passing touchdown of  Matt Hasselbeck ;return the  sum of #1",
        "program": [
            "SELECT['yards of passing touchdown of Matt Hasselbeck']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of passing touchdown of Matt Hasselbeck"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing touchdown of Matt Hasselbeck)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passing touchdown of Matt Hasselbeck)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    3,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "touchdown",
                "passing",
                "yards",
                "did",
                "Matt",
                "Hasselbeck",
                "throw",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    8
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3572_0a9c6625-81d6-4d39-982c-a780f4da7409",
        "question_text": "What was the first show Steigers played in the 1950s?",
        "split": "train",
        "decomposition": "return shows that Steigers played in  the  1950s ;return first of #1",
        "program": [
            "SELECT['shows that Steigers played in the 1950s']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "shows that Steigers played in the 1950s"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(shows that Steigers played in the 1950s)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(shows that Steigers played in the 1950s)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "first",
                "show",
                "Steigers",
                "played",
                "in",
                "the",
                "1950s",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    3,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    6
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_430_b2db0a4d-15cc-4d05-aae8-18f0dae8aae8",
        "question_text": "How many yards longer was Shaun Suisham's second field goal compared to his first?",
        "split": "train",
        "decomposition": "return yards of Shaun Suisham 's field goals ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT[\"yards of Shaun Suisham 's field goals\"]",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of Shaun Suisham 's field goals"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of Shaun Suisham 's field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Shaun Suisham 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Shaun Suisham 's field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Shaun Suisham 's field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of Shaun Suisham 's field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Shaun",
                "Suisham",
                "'s",
                "second",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_571_b851b6a4-b88b-42ec-b22c-251017b8dc09",
        "question_text": "In which quarter Denver continued to get pounded?",
        "split": "train",
        "decomposition": "return quarters ;return #1 in  which Denver continued to get pounded",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'in which Denver continued to get pounded']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "quarters"
            ],
            "in which Denver continued to get pounded"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            "GET_QUESTION_SPAN(in which Denver continued to get pounded)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            "GET_QUESTION_SPAN(in which Denver continued to get pounded)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarter",
                "Denver",
                "continued",
                "to",
                "get",
                "pounded",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1288_1ac0b98b-abfc-48f4-8f70-c94c95731f41",
        "question_text": "Who got the shortest TD run?",
        "split": "dev",
        "decomposition": "return TD runs ;return the  shortest of #1 ;return who  got #2",
        "program": [
            "SELECT['TD runs']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who got #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who got #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "TD runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who got #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who got #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "got",
                "the",
                "shortest",
                "TD",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_611_9f8739e0-fff8-4563-9deb-6e23df4c5818",
        "question_text": "How many field goals of 25 yards or more did Kris Brown kick?",
        "split": "train",
        "decomposition": "return field goals of Kris Brown ;return yards of #1 ;return #1 where #2 is at least 25 ;return number of  #3",
        "program": [
            "SELECT['field goals of Kris Brown']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 25']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Kris Brown"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Kris Brown"
                    ]
                ],
                "is at least 25"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kris Brown)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 25)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kris Brown)"
                ],
                "GET_QUESTION_NUMBER(25)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9,
                    11
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    10
                ],
                [
                    7,
                    13
                ],
                [
                    6,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "25",
                "yards",
                "or",
                "more",
                "did",
                "Kris",
                "Brown",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    8
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    6,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3412_641f27bf-6e15-4848-bb35-be638be5a090",
        "question_text": "How long was the second touchdown of the game?",
        "split": "train",
        "decomposition": "return touchdowns of  the game ;return second of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdowns of the game']",
            "PROJECT['second of #REF', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "touchdowns of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(second of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(second of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2316_bcda441d-fb18-4285-8069-195706766cf2",
        "question_text": "Which had the highest percentage of teachers in the obligatory, schools or private?",
        "split": "train",
        "decomposition": "return percentage of teachers in  the  obligatory of  schools ;return percentage of teachers in  the  obligatory of  private ;return which is highest of #1 ,  #2",
        "program": [
            "SELECT['percentage of teachers in the obligatory of schools']",
            "SELECT['percentage of teachers in the obligatory of private']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "percentage of teachers in the obligatory of schools"
            ],
            [
                "SELECT",
                "percentage of teachers in the obligatory of private"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of teachers in the obligatory of schools)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of teachers in the obligatory of private)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of teachers in the obligatory of schools)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentage of teachers in the obligatory of private)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    6,
                    10,
                    12
                ],
                [
                    2,
                    5,
                    7,
                    8
                ],
                [
                    9,
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "had",
                "the",
                "highest",
                "percentage",
                "of",
                "teachers",
                "in",
                "the",
                "obligatory",
                ",",
                "schools",
                "or",
                "private",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    10,
                    12
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1621_2a2629bb-c1a6-467b-8a2c-2f9b0a9b6a4f",
        "question_text": "How many months after de Villars quit the army did he die?",
        "split": "train",
        "decomposition": "return the  month when  de Villars quit the army ;return the  month when  de Villars die ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['the month when de Villars quit the army']",
            "SELECT['the month when de Villars die']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the month when de Villars die"
            ],
            [
                "SELECT",
                "the month when de Villars quit the army"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month when de Villars die)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month when de Villars quit the army)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month when de Villars die)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the month when de Villars quit the army)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "after",
                "de",
                "Villars",
                "quit",
                "the",
                "army",
                "did",
                "he",
                "die",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_618_48bde260-9280-451c-858e-2a723782a9a1",
        "question_text": "What did Casimir do first: returned with a larger army or made an agreement with local nobles?",
        "split": "train",
        "decomposition": "return when  did Casimir returned with a larger army ;return when  did Casimir make an agreement with local nobles ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when did Casimir returned with a larger army']",
            "SELECT['when did Casimir make an agreement with local nobles']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did Casimir returned with a larger army"
            ],
            [
                "SELECT",
                "when did Casimir make an agreement with local nobles"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Casimir returned with a larger army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Casimir make an agreement with local nobles)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Casimir returned with a larger army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Casimir make an agreement with local nobles)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    5,
                    11,
                    17
                ],
                [
                    1,
                    6,
                    8,
                    10
                ],
                [
                    7,
                    9,
                    14
                ],
                [
                    12,
                    13
                ],
                [
                    15,
                    16,
                    18
                ]
            ],
            "question_tokens": [
                "What",
                "did",
                "Casimir",
                "do",
                "first",
                ":",
                "returned",
                "with",
                "a",
                "larger",
                "army",
                "or",
                "made",
                "an",
                "agreement",
                "with",
                "local",
                "nobles",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1,
                    2
                ],
                [
                    0,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    5,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    14
                ],
                [
                    13
                ],
                [
                    15,
                    16,
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    17
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3181_da9eaa4a-ff2d-41ea-b29a-4eca8cebca9d",
        "question_text": "How many field goals of 40 yards or more were kicked in the game?",
        "split": "train",
        "decomposition": "return field goals that were kicked in  the  game ;return yards of #1 ;return #1 where #2 is at least 40 ;return number of  #3",
        "program": [
            "SELECT['field goals that were kicked in the game']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals that were kicked in the game"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals that were kicked in the game"
                    ]
                ],
                "is at least 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were kicked in the game)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were kicked in the game)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    7,
                    14
                ],
                [
                    6,
                    9,
                    10,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "40",
                "yards",
                "or",
                "more",
                "were",
                "kicked",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [
                    6,
                    9,
                    10
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    11
                ],
                [],
                [
                    14
                ],
                [
                    10,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2303_3ac4e6b9-3274-41c4-b470-c6ee84495ebc",
        "question_text": "What percentage was higher, manufacturing or utilities?",
        "split": "train",
        "decomposition": "return the percentage of  manufacturing ;return the percentage of  utilities ;return which is  higher of  #1 , #2",
        "program": [
            "SELECT['the percentage of manufacturing']",
            "SELECT['the percentage of utilities']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "the percentage of manufacturing"
            ],
            [
                "SELECT",
                "the percentage of utilities"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of manufacturing)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of utilities)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of manufacturing)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the percentage of utilities)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "percentage",
                "was",
                "higher",
                ",",
                "manufacturing",
                "or",
                "utilities",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    4,
                    6
                ],
                [
                    1,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_991_3d12f51a-6ffa-4678-8112-3a6683f01570",
        "question_text": "How many more rushing touchdowns were scored compared to defensive touchdowns?",
        "split": "train",
        "decomposition": "return rushing touchdowns that were scored ;return defensive touchdowns that were scored ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['rushing touchdowns that were scored']",
            "SELECT['defensive touchdowns that were scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "rushing touchdowns that were scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "defensive touchdowns that were scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing touchdowns that were scored)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(defensive touchdowns that were scored)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing touchdowns that were scored)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(defensive touchdowns that were scored)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "rushing",
                "touchdowns",
                "were",
                "scored",
                "compared",
                "to",
                "defensive",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1158_c2ece62f-6658-40aa-90c4-c2f7d1653a05",
        "question_text": "Which team allowed the most second half points?",
        "split": "train",
        "decomposition": "return teams ;return second half points allowed of #1 ;return sum of #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['second half points allowed of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "second half points allowed of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(second half points allowed of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(second half points allowed of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "allowed",
                "the",
                "most",
                "second",
                "half",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_928_1fddc596-d765-44a8-8f82-c8d2fd727dfd",
        "question_text": "Who scored more field goals, Garrett Hartley or Jason Elam?",
        "split": "train",
        "decomposition": "return field goals from  Garrett Hartley ;return field goals from  Jason Elam ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals from Garrett Hartley']",
            "SELECT['field goals from Jason Elam']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals from Garrett Hartley"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals from Jason Elam"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Garrett Hartley)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Jason Elam)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Garrett Hartley)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals from Jason Elam)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Garrett",
                "Hartley",
                "or",
                "Jason",
                "Elam",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1288_13468a63-068c-469d-8625-f73e4ba17f8e",
        "question_text": "How many yards was the shortest TD run?",
        "split": "dev",
        "decomposition": "return TD runs ;return the  shortest of #1 ;return the  yards of #2",
        "program": [
            "SELECT['TD runs']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the yards of #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "TD runs"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the yards of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the yards of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "TD",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2665_358be9b6-26c1-4464-ac23-ceb72098087d",
        "question_text": "What was Frank Gore's longest score of the game?",
        "split": "train",
        "decomposition": "return longest score of the  game ;return #1 of Frank Gore",
        "program": [
            "SELECT['longest score of the game']",
            "FILTER['#1', 'of Frank Gore']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "longest score of the game"
            ],
            "of Frank Gore"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(longest score of the game)"
            ],
            "GET_QUESTION_SPAN(of Frank Gore)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(longest score of the game)"
            ],
            "GET_QUESTION_SPAN(of Frank Gore)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    6
                ],
                [
                    0,
                    1,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "Frank",
                "Gore",
                "'s",
                "longest",
                "score",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    6,
                    8
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2113_af44995e-e25a-4916-8162-4a1e6888c84f",
        "question_text": "Which player had the shortest touchdown reception of the game?",
        "split": "train",
        "decomposition": "return touchdown receptions of the  game ;return the  shortest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown receptions of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown receptions of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown receptions of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "shortest",
                "touchdown",
                "reception",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_137_eee41289-54f4-4bb5-a0ba-2f653137279e",
        "question_text": "How many yards per pass completion did Jay Cutler average in this game?",
        "split": "train",
        "decomposition": "return yards of pass completions of  Jay Cutler ;return the  average of #1",
        "program": [
            "SELECT['yards of pass completions of Jay Cutler']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of pass completions of Jay Cutler"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of pass completions of Jay Cutler)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of pass completions of Jay Cutler)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [
                    4,
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "per",
                "pass",
                "completion",
                "did",
                "Jay",
                "Cutler",
                "average",
                "in",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    9
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4,
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    2,
                    3,
                    5,
                    9
                ],
                [
                    10
                ],
                [
                    8,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_182_31f97481-1cfb-4b1d-84ff-62f4c6863e49",
        "question_text": "What was the main goal of the military campaigns?",
        "split": "train",
        "decomposition": "return main goal of the  military campaigns",
        "program": [
            "SELECT['main goal of the military campaigns']"
        ],
        "nested_expression": [
            "SELECT",
            "main goal of the military campaigns"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(main goal of the military campaigns)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(main goal of the military campaigns)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "main",
                "goal",
                "of",
                "the",
                "military",
                "campaigns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    4,
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_8b4f47b1-0224-4091-958a-ac47e1f77507",
        "question_text": "How many 1-yard touchdown runs were made in the game?",
        "split": "dev",
        "decomposition": "return touchdown runs of the game ;return #1 that  were 1-yard ;return number of #2",
        "program": [
            "SELECT['touchdown runs of the game']",
            "FILTER['#1', 'that were 1-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdown runs of the game"
                ],
                "that were 1-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ],
                "GET_QUESTION_SPAN(that were 1-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ],
                "GET_QUESTION_NUMBER(1)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "1-yard",
                "touchdown",
                "runs",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_651_84f2293f-5140-40ed-9fca-4ffe7c9f3fcb",
        "question_text": "How many yards were gained on the first TD run and the first TD reception?",
        "split": "train",
        "decomposition": "return yards gained on first TD  run ;return yards gained on first TD  reception ;return #1 ,  #2",
        "program": [
            "SELECT['yards gained on first TD run']",
            "SELECT['yards gained on first TD reception']",
            "UNION['#1', '#2']"
        ],
        "nested_expression": [
            "UNION",
            [
                "SELECT",
                "yards gained on first TD run"
            ],
            [
                "SELECT",
                "yards gained on first TD reception"
            ]
        ],
        "typed_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards gained on first TD run)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards gained on first TD reception)"
            ]
        ],
        "drop_nested_expression": [
            "UNION",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards gained on first TD run)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards gained on first TD reception)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "union"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    4,
                    5,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "gained",
                "on",
                "the",
                "first",
                "TD",
                "run",
                "and",
                "the",
                "first",
                "TD",
                "reception",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    7,
                    12
                ],
                [
                    4,
                    5,
                    10
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_469_d61d0646-b7ee-47f9-af4d-b0a58749b5ce",
        "question_text": "How many 35-yard field goals did Shayne Graham kick?",
        "split": "train",
        "decomposition": "return field goals that Shayne Graham kick ;return #1 that are  35-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that Shayne Graham kick']",
            "FILTER['#1', 'that are 35-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Shayne Graham kick"
                ],
                "that are 35-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Shayne Graham kick)"
                ],
                "GET_QUESTION_SPAN(that are 35-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Shayne Graham kick)"
                ],
                "GET_QUESTION_NUMBER(35)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "35-yard",
                "field",
                "goals",
                "did",
                "Shayne",
                "Graham",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_569_e6aad2b6-cd56-495b-b265-5bb5956fa181",
        "question_text": "How many field goals were kicked 19 yards or longer?",
        "split": "train",
        "decomposition": "return yards of field goals kicked ;return #1 that  were 19 yards or  longer ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals kicked']",
            "FILTER['#1', 'that were 19 yards or longer']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals kicked"
                ],
                "that were 19 yards or longer"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked)"
                ],
                "GET_QUESTION_SPAN(that were 19 yards or longer)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked)"
                ],
                "GET_QUESTION_SPAN(that were 19 yards or longer)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7,
                    9
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "were",
                "kicked",
                "19",
                "yards",
                "or",
                "longer",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    7,
                    9
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1228_bfa2278b-2222-4b1d-a681-46361a526798",
        "question_text": "How many years was the residence' place of the bailiwick at Elligen?",
        "split": "train",
        "decomposition": "return the  residence place of the bailiwick at Elligen ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['the residence place of the bailiwick at Elligen']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "the residence place of the bailiwick at Elligen"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the residence place of the bailiwick at Elligen)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the residence place of the bailiwick at Elligen)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "residence",
                "'",
                "place",
                "of",
                "the",
                "bailiwick",
                "at",
                "Elligen",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    3,
                    5
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    7,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1670_e7fc571c-6a9d-4b82-8a80-420e26434fd9",
        "question_text": "Did the Allies or the Central Powers spend more on the war according to one estimate?",
        "split": "train",
        "decomposition": "return what  the  Allies spend on the   war according to one estimate ;return what  the  Central Powers spend on the   war according to one estimate ;return which is more of #1 ,  #2",
        "program": [
            "SELECT['what the Allies spend on the war according to one estimate']",
            "SELECT['what the Central Powers spend on the war according to one estimate']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "what the Allies spend on the war according to one estimate"
            ],
            [
                "SELECT",
                "what the Central Powers spend on the war according to one estimate"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what the Allies spend on the war according to one estimate)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what the Central Powers spend on the war according to one estimate)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(what the Allies spend on the war according to one estimate)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(what the Central Powers spend on the war according to one estimate)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    5,
                    7,
                    8,
                    12
                ],
                [
                    1,
                    4,
                    6,
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    14,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Allies",
                "or",
                "the",
                "Central",
                "Powers",
                "spend",
                "more",
                "on",
                "the",
                "war",
                "according",
                "to",
                "one",
                "estimate",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    5,
                    7,
                    8
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    3
                ],
                [
                    5,
                    7,
                    8,
                    12
                ],
                [
                    6,
                    9
                ],
                [
                    11
                ],
                [
                    2
                ],
                [
                    15
                ],
                [
                    13
                ],
                [
                    14,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1117_496649d0-74a4-4cd0-a5a6-1e0039eef425",
        "question_text": "What happened second: 12,000 Cyrenaicans were executed or the concentration camps closed?",
        "split": "train",
        "decomposition": "return when  were 12,000 Cyrenaicans executed ;return when  were the  concentration camps closed ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when were 12 , 000 Cyrenaicans executed']",
            "SELECT['when were the concentration camps closed']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when were 12 , 000 Cyrenaicans executed"
            ],
            [
                "SELECT",
                "when were the concentration camps closed"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were 12 , 000 Cyrenaicans executed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were the concentration camps closed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were 12 , 000 Cyrenaicans executed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when were the concentration camps closed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    9
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "12,000",
                "Cyrenaicans",
                "were",
                "executed",
                "or",
                "the",
                "concentration",
                "camps",
                "closed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1641_78cb27cd-6292-4699-b4fe-2db5da7bbe57",
        "question_text": "Were there more yards in field goals or touchdowns?",
        "split": "train",
        "decomposition": "return yards of field goals ;return yards of touchdowns ;return the  sum of #1 ;return the  sum of #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of field goals']",
            "SELECT['yards of touchdowns']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "more",
                "yards",
                "in",
                "field",
                "goals",
                "or",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1962_c99c1059-757c-46e7-806f-5db0c6baa3dc",
        "question_text": "How many field goals under 40-yards in length did Garret Hartley make?",
        "split": "dev",
        "decomposition": "return field goals that Garret Hartley makes ;return #1 that are under 40-yards in  length ;return number of  #2",
        "program": [
            "SELECT['field goals that Garret Hartley makes']",
            "FILTER['#1', 'that are under 40-yards in length']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Garret Hartley makes"
                ],
                "that are under 40-yards in length"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Garret Hartley makes)"
                ],
                "GET_QUESTION_SPAN(that are under 40-yards in length)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Garret Hartley makes)"
                ],
                "GET_QUESTION_SPAN(that are under 40-yards in length)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8,
                    11
                ],
                [
                    6,
                    10
                ],
                [
                    4
                ],
                [
                    7,
                    9
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "under",
                "40-yards",
                "in",
                "length",
                "did",
                "Garret",
                "Hartley",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    8,
                    11
                ],
                [
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    4
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1996_e8e12160-2151-4094-8c80-2138104bd206",
        "question_text": "How many of Phil Dawson's field goals were in the first half?",
        "split": "dev",
        "decomposition": "return field goals of Phil Dawson that were in  the  first half ;return number of  #1",
        "program": [
            "SELECT['field goals of Phil Dawson that were in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals of Phil Dawson that were in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Phil Dawson that were in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Phil Dawson that were)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    9,
                    11,
                    12
                ],
                [
                    2,
                    5,
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Phil",
                "Dawson",
                "'s",
                "field",
                "goals",
                "were",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    12
                ],
                [
                    8
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    3,
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    5
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_886_1e4ebb14-8043-4050-b38b-6f0a84e8f171",
        "question_text": "Which player scored the last points?",
        "split": "train",
        "decomposition": "return the  last points that are scored ;return the  player that scored #1",
        "program": [
            "SELECT['the last points that are scored']",
            "PROJECT['the player that scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "SELECT",
                "the last points that are scored"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last points that are scored)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last points that are scored)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "last",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3040_33a21b2c-eab6-42eb-8cb4-3c8cb597b94e",
        "question_text": "whose is the new coach for the 49ers?",
        "split": "train",
        "decomposition": "return the  new coach of the 49ers",
        "program": [
            "SELECT['the new coach of the 49ers']"
        ],
        "nested_expression": [
            "SELECT",
            "the new coach of the 49ers"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the new coach of the 49ers)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the new coach of the 49ers)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8
                ]
            ],
            "question_tokens": [
                "whose",
                "is",
                "the",
                "new",
                "coach",
                "for",
                "the",
                "49ers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3696_e7c60307-5762-4b4a-b5f1-f94951bfdcc5",
        "question_text": "Which films series are the top two grossing series?",
        "split": "train",
        "decomposition": "return top grossing film series  ;return two highest of #1",
        "program": [
            "SELECT['top grossing film series']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "top grossing film series"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(top grossing film series)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(top grossing film series)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    0,
                    4,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "films",
                "series",
                "are",
                "the",
                "top",
                "two",
                "grossing",
                "series",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5,
                    6
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3274_505b3f6e-3f01-42ea-9777-dfe959be8390",
        "question_text": "How many points did Gould's field goals result into?",
        "split": "train",
        "decomposition": "return points of field goals of  Gould ;return sum of #1",
        "program": [
            "SELECT['points of field goals of Gould']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points of field goals of Gould"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of field goals of Gould)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of field goals of Gould)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Gould",
                "'s",
                "field",
                "goals",
                "result",
                "into",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1266_abb05344-eb9b-45b2-976f-e3ae86ccbbb0",
        "question_text": "How many years did Richard Grenville live in Calais?",
        "split": "train",
        "decomposition": "return when  Richard Grenville live in  Calais ;return number of  years of #1",
        "program": [
            "SELECT['when Richard Grenville live in Calais']",
            "PROJECT['number of years of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "number of years of #REF",
            [
                "SELECT",
                "when Richard Grenville live in Calais"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of years of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Richard Grenville live in Calais)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(did Richard Grenville live in Calais?)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "Richard",
                "Grenville",
                "live",
                "in",
                "Calais",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2955_9541c0f5-ea0c-4ea9-a48b-52815710766d",
        "question_text": "How many more points Did the winner of the game have than the loser?",
        "split": "train",
        "decomposition": "return points of the  winner of  the   game ;return points of the  loser of  the   game ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['points of the winner of the game']",
            "SELECT['points of the loser of the game']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the winner of the game"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the loser of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the winner of the game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the loser of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the winner of the game)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the loser of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    6
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "points",
                "Did",
                "the",
                "winner",
                "of",
                "the",
                "game",
                "have",
                "than",
                "the",
                "loser",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2522_350cf33b-ef5d-4bf3-80be-0d8b24caaa0f",
        "question_text": "How many consecutive Dutch Cups did Feyenoord get?",
        "split": "train",
        "decomposition": "return consecutive Dutch Cups that Feyenoord get ;return the  number of  #1",
        "program": [
            "SELECT['consecutive Dutch Cups that Feyenoord get']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "consecutive Dutch Cups that Feyenoord get"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(consecutive Dutch Cups that Feyenoord get)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(consecutive Dutch Cups that Feyenoord get)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "consecutive",
                "Dutch",
                "Cups",
                "did",
                "Feyenoord",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2041_c1b1afcb-7373-46d2-b7bf-32edfe44abd8",
        "question_text": "How many 40+ yard field goals did Suisham make?",
        "split": "train",
        "decomposition": "return yard of  field goals of Suisham ;return #1 that are  40+ yard ;return the number of  #2",
        "program": [
            "SELECT['yard of field goals of Suisham']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yard of field goals of Suisham"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals of Suisham)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals of Suisham)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Suisham",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_653_1be3e878-8ebd-4479-aeac-a8b29717eee2",
        "question_text": "How many years passed between Greece and Kazakhstan establishing diplomatic relations and Greece opening their embassy?",
        "split": "train",
        "decomposition": "return year of Greece and  Kazakhstan establishing diplomatic relations ;return year of Greece opening embassy in  Kazakhstan ;return difference of #2 and  #1",
        "program": [
            "SELECT['year of Greece and Kazakhstan establishing diplomatic relations']",
            "SELECT['year of Greece opening embassy in Kazakhstan']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of Greece opening embassy in Kazakhstan"
            ],
            [
                "SELECT",
                "year of Greece and Kazakhstan establishing diplomatic relations"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Greece opening embassy in Kazakhstan)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of Greece and Kazakhstan establishing diplomatic relations)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Greece opening embassy in Kazakhstan)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of Greece and Kazakhstan establishing diplomatic relations)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    11,
                    12
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "between",
                "Greece",
                "and",
                "Kazakhstan",
                "establishing",
                "diplomatic",
                "relations",
                "and",
                "Greece",
                "opening",
                "their",
                "embassy",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    12,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    11,
                    12,
                    13
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    15
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2014_40e8d011-ce84-4409-8521-f433d05413f3",
        "question_text": "How many TD passes were made from over 50 yards?",
        "split": "train",
        "decomposition": "return yards of  TD passes ;return #1 that were over 50 yards ;return the number of  #2",
        "program": [
            "SELECT['yards of TD passes']",
            "FILTER['#1', 'that were over 50 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of TD passes"
                ],
                "that were over 50 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes)"
                ],
                "GET_QUESTION_SPAN(that were over 50 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes)"
                ],
                "GET_QUESTION_NUMBER(50)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    10
                ],
                [
                    4,
                    5,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "were",
                "made",
                "from",
                "over",
                "50",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    4,
                    5,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1233_681cc6d3-c9d9-4919-ba8d-e0308553d3bc",
        "question_text": "Which team had the shortest field goal",
        "split": "dev",
        "decomposition": "return field goals ;return the  shortest of #1 ;return the  team that had #2",
        "program": [
            "SELECT['field goals']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the team that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the team that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the team that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                []
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "the",
                "shortest",
                "field",
                "goal"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                []
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1975_3576659b-d076-4677-9541-0905072b68a9",
        "question_text": "Was the median subscore higher in writing or critical reading?",
        "split": "train",
        "decomposition": "return median subscore in  writing ;return median subscore in  critical reading ;return which is highest of #1 ,  #2",
        "program": [
            "SELECT['median subscore in writing']",
            "SELECT['median subscore in critical reading']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "median subscore in writing"
            ],
            [
                "SELECT",
                "median subscore in critical reading"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(median subscore in writing)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(median subscore in critical reading)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(median subscore in writing)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(median subscore in critical reading)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Was",
                "the",
                "median",
                "subscore",
                "higher",
                "in",
                "writing",
                "or",
                "critical",
                "reading",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    7
                ],
                [
                    0,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3023_cbf04f6a-3b2e-4ec4-92d9-a6aa214cc8d2",
        "question_text": "How many more touchdowns in the second quarter did the Patriots score compared to the Steelers?",
        "split": "train",
        "decomposition": "return second quarter touchdowns of the  Patriots ;return second quarter touchdowns of the  Steelers ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['second quarter touchdowns of the Patriots']",
            "SELECT['second quarter touchdowns of the Steelers']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "second quarter touchdowns of the Patriots"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "second quarter touchdowns of the Steelers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second quarter touchdowns of the Patriots)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second quarter touchdowns of the Steelers)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second quarter touchdowns of the Patriots)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(second quarter touchdowns of the Steelers)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    10,
                    11
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "in",
                "the",
                "second",
                "quarter",
                "did",
                "the",
                "Patriots",
                "score",
                "compared",
                "to",
                "the",
                "Steelers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10,
                    15
                ],
                [
                    11,
                    13
                ],
                [],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_166_dd798757-5548-40cc-ad51-8bff75963232",
        "question_text": "How many more touchdown passes did Donovan McNabb make over David Carr",
        "split": "train",
        "decomposition": "return touchdown passes of Donovan McNabb ;return touchdown passes of David Carr ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdown passes of Donovan McNabb']",
            "SELECT['touchdown passes of David Carr']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Donovan McNabb"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of David Carr"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Donovan McNabb)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of David Carr)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Donovan McNabb)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of David Carr)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    3,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdown",
                "passes",
                "did",
                "Donovan",
                "McNabb",
                "make",
                "over",
                "David",
                "Carr"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2894_710d7b53-1a50-488c-bce0-3774c2a0110f",
        "question_text": "How many percent more people were in Dutch domains compared to German?",
        "split": "train",
        "decomposition": "return percent of people in  Dutch domains ;return percent of people in  German domains ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['percent of people in Dutch domains']",
            "SELECT['percent of people in German domains']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percent of people in Dutch domains"
            ],
            [
                "SELECT",
                "percent of people in German domains"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in Dutch domains)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in German domains)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in Dutch domains)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people in German domains)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "more",
                "people",
                "were",
                "in",
                "Dutch",
                "domains",
                "compared",
                "to",
                "German",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1775_4c50bb7b-dc8d-4c13-b0b1-287e78bd6ea1",
        "question_text": "Which two industries made up less than 8% of employment?",
        "split": "train",
        "decomposition": "return industries ;return employment of #1 ;return #1 where #2 is less than 8 %",
        "program": [
            "SELECT['industries']",
            "PROJECT['employment of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is less than 8 %']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "industries"
            ],
            [
                "PROJECT",
                "employment of #REF",
                [
                    "SELECT",
                    "industries"
                ]
            ],
            "is less than 8 %"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(industries)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(employment of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 8 %)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(industries)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(employment of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 8 %)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "two",
                "industries",
                "made",
                "up",
                "less",
                "than",
                "8",
                "%",
                "of",
                "employment",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0
                ],
                [
                    1
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    10,
                    11
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_729_b2a28635-b2f8-40bc-8a0d-764bfa4a74ad",
        "question_text": "What was the third longest field goal made?",
        "split": "train",
        "decomposition": "return field goals made ;return the  third longest of #1",
        "program": [
            "SELECT['field goals made']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "field goals made"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals made)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals made)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    2,
                    7
                ],
                [
                    3,
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "third",
                "longest",
                "field",
                "goal",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    4,
                    5,
                    6
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    7
                ],
                [],
                [
                    3,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1240_b579211c-85aa-480e-83ef-2228ea640839",
        "question_text": "Which player scored more field goals, Nick Folk or Joe Nedney?",
        "split": "dev",
        "decomposition": "return field goals that Nick Folk scored ;return field goals that Joe Nedney scored ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Nick Folk scored']",
            "SELECT['field goals that Joe Nedney scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nick Folk scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Joe Nedney scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nick Folk scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Joe Nedney scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nick Folk scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Joe Nedney scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    8
                ],
                [
                    7,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Nick",
                "Folk",
                "or",
                "Joe",
                "Nedney",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2066_04142238-69e4-45dc-9168-8e1210f2551f",
        "question_text": "How many yards longer was Sebastian Janikowski's third field goal compared to his first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Sebastian Janikowski ;return third of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Sebastian Janikowski']",
            "PROJECT['third of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "third of #REF",
                [
                    "SELECT",
                    "yards of field goals of Sebastian Janikowski"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Sebastian Janikowski"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(third of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(third of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Sebastian",
                "Janikowski",
                "'s",
                "third",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2319_6b7ddd7e-9214-4ca9-bb0c-db5431250cd6",
        "question_text": "How many 40+ yard field goals did Matt Bryant make?",
        "split": "train",
        "decomposition": "return field goals that Matt Bryant make ;return #1 that are  40+ yard ;return number of  #2",
        "program": [
            "SELECT['field goals that Matt Bryant make']",
            "FILTER['#1', 'that are 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that Matt Bryant make"
                ],
                "that are 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Bryant make)"
                ],
                "GET_QUESTION_SPAN(that are 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that Matt Bryant make)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Matt",
                "Bryant",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    8,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2272_fa5019cd-1696-42fc-80b2-0b6f3c9b3fe6",
        "question_text": "Which player threw more yards in the game, Young or Manning?",
        "split": "dev",
        "decomposition": "return yards that Young did throw ;return yards that Manning did throw ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards that Young did throw']",
            "SELECT['yards that Manning did throw']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Young did throw"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Manning did throw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Young did throw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Manning did throw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Young did throw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Manning did throw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "yards",
                "in",
                "the",
                "game",
                ",",
                "Young",
                "or",
                "Manning",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8,
                    10
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_779_1e4a2e47-6baf-4a70-8d0c-2cd056671fc9",
        "question_text": "How many years had passed between the Act of Settlement and the Act of Union?",
        "split": "train",
        "decomposition": "return year of the  Act  of  Settlement ;return year of the  Act  of  Union ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of the Act of Settlement']",
            "SELECT['year of the Act of Union']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the Act of Settlement"
            ],
            [
                "SELECT",
                "year of the Act of Union"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the Act of Settlement)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the Act of Union)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the Act of Settlement)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the Act of Union)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    10
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "had",
                "passed",
                "between",
                "the",
                "Act",
                "of",
                "Settlement",
                "and",
                "the",
                "Act",
                "of",
                "Union",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    8,
                    10,
                    13
                ],
                [],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1664_5dcd185c-a765-442d-9974-d9e91b36e7d8",
        "question_text": "Romania was forced to sign an armistice how many years after Romainia launched an attack against Austria-Hungary?",
        "split": "train",
        "decomposition": "return year Romania was forced to sign an armistice ;return year Romania launched an attack against Austria-Hungary ;return difference of  #1 and #2",
        "program": [
            "SELECT['year Romania was forced to sign an armistice']",
            "SELECT['year Romania launched an attack against Austria-Hungary']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year Romania was forced to sign an armistice"
            ],
            [
                "SELECT",
                "year Romania launched an attack against Austria-Hungary"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Romania was forced to sign an armistice)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Romania launched an attack against Austria-Hungary)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Romania was forced to sign an armistice)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Romania launched an attack against Austria-Hungary)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    8,
                    9,
                    10,
                    18
                ],
                [
                    1,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    13,
                    14,
                    16,
                    17
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "Romania",
                "was",
                "forced",
                "to",
                "sign",
                "an",
                "armistice",
                "how",
                "many",
                "years",
                "after",
                "Romainia",
                "launched",
                "an",
                "attack",
                "against",
                "Austria",
                "-",
                "Hungary",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    15,
                    17,
                    18
                ],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    1,
                    4,
                    6,
                    18
                ],
                [
                    3,
                    5
                ],
                [
                    0,
                    2,
                    11
                ],
                [],
                [
                    12,
                    13,
                    16,
                    17
                ],
                [
                    14,
                    15
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    18
                ],
                [
                    2,
                    18
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    18
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    18
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_566_d910a572-b8d6-42a4-b0fa-1aa8e2dcd081",
        "question_text": "In what quarter did Washington not score a touchdown?",
        "split": "train",
        "decomposition": "return quarters ;return #1 that Washington score at least one touchdown in  ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'that Washington score at least one touchdown in']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "that Washington score at least one touchdown in"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(that Washington score at least one touchdown in)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(that Washington score at least one touchdown in)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    5,
                    6
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    1,
                    2
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "In",
                "what",
                "quarter",
                "did",
                "Washington",
                "not",
                "score",
                "a",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    5
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    2,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    7
                ],
                [
                    0,
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3904_6b55cbbe-4120-4384-9101-72fb2f9157e2",
        "question_text": "How many people were claimed (inaccurately) to be in attendance at the July 10th and 24th games?",
        "split": "train",
        "decomposition": "return people that were claimed ( inaccurately ) to be at the  July 10th game ;return people that were claimed ( inaccurately ) to be at the  July 24th game ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['people that were claimed ( inaccurately ) to be at the July 10th game']",
            "SELECT['people that were claimed ( inaccurately ) to be at the July 24th game']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that were claimed ( inaccurately ) to be at the July 10th game"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that were claimed ( inaccurately ) to be at the July 24th game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were claimed ( inaccurately ) to be at the July 10th game)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were claimed ( inaccurately ) to be at the July 24th game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were claimed ( inaccurately ) to be at the July 10th game)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that were claimed ( inaccurately ) to be at the July 24th game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    16
                ],
                [
                    1,
                    6,
                    8
                ],
                [
                    5,
                    7,
                    9,
                    10
                ],
                [],
                [
                    11,
                    14,
                    18
                ],
                [
                    12,
                    13,
                    15,
                    17
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "were",
                "claimed",
                "(",
                "inaccurately",
                ")",
                "to",
                "be",
                "in",
                "attendance",
                "at",
                "the",
                "July",
                "10th",
                "and",
                "24th",
                "games",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    16
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    14,
                    18
                ],
                [],
                [
                    15,
                    17
                ],
                [
                    12
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    16
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    5,
                    7
                ],
                [
                    9,
                    12
                ],
                [],
                [
                    14,
                    18
                ],
                [
                    11
                ],
                [
                    15,
                    17
                ],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    18
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    18
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    18
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    18
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_814_8a6a60fa-14e5-4768-ae19-35d308295ec5",
        "question_text": "What happened first: John succeeded his father or the eve of his death?",
        "split": "train",
        "decomposition": "return when  was  John succeeded his father ;return when  was  the  eve of his death ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was John succeeded his father']",
            "SELECT['when was the eve of his death']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was John succeeded his father"
            ],
            [
                "SELECT",
                "when was the eve of his death"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was John succeeded his father)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the eve of his death)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was John succeeded his father)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the eve of his death)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "John",
                "succeeded",
                "his",
                "father",
                "or",
                "the",
                "eve",
                "of",
                "his",
                "death",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11,
                    13
                ],
                [
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    4,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1857_cb8d567d-9f09-425a-9936-aa98fefd3d61",
        "question_text": "How many TD passes shorter than 30 yards were caught?",
        "split": "train",
        "decomposition": "return TD passes that were caught ;return #1 that are  shorter than  30 yards ;return number of  #2",
        "program": [
            "SELECT['TD passes that were caught']",
            "FILTER['#1', 'that are shorter than 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "TD passes that were caught"
                ],
                "that are shorter than 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that were caught)"
                ],
                "GET_QUESTION_SPAN(that are shorter than 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that were caught)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "shorter",
                "than",
                "30",
                "yards",
                "were",
                "caught",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    10
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2259_9eb913b2-815d-437c-aa53-6be9ac59344f",
        "question_text": "Which country had a lower Gini coefficient on pre-taxes and transfers basis for total population, South Korea or Italy?",
        "split": "train",
        "decomposition": "return the  Gini coefficient on pre-taxes and  transfers basis for total population of South Korea ;return the  Gini coefficient on pre-taxes and  transfers basis for total population of Italy ;return which is lower of #1 ,  #2",
        "program": [
            "SELECT['the Gini coefficient on pre-taxes and transfers basis for total population of South Korea']",
            "SELECT['the Gini coefficient on pre-taxes and transfers basis for total population of Italy']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "the Gini coefficient on pre-taxes and transfers basis for total population of South Korea"
            ],
            [
                "SELECT",
                "the Gini coefficient on pre-taxes and transfers basis for total population of Italy"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Gini coefficient on pre-taxes and transfers basis for total population of South Korea)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Gini coefficient on pre-taxes and transfers basis for total population of Italy)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Gini coefficient on pre-taxes and transfers basis for total population of South Korea)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Gini coefficient on pre-taxes and transfers basis for total population of Italy)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    5,
                    6,
                    17,
                    20
                ],
                [
                    1,
                    3,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13,
                    16
                ],
                [
                    14,
                    15,
                    19
                ],
                [
                    18,
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "Which",
                "country",
                "had",
                "a",
                "lower",
                "Gini",
                "coefficient",
                "on",
                "pre",
                "-",
                "taxes",
                "and",
                "transfers",
                "basis",
                "for",
                "total",
                "population",
                ",",
                "South",
                "Korea",
                "or",
                "Italy",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    3,
                    10
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    17
                ],
                [
                    16,
                    19,
                    20
                ],
                [
                    18
                ],
                [
                    21,
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    17,
                    20
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [
                    16,
                    18
                ],
                [
                    19
                ],
                [
                    21
                ],
                [
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    21
                ],
                [
                    3,
                    21
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    21
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    21
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    21
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    21
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2426_f168ea45-9378-45c3-bdd0-875177a57985",
        "question_text": "How many 43 yard field goals did Nick Folk make?",
        "split": "train",
        "decomposition": "return field goals of  Nick Folk ;return #1 that are  43 yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Nick Folk']",
            "FILTER['#1', 'that are 43 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Nick Folk"
                ],
                "that are 43 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nick Folk)"
                ],
                "GET_QUESTION_SPAN(that are 43 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nick Folk)"
                ],
                "GET_QUESTION_NUMBER(43)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    10
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "43",
                "yard",
                "field",
                "goals",
                "did",
                "Nick",
                "Folk",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    5,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2764_ecde1c9d-c613-4e15-9b76-bea4aef35077",
        "question_text": "Which team kicked more field goals in the first half?",
        "split": "train",
        "decomposition": "return field goals in  the  first half ;return team that kicked #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  highest",
        "program": [
            "SELECT['field goals in the first half']",
            "PROJECT['team that kicked #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "team that kicked #REF",
                [
                    "SELECT",
                    "field goals in the first half"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "field goals in the first half"
                ],
                [
                    "PROJECT",
                    "team that kicked #REF",
                    [
                        "SELECT",
                        "field goals in the first half"
                    ]
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team that kicked #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team that kicked #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in the first half)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "kicked",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [
                    9,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3004_83f92d2d-09eb-4ba7-bd42-fdd6ebd140d6",
        "question_text": "Which country was the seventh most important provider of assessed financial contributions to Peacekeeping operations?",
        "split": "train",
        "decomposition": "return assessed financial contributions to Peacekeeping operations ;return the  seventh most important providers of #1 ;return country of #2",
        "program": [
            "SELECT['assessed financial contributions to Peacekeeping operations']",
            "PROJECT['the seventh most important providers of #REF', '#1']",
            "PROJECT['country of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "country of #REF",
            [
                "PROJECT",
                "the seventh most important providers of #REF",
                [
                    "SELECT",
                    "assessed financial contributions to Peacekeeping operations"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(country of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the seventh most important providers of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(assessed financial contributions to Peacekeeping operations)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(country of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the seventh most important providers of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(assessed financial contributions to Peacekeeping operations)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    7,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    1,
                    6,
                    8,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "country",
                "was",
                "the",
                "seventh",
                "most",
                "important",
                "provider",
                "of",
                "assessed",
                "financial",
                "contributions",
                "to",
                "Peacekeeping",
                "operations",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1,
                    2
                ],
                [
                    0
                ],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    4
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2017_5954acfe-d0f3-4e9a-bbce-6ceb89c5dad8",
        "question_text": "How many yards was LeSean McCoy's longest TD run?",
        "split": "train",
        "decomposition": "return yards of TD runs of  LeSean McCoy ;return the  longest of #1",
        "program": [
            "SELECT['yards of TD runs of LeSean McCoy']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of TD runs of LeSean McCoy"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of TD runs of LeSean McCoy)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD runs of LeSean McCoy)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "LeSean",
                "McCoy",
                "'s",
                "longest",
                "TD",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2278_2cd9ad42-b6bc-4cfd-b386-cae8397dc88b",
        "question_text": "How many 38 yard field goals did Cundiff kick?",
        "split": "train",
        "decomposition": "return yard of  field goals that Cundiff kick ;return #1 that are  equal to 38 ;return the number of  #2",
        "program": [
            "SELECT['yard of field goals that Cundiff kick']",
            "FILTER['#1', 'that are equal to 38']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yard of field goals that Cundiff kick"
                ],
                "that are equal to 38"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals that Cundiff kick)"
                ],
                "GET_QUESTION_SPAN(that are equal to 38)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals that Cundiff kick)"
                ],
                "GET_QUESTION_NUMBER(38)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "38",
                "yard",
                "field",
                "goals",
                "did",
                "Cundiff",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2915_a98e9636-26d3-48b6-9e15-eb5dbfce1f3c",
        "question_text": "Were there fewer years of losses to dry rot and curl or to potato losses in Ulster?",
        "split": "train",
        "decomposition": "return years of losses  to dry rot and  curl in  Ulster ;return years of losses  to potato losses in  Ulster ;return the  number of  #1 ;return the  number of  #2 ;return which is fewer of #3 ,  #4",
        "program": [
            "SELECT['years of losses to dry rot and curl in Ulster']",
            "SELECT['years of losses to potato losses in Ulster']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years of losses to dry rot and curl in Ulster"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years of losses to potato losses in Ulster"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of losses to dry rot and curl in Ulster)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of losses to potato losses in Ulster)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of losses to dry rot and curl in Ulster)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of losses to potato losses in Ulster)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    12,
                    13,
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "fewer",
                "years",
                "of",
                "losses",
                "to",
                "dry",
                "rot",
                "and",
                "curl",
                "or",
                "to",
                "potato",
                "losses",
                "in",
                "Ulster",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    15
                ],
                [
                    13,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    11
                ],
                [
                    2,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    12,
                    13,
                    15
                ],
                [],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    16
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1042_71446d50-bab4-42a8-b8b5-ba3e4cf99035",
        "question_text": "How many areas north of the Republic of Ragusa did Venice take over in 1694?",
        "split": "dev",
        "decomposition": "return areas north of the  Republic of  Ragusa ;return #1 that Venice takes over in  1694 ;return number of  #2",
        "program": [
            "SELECT['areas north of the Republic of Ragusa']",
            "FILTER['#1', 'that Venice takes over in 1694']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "areas north of the Republic of Ragusa"
                ],
                "that Venice takes over in 1694"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(areas north of the Republic of Ragusa)"
                ],
                "GET_QUESTION_SPAN(that Venice takes over in 1694)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(areas north of the Republic of Ragusa)"
                ],
                "GET_QUESTION_SPAN(that Venice takes over in 1694)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9,
                    11
                ],
                [
                    2,
                    8,
                    13
                ],
                [
                    4,
                    5,
                    7,
                    10
                ],
                [
                    3,
                    6,
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "areas",
                "north",
                "of",
                "the",
                "Republic",
                "of",
                "Ragusa",
                "did",
                "Venice",
                "take",
                "over",
                "in",
                "1694",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    7,
                    9,
                    11
                ],
                [
                    8,
                    10
                ],
                [
                    6
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    12
                ],
                [
                    9,
                    11
                ],
                [
                    2
                ],
                [
                    8,
                    13
                ],
                [
                    10
                ],
                [
                    6
                ],
                [
                    3,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2338_00175171-d11f-40d6-b5f9-3a9730dd44db",
        "question_text": "Which quaterback threw for more yards, Rodgers or Cutler?",
        "split": "train",
        "decomposition": "return yards that Rodgers threw for ;return yards that Cutler threw for ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards that Rodgers threw for']",
            "SELECT['yards that Cutler threw for']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Rodgers threw for"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Cutler threw for"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Rodgers threw for)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Cutler threw for)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Rodgers threw for)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Cutler threw for)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "quaterback",
                "threw",
                "for",
                "more",
                "yards",
                ",",
                "Rodgers",
                "or",
                "Cutler",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1668_1eb8e0d8-2305-4b50-8380-460166693229",
        "question_text": "What started second: Battle of Amiens or German resistance stiffened?",
        "split": "train",
        "decomposition": "return when  was  the  Battle of Amiens ;return when  did the  German resistance stiffen ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was the Battle of Amiens']",
            "SELECT['when did the German resistance stiffen']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the Battle of Amiens"
            ],
            [
                "SELECT",
                "when did the German resistance stiffen"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Amiens)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the German resistance stiffen)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Amiens)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the German resistance stiffen)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "What",
                "started",
                "second",
                ":",
                "Battle",
                "of",
                "Amiens",
                "or",
                "German",
                "resistance",
                "stiffened",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1903_c5422295-8422-425b-85ef-19796e51b4e6",
        "question_text": "How many yards difference was Ryan Succop\u2019s first field goal compared to his second?",
        "split": "train",
        "decomposition": "return yards of field goals of  Ryan Succop ;return first of #1 ;return second of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Ryan Succop']",
            "AGGREGATE['min', '#1']",
            "PROJECT['second of #REF', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Ryan Succop"
                ]
            ],
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Ryan Succop"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Succop)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Succop)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Succop)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Ryan Succop)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Ryan",
                "Succop",
                "\u2019s",
                "first",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9,
                    10,
                    13
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    14
                ],
                [
                    8,
                    9,
                    10,
                    13
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_807_cc98d994-f4b7-4340-b192-3642226902a9",
        "question_text": "How many yards was the second longest touchdown play?",
        "split": "train",
        "decomposition": "return yards of touchdown plays ;return the  second longest of #1",
        "program": [
            "SELECT['yards of touchdown plays']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown plays"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown plays)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown plays)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "longest",
                "touchdown",
                "play",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_573_d7c93050-c4c5-477a-ae6c-c7aa7dcbc25b",
        "question_text": "Which playre scored the first points of the game?",
        "split": "train",
        "decomposition": "return the  first points of the game ;return which playre scored #1",
        "program": [
            "SELECT['the first points of the game']",
            "PROJECT['which playre scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "which playre scored #REF",
            [
                "SELECT",
                "the first points of the game"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which playre scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first points of the game)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which playre scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the first points of the game)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "playre",
                "scored",
                "the",
                "first",
                "points",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1471_7837648a-f34f-4062-bd99-d827e9240fbc",
        "question_text": "How many yards longer was the second field goal than the first?",
        "split": "dev",
        "decomposition": "return yards of field goals ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    2,
                    4,
                    6,
                    7,
                    8,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "the",
                "second",
                "field",
                "goal",
                "than",
                "the",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    4,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    7,
                    8,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_899_b3a89a8d-3141-4a97-b7ee-2395d885d0af",
        "question_text": "What happened second: Shang dynasty or Zhou dynasty?",
        "split": "train",
        "decomposition": "return when  was  the  Shang dynasty  ;return when  was  the  Zhou dynasty  ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was the Shang dynasty']",
            "SELECT['when was the Zhou dynasty']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the Shang dynasty"
            ],
            [
                "SELECT",
                "when was the Zhou dynasty"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Shang dynasty)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Zhou dynasty)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Shang dynasty)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Zhou dynasty)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "Shang",
                "dynasty",
                "or",
                "Zhou",
                "dynasty",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3170_b3a9af6f-4167-4cb4-b267-c674a524c05f",
        "question_text": "How many field goals over 30 yards were made?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 over 30 yards ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'over 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "over 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(over 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "over",
                "30",
                "yards",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2353_303b995c-aaaf-42db-82d3-4ef1cca4c6bc",
        "question_text": "How many more field goals did Phil Dawson have than Justin Tucker?",
        "split": "train",
        "decomposition": "return field goals of Phil Dawson ;return field goals of Justin Tucker ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Phil Dawson']",
            "SELECT['field goals of Justin Tucker']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Phil Dawson"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Justin Tucker"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Phil Dawson)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Justin Tucker)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Phil Dawson)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Justin Tucker)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Phil",
                "Dawson",
                "have",
                "than",
                "Justin",
                "Tucker",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_118_8ed77c90-8a02-4a36-8b5c-913a86958361",
        "question_text": "How many minutes was the game moved by?",
        "split": "train",
        "decomposition": "return minutes the  game was  moved by ;return number of  #1",
        "program": [
            "SELECT['minutes the game was moved by']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "minutes the game was moved by"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(minutes the game was moved by)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(minutes the game was moved by)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "minutes",
                "was",
                "the",
                "game",
                "moved",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2219_3fa749aa-eca6-4cc5-b17c-3f50190bac8e",
        "question_text": "Which quarterback threw for more yards, Orton or Rodgers?",
        "split": "train",
        "decomposition": "return yards of Orton ;return yards of Rodgers ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards of Orton']",
            "SELECT['yards of Rodgers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Orton"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Rodgers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Orton)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Rodgers)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Orton)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Rodgers)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "for",
                "more",
                "yards",
                ",",
                "Orton",
                "or",
                "Rodgers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1449_6459ca0e-abbe-4899-becd-e0dec52709a6",
        "question_text": "How many field goals in the game were kicked from further than 30 yards out?",
        "split": "train",
        "decomposition": "return field goals in  the  game ;return yards of #1 ;return #1 where #2 is higher than 30 ;return number of  #3",
        "program": [
            "SELECT['field goals in the game']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 30']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals in the game"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals in the game"
                    ]
                ],
                "is higher than 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 30)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals in the game)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    11
                ],
                [
                    4,
                    5,
                    9,
                    10
                ],
                [
                    14,
                    15
                ],
                [
                    6,
                    7,
                    8,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "in",
                "the",
                "game",
                "were",
                "kicked",
                "from",
                "further",
                "than",
                "30",
                "yards",
                "out",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    11
                ],
                [
                    10
                ],
                [],
                [
                    9,
                    14
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    7,
                    12
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    6,
                    8,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2149_ee5abbf3-be1a-44ae-bde4-e8e724fa90c1",
        "question_text": "Which groups in percent are larger than 12%?",
        "split": "train",
        "decomposition": "return groups that are larger than 12 %",
        "program": [
            "SELECT['groups that are larger than 12 %']"
        ],
        "nested_expression": [
            "SELECT",
            "groups that are larger than 12 %"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(groups that are larger than 12 %)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(groups that are larger than 12 %)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "groups",
                "in",
                "percent",
                "are",
                "larger",
                "than",
                "12",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_626_5228c4cc-0646-4a6e-9e58-ebd02c2156bf",
        "question_text": "How many yards was Manning's longest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Manning ;return longest of #1",
        "program": [
            "SELECT['yards of touchdown passes of Manning']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes of Manning"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Manning)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Manning)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Manning",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1872_5eca58c1-25a8-4115-ab44-561a162fc27a",
        "question_text": "How many in percent from the census didn't speak English as their first language?",
        "split": "train",
        "decomposition": "return percent from  the  census that speak English as their first language ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent from the census that speak English as their first language']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent from the census that speak English as their first language"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent from the census that speak English as their first language)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent from the census that speak English as their first language)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    8,
                    9,
                    11,
                    12,
                    14
                ],
                [],
                [
                    2,
                    5,
                    7
                ],
                [
                    10,
                    13,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "from",
                "the",
                "census",
                "did",
                "n't",
                "speak",
                "English",
                "as",
                "their",
                "first",
                "language",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    11,
                    12,
                    13
                ],
                [
                    10
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    8,
                    9,
                    11,
                    14
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    13,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_877_b190c7db-607c-4cc7-b4ec-66f6b3363000",
        "question_text": "Which player with the last name Johnson scored more touchdowns, Chad Johnson or Rudi Johnson?",
        "split": "train",
        "decomposition": "return touchdowns of Chad Johnson   ;return touchdowns of Rudi Johnson   ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['touchdowns of Chad Johnson']",
            "SELECT['touchdowns of Rudi Johnson']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Chad Johnson"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Rudi Johnson"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Chad Johnson)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Rudi Johnson)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Chad Johnson)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Rudi Johnson)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7,
                    8,
                    10,
                    13
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    2,
                    4,
                    9,
                    11
                ],
                [
                    12,
                    15
                ],
                [
                    14,
                    16
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "with",
                "the",
                "last",
                "name",
                "Johnson",
                "scored",
                "more",
                "touchdowns",
                ",",
                "Chad",
                "Johnson",
                "or",
                "Rudi",
                "Johnson",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12,
                    13,
                    15
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5
                ],
                [
                    10,
                    13
                ],
                [
                    1,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    11
                ],
                [
                    12,
                    15
                ],
                [
                    14
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_91_1afd6a7c-3ecf-483f-93ee-4560dd32f6b9",
        "question_text": "Which team the Ravens' onside kick?",
        "split": "train",
        "decomposition": "return Ravens ;return onside kick of #1 ;return which team of #2",
        "program": [
            "SELECT['Ravens']",
            "PROJECT['onside kick of #REF', '#1']",
            "PROJECT['which team of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which team of #REF",
            [
                "PROJECT",
                "onside kick of #REF",
                [
                    "SELECT",
                    "Ravens"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which team of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(onside kick of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Ravens)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which team of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(onside kick of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Ravens)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "the",
                "Ravens",
                "'",
                "onside",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1935_ca0e966d-3e0d-43f8-8991-9c544b300c89",
        "question_text": "Which group for households is smaller: average household size or average family size?",
        "split": "dev",
        "decomposition": "return average household size  ;return average family size  ;return which is lowest of #1 ,  #2",
        "program": [
            "SELECT['average household size']",
            "SELECT['average family size']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "average household size"
            ],
            [
                "SELECT",
                "average family size"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(average household size)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(average family size)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(average household size)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(average family size)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    2
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "group",
                "for",
                "households",
                "is",
                "smaller",
                ":",
                "average",
                "household",
                "size",
                "or",
                "average",
                "family",
                "size",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    2
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8,
                    10
                ],
                [
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    2
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_891_ba49dac2-4669-4d8a-816c-86eefdc4c3cf",
        "question_text": "Who died 8 years after the death of the mother of Laestadius, his dad or brother Petrus?",
        "split": "train",
        "decomposition": "return when  was  the  death of the mother of  Laestadius ;return when  was  the  death of the dad of  Laestadius ;return when  was  the  death of the brother of  Laestadius ,  Petrus ;return if #2 was  8 years after #1 ;return if #3 was  8 years after #1 ;return which is true of #4 ,  #5",
        "program": [
            "SELECT['when was the death of the mother of Laestadius']",
            "SELECT['when was the death of the dad of Laestadius']",
            "SELECT['when was the death of the brother of Laestadius , Petrus']",
            "BOOLEAN['#2', 'was 8 years after #1']",
            "BOOLEAN['#3', 'was 8 years after #1']",
            "COMPARISON['true', '#4', '#5']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when was the death of the dad of Laestadius"
                ],
                "was 8 years after #1"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when was the death of the brother of Laestadius , Petrus"
                ],
                "was 8 years after #1"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the death of the dad of Laestadius)"
                ],
                "GET_QUESTION_SPAN(was 8 years after #1)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the death of the brother of Laestadius , Petrus)"
                ],
                "GET_QUESTION_SPAN(was 8 years after #1)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the death of the dad of Laestadius)"
                ],
                "GET_QUESTION_SPAN(was 8 years after #1)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the death of the brother of Laestadius , Petrus)"
                ],
                "GET_QUESTION_SPAN(was 8 years after #1)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    0
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    11,
                    14,
                    15
                ],
                [
                    12,
                    13
                ],
                [
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "Who",
                "died",
                "8",
                "years",
                "after",
                "the",
                "death",
                "of",
                "the",
                "mother",
                "of",
                "Laestadius",
                ",",
                "his",
                "dad",
                "or",
                "brother",
                "Petrus",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    2,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11,
                    15
                ],
                [],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    17
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    17
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_758_f494f260-f815-4b31-a3b3-42362dd2c66a",
        "question_text": "How many yards was Sebastian Janikowski's shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Sebastian Janikowski ;return the  shortest of #1",
        "program": [
            "SELECT['yards of field goals of Sebastian Janikowski']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Sebastian Janikowski"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Sebastian",
                "Janikowski",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_600_f093446c-3cca-4666-ae63-2ad933e453f0",
        "question_text": "What US President adopted free trade principles?",
        "split": "train",
        "decomposition": "return US President that adopted free trade principles",
        "program": [
            "SELECT['US President that adopted free trade principles']"
        ],
        "nested_expression": [
            "SELECT",
            "US President that adopted free trade principles"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(US President that adopted free trade principles)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(US President that adopted free trade principles)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "US",
                "President",
                "adopted",
                "free",
                "trade",
                "principles",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_450_251fd56e-da7b-421d-83e6-127307974b05",
        "question_text": "How many touchdown passes occurred that were less than 10 yards?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return #1 that were less than 10 ;return number of  #2",
        "program": [
            "SELECT['yards of touchdown passes']",
            "FILTER['#1', 'that were less than 10']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ],
                "that were less than 10"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ],
                "GET_QUESTION_SPAN(that were less than 10)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    2,
                    11
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "occurred",
                "that",
                "were",
                "less",
                "than",
                "10",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1695_841bb641-4ad8-4aa8-9d0e-54d9cb99b27e",
        "question_text": "Which player had the shortest touchdown scoring play of the game?",
        "split": "train",
        "decomposition": "return touchdown scoring plays of the  game ;return the  shortest of #1 ;return the  player that had #2",
        "program": [
            "SELECT['touchdown scoring plays of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown scoring plays of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown scoring plays of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown scoring plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "the",
                "shortest",
                "touchdown",
                "scoring",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    8,
                    9
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2803_67aeab37-865c-4716-bbd1-04ff7a7282a9",
        "question_text": "How many percent of people were either Black, Native American or Asian?",
        "split": "train",
        "decomposition": "return percent of people that were Black ;return percent of people that were Native American ;return percent of people that were Asian ;return sum of #1 and  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['percent of people that were Black']",
            "SELECT['percent of people that were Native American']",
            "SELECT['percent of people that were Asian']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "percent of people that were Asian"
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "percent of people that were Black"
                ],
                [
                    "SELECT",
                    "percent of people that were Native American"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were Asian)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that were Black)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that were Native American)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were Asian)"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that were Black)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(percent of people that were Native American)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [
                    7
                ],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "either",
                "Black",
                ",",
                "Native",
                "American",
                "or",
                "Asian",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    10
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1167_4f1919d2-12ac-477d-a2d1-2b39623c81d2",
        "question_text": "What happened first: Commonwealth resumed the offensive or Treaty of \u017burawno?",
        "split": "dev",
        "decomposition": "return date that Commonwealth resumed the  offensive ;return date offensive Treaty of \u017burawno ;return which is first of #1 ,  #2",
        "program": [
            "SELECT['date that Commonwealth resumed the offensive']",
            "SELECT['date offensive Treaty of \\u017burawno']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "date that Commonwealth resumed the offensive"
            ],
            [
                "SELECT",
                "date offensive Treaty of \u017burawno"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(date that Commonwealth resumed the offensive)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(date offensive Treaty of \u017burawno)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(date that Commonwealth resumed the offensive)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(date offensive Treaty of \u017burawno)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    8,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "Commonwealth",
                "resumed",
                "the",
                "offensive",
                "or",
                "Treaty",
                "of",
                "\u017burawno",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8
                ],
                [
                    1,
                    2,
                    7,
                    9
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_301_1abcae08-a1df-4bc2-b45c-dba84af340b2",
        "question_text": "How many years was it from when Joseph Francois Dupleix arrived in India and when he became the French East India Company's governor?",
        "split": "train",
        "decomposition": "return year Joseph Francois Dupleix arrived in  India ;return year Joseph Francois Dupleix became the  French East India Company 's governor ;return difference of #1 and  #2",
        "program": [
            "SELECT['year Joseph Francois Dupleix arrived in India']",
            "SELECT[\"year Joseph Francois Dupleix became the French East India Company 's governor\"]",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year Joseph Francois Dupleix arrived in India"
            ],
            [
                "SELECT",
                "year Joseph Francois Dupleix became the French East India Company 's governor"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Joseph Francois Dupleix arrived in India)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Joseph Francois Dupleix became the French East India Company 's governor)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Joseph Francois Dupleix arrived in India)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Joseph Francois Dupleix became the French East India Company 's governor)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6,
                    7,
                    8,
                    13,
                    14,
                    15,
                    16
                ],
                [
                    3,
                    5,
                    9,
                    10,
                    11
                ],
                [
                    12,
                    18,
                    19
                ],
                [
                    17,
                    22
                ],
                [
                    20,
                    21,
                    23,
                    24
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "it",
                "from",
                "when",
                "Joseph",
                "Francois",
                "Dupleix",
                "arrived",
                "in",
                "India",
                "and",
                "when",
                "he",
                "became",
                "the",
                "French",
                "East",
                "India",
                "Company",
                "'s",
                "governor",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    4,
                    6,
                    14
                ],
                [
                    7,
                    10
                ],
                [
                    5,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [],
                [
                    15,
                    16,
                    17
                ],
                [
                    18,
                    20,
                    21,
                    22
                ],
                [
                    19
                ],
                [
                    23,
                    24
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7,
                    8,
                    9,
                    13,
                    14,
                    15,
                    16
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    12,
                    19
                ],
                [
                    18,
                    22
                ],
                [
                    23
                ],
                [
                    20,
                    21,
                    24
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    23
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    23
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    23
                ],
                [
                    15,
                    23
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    23
                ],
                [
                    17,
                    23
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    22
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1675_4b68fbb5-0311-48f9-b9e2-2835e0d25a52",
        "question_text": "How many field goals measured less than 30 yards long?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 that are less than 30 yards ;return the  number of  #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that are less than 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "that are less than 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(that are less than 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    10
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "measured",
                "less",
                "than",
                "30",
                "yards",
                "long",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_94_fb12ce78-4a26-4065-a60e-7965492abb49",
        "question_text": "Which player scored the shortest touchdown run of the game?",
        "split": "train",
        "decomposition": "return touchdown runs of the  game ;return the  shortest of #1 ;return the  player that scored #2",
        "program": [
            "SELECT['touchdown runs of the game']",
            "AGGREGATE['min', '#1']",
            "PROJECT['the player that scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the player that scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown runs of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the player that scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown runs of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "the",
                "shortest",
                "touchdown",
                "run",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_129_a2770c8c-d2db-438d-ad01-b447003cb531",
        "question_text": "How many turnovers did Denver force?",
        "split": "train",
        "decomposition": "return turnovers that Denver force ;return the  number of  #1",
        "program": [
            "SELECT['turnovers that Denver force']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "turnovers that Denver force"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(turnovers that Denver force)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(turnovers that Denver force)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "turnovers",
                "did",
                "Denver",
                "force",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2152_e429c097-4640-4a5b-b56a-a0516d01f67d",
        "question_text": "How many 38 yard field goals did Cundiff make?",
        "split": "train",
        "decomposition": "return field goals of  Cundiff ;return #1 that are  38 yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Cundiff']",
            "FILTER['#1', 'that are 38 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Cundiff"
                ],
                "that are 38 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Cundiff)"
                ],
                "GET_QUESTION_SPAN(that are 38 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Cundiff)"
                ],
                "GET_QUESTION_NUMBER(38)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "38",
                "yard",
                "field",
                "goals",
                "did",
                "Cundiff",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_431_65e4607d-8519-4e62-a165-c2a6dffad3b9",
        "question_text": "How many 37-yard field goals did Shaun Suisham kick?",
        "split": "train",
        "decomposition": "return field goals of  Shaun Suisham ;return #1 that are  37-yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Shaun Suisham']",
            "FILTER['#1', 'that are 37-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Shaun Suisham"
                ],
                "that are 37-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Shaun Suisham)"
                ],
                "GET_QUESTION_SPAN(that are 37-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Shaun Suisham)"
                ],
                "GET_QUESTION_NUMBER(37)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "37-yard",
                "field",
                "goals",
                "did",
                "Shaun",
                "Suisham",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1660_e2e0d5b1-b0e8-4b0d-91df-a6a10d850a22",
        "question_text": "Did Cadillac Williams have fewer or more than 100 rushing yards?",
        "split": "train",
        "decomposition": "return rushing yards of  Cadillac Williams ;return if #1 was fewer than  100 ;return if #1 was more than  100 ;return which is true of #2 , #3",
        "program": [
            "SELECT['rushing yards of Cadillac Williams']",
            "BOOLEAN['#1', 'was fewer than 100']",
            "BOOLEAN['#1', 'was more than 100']",
            "COMPARISON['true', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "rushing yards of Cadillac Williams"
                ],
                "was fewer than 100"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "rushing yards of Cadillac Williams"
                ],
                "was more than 100"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Cadillac Williams)"
                ],
                "GET_QUESTION_SPAN(was fewer than 100)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Cadillac Williams)"
                ],
                "GET_QUESTION_SPAN(was more than 100)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Cadillac Williams)"
                ],
                "GET_QUESTION_SPAN(was fewer than 100)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Cadillac Williams)"
                ],
                "GET_QUESTION_SPAN(was more than 100)"
            ]
        ],
        "operators": [
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5,
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Did",
                "Cadillac",
                "Williams",
                "have",
                "fewer",
                "or",
                "more",
                "than",
                "100",
                "rushing",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1820_660cf86d-14cd-4cc7-bc7c-1dd371d95f80",
        "question_text": "Which player caught two touchdowns in the game?",
        "split": "train",
        "decomposition": "return players ;return touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['players']",
            "PROJECT['touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "two",
                "touchdowns",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7,
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2075_52c49380-320b-4c5e-aa67-350903872263",
        "question_text": "Who caught a 60 yard td pass?",
        "split": "train",
        "decomposition": "return 60 yard td pass ;return who  caught #1",
        "program": [
            "SELECT['60 yard td pass']",
            "PROJECT['who caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "SELECT",
                "60 yard td pass"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(60 yard td pass)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(60 yard td pass)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "a",
                "60",
                "yard",
                "td",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2977_743310f5-5b19-4a42-90d5-8ec951c78f3a",
        "question_text": "How many percent was the corporate income tax reduced by from 2006 to 2008?",
        "split": "train",
        "decomposition": "return percent that the  corporate income tax reduced by from  2006 to 2008",
        "program": [
            "SELECT['percent that the corporate income tax reduced by from 2006 to 2008']"
        ],
        "nested_expression": [
            "SELECT",
            "percent that the corporate income tax reduced by from 2006 to 2008"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(percent that the corporate income tax reduced by from 2006 to 2008)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(percent that the corporate income tax reduced by from 2006 to 2008)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    10,
                    12
                ],
                [
                    9,
                    11,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "was",
                "the",
                "corporate",
                "income",
                "tax",
                "reduced",
                "by",
                "from",
                "2006",
                "to",
                "2008",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    12
                ],
                [
                    11,
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    11,
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2247_e5515fe8-7b2e-4fc2-beb4-2ea54d8bad88",
        "question_text": "How many more burglaries in Fort Wayne than robberies?",
        "split": "train",
        "decomposition": "return burglaries in  Fort Wayne ;return robberies in  Fort Wayne ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['burglaries in Fort Wayne']",
            "SELECT['robberies in Fort Wayne']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "burglaries in Fort Wayne"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "robberies in Fort Wayne"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(burglaries in Fort Wayne)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(robberies in Fort Wayne)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(burglaries in Fort Wayne)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(robberies in Fort Wayne)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "burglaries",
                "in",
                "Fort",
                "Wayne",
                "than",
                "robberies",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1802_a20bf4cc-7db6-4a58-862b-759b51a06024",
        "question_text": "How many more dollars did the V-22 Total cost of ownership per hour in 2013 compared to Sikorsky CH-53E Super Stallion cost per flight hour in 2007?",
        "split": "dev",
        "decomposition": "return Total cost  of ownership per hour  in  2013 of  the V-22 ;return Total cost  per flight hour  in  2007 of the Sikorsky CH-53E Super Stallion ;return difference in  dollars of #1 and  #2",
        "program": [
            "SELECT['Total cost of ownership per hour in 2013 of the V-22']",
            "SELECT['Total cost per flight hour in 2007 of the Sikorsky CH-53E Super Stallion']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "Total cost of ownership per hour in 2013 of the V-22"
            ],
            [
                "SELECT",
                "Total cost per flight hour in 2007 of the Sikorsky CH-53E Super Stallion"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Total cost of ownership per hour in 2013 of the V-22)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Total cost per flight hour in 2007 of the Sikorsky CH-53E Super Stallion)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Total cost of ownership per hour in 2013 of the V-22)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Total cost per flight hour in 2007 of the Sikorsky CH-53E Super Stallion)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7,
                    8,
                    11
                ],
                [
                    4,
                    5,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    6
                ],
                [
                    14,
                    15,
                    16,
                    17,
                    18,
                    21,
                    22
                ],
                [
                    19,
                    20,
                    23,
                    24,
                    25
                ],
                [
                    26,
                    27
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "dollars",
                "did",
                "the",
                "V-22",
                "Total",
                "cost",
                "of",
                "ownership",
                "per",
                "hour",
                "in",
                "2013",
                "compared",
                "to",
                "Sikorsky",
                "CH-53E",
                "Super",
                "Stallion",
                "cost",
                "per",
                "flight",
                "hour",
                "in",
                "2007",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    8,
                    11
                ],
                [
                    6,
                    7,
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    17
                ],
                [
                    14,
                    15,
                    16,
                    21,
                    22
                ],
                [
                    18,
                    19,
                    20
                ],
                [],
                [
                    25
                ],
                [
                    23,
                    24
                ],
                [
                    26
                ],
                [
                    27
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    11,
                    22
                ],
                [
                    4,
                    7
                ],
                [
                    8,
                    14,
                    15
                ],
                [
                    6,
                    10,
                    17
                ],
                [
                    12
                ],
                [],
                [],
                [
                    16,
                    21
                ],
                [
                    18,
                    19,
                    20,
                    23
                ],
                [
                    24,
                    26
                ],
                [
                    27
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    26
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    26
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    24
                ],
                [
                    16,
                    26
                ],
                [
                    17,
                    24
                ],
                [
                    17,
                    21
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    26
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1573_545ada70-874c-4769-8476-5507d01a0499",
        "question_text": "How many years did the US occupy the Dominican Republic?",
        "split": "train",
        "decomposition": "return years when  the  US occupy the Dominican Republic ;return the  number of  #1",
        "program": [
            "SELECT['years when the US occupy the Dominican Republic']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when the US occupy the Dominican Republic"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the US occupy the Dominican Republic)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when the US occupy the Dominican Republic)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "US",
                "occupy",
                "the",
                "Dominican",
                "Republic",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1442_2e7f1234-77f9-4257-bbf3-41e7a92009f8",
        "question_text": "Which team scored more touchdowns in the first quarter?",
        "split": "train",
        "decomposition": "return teams ;return first quarter touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['first quarter touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "first quarter touchdowns of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(first quarter touchdowns of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(first quarter touchdowns of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    6
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "more",
                "touchdowns",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2155_ecbeb122-becb-4b41-88d7-080c518610d4",
        "question_text": "Which player scored more field goals, Billy Cundiff or David Akers?",
        "split": "train",
        "decomposition": "return field goals that Billy Cundiff scored ;return field goals that David Akers scored ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Billy Cundiff scored']",
            "SELECT['field goals that David Akers scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Billy Cundiff scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that David Akers scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Billy Cundiff scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that David Akers scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Billy Cundiff scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that David Akers scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Billy",
                "Cundiff",
                "or",
                "David",
                "Akers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2121_5d0e0445-d5cc-4747-9459-502756e72090",
        "question_text": "Which kicker kicked field goals of at least 45 yards?",
        "split": "train",
        "decomposition": "return kickers ;return yards of field goals of  #1 ;return #1 where #2 is at least 45",
        "program": [
            "SELECT['kickers']",
            "PROJECT['yards of field goals of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 45']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "kickers"
            ],
            [
                "PROJECT",
                "yards of field goals of #REF",
                [
                    "SELECT",
                    "kickers"
                ]
            ],
            "is at least 45"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(yards of field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least 45)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(kickers)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(yards of field goals of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least 45)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    4,
                    5,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "kicked",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "45",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2
                ],
                [
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [
                    9,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2476_44d2900c-a407-4f8e-821a-800488e0955b",
        "question_text": "How many yards per reception, to one decimal place, did Craig have on average?",
        "split": "train",
        "decomposition": "return yards of receptions of  Craig ;return the  average of #1 to one decimal place",
        "program": [
            "SELECT['yards of receptions of Craig']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of receptions of Craig"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Craig)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of receptions of Craig)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    8,
                    9,
                    10,
                    14,
                    15
                ],
                [
                    6,
                    11,
                    13
                ],
                [
                    12,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "per",
                "reception",
                ",",
                "to",
                "one",
                "decimal",
                "place",
                ",",
                "did",
                "Craig",
                "have",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8,
                    10,
                    15
                ],
                [],
                [
                    6,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    7,
                    12,
                    13
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    11,
                    13
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    8,
                    9,
                    10,
                    14,
                    15
                ],
                [
                    6
                ],
                [
                    12
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1567_c75e99e7-14c0-4e54-a419-a5e0e8c998a1",
        "question_text": "Who kicked more field goals in the first two quarters?",
        "split": "train",
        "decomposition": "return field goals in  the  first two quarters ;return who  kicked more of #1",
        "program": [
            "SELECT['field goals in the first two quarters']",
            "PROJECT['who kicked more of #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who kicked more of #REF",
            [
                "SELECT",
                "field goals in the first two quarters"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked more of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the first two quarters)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who kicked more of #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals in the first two quarters)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    6,
                    8,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    2,
                    5
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "kicked",
                "more",
                "field",
                "goals",
                "in",
                "the",
                "first",
                "two",
                "quarters",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    8
                ],
                [
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3128_e96cd617-1059-4bc9-9b18-0df817660b6d",
        "question_text": "How many field goals did McManus kick in the second quarter?",
        "split": "train",
        "decomposition": "return field goals that McManus did kick in  the  second quarter ;return number of  #1",
        "program": [
            "SELECT['field goals that McManus did kick in the second quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals that McManus did kick in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that McManus did kick in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that McManus did kick)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "McManus",
                "kick",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    10
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3140_3f3e8dca-16d3-4728-a42e-ecb49e1afde4",
        "question_text": "How many field goals of over 40 yards did Gostkowski kick?",
        "split": "train",
        "decomposition": "return field goals of Gostkowski ;return yards of #1 ;return #1 where #2 is higher than 40 ;return number of  #3",
        "program": [
            "SELECT['field goals of Gostkowski']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Gostkowski"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Gostkowski"
                    ]
                ],
                "is higher than 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Gostkowski)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Gostkowski)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8,
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [
                    11
                ],
                [
                    7,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "over",
                "40",
                "yards",
                "did",
                "Gostkowski",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    7,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [
                    7,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1055_64e7add1-c649-4b6a-90cd-83c6cbdb038b",
        "question_text": "Did Hyder Ali demolish the Hindu temple at Guruvayur?",
        "split": "train",
        "decomposition": "return the Hindu temple at Guruvayur ;return if Hyder Ali demolish #1",
        "program": [
            "SELECT['the Hindu temple at Guruvayur']",
            "BOOLEAN['#1', 'if Hyder Ali demolish #REF']"
        ],
        "nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "the Hindu temple at Guruvayur"
            ],
            "if Hyder Ali demolish #REF"
        ],
        "typed_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Hindu temple at Guruvayur)"
            ],
            "GET_QUESTION_SPAN(if Hyder Ali demolish #REF)"
        ],
        "drop_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the Hindu temple at Guruvayur)"
            ],
            "GET_QUESTION_SPAN(if Hyder Ali demolish #REF)"
        ],
        "operators": [
            "select",
            "boolean"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Did",
                "Hyder",
                "Ali",
                "demolish",
                "the",
                "Hindu",
                "temple",
                "at",
                "Guruvayur",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_202_fa2c5d17-4a18-4115-aacc-28de890a934e",
        "question_text": "Which municipality send the smallest number of troops?",
        "split": "train",
        "decomposition": "return municipalities that send troops ;return troops that #1 send ;return the  number of  #2 for each #1 ;return #1 where #3 is the  smallest",
        "program": [
            "SELECT['municipalities that send troops']",
            "PROJECT['troops that #REF send', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the smallest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "municipalities that send troops"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "troops that #REF send",
                    [
                        "SELECT",
                        "municipalities that send troops"
                    ]
                ],
                [
                    "SELECT",
                    "municipalities that send troops"
                ]
            ],
            "is the smallest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(municipalities that send troops)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(troops that #REF send)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(municipalities that send troops)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(troops that #REF send)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "municipality",
                "send",
                "the",
                "smallest",
                "number",
                "of",
                "troops",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_279_dbcc6dca-ed69-4a2a-aea4-bb8ffef7d77c",
        "question_text": "How many Burmese men (what percentage)  out of the initial 10,000 men under the command of Samin Ubkong and Samin Phataba wound up being captured?",
        "split": "train",
        "decomposition": "return percentage of the  initial 10,000 men  under the command of  Samin  Ubkong and  Samin Phataba that wound up being captured",
        "program": [
            "SELECT['percentage of the initial 10 , 000 men under the command of Samin Ubkong and Samin Phataba that wound up being captured']"
        ],
        "nested_expression": [
            "SELECT",
            "percentage of the initial 10 , 000 men under the command of Samin Ubkong and Samin Phataba that wound up being captured"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(percentage of the initial 10 , 000 men under the command of Samin Ubkong and Samin Phataba that wound up being captured)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(percentage of the initial 10 , 000 men under the command of Samin Ubkong and Samin Phataba that wound up being captured)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    21,
                    24,
                    25
                ],
                [
                    20,
                    22,
                    23,
                    26,
                    27
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Burmese",
                "men",
                "(",
                "what",
                "percentage",
                ")",
                "out",
                "of",
                "the",
                "initial",
                "10,000",
                "men",
                "under",
                "the",
                "command",
                "of",
                "Samin",
                "Ubkong",
                "and",
                "Samin",
                "Phataba",
                "wound",
                "up",
                "being",
                "captured",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    2,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    24
                ],
                [
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    25
                ],
                [
                    26,
                    27
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    17,
                    24
                ],
                [
                    8,
                    16,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    25,
                    26
                ],
                [
                    27
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    22
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    22
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    22
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    22
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    22
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    22
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    22
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    26
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    26
                ],
                [
                    25,
                    25
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1845_80d619ef-5f74-4ee5-901c-413ca8596a1c",
        "question_text": "Which percentage was the smallest in the 2010 census?",
        "split": "train",
        "decomposition": "return percentages in  the  2010 census ;return smallest of #1",
        "program": [
            "SELECT['percentages in the 2010 census']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "percentages in the 2010 census"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentages in the 2010 census)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentages in the 2010 census)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    4
                ],
                [
                    0,
                    1,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "percentage",
                "was",
                "the",
                "smallest",
                "in",
                "the",
                "2010",
                "census",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    5,
                    6,
                    8
                ],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2717_952f2301-6a2a-4e86-86fe-6e4a17eb480b",
        "question_text": "how many monday night games has the Cowboys played?",
        "split": "train",
        "decomposition": "return monday night games the  Cowboys have played ;return the  number of  #1",
        "program": [
            "SELECT['monday night games the Cowboys have played']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "monday night games the Cowboys have played"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(monday night games the Cowboys have played)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(monday night games the Cowboys have played)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    3,
                    9
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "monday",
                "night",
                "games",
                "has",
                "the",
                "Cowboys",
                "played",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    3
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1127_d16932a2-7573-4b92-bca1-421133b2f4bc",
        "question_text": "What was the minimum year for the Peasant revolt in Flanders?",
        "split": "train",
        "decomposition": "return years of the  Peasant revolt in  Flanders ;return minimum of #1",
        "program": [
            "SELECT['years of the Peasant revolt in Flanders']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "years of the Peasant revolt in Flanders"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Peasant revolt in Flanders)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the Peasant revolt in Flanders)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3
                ],
                [
                    0,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "minimum",
                "year",
                "for",
                "the",
                "Peasant",
                "revolt",
                "in",
                "Flanders",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    7
                ],
                [
                    2,
                    6,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_38_d93ebd49-7dc2-4c98-bd3a-f47463bfa242",
        "question_text": "How many total 205 sepoys tried  and 47 executed?",
        "split": "train",
        "decomposition": "return sepoys that are tried ;return sepoys that are executed ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['sepoys that are tried']",
            "SELECT['sepoys that are executed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "sepoys that are tried"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "sepoys that are executed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys that are tried)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys that are executed)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys that are tried)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(sepoys that are executed)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    6
                ],
                [
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "205",
                "sepoys",
                "tried",
                "and",
                "47",
                "executed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1077_03d1bb27-5a14-4add-93f1-69daec5b2f34",
        "question_text": "Which quarter had the most field goals?",
        "split": "train",
        "decomposition": "return quarters ;return field goals in  #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarters']",
            "PROJECT['field goals in #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarters"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals in #REF",
                    [
                        "SELECT",
                        "quarters"
                    ]
                ],
                [
                    "SELECT",
                    "quarters"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals in #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    1,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarter",
                "had",
                "the",
                "most",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    1,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    1,
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2022_2691807a-e38f-49f7-baf9-8e623cc2cb88",
        "question_text": "How many 46-yard field goals did David Akers kick?",
        "split": "train",
        "decomposition": "return field goals that David Akers kick ;return #1 that are  46-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that David Akers kick']",
            "FILTER['#1', 'that are 46-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that David Akers kick"
                ],
                "that are 46-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that David Akers kick)"
                ],
                "GET_QUESTION_SPAN(that are 46-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that David Akers kick)"
                ],
                "GET_QUESTION_NUMBER(46)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "46-yard",
                "field",
                "goals",
                "did",
                "David",
                "Akers",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1808_89610ac3-d166-4429-acbf-89fc2a2259eb",
        "question_text": "Which race populated the city over 90%?",
        "split": "train",
        "decomposition": "return races of the  city ;return % of the  city that #1 populated ;return #1 where #2 is over 90 %",
        "program": [
            "SELECT['races of the city']",
            "PROJECT['% of the city that #REF populated', '#1']",
            "COMPARATIVE['#1', '#2', 'is over 90 %']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "races of the city"
            ],
            [
                "PROJECT",
                "% of the city that #REF populated",
                [
                    "SELECT",
                    "races of the city"
                ]
            ],
            "is over 90 %"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(races of the city)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(% of the city that #REF populated)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is over 90 %)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(races of the city)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(% of the city that #REF populated)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is over 90 %)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "race",
                "populated",
                "the",
                "city",
                "over",
                "90",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1590_0f08b46b-a3ed-4e75-b494-8ab36a27c83e",
        "question_text": "How many years after the Genoese helped Andronikos IV overthrow John V did Venice restore the latter to the throne?",
        "split": "train",
        "decomposition": "return year when  the  Genoese helped Andronikos IV overthrow John V ;return year when  Venice restore John V to the  throne ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year when the Genoese helped Andronikos IV overthrow John V']",
            "SELECT['year when Venice restore John V to the throne']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when Venice restore John V to the throne"
            ],
            [
                "SELECT",
                "year when the Genoese helped Andronikos IV overthrow John V"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when Venice restore John V to the throne)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the Genoese helped Andronikos IV overthrow John V)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when Venice restore John V to the throne)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the Genoese helped Andronikos IV overthrow John V)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    9
                ],
                [
                    4,
                    6,
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18
                ],
                [
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "Genoese",
                "helped",
                "Andronikos",
                "IV",
                "overthrow",
                "John",
                "V",
                "did",
                "Venice",
                "restore",
                "the",
                "latter",
                "to",
                "the",
                "throne",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ],
                [
                    14,
                    15,
                    16
                ],
                [
                    13,
                    17
                ],
                [
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    7,
                    8,
                    9,
                    10,
                    11,
                    19
                ],
                [
                    6
                ],
                [],
                [],
                [
                    13,
                    14,
                    16
                ],
                [
                    17
                ],
                [
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    19
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    19
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2336_b89a1508-fe6c-43ce-923c-0056fa35fee1",
        "question_text": "How many catches did Marshall have?",
        "split": "train",
        "decomposition": "return catches of Marshall ;return number of  #1",
        "program": [
            "SELECT['catches of Marshall']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "catches of Marshall"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(catches of Marshall)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(catches of Marshall)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "catches",
                "did",
                "Marshall",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    4,
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2721_45f3d094-1d52-4c7a-8448-faf5f9e294d7",
        "question_text": "How many points did Chicago win the last game they at home against Dallas?",
        "split": "train",
        "decomposition": "return the  last home game against Dallas that Chicago win ;return points of Chicago in  #1",
        "program": [
            "SELECT['the last home game against Dallas that Chicago win']",
            "PROJECT['points of Chicago in #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "points of Chicago in #REF",
            [
                "SELECT",
                "the last home game against Dallas that Chicago win"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(points of Chicago in #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last home game against Dallas that Chicago win)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(points of Chicago in #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the last home game against Dallas that Chicago win)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Chicago",
                "win",
                "the",
                "last",
                "game",
                "they",
                "at",
                "home",
                "against",
                "Dallas",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    8,
                    11
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    4,
                    9,
                    13
                ],
                [
                    5,
                    10,
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2491_64446ae0-5b3a-4485-bdb0-6e92fba87276",
        "question_text": "How many more percentage was Roberts in the majority than Kennedy?",
        "split": "train",
        "decomposition": "return percentage of Roberts in  the  majority ;return percentage of Kennedy in  the  majority ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['percentage of Roberts in the majority']",
            "SELECT['percentage of Kennedy in the majority']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of Roberts in the majority"
            ],
            [
                "SELECT",
                "percentage of Kennedy in the majority"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Roberts in the majority)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Kennedy in the majority)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Roberts in the majority)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Kennedy in the majority)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percentage",
                "was",
                "Roberts",
                "in",
                "the",
                "majority",
                "than",
                "Kennedy",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1741_3d61501c-a760-4677-be4a-4c3ca70b70b3",
        "question_text": "Who made the only touchdown Bills scored?",
        "split": "train",
        "decomposition": "return the  touchdown the Bills scored ;return who  made #1",
        "program": [
            "SELECT['the touchdown the Bills scored']",
            "PROJECT['who made #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who made #REF",
            [
                "SELECT",
                "the touchdown the Bills scored"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the touchdown the Bills scored)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who made #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the touchdown the Bills scored)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "made",
                "the",
                "only",
                "touchdown",
                "Bills",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4,
                    6
                ],
                [
                    2
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2911_d264b5eb-0cd4-46f6-a9c4-532e8b71df92",
        "question_text": "how many points did the bengals have during their loss",
        "split": "train",
        "decomposition": "return points of the  bengals during their loss ;return sum of #1",
        "program": [
            "SELECT['points of the bengals during their loss']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points of the bengals during their loss"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the bengals during their loss)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the bengals during their loss)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "points",
                "did",
                "the",
                "bengals",
                "have",
                "during",
                "their",
                "loss"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1372_bce2fb2a-3168-498d-a190-e50a7168dae9",
        "question_text": "Which Panther had two receiving touchdowns?",
        "split": "train",
        "decomposition": "return Panther ;return receiving touchdowns of #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['Panther']",
            "PROJECT['receiving touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "Panther"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "receiving touchdowns of #REF",
                    [
                        "SELECT",
                        "Panther"
                    ]
                ],
                [
                    "SELECT",
                    "Panther"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Panther)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(receiving touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Panther)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(receiving touchdowns of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "Panther",
                "had",
                "two",
                "receiving",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3502_cc075fec-3cc3-495d-9866-c8aec1a295fe",
        "question_text": "Which year of the early 1980s had the second largest GDP growth?",
        "split": "train",
        "decomposition": "return years of the  early 1980s ;return GDP growth of #1 ;return #1 where #2 is second largest",
        "program": [
            "SELECT['years of the early 1980s']",
            "PROJECT['GDP growth of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is second largest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "years of the early 1980s"
            ],
            [
                "PROJECT",
                "GDP growth of #REF",
                [
                    "SELECT",
                    "years of the early 1980s"
                ]
            ],
            "is second largest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the early 1980s)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(GDP growth of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is second largest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the early 1980s)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(GDP growth of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is second largest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    6
                ],
                [
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [
                    5,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "year",
                "of",
                "the",
                "early",
                "1980s",
                "had",
                "the",
                "second",
                "largest",
                "GDP",
                "growth",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    6
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    2
                ],
                [
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1247_49cfef2c-6193-4d58-85b7-6261d5e61711",
        "question_text": "What prohibits religious discrimination?",
        "split": "train",
        "decomposition": "return what  prohibits religious discrimination",
        "program": [
            "SELECT['what prohibits religious discrimination']"
        ],
        "nested_expression": [
            "SELECT",
            "what prohibits religious discrimination"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what prohibits religious discrimination)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(what prohibits religious discrimination)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ]
            ],
            "question_tokens": [
                "What",
                "prohibits",
                "religious",
                "discrimination",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2246_d7f4340e-8a5c-462b-b324-f9b3076eb148",
        "question_text": "Are more people in Allen County employed by BAE Systems Inc. or Harris Corporation?",
        "split": "train",
        "decomposition": "return people in  Allen County employed by BAE Systems Inc. ;return people in  Allen County employed by Harris Corporation ;return number of #1 ;return number of #2 ;return which  is  highest of #3 , #4",
        "program": [
            "SELECT['people in Allen County employed by BAE Systems Inc.']",
            "SELECT['people in Allen County employed by Harris Corporation']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in Allen County employed by BAE Systems Inc."
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in Allen County employed by Harris Corporation"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in Allen County employed by BAE Systems Inc.)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in Allen County employed by Harris Corporation)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in Allen County employed by BAE Systems Inc.)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in Allen County employed by Harris Corporation)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    11
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Are",
                "more",
                "people",
                "in",
                "Allen",
                "County",
                "employed",
                "by",
                "BAE",
                "Systems",
                "Inc.",
                "or",
                "Harris",
                "Corporation",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [],
                [
                    3,
                    7
                ],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    4,
                    11
                ],
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2381_ed9a7c3b-5acd-4fd8-b7cb-a083bbb7e5fb",
        "question_text": "In which quarter were there no touchdowns?",
        "split": "train",
        "decomposition": "return quarters ;return touchdowns In #1 ;return number of  #2 for each #1 ;return #1 where #2 is zero",
        "program": [
            "SELECT['quarters']",
            "PROJECT['touchdowns In #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#2', 'is zero']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarters"
            ],
            [
                "PROJECT",
                "touchdowns In #REF",
                [
                    "SELECT",
                    "quarters"
                ]
            ],
            "is zero"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(touchdowns In #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(touchdowns In #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is zero)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarter",
                "were",
                "there",
                "no",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2255_534b41c5-1448-4a13-8d68-af9e23217607",
        "question_text": "How many points did the Patriots score in the 4th quarter?",
        "split": "dev",
        "decomposition": "return 4th quarter points of the  Patriots ;return sum of #1",
        "program": [
            "SELECT['4th quarter points of the Patriots']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "4th quarter points of the Patriots"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(4th quarter points of the Patriots)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(4th quarter points of the Patriots)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Patriots",
                "score",
                "in",
                "the",
                "4th",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1262_904ccf30-1b74-4bd6-9682-6b7be3114fff",
        "question_text": "How many years did several Ming princes accompanied Koxinga Tawain?",
        "split": "dev",
        "decomposition": "return years that several Ming princes accompanied Koxinga Tawain ;return number of  #1",
        "program": [
            "SELECT['years that several Ming princes accompanied Koxinga Tawain']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years that several Ming princes accompanied Koxinga Tawain"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that several Ming princes accompanied Koxinga Tawain)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years that several Ming princes accompanied Koxinga Tawain)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "several",
                "Ming",
                "princes",
                "accompanied",
                "Koxinga",
                "Tawain",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_8af82d6d-0c3f-4d31-a9d0-10f51b76d4b2",
        "question_text": "How many 41-yard field goals were made in the game?",
        "split": "dev",
        "decomposition": "return field goals that were made in  the game ;return #1 that were 41-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that were made in the game']",
            "FILTER['#1', 'that were 41-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that were made in the game"
                ],
                "that were 41-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_SPAN(that were 41-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_NUMBER(41)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "41-yard",
                "field",
                "goals",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3433_91d93336-3433-4aa6-a688-35d0e1c80896",
        "question_text": "how many yards did moncrief pass?",
        "split": "train",
        "decomposition": "return yards that moncrief did pass ;return sum of #1",
        "program": [
            "SELECT['yards that moncrief did pass']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that moncrief did pass"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that moncrief did pass)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that moncrief did pass)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "moncrief",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1353_8f1655d5-9c0a-47a4-a32d-723b951a6606",
        "question_text": "How many of Leftwich's 3 touchdown passes were over 7 yards?",
        "split": "train",
        "decomposition": "return touchdown passes of Leftwich ;return yards of #1 ;return #1 where #2 is higher than 7 ;return number of  #3",
        "program": [
            "SELECT['touchdown passes of Leftwich']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 7']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown passes of Leftwich"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown passes of Leftwich"
                    ]
                ],
                "is higher than 7"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Leftwich)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 7)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Leftwich)"
                ],
                "GET_QUESTION_NUMBER(7)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    3,
                    5,
                    6,
                    9
                ],
                [
                    2,
                    4
                ],
                [
                    12
                ],
                [
                    8,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Leftwich",
                "'s",
                "3",
                "touchdown",
                "passes",
                "were",
                "over",
                "7",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    7,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    4
                ],
                [],
                [
                    5,
                    12
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1718_a80296a2-e407-48cb-85a3-423aae3b504c",
        "question_text": "Was the GDP of Berlin higher or lower in 2015 than it was in 2014?",
        "split": "train",
        "decomposition": "return GDP of Berlin in  2015 ;return GDP of Berlin in  2014 ;return is #1 higher or  lower than #2",
        "program": [
            "SELECT['GDP of Berlin in 2015']",
            "SELECT['GDP of Berlin in 2014']",
            "BOOLEAN['#1', 'higher or lower than #2']"
        ],
        "nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GDP of Berlin in 2015"
            ],
            "higher or lower than #2"
        ],
        "typed_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(GDP of Berlin in 2015)"
            ],
            "GET_QUESTION_SPAN(higher or lower than #2)"
        ],
        "drop_nested_expression": [
            "BOOLEAN",
            [
                "SELECT",
                "GET_QUESTION_SPAN(GDP of Berlin in 2015)"
            ],
            "GET_QUESTION_SPAN(higher or lower than #2)"
        ],
        "operators": [
            "select",
            "select",
            "boolean"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    1,
                    3,
                    8,
                    11,
                    12,
                    13
                ],
                [
                    9,
                    10
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Was",
                "the",
                "GDP",
                "of",
                "Berlin",
                "higher",
                "or",
                "lower",
                "in",
                "2015",
                "than",
                "it",
                "was",
                "in",
                "2014",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    12
                ],
                [
                    3,
                    11
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8,
                    12,
                    13
                ],
                [],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_312_b2773b6d-2b9f-4c5c-9c42-659976b5e011",
        "question_text": "How many yards were  Jeff Wilkins' field goals on average?",
        "split": "train",
        "decomposition": "return yards of Jeff Wilkins field goals ;return average of #1",
        "program": [
            "SELECT['yards of Jeff Wilkins field goals']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of Jeff Wilkins field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Jeff Wilkins field goals)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Jeff Wilkins field goals)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "Jeff",
                "Wilkins",
                "'",
                "field",
                "goals",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_264_2c836eb7-80c8-4470-93ca-f553b728dfdd",
        "question_text": "How many years did the The First Intermediate Period of Egypt known as the dark period last?",
        "split": "train",
        "decomposition": "return years of the  First Intermediate Period of  Egypt known as the dark period ;return number of  #1",
        "program": [
            "SELECT['years of the First Intermediate Period of Egypt known as the dark period']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years of the First Intermediate Period of Egypt known as the dark period"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the First Intermediate Period of Egypt known as the dark period)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the First Intermediate Period of Egypt known as the dark period)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7,
                    8,
                    11,
                    12,
                    15,
                    16
                ],
                [
                    4,
                    5,
                    9,
                    10,
                    13
                ],
                [
                    14,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "The",
                "First",
                "Intermediate",
                "Period",
                "of",
                "Egypt",
                "known",
                "as",
                "the",
                "dark",
                "period",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    7
                ],
                [
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    11,
                    12,
                    13,
                    15
                ],
                [
                    8,
                    10,
                    14
                ],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    15
                ],
                [
                    7,
                    8,
                    11,
                    12,
                    16
                ],
                [
                    4,
                    6,
                    9,
                    13
                ],
                [
                    10,
                    14
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2591_3edd8aad-2c61-421f-97f1-42c3dcbe6cd9",
        "question_text": "How many more yards did the Lions have over the Packers?",
        "split": "train",
        "decomposition": "return yards that Lions have ;return yards that Packers have ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards that Lions have']",
            "SELECT['yards that Packers have']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Lions have"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards that Packers have"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Lions have)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Packers have)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Lions have)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards that Packers have)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "did",
                "the",
                "Lions",
                "have",
                "over",
                "the",
                "Packers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_4_060f3b2a-b27f-4609-ae24-f7a6e5842af2",
        "question_text": "How many yards was Racker's longest field goal attempt?",
        "split": "train",
        "decomposition": "return yards of Racker 's field goal attempts ;return longest of #1",
        "program": [
            "SELECT[\"yards of Racker 's field goal attempts\"]",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of Racker 's field goal attempts"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Racker 's field goal attempts)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Racker 's field goal attempts)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Racker",
                "'s",
                "longest",
                "field",
                "goal",
                "attempt",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1540_fe4d6ed9-c523-4225-8c5c-d6a35532de6b",
        "question_text": "In which quarter did both teams not score any points?",
        "split": "dev",
        "decomposition": "return quarters ;return #1 in  which at least one team scores points ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'in which at least one team scores points']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "in which at least one team scores points"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which at least one team scores points)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(in which at least one team scores points)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6,
                    7
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarter",
                "did",
                "both",
                "teams",
                "not",
                "score",
                "any",
                "points",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    2,
                    5,
                    7
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    9
                ],
                [],
                [
                    0,
                    1,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1134_547e4809-cec7-499b-b300-1b5fa3af1c2d",
        "question_text": "Where did Lacy fight first, Poltava or Riga?",
        "split": "train",
        "decomposition": "return when  did Lacy fight in  Poltava ;return when  did Lacy fight in  Riga ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when did Lacy fight in Poltava']",
            "SELECT['when did Lacy fight in Riga']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did Lacy fight in Poltava"
            ],
            [
                "SELECT",
                "when did Lacy fight in Riga"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lacy fight in Poltava)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lacy fight in Riga)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lacy fight in Poltava)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Lacy fight in Riga)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    5,
                    7
                ],
                [
                    1,
                    3
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Where",
                "did",
                "Lacy",
                "fight",
                "first",
                ",",
                "Poltava",
                "or",
                "Riga",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4,
                    5
                ],
                [
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1928_8f9d5f91-be9f-417f-bb0e-ac1bec85bfbe",
        "question_text": "Which team did Brett Favre play against this game?",
        "split": "train",
        "decomposition": "return team that Brett Favre did play against this game",
        "program": [
            "SELECT['team that Brett Favre did play against this game']"
        ],
        "nested_expression": [
            "SELECT",
            "team that Brett Favre did play against this game"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(team that Brett Favre did play against this game)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(team that Brett Favre did play against this game)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "Brett",
                "Favre",
                "play",
                "against",
                "this",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    3,
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2988_e2fcaab1-cad1-4dcf-b39e-c0a88f4ccf12",
        "question_text": "How many field goals between 40 and 45 yards were made?",
        "split": "train",
        "decomposition": "return yards of field goals made that are between 40 and  45 yard ;return the  number of  #1",
        "program": [
            "SELECT['yards of field goals made that are between 40 and 45 yard']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "yards of field goals made that are between 40 and 45 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals made that are between 40 and 45 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals made that are between 40 and 45 yard)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    4,
                    7,
                    8,
                    10
                ],
                [
                    6,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "between",
                "40",
                "and",
                "45",
                "yards",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    5,
                    7,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    2,
                    3,
                    5,
                    10
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1831_64a86a6c-c4ba-467e-8382-1569dded5bea",
        "question_text": "How many yards longer was Matt Prater's longest field goal than his shortest?",
        "split": "train",
        "decomposition": "return yards of field goals of  Matt Prater ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Matt Prater']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Matt Prater"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Matt Prater"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Matt Prater)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [
                    5,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Matt",
                "Prater",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    11
                ],
                [],
                [
                    5,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2327_cd5c7099-0412-4ac3-9e53-25e72de7c55f",
        "question_text": "How many yards was the longest recorded field goal in Solider Field history?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  history of  Solider Field ;return the  longest of #1",
        "program": [
            "SELECT['yards of field goals in the history of Solider Field']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals in the history of Solider Field"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals in the history of Solider Field)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the history of Solider Field)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [
                    4,
                    9,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "recorded",
                "field",
                "goal",
                "in",
                "Solider",
                "Field",
                "history",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    5,
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_571_065451a8-7e47-4f19-ae82-dc49df854364",
        "question_text": "Who defeated the city second?",
        "split": "train",
        "decomposition": "return who  defeated the  city ;return when  did #1 defeat the  city ;return #1 where #2 is the  highest",
        "program": [
            "SELECT['who defeated the city']",
            "PROJECT['when did #REF defeat the city', '#1']",
            "COMPARATIVE['#1', '#2', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "who defeated the city"
            ],
            [
                "PROJECT",
                "when did #REF defeat the city",
                [
                    "SELECT",
                    "who defeated the city"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who defeated the city)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(when did #REF defeat the city)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who defeated the city)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(when did #REF defeat the city)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ]
            ],
            "question_tokens": [
                "Who",
                "defeated",
                "the",
                "city",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1882_c21db5a8-3fce-4eaa-8cac-337ae67e782c",
        "question_text": "How many in percent from the 2010 Census weren't Americans?",
        "split": "train",
        "decomposition": "return percent from  the  2010 Census that were Americans ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent from the 2010 Census that were Americans']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent from the 2010 Census that were Americans"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent from the 2010 Census that were Americans)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent from the 2010 Census that were Americans)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [
                    2,
                    5
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "from",
                "the",
                "2010",
                "Census",
                "were",
                "n't",
                "Americans",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [],
                [
                    6
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1592_9f5893bc-296c-4e05-929e-bd87db99cd05",
        "question_text": "How many more years after major operations largely ended did The War of Jenkins' Ear last for?",
        "split": "train",
        "decomposition": "return the  year when  major operations largely ended ;return the  years when  The War of Jenkins Ear last ;return the  highest of #2 ;return the  difference of #3 and  #1",
        "program": [
            "SELECT['the year when major operations largely ended']",
            "SELECT['the years when The War of Jenkins Ear last']",
            "AGGREGATE['max', '#2']",
            "ARITHMETIC['difference', '#3', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the years when The War of Jenkins Ear last"
                ]
            ],
            [
                "SELECT",
                "the year when major operations largely ended"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the years when The War of Jenkins Ear last)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year when major operations largely ended)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the years when The War of Jenkins Ear last)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year when major operations largely ended)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    8,
                    9,
                    10,
                    12
                ],
                [
                    6,
                    11
                ],
                [
                    14
                ],
                [
                    13,
                    15,
                    17
                ],
                [
                    16,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "years",
                "after",
                "major",
                "operations",
                "largely",
                "ended",
                "did",
                "The",
                "War",
                "of",
                "Jenkins",
                "'",
                "Ear",
                "last",
                "for",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    10
                ],
                [],
                [],
                [
                    14
                ],
                [
                    17
                ],
                [
                    15,
                    16
                ],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    8
                ],
                [
                    11
                ],
                [
                    6
                ],
                [
                    9,
                    13
                ],
                [],
                [
                    15
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_405_7a69fbec-ff4a-4337-a25a-a4f1828e520e",
        "question_text": "How many of Nate Kaeding's field goals were over 30 yards?",
        "split": "train",
        "decomposition": "return field goals of Nate Kaeding ;return yards of #1 ;return #1 where #2 is higher than 30 ;return number of  #3",
        "program": [
            "SELECT['field goals of Nate Kaeding']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 30']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Nate Kaeding"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Nate Kaeding"
                    ]
                ],
                "is higher than 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nate Kaeding)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 30)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nate Kaeding)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    3,
                    6,
                    7,
                    9
                ],
                [
                    2,
                    5
                ],
                [
                    12
                ],
                [
                    8,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Nate",
                "Kaeding",
                "'s",
                "field",
                "goals",
                "were",
                "over",
                "30",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [
                    3
                ],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    5
                ],
                [],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_217_9fff6b7a-9c8f-4829-bb60-0a42840af3e2",
        "question_text": "Who had the smallest number of people?",
        "split": "train",
        "decomposition": "return who  had people ;return the  people of #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is the  smallest",
        "program": [
            "SELECT['who had people']",
            "PROJECT['the people of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the smallest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "who had people"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "the people of #REF",
                    [
                        "SELECT",
                        "who had people"
                    ]
                ],
                [
                    "SELECT",
                    "who had people"
                ]
            ],
            "is the smallest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had people)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(the people of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had people)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(the people of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the smallest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "the",
                "smallest",
                "number",
                "of",
                "people",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2122_b4f7f484-3b0a-4027-a929-5df4515d83c1",
        "question_text": "How many 36-yard field goals were made in the game?",
        "split": "train",
        "decomposition": "return field goals that were made in  the game ;return #1 that are  36-yard ;return number of  #2",
        "program": [
            "SELECT['field goals that were made in the game']",
            "FILTER['#1', 'that are 36-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals that were made in the game"
                ],
                "that are 36-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_SPAN(that are 36-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals that were made in the game)"
                ],
                "GET_QUESTION_NUMBER(36)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    5,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "36-yard",
                "field",
                "goals",
                "were",
                "made",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    2,
                    4,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2413_cdce0b0a-a40a-4455-afb9-d329a6d409ad",
        "question_text": "What were the two largest ethnicities in the Asian group in Houston according to the 2010 census?",
        "split": "train",
        "decomposition": "return ethnicities in  the  Asian group in Houston according to the   2010 census ;return the  two largest of #1",
        "program": [
            "SELECT['ethnicities in the Asian group in Houston according to the 2010 census']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "ethnicities in the Asian group in Houston according to the 2010 census"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnicities in the Asian group in Houston according to the 2010 census)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(ethnicities in the Asian group in Houston according to the 2010 census)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    4,
                    5
                ],
                [
                    0,
                    1,
                    2,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    16
                ],
                [
                    8,
                    15,
                    17
                ]
            ],
            "question_tokens": [
                "What",
                "were",
                "the",
                "two",
                "largest",
                "ethnicities",
                "in",
                "the",
                "Asian",
                "group",
                "in",
                "Houston",
                "according",
                "to",
                "the",
                "2010",
                "census",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    6,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    8,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    9
                ],
                [
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    6,
                    7,
                    10,
                    12,
                    14,
                    16
                ],
                [
                    8,
                    13,
                    15
                ],
                [
                    11,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1511_e7d8f819-d47e-43f0-a9ad-5c61d12a2151",
        "question_text": "How many touchdowns did the Vikings score in the first quarter?",
        "split": "train",
        "decomposition": "return touchdowns of the  Vikings in  the first quarter ;return the  number of  #1",
        "program": [
            "SELECT['touchdowns of the Vikings in the first quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdowns of the Vikings in the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the Vikings in the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the Vikings)"
                ],
                "GET_QUESTION_SPAN(in the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "did",
                "the",
                "Vikings",
                "score",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    6,
                    10
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2650_63d54985-806c-423d-a125-4baf86bd7255",
        "question_text": "How many points did Ravens score in the third quarter?",
        "split": "train",
        "decomposition": "return points that the  Ravens score in  the third quarter ;return the  number of  #1",
        "program": [
            "SELECT['points that the Ravens score in the third quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "points that the Ravens score in the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Ravens score in the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Ravens",
                "score",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1840_e6bc6609-0db9-4b97-9619-8dd17bf6c75a",
        "question_text": "Which group from the census in the town is smaller: Native American or Asian?",
        "split": "train",
        "decomposition": "return size of the  Native American group in  the town ;return size of the  Asian group in  the town ;return which is smaller of #1 ,  #2",
        "program": [
            "SELECT['size of the Native American group in the town']",
            "SELECT['size of the Asian group in the town']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "size of the Native American group in the town"
            ],
            [
                "SELECT",
                "size of the Asian group in the town"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the Native American group in the town)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the Asian group in the town)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the Native American group in the town)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the Asian group in the town)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8,
                    9,
                    10,
                    13
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    11
                ],
                [],
                [
                    12,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "group",
                "from",
                "the",
                "census",
                "in",
                "the",
                "town",
                "is",
                "smaller",
                ":",
                "Native",
                "American",
                "or",
                "Asian",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    13
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7,
                    13
                ],
                [
                    1,
                    2,
                    4,
                    8,
                    9,
                    10
                ],
                [
                    5
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_396_a56197fe-e871-4b3f-a279-8e49ca4ece63",
        "question_text": "How many yards was the second shortest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return the  second shortest of #1",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3256_beef6207-0938-4f72-bb5f-9e2dc3c20f83",
        "question_text": "How many total points were there in the second half?",
        "split": "train",
        "decomposition": "return points there  were in  the  second half ;return the  number of  #1",
        "program": [
            "SELECT['points there were in the second half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "points there were in the second half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points there were in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points there were in the second half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "points",
                "were",
                "there",
                "in",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_53_c0019049-92d1-4ff8-adc8-99aa02f23b5b",
        "question_text": "How many years had it been since the last time Singapore hosted the games?",
        "split": "train",
        "decomposition": "return the  last time Singapore hosted the games ;return years that it had been since #1 ;return number of  #2",
        "program": [
            "SELECT['the last time Singapore hosted the games']",
            "PROJECT['years that it had been since #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that it had been since #REF",
                [
                    "SELECT",
                    "the last time Singapore hosted the games"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that it had been since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last time Singapore hosted the games)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that it had been since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the last time Singapore hosted the games)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    13
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    12
                ],
                [
                    5,
                    9,
                    10,
                    11
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "had",
                "it",
                "been",
                "since",
                "the",
                "last",
                "time",
                "Singapore",
                "hosted",
                "the",
                "games",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    13
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    8
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    10
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    13
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [
                    7,
                    8,
                    9,
                    12
                ],
                [],
                [
                    5,
                    10
                ],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_11_9609f58a-1db9-47b1-88e9-321ea876d6e7",
        "question_text": "How many field goals measured between 30-yards and 40-yards in length?",
        "split": "train",
        "decomposition": "return lengths of field goals that measured between 30-yards and  40-yards ;return the  number of  #1",
        "program": [
            "SELECT['lengths of field goals that measured between 30-yards and 40-yards']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "lengths of field goals that measured between 30-yards and 40-yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(lengths of field goals that measured between 30-yards and 40-yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(lengths of field goals that measured between 30-yards and 40-yards)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    5,
                    9
                ],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "measured",
                "between",
                "30-yards",
                "and",
                "40-yards",
                "in",
                "length",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_554_595bc5c8-1b38-4e97-9068-2c40efaf393e",
        "question_text": "How many wins did the Cowboys have on the season after beating the Rams?",
        "split": "train",
        "decomposition": "return wins of the  Cowboys on the   season ;return #1 after beating the  Rams ;return number of  #2",
        "program": [
            "SELECT['wins of the Cowboys on the season']",
            "FILTER['#1', 'after beating the Rams']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "wins of the Cowboys on the season"
                ],
                "after beating the Rams"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins of the Cowboys on the season)"
                ],
                "GET_QUESTION_SPAN(after beating the Rams)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wins of the Cowboys on the season)"
                ],
                "GET_QUESTION_SPAN(after beating the Rams)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    9
                ],
                [
                    13
                ],
                [
                    4,
                    5,
                    7,
                    8,
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "wins",
                "did",
                "the",
                "Cowboys",
                "have",
                "on",
                "the",
                "season",
                "after",
                "beating",
                "the",
                "Rams",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    6,
                    9,
                    13
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1073_027ea20c-3c84-45dd-8fb3-1e15079de1f7",
        "question_text": "How many total yards did Gus Frerotte throw for touchdowns?",
        "split": "train",
        "decomposition": "return yards that Gus Frerotte did throw for touchdowns ;return sum of #1",
        "program": [
            "SELECT['yards that Gus Frerotte did throw for touchdowns']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards that Gus Frerotte did throw for touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Gus Frerotte did throw for touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards that Gus Frerotte did throw for touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5,
                    6,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "did",
                "Gus",
                "Frerotte",
                "throw",
                "for",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    9
                ],
                [],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2365_bd86af2b-ceed-4280-8042-5d08c15fc46f",
        "question_text": "How many yards was Schaub's second shortest touchdown pass in the first half?",
        "split": "train",
        "decomposition": "return yards of Schaub 's first half touchdown passes ;return second shortest of #1",
        "program": [
            "SELECT[\"yards of Schaub 's first half touchdown passes\"]",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of Schaub 's first half touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Schaub 's first half touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Schaub 's first half touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Schaub",
                "'s",
                "second",
                "shortest",
                "touchdown",
                "pass",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10,
                    12
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    12
                ],
                [
                    10
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2075_1b037a02-1ef3-4b69-aa64-984e9fe406a1",
        "question_text": "Which player scored more field goals, Josh Brown or Jeff Reed?",
        "split": "train",
        "decomposition": "return field goals of Josh Brown ;return field goals of Jeff Reed ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Josh Brown']",
            "SELECT['field goals of Jeff Reed']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Josh Brown"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Jeff Reed"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Josh Brown)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Jeff Reed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Josh Brown)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Jeff Reed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Josh",
                "Brown",
                "or",
                "Jeff",
                "Reed",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3981_e613ad1c-973f-4185-808e-da138f1e82f8",
        "question_text": "For how many months was the tour first postponed before being canceled?",
        "split": "train",
        "decomposition": "return months that the  tour was  postponed ;return #1 before being canceled ;return number of  #2",
        "program": [
            "SELECT['months that the tour was postponed']",
            "FILTER['#1', 'before being canceled']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "months that the tour was postponed"
                ],
                "before being canceled"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(months that the tour was postponed)"
                ],
                "GET_QUESTION_SPAN(before being canceled)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(months that the tour was postponed)"
                ],
                "GET_QUESTION_SPAN(before being canceled)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3
                ],
                [
                    6,
                    7,
                    9
                ],
                [
                    1,
                    4,
                    5,
                    10
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "For",
                "how",
                "many",
                "months",
                "was",
                "the",
                "tour",
                "first",
                "postponed",
                "before",
                "being",
                "canceled",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2,
                    3
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    9
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1502_b0f7b720-2302-412f-88ce-15a4c6d8c485",
        "question_text": "How many tribes were named that were to have Spain's \"peace by purchase\" policy applied to them?",
        "split": "train",
        "decomposition": "return tribes that were to have Spain 's peace by purchase policy applied to  them ;return the  number of  #1",
        "program": [
            "SELECT[\"tribes that were to have Spain 's peace by purchase policy applied to them\"]",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "tribes that were to have Spain 's peace by purchase policy applied to them"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(tribes that were to have Spain 's peace by purchase policy applied to them)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(tribes that were to have Spain 's peace by purchase policy applied to them)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    8
                ],
                [
                    4,
                    7,
                    10,
                    12,
                    14,
                    16,
                    18
                ],
                [
                    5,
                    9,
                    11,
                    13,
                    15,
                    17,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "tribes",
                "were",
                "named",
                "that",
                "were",
                "to",
                "have",
                "Spain",
                "'s",
                "\"",
                "peace",
                "by",
                "purchase",
                "\"",
                "policy",
                "applied",
                "to",
                "them",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    3,
                    4
                ],
                [
                    0,
                    1,
                    2
                ],
                [
                    6
                ],
                [
                    5,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    9,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    16,
                    17,
                    18
                ],
                [
                    19,
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    8
                ],
                [
                    4,
                    5,
                    7,
                    10
                ],
                [
                    9,
                    12,
                    13,
                    14,
                    16,
                    17,
                    18
                ],
                [
                    2,
                    11,
                    15,
                    19,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    19
                ],
                [
                    4,
                    19
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    19
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    19
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    19
                ],
                [
                    8,
                    19
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    19
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    19
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_943_bdd58549-a650-41d3-8def-c8d9f5335318",
        "question_text": "How many months did the second phase of the Mad War last?",
        "split": "train",
        "decomposition": "return the  second phase of the Mad War ;return months that #1 last ;return the  number of  #2",
        "program": [
            "SELECT['the second phase of the Mad War']",
            "PROJECT['months that #REF last', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "months that #REF last",
                [
                    "SELECT",
                    "the second phase of the Mad War"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months that #REF last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the second phase of the Mad War)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(months that #REF last)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the second phase of the Mad War)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    6,
                    8,
                    11
                ],
                [
                    5,
                    9
                ],
                [
                    3,
                    7
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "months",
                "did",
                "the",
                "second",
                "phase",
                "of",
                "the",
                "Mad",
                "War",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2333_0d80595b-d393-474d-bc3a-42fb4ccb2bac",
        "question_text": "Who made more yards in field goals, Graham or Gould?",
        "split": "train",
        "decomposition": "return yards of field goals of  Graham ;return yards of field goals of  Gould ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['yards of field goals of Graham']",
            "SELECT['yards of field goals of Gould']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Graham"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Graham)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Gould)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Graham)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Gould)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    7
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "made",
                "more",
                "yards",
                "in",
                "field",
                "goals",
                ",",
                "Graham",
                "or",
                "Gould",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_726_0032ab4e-0570-4f3f-af80-4653405c4970",
        "question_text": "How many of Tony Romo's passes were under 20 yards?",
        "split": "train",
        "decomposition": "return passes of Tony Romo ;return yards of #1 ;return #1 where #2 is lower than 20 ;return number of  #3",
        "program": [
            "SELECT['passes of Tony Romo']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 20']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "passes of Tony Romo"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "passes of Tony Romo"
                    ]
                ],
                "is lower than 20"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Tony Romo)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is lower than 20)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes of Tony Romo)"
                ],
                "GET_QUESTION_NUMBER(20)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    2,
                    5
                ],
                [
                    11
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "Tony",
                "Romo",
                "'s",
                "passes",
                "were",
                "under",
                "20",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    5
                ],
                [],
                [
                    11
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_105_f3d40609-22dd-4878-90b4-b57deff8af4c",
        "question_text": "Who began to renovate the walls of the city?",
        "split": "train",
        "decomposition": "return who  began to renovate the  walls of the city",
        "program": [
            "SELECT['who began to renovate the walls of the city']"
        ],
        "nested_expression": [
            "SELECT",
            "who began to renovate the walls of the city"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who began to renovate the walls of the city)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(who began to renovate the walls of the city)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Who",
                "began",
                "to",
                "renovate",
                "the",
                "walls",
                "of",
                "the",
                "city",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2401_08a989d4-9567-42cd-9548-37f2ae89637f",
        "question_text": "How many years was the time span where elephant populations declined by 74% in East Africa?",
        "split": "train",
        "decomposition": "return elephant populations in  East Africa ;return time span where #1 declined by 74 % ;return number of  years of #2",
        "program": [
            "SELECT['elephant populations in East Africa']",
            "PROJECT['time span where #REF declined by 74 %', '#1']",
            "PROJECT['number of years of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "number of years of #REF",
            [
                "PROJECT",
                "time span where #REF declined by 74 %",
                [
                    "SELECT",
                    "elephant populations in East Africa"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of years of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(time span where #REF declined by 74 %)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(elephant populations in East Africa)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(was the time span where elephant populations declined by 74% in East Africa?)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9,
                    12,
                    13
                ],
                [
                    4,
                    10,
                    14
                ],
                [
                    11,
                    15,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "time",
                "span",
                "where",
                "elephant",
                "populations",
                "declined",
                "by",
                "74",
                "%",
                "in",
                "East",
                "Africa",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    13,
                    14
                ],
                [
                    10,
                    12,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [
                    4,
                    14
                ],
                [
                    11
                ],
                [
                    15,
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2131_413b10c7-2252-4161-af03-2e4e95168d4d",
        "question_text": "How many yards was the shortest made field goal?",
        "split": "train",
        "decomposition": "return yards of field goals ;return shortest of #1",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "made",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_125_e37fa4ab-5275-4343-8d93-8422a7af888f",
        "question_text": "Which team had the most penalties?",
        "split": "train",
        "decomposition": "return teams ;return penalties of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['penalties of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "penalties of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(penalties of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(penalties of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "the",
                "most",
                "penalties",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1272_1f16a288-5f1e-4f56-9b51-6fb01917163a",
        "question_text": "Which did Reid say he was not supportive of, the United States or al-Qaeda?",
        "split": "train",
        "decomposition": "return who Reid say he was not supportive of  ;return if #1 is  the United States ;return if #1 is  al-Qaeda ;return which is true of #2 , #3",
        "program": [
            "SELECT['who Reid say he was not supportive of']",
            "BOOLEAN['#1', 'is the United States']",
            "BOOLEAN['#1', 'is al-Qaeda']",
            "COMPARISON['true', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "who Reid say he was not supportive of"
                ],
                "is the United States"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "who Reid say he was not supportive of"
                ],
                "is al-Qaeda"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(who Reid say he was not supportive of)"
                ],
                "GET_QUESTION_SPAN(is the United States)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(who Reid say he was not supportive of)"
                ],
                "GET_QUESTION_SPAN(is al-Qaeda)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(who Reid say he was not supportive of)"
                ],
                "GET_QUESTION_SPAN(is the United States)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(who Reid say he was not supportive of)"
                ],
                "GET_QUESTION_SPAN(is al-Qaeda)"
            ]
        ],
        "operators": [
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    1,
                    4,
                    5,
                    9
                ],
                [],
                [],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "did",
                "Reid",
                "say",
                "he",
                "was",
                "not",
                "supportive",
                "of",
                ",",
                "the",
                "United",
                "States",
                "or",
                "al",
                "-",
                "Qaeda",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    11,
                    13
                ],
                [],
                [
                    12,
                    14
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1158_272aa1d3-70ee-4552-b9d3-1e3d323fcfc6",
        "question_text": "How many yards long was the shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals ;return shortest of #1",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    5
                ],
                [
                    3,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                "was",
                "the",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_207_26883d48-db61-4a87-acb9-080cae9efbd0",
        "question_text": "How many total casualties, both dead and wounded, did the Turks have?",
        "split": "train",
        "decomposition": "return dead casualties of the  Turks ;return wounded casualties of the  Turks ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['dead casualties of the Turks']",
            "SELECT['wounded casualties of the Turks']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "dead casualties of the Turks"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "wounded casualties of the Turks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dead casualties of the Turks)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wounded casualties of the Turks)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(dead casualties of the Turks)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(wounded casualties of the Turks)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    6,
                    7,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    5
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "casualties",
                ",",
                "both",
                "dead",
                "and",
                "wounded",
                ",",
                "did",
                "the",
                "Turks",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    7
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    10,
                    13
                ],
                [],
                [
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_10_e9131630-4f23-4e87-a4fc-55ede52748de",
        "question_text": "How many yards of difference were there between the longest and shortest touchdown scored?",
        "split": "train",
        "decomposition": "return yards of touchdowns scored ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdowns scored']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdowns scored"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdowns scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns scored)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns scored)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns scored)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns scored)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    5
                ],
                [
                    2,
                    9
                ],
                [],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "difference",
                "were",
                "there",
                "between",
                "the",
                "longest",
                "and",
                "shortest",
                "touchdown",
                "scored",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    4,
                    9
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [
                    2
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1952_783ee0b3-6b65-49ae-bd5a-c48546662dcc",
        "question_text": "How many yards was the longest Patriot drive of the game?",
        "split": "train",
        "decomposition": "return Patriot drives of the  game ;return the  longest of #1 ;return the  yards of #2",
        "program": [
            "SELECT['Patriot drives of the game']",
            "AGGREGATE['max', '#1']",
            "PROJECT['the yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the yards of #REF",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "Patriot drives of the game"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the yards of #REF)",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Patriot drives of the game)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Patriot drives of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "Patriot",
                "drive",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_412_6a9b6b40-950f-46ec-8d1f-c0d11eab9d80",
        "question_text": "Which player had more field goals over 25 yards, Matt Stover or Rob Bironas?",
        "split": "train",
        "decomposition": "return field goals over 25 yards of Matt Stover ;return field goals over 25 yards of Rob Bironas ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals over 25 yards of Matt Stover']",
            "SELECT['field goals over 25 yards of Rob Bironas']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals over 25 yards of Matt Stover"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals over 25 yards of Rob Bironas"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals over 25 yards of Matt Stover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals over 25 yards of Rob Bironas)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals over 25 yards of Matt Stover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals over 25 yards of Rob Bironas)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    12
                ],
                [
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    10,
                    11,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "more",
                "field",
                "goals",
                "over",
                "25",
                "yards",
                ",",
                "Matt",
                "Stover",
                "or",
                "Rob",
                "Bironas",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    12,
                    13
                ],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    8
                ],
                [
                    2,
                    9,
                    12
                ],
                [
                    1,
                    3,
                    4,
                    5,
                    10
                ],
                [
                    7
                ],
                [],
                [],
                [
                    13
                ],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_701_22130df0-7d7d-4eaf-97cf-8a25d7229f17",
        "question_text": "Did the Romanian army cross the Tisza river before or after the Hungarian army retreated towards Budapest?",
        "split": "train",
        "decomposition": "return when  Did the   Romanian army cross the Tisza river ;return when  Did the   Hungarian army  retreat towards Budapest ;return if #1 was before #2 ;return if #1 was after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when Did the Romanian army cross the Tisza river']",
            "SELECT['when Did the Hungarian army retreat towards Budapest']",
            "BOOLEAN['#1', 'was before #2']",
            "BOOLEAN['#1', 'was after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Did the Romanian army cross the Tisza river"
                ],
                "was before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Did the Romanian army cross the Tisza river"
                ],
                "was after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Did the Romanian army cross the Tisza river)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Did the Romanian army cross the Tisza river)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Did the Romanian army cross the Tisza river)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Did the Romanian army cross the Tisza river)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Romanian",
                "army",
                "cross",
                "the",
                "Tisza",
                "river",
                "before",
                "or",
                "after",
                "the",
                "Hungarian",
                "army",
                "retreated",
                "towards",
                "Budapest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    2
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    4
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    9,
                    12,
                    13,
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_151_14f5a2ea-f743-4ee2-b037-eef8ec93355f",
        "question_text": "Did Armenia become an independent country before or after the United States began to send them aid?",
        "split": "train",
        "decomposition": "return when  Armenia become an independent country ;return when  the United States began to send Armenia aid ;return if #1 is  before #2 ;return if #1 is  after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when Armenia become an independent country']",
            "SELECT['when the United States began to send Armenia aid']",
            "BOOLEAN['#1', 'is before #2']",
            "BOOLEAN['#1', 'is after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Armenia become an independent country"
                ],
                "is before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Armenia become an independent country"
                ],
                "is after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Armenia become an independent country)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Armenia become an independent country)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Armenia become an independent country)"
                ],
                "GET_QUESTION_SPAN(is before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Armenia become an independent country)"
                ],
                "GET_QUESTION_SPAN(is after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    8,
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "Did",
                "Armenia",
                "become",
                "an",
                "independent",
                "country",
                "before",
                "or",
                "after",
                "the",
                "United",
                "States",
                "began",
                "to",
                "send",
                "them",
                "aid",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    11,
                    14
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    6
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12,
                    14
                ],
                [],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    16
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1235_86940657-22b5-4012-a90e-1078972d2859",
        "question_text": "How many counties of Ireland were NOT part of the 1922 Irish Free State?",
        "split": "train",
        "decomposition": "return the  counties of Ireland in 1922 ;return #1 that  were part of the  1922 Irish Free State ;return #1 besides #2 ;return the  number of  #3",
        "program": [
            "SELECT['the counties of Ireland in 1922']",
            "FILTER['#1', 'that were part of the 1922 Irish Free State']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "the counties of Ireland in 1922"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the counties of Ireland in 1922"
                    ],
                    "that were part of the 1922 Irish Free State"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the counties of Ireland in 1922)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the counties of Ireland in 1922)"
                    ],
                    "GET_QUESTION_SPAN(that were part of the 1922 Irish Free State)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the counties of Ireland in 1922)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the counties of Ireland in 1922)"
                    ],
                    "GET_QUESTION_SPAN(that were part of the 1922 Irish Free State)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "counties",
                "of",
                "Ireland",
                "were",
                "NOT",
                "part",
                "of",
                "the",
                "1922",
                "Irish",
                "Free",
                "State",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    2
                ],
                [
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_584_e7f86d52-0282-42df-b3f0-547c7dd610d4",
        "question_text": "How many total yards of touchdowns did Jon Kitna have?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Jon Kitna ;return the  sum of #1",
        "program": [
            "SELECT['yards of touchdowns of Jon Kitna']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdowns of Jon Kitna"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Jon Kitna)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Jon Kitna)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "touchdowns",
                "did",
                "Jon",
                "Kitna",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1681_e1b41894-6654-4bfa-8601-73c1fedb7eda",
        "question_text": "How many years elapsed between the Siege of Kut and the release of the Central Power prisoners of the Allies and Russia?",
        "split": "train",
        "decomposition": "return the  year of   the   Siege of Kut ;return the  year of   the   release of the    Central Power prisoners of  the Allies and  Russia ;return the  difference of   #2 and  #1",
        "program": [
            "SELECT['the year of the Siege of Kut']",
            "SELECT['the year of the release of the Central Power prisoners of the Allies and Russia']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the year of the release of the Central Power prisoners of the Allies and Russia"
            ],
            [
                "SELECT",
                "the year of the Siege of Kut"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year of the release of the Central Power prisoners of the Allies and Russia)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year of the Siege of Kut)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year of the release of the Central Power prisoners of the Allies and Russia)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year of the Siege of Kut)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9,
                    20
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    10,
                    11,
                    12
                ],
                [
                    14,
                    15
                ],
                [
                    13,
                    16,
                    17,
                    18
                ],
                [
                    19,
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "elapsed",
                "between",
                "the",
                "Siege",
                "of",
                "Kut",
                "and",
                "the",
                "release",
                "of",
                "the",
                "Central",
                "Power",
                "prisoners",
                "of",
                "the",
                "Allies",
                "and",
                "Russia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    6,
                    9,
                    12
                ],
                [
                    11
                ],
                [
                    14
                ],
                [
                    16
                ],
                [
                    15,
                    17,
                    18
                ],
                [
                    19,
                    20
                ],
                [
                    21,
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    7,
                    8,
                    9,
                    12,
                    17,
                    20
                ],
                [
                    6
                ],
                [
                    11
                ],
                [
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    21
                ],
                [
                    19,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    21
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    21
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    21
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    21
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_138_b3e45399-93db-46e6-8dc6-f5e2edad1b0f",
        "question_text": "The city of Emden called on its possession Oldersum how many years before the Prince called in reinforcements from Denmark to help with the bettle?",
        "split": "train",
        "decomposition": "return year that  Emden called on  its possessions Oldersum ;return year that  Prince called reinforcements from  Denmark ;return difference of #1 and  #2",
        "program": [
            "SELECT['year that Emden called on its possessions Oldersum']",
            "SELECT['year that Prince called reinforcements from Denmark']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year that Emden called on its possessions Oldersum"
            ],
            [
                "SELECT",
                "year that Prince called reinforcements from Denmark"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Emden called on its possessions Oldersum)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Prince called reinforcements from Denmark)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Emden called on its possessions Oldersum)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Prince called reinforcements from Denmark)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3,
                    8,
                    10,
                    11,
                    12
                ],
                [
                    0,
                    2,
                    5,
                    6,
                    9,
                    13,
                    14
                ],
                [
                    1,
                    4,
                    7,
                    15,
                    17,
                    19
                ],
                [
                    16,
                    18,
                    20,
                    21,
                    23
                ],
                [
                    22,
                    24,
                    25
                ]
            ],
            "question_tokens": [
                "The",
                "city",
                "of",
                "Emden",
                "called",
                "on",
                "its",
                "possession",
                "Oldersum",
                "how",
                "many",
                "years",
                "before",
                "the",
                "Prince",
                "called",
                "in",
                "reinforcements",
                "from",
                "Denmark",
                "to",
                "help",
                "with",
                "the",
                "bettle",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    10,
                    11,
                    12
                ],
                [
                    8,
                    9
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    5,
                    7,
                    15
                ],
                [],
                [],
                [
                    14,
                    17,
                    18
                ],
                [
                    16,
                    20,
                    21,
                    22
                ],
                [
                    19
                ],
                [
                    24,
                    25
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    9,
                    10,
                    11
                ],
                [
                    3,
                    12,
                    18
                ],
                [
                    2,
                    8
                ],
                [
                    5,
                    14
                ],
                [
                    1,
                    4,
                    6,
                    15
                ],
                [
                    7,
                    17,
                    19
                ],
                [],
                [
                    20,
                    21,
                    22
                ],
                [
                    24,
                    25
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    24
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    24
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    24
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    24
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    24
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ],
                [
                    20,
                    24
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    24
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2647_be2fe743-2208-4f47-848d-e83c542072a9",
        "question_text": "How many more total field goal yard did Shaun Suisham make than Robbie Gould?",
        "split": "train",
        "decomposition": "return yard of field goals Shaun Suisham did make ;return yard of field goals Robbie Gould did make ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yard of field goals Shaun Suisham did make']",
            "SELECT['yard of field goals Robbie Gould did make']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yard of field goals Shaun Suisham did make"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yard of field goals Robbie Gould did make"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals Shaun Suisham did make)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals Robbie Gould did make)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals Shaun Suisham did make)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals Robbie Gould did make)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "field",
                "goal",
                "yard",
                "did",
                "Shaun",
                "Suisham",
                "make",
                "than",
                "Robbie",
                "Gould",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    12
                ],
                [
                    13
                ],
                [],
                [
                    10
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [
                    8,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1644_57ccd9dd-6b58-446a-b7ba-a32684f815ae",
        "question_text": "How many at a minimum millions of dollars more did Yemen receive from the U.S. in 2009 than 2006?",
        "split": "train",
        "decomposition": "return millions of dollars minimum that Yemen receives from  the  U.S. in  2006 ;return millions of dollars minimum that Yemen receives from  the  U.S. in  2009 ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['millions of dollars minimum that Yemen receives from the U.S. in 2006']",
            "SELECT['millions of dollars minimum that Yemen receives from the U.S. in 2009']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "millions of dollars minimum that Yemen receives from the U.S. in 2009"
            ],
            [
                "SELECT",
                "millions of dollars minimum that Yemen receives from the U.S. in 2006"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of dollars minimum that Yemen receives from the U.S. in 2009)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of dollars minimum that Yemen receives from the U.S. in 2006)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of dollars minimum that Yemen receives from the U.S. in 2009)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(millions of dollars minimum that Yemen receives from the U.S. in 2006)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    6,
                    9,
                    10,
                    11
                ],
                [],
                [
                    14,
                    16,
                    17,
                    18
                ],
                [
                    12,
                    13,
                    15
                ],
                [
                    19
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "at",
                "a",
                "minimum",
                "millions",
                "of",
                "dollars",
                "more",
                "did",
                "Yemen",
                "receive",
                "from",
                "the",
                "U.S.",
                "in",
                "2009",
                "than",
                "2006",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    11
                ],
                [
                    9,
                    10
                ],
                [
                    17
                ],
                [
                    14
                ],
                [],
                [
                    15
                ],
                [
                    16
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    10,
                    11
                ],
                [],
                [],
                [
                    14,
                    16,
                    17,
                    18
                ],
                [],
                [],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1814_670944b4-bda0-49e3-97ba-3c38faac1bcb",
        "question_text": "How many yards longer was Graham Gano's second field goal compared to his first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Graham Gano ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Graham Gano']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Graham Gano"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Graham Gano"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham Gano)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham Gano)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham Gano)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Graham Gano)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Graham",
                "Gano",
                "'s",
                "second",
                "field",
                "goal",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1806_5490367c-bcf6-44f3-ae9a-47e63472e34f",
        "question_text": "Which team did not score during the first quarter?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score during the  first quarter ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score during the first quarter']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score during the first quarter"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score during the first quarter)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score during the first quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [
                    0,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "not",
                "score",
                "during",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3149_ab373794-92cf-4c10-b223-d824bd83b0c6",
        "question_text": "How many points did the Texans lead by at the end of the first half?",
        "split": "train",
        "decomposition": "return points that the  Texans lead by at the   end of the first half",
        "program": [
            "SELECT['points that the Texans lead by at the end of the first half']"
        ],
        "nested_expression": [
            "SELECT",
            "points that the Texans lead by at the end of the first half"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Texans lead by at the end of the first half)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Texans lead by at the end of the first half)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    7,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Texans",
                "lead",
                "by",
                "at",
                "the",
                "end",
                "of",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    8,
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5,
                    9,
                    11,
                    12
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    13,
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3223_1de96321-e04d-4b17-8f17-083647631686",
        "question_text": "How many yards in all did Justin Tucker kick in the game?",
        "split": "train",
        "decomposition": "return yards of kicks from  Justin Tucker ;return the  sum of #1",
        "program": [
            "SELECT['yards of kicks from Justin Tucker']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of kicks from Justin Tucker"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of kicks from Justin Tucker)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of kicks from Justin Tucker)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    8
                ],
                [
                    3,
                    6,
                    9,
                    10
                ],
                [
                    7,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "in",
                "all",
                "did",
                "Justin",
                "Tucker",
                "kick",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    3,
                    8,
                    9,
                    10
                ],
                [
                    7,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    3,
                    6,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2206_e46a59d8-dddb-4faf-a101-710d2e21dab0",
        "question_text": "How many percent were not family households?",
        "split": "train",
        "decomposition": "return percent that were family households ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent that were family households']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent that were family households"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent that were family households)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent that were family households)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "were",
                "not",
                "family",
                "households",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_930_da6ad765-b998-461f-997d-bd7c3b2a6d46",
        "question_text": "How many years passed from when he was sending Ming tribute to when 150,000 soldiers were amassed?",
        "split": "train",
        "decomposition": "return year when  he was  sending Ming tribute ;return year when  150,000 soldiers were amassed ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year when he was sending Ming tribute']",
            "SELECT['year when 150 , 000 soldiers were amassed']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when 150 , 000 soldiers were amassed"
            ],
            [
                "SELECT",
                "year when he was sending Ming tribute"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when 150 , 000 soldiers were amassed)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when he was sending Ming tribute)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when 150 , 000 soldiers were amassed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when he was sending Ming tribute)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11,
                    13,
                    15
                ],
                [
                    14,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "from",
                "when",
                "he",
                "was",
                "sending",
                "Ming",
                "tribute",
                "to",
                "when",
                "150,000",
                "soldiers",
                "were",
                "amassed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    12
                ],
                [
                    7
                ],
                [
                    4,
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    15
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    12
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2843_b0f592b3-7246-4d67-8ccd-b3de8b023c8c",
        "question_text": "What was Carr's shortest TD pass?",
        "split": "train",
        "decomposition": "return TD passes of Carr ;return shortest of #1",
        "program": [
            "SELECT['TD passes of Carr']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "TD passes of Carr"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of Carr)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of Carr)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "Carr",
                "'s",
                "shortest",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [
                    2
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    2
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2028_3d4427ae-46aa-44f1-97de-d98d3c691563",
        "question_text": "What group from the health sector is smaller: district or aimag general hospitals?",
        "split": "train",
        "decomposition": "return the size of  district hospitals in  the  health sector ;return the size of  aimag general hospitals in  the  health sector ;return which is  smaller of  #1 , #2",
        "program": [
            "SELECT['the size of district hospitals in the health sector']",
            "SELECT['the size of aimag general hospitals in the health sector']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "the size of district hospitals in the health sector"
            ],
            [
                "SELECT",
                "the size of aimag general hospitals in the health sector"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the size of district hospitals in the health sector)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the size of aimag general hospitals in the health sector)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the size of district hospitals in the health sector)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(the size of aimag general hospitals in the health sector)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    0,
                    3
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "What",
                "group",
                "from",
                "the",
                "health",
                "sector",
                "is",
                "smaller",
                ":",
                "district",
                "or",
                "aimag",
                "general",
                "hospitals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    12
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    10
                ],
                [
                    1,
                    2,
                    4,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2739_32617a22-8b5f-409a-91e2-2ed9a46a78b6",
        "question_text": "How many more yards was Gano's second field goal over his first?",
        "split": "train",
        "decomposition": "return yards of field goals of  Gano ;return second of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Gano']",
            "PROJECT['second of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "yards of field goals of Gano"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Gano"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gano)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gano)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(second of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gano)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gano)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "Gano",
                "'s",
                "second",
                "field",
                "goal",
                "over",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    8,
                    9,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6,
                    7,
                    10
                ],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2187_c5630aeb-1e3e-4f24-bea7-0c5d709813da",
        "question_text": "How many field goals longer than 34 yards did Mike Nugent kick?",
        "split": "train",
        "decomposition": "return field goals of Mike Nugent ;return yards of #1 ;return #1 where #2 is higher than 34 ;return number of  #3",
        "program": [
            "SELECT['field goals of Mike Nugent']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 34']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Mike Nugent"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Mike Nugent"
                    ]
                ],
                "is higher than 34"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mike Nugent)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 34)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mike Nugent)"
                ],
                "GET_QUESTION_NUMBER(34)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    12
                ],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "longer",
                "than",
                "34",
                "yards",
                "did",
                "Mike",
                "Nugent",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    9
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    7,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    12
                ],
                [
                    7,
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_500_77b2179e-ce68-42d5-b96a-2ebe945007aa",
        "question_text": "Which quarterback had the most touchdowns in the fourth quarter?",
        "split": "train",
        "decomposition": "return quarterbacks ;return fourth quarter touchdowns of #1 ;return number of  #2 for each  #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['fourth quarter touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "fourth quarter touchdowns of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(fourth quarter touchdowns of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(fourth quarter touchdowns of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    7
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "had",
                "the",
                "most",
                "touchdowns",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    9
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1032_78a196e3-6e2a-49fc-b0e3-18f18afebb44",
        "question_text": "How many yards was the average yards kicked for field goals in the game?",
        "split": "train",
        "decomposition": "return yards  of field goals kicked in  the  game ;return the  average of #1",
        "program": [
            "SELECT['yards of field goals kicked in the game']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of field goals kicked in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals kicked in the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals kicked in the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6,
                    9,
                    10
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "average",
                "yards",
                "kicked",
                "for",
                "field",
                "goals",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    2,
                    5,
                    6,
                    10
                ],
                [
                    3,
                    4,
                    7,
                    11,
                    12
                ],
                [
                    8
                ],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_548_f4613d67-bae3-42ac-a75b-e0b6a7d0a5ed",
        "question_text": "Out of the first two touchdowns scored, which player caught the shorter touchdown pass?",
        "split": "train",
        "decomposition": "return the  first two touchdowns scored ;return shorter of #1 ;return which player caught #2",
        "program": [
            "SELECT['the first two touchdowns scored']",
            "PROJECT['shorter of #REF', '#1']",
            "PROJECT['which player caught #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "which player caught #REF",
            [
                "PROJECT",
                "shorter of #REF",
                [
                    "SELECT",
                    "the first two touchdowns scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player caught #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(shorter of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first two touchdowns scored)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(which player caught #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(shorter of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the first two touchdowns scored)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    1,
                    7
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "Out",
                "of",
                "the",
                "first",
                "two",
                "touchdowns",
                "scored",
                ",",
                "which",
                "player",
                "caught",
                "the",
                "shorter",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    4,
                    6,
                    8,
                    9,
                    10,
                    13
                ],
                [],
                [
                    12
                ],
                [
                    7
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    8
                ],
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13,
                    14
                ],
                [],
                [
                    7
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_100_ef39165c-3efc-4ed4-a701-e76fc7ac4210",
        "question_text": "What event happened later, Jabal Shammar being annexed or the preliminary attack on Taif?",
        "split": "train",
        "decomposition": "return when  was  Jabal Shammar being annexed ;return when  was  the preliminary attack on Taif ;return which  is  the highest of #1 , #2",
        "program": [
            "SELECT['when was Jabal Shammar being annexed']",
            "SELECT['when was the preliminary attack on Taif']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was Jabal Shammar being annexed"
            ],
            [
                "SELECT",
                "when was the preliminary attack on Taif"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Jabal Shammar being annexed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the preliminary attack on Taif)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Jabal Shammar being annexed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the preliminary attack on Taif)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "later",
                ",",
                "Jabal",
                "Shammar",
                "being",
                "annexed",
                "or",
                "the",
                "preliminary",
                "attack",
                "on",
                "Taif",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    4,
                    7,
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2605_d8810255-6c17-4816-8803-074ca6ae092a",
        "question_text": "Did Andrew Luck have more passing or rushing touchdowns?",
        "split": "train",
        "decomposition": "return passing touchdowns of  Andrew Luck ;return rushing touchdowns of  Andrew Luck ;return number of  #1 ;return number of  #2 ;return which is  highest of  #3 , #4",
        "program": [
            "SELECT['passing touchdowns of Andrew Luck']",
            "SELECT['rushing touchdowns of Andrew Luck']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "passing touchdowns of Andrew Luck"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "rushing touchdowns of Andrew Luck"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passing touchdowns of Andrew Luck)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(rushing touchdowns of Andrew Luck)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(passing touchdowns of Andrew Luck)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(rushing touchdowns of Andrew Luck)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    6
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Did",
                "Andrew",
                "Luck",
                "have",
                "more",
                "passing",
                "or",
                "rushing",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    6
                ],
                [
                    1,
                    2,
                    4,
                    8
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2241_eb876154-418b-49c9-a1cb-37084e635b77",
        "question_text": "Which team allowed the most points at the half?",
        "split": "train",
        "decomposition": "return teams ;return #1 that allowed the  most points at the half",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that allowed the most points at the half']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "teams"
            ],
            "that allowed the most points at the half"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that allowed the most points at the half)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that allowed the most points at the half)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    8
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "allowed",
                "the",
                "most",
                "points",
                "at",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [],
                [
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2362_2d8d04c6-4798-4dbf-a290-a7c6bf08fdaa",
        "question_text": "How many years difference is there between the earliest and latest estimate of when Asian rice was domesticated?",
        "split": "train",
        "decomposition": "return years of the  estimates of  when  Asian rice was  domesticated ;return the  lowest of #1 ;return the  highest of #1 ;return the  difference of #3 and  #2",
        "program": [
            "SELECT['years of the estimates of when Asian rice was domesticated']",
            "AGGREGATE['min', '#1']",
            "AGGREGATE['max', '#1']",
            "ARITHMETIC['difference', '#3', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "years of the estimates of when Asian rice was domesticated"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years of the estimates of when Asian rice was domesticated"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the estimates of when Asian rice was domesticated)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the estimates of when Asian rice was domesticated)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the estimates of when Asian rice was domesticated)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years of the estimates of when Asian rice was domesticated)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    11,
                    15
                ],
                [
                    16,
                    17
                ],
                [
                    13
                ],
                [
                    14,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "difference",
                "is",
                "there",
                "between",
                "the",
                "earliest",
                "and",
                "latest",
                "estimate",
                "of",
                "when",
                "Asian",
                "rice",
                "was",
                "domesticated",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ],
                [
                    16
                ],
                [],
                [
                    13
                ],
                [],
                [
                    14,
                    15
                ],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9,
                    11,
                    15
                ],
                [
                    16
                ],
                [
                    17
                ],
                [],
                [
                    14
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1505_a22469e1-8ed5-4d00-a5f6-314fd613f24e",
        "question_text": "How many yards was the longest touchdown pass of the third quarter?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  the  third quarter ;return longest of #1",
        "program": [
            "SELECT['yards of touchdown passes of the third quarter']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes of the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of the third quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "of",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3899_dc22f29e-ae12-47be-b221-be97bee4c41b",
        "question_text": "How many more starts did Pettitte have with Columbus than with Albany-Colonie?",
        "split": "train",
        "decomposition": "return starts of Pettitte with Columbus ;return starts of Pettitte with Albany-Colonie ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['starts of Pettitte with Columbus']",
            "SELECT['starts of Pettitte with Albany-Colonie']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "starts of Pettitte with Columbus"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "starts of Pettitte with Albany-Colonie"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(starts of Pettitte with Columbus)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(starts of Pettitte with Albany-Colonie)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(starts of Pettitte with Columbus)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(starts of Pettitte with Albany-Colonie)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "starts",
                "did",
                "Pettitte",
                "have",
                "with",
                "Columbus",
                "than",
                "with",
                "Albany",
                "-",
                "Colonie",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    11
                ],
                [
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2141_5f40e275-58ff-486b-9920-b1da02553997",
        "question_text": "How many yards was the second longest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals ;return the  second longest of #1",
        "program": [
            "SELECT['yards of field goals']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "longest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_757_22d8a6f7-86d7-4c9f-8cdb-b7140029e39e",
        "question_text": "Which happened last, Francis crossed the Alps or Francis advanced on Pavia?",
        "split": "train",
        "decomposition": "return when  did Francis cross the  Alps ;return when  did Francis advance on Pavia ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when did Francis cross the Alps']",
            "SELECT['when did Francis advance on Pavia']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did Francis cross the Alps"
            ],
            [
                "SELECT",
                "when did Francis advance on Pavia"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Francis cross the Alps)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Francis advance on Pavia)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Francis cross the Alps)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Francis advance on Pavia)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "Francis",
                "crossed",
                "the",
                "Alps",
                "or",
                "Francis",
                "advanced",
                "on",
                "Pavia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    5,
                    8
                ],
                [
                    1,
                    2,
                    4,
                    9
                ],
                [],
                [
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2589_2cf2aac9-f270-4944-9fe4-95c5a62b1851",
        "question_text": "What was the lowest population in Roskilde?",
        "split": "train",
        "decomposition": "return population in  Roskilde ;return lowest of #1",
        "program": [
            "SELECT['population in Roskilde']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "population in Roskilde"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(population in Roskilde)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(population in Roskilde)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3
                ],
                [
                    0,
                    2,
                    5
                ],
                [
                    4,
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "lowest",
                "population",
                "in",
                "Roskilde",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1867_294a2312-8923-49e0-a042-cfabd00b9296",
        "question_text": "How many in percent for the county weren't 18 to 24?",
        "split": "train",
        "decomposition": "return percent of the  county that was  from  18 to 24 ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of the county that was from 18 to 24']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of the county that was from 18 to 24"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the county that was from 18 to 24)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the county that was from 18 to 24)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "percent",
                "for",
                "the",
                "county",
                "were",
                "n't",
                "18",
                "to",
                "24",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [],
                [
                    4
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1096_58ee1f35-a66e-4a5a-847d-68bb1a91324a",
        "question_text": "How many field goals of 40 yards or more did Janikowski make?",
        "split": "dev",
        "decomposition": "return field goals of Janikowski ;return yards of #1 ;return #1 where #2 is at least 40 ;return number of  #3",
        "program": [
            "SELECT['field goals of Janikowski']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals of Janikowski"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals of Janikowski"
                    ]
                ],
                "is at least 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Janikowski)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Janikowski)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    7,
                    12
                ],
                [
                    6,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "40",
                "yards",
                "or",
                "more",
                "did",
                "Janikowski",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    7
                ],
                [],
                [
                    6,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_221_f29d671a-37ab-4fbd-b746-0bd77350f8b2",
        "question_text": "How many field goals were there longer than 30 yards?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 that were longer than 30 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'that were longer than 30 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "that were longer than 30 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(that were longer than 30 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [],
                [
                    10
                ],
                [
                    4,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "were",
                "there",
                "longer",
                "than",
                "30",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    4,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2649_05078c2c-e05a-4d14-bf20-2565b0ab4ac9",
        "question_text": "How many yards of field goals did Suisham kick in total?",
        "split": "train",
        "decomposition": "return yards of field goals of  Suisham ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Suisham']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Suisham"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Suisham)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Suisham)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    3,
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Suisham",
                "kick",
                "in",
                "total",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    7,
                    10
                ],
                [],
                [
                    3,
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7,
                    8,
                    10
                ],
                [
                    3,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_318_fd5fd01b-f481-420a-8311-19566932434e",
        "question_text": "How many years passed since the crime rate was at it's highest?",
        "split": "train",
        "decomposition": "return when  was  the  crime rate at most it 's highest ;return years that have passed since #1 ;return number of  #2",
        "program": [
            "SELECT[\"when was the crime rate at most it 's highest\"]",
            "PROJECT['years that have passed since #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that have passed since #REF",
                [
                    "SELECT",
                    "when was the crime rate at most it 's highest"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that have passed since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the crime rate at most it 's highest)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that have passed since #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the crime rate at most it 's highest)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    7,
                    10,
                    11
                ],
                [
                    2,
                    4,
                    5,
                    8,
                    12
                ],
                [],
                [
                    6,
                    9
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "since",
                "the",
                "crime",
                "rate",
                "was",
                "at",
                "it",
                "'s",
                "highest",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    8,
                    10
                ],
                [],
                [
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    2,
                    4,
                    8
                ],
                [
                    5,
                    11,
                    12
                ],
                [],
                [
                    6
                ],
                [
                    9
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1406_6b458a8f-1da7-41ba-91e6-d5940297bb5d",
        "question_text": "How many cities were under British control after 1909?",
        "split": "train",
        "decomposition": "return cities under British control after 1909 ;return number of  #1",
        "program": [
            "SELECT['cities under British control after 1909']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "cities under British control after 1909"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cities under British control after 1909)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(cities under British control after 1909)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "cities",
                "were",
                "under",
                "British",
                "control",
                "after",
                "1909",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    2
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2255_958bdcf2-7ad2-4ec4-96cb-f89e03867742",
        "question_text": "How many more TD passes did Brady have than Orlovsky?",
        "split": "dev",
        "decomposition": "return TD passes that Brady did have ;return TD passes that Orlovsky did have ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['TD passes that Brady did have']",
            "SELECT['TD passes that Orlovsky did have']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "TD passes that Brady did have"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "TD passes that Orlovsky did have"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that Brady did have)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that Orlovsky did have)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that Brady did have)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes that Orlovsky did have)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "TD",
                "passes",
                "did",
                "Brady",
                "have",
                "than",
                "Orlovsky",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2587_bf5ca7d0-9679-432f-b0ae-731c6725c003",
        "question_text": "What was the longest yard pass by Stafford?",
        "split": "train",
        "decomposition": "return yards of passes by Stafford ;return the  longest of #1",
        "program": [
            "SELECT['yards of passes by Stafford']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of passes by Stafford"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passes by Stafford)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of passes by Stafford)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    5
                ],
                [
                    0,
                    2,
                    4
                ],
                [
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "longest",
                "yard",
                "pass",
                "by",
                "Stafford",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    5
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2432_851e73a4-4798-4679-9e30-698d6845a058",
        "question_text": "how many yards did the patriots race?",
        "split": "train",
        "decomposition": "return yards that the  patriots race",
        "program": [
            "SELECT['yards that the patriots race']"
        ],
        "nested_expression": [
            "SELECT",
            "yards that the patriots race"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards that the patriots race)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(yards that the patriots race)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "yards",
                "did",
                "the",
                "patriots",
                "race",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2594_5a2c64a0-b57a-4926-8e8e-35f2497848b8",
        "question_text": "How many points did the Packers win the game by?",
        "split": "train",
        "decomposition": "return points of the  game ;return points of the  Packers ;return difference of #1 and  #2 ;return difference of #2 and  #3",
        "program": [
            "SELECT['points of the game']",
            "SELECT['points of the Packers']",
            "ARITHMETIC['difference', '#1', '#2']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Packers"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT",
                    "points of the game"
                ],
                [
                    "SELECT",
                    "points of the Packers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Packers)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the game)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Packers)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Packers)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the game)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Packers)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Packers",
                "win",
                "the",
                "game",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_279_f16bfcf7-ae6a-4454-b6d8-5265a8e0a7cc",
        "question_text": "How many troops were sent in the first and second force altgother?",
        "split": "train",
        "decomposition": "return the  troops that were sent in  the first force ;return the  troops that were sent in  the second force ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT['the troops that were sent in the first force']",
            "SELECT['the troops that were sent in the second force']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the troops that were sent in the first force"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the troops that were sent in the second force"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that were sent in the first force)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that were sent in the second force)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that were sent in the first force)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that were sent in the second force)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    8
                ],
                [
                    1
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "troops",
                "were",
                "sent",
                "in",
                "the",
                "first",
                "and",
                "second",
                "force",
                "altgother",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1066_9187b7b2-b8d1-4e45-b2b2-dfef9a3fd9ab",
        "question_text": "How many more yards in field goals were there compared to yards in touchdowns in the first half?",
        "split": "train",
        "decomposition": "return yards  of field goals in   the  first half ;return yards  of touchdowns in   the  first half ;return sum of #1 ;return sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals in the first half']",
            "SELECT['yards of touchdowns in the first half']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals in the first half"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdowns in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns in the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdowns)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    12,
                    14,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "in",
                "field",
                "goals",
                "were",
                "there",
                "compared",
                "to",
                "yards",
                "in",
                "touchdowns",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [
                    12,
                    17
                ],
                [],
                [],
                [],
                [],
                [
                    16
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    7
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    11,
                    13
                ],
                [],
                [
                    12,
                    14,
                    16,
                    17
                ],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    17
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1662_2b19164d-7046-40b2-85b2-74e28c4b2d7a",
        "question_text": "What team had not won a game this season?",
        "split": "train",
        "decomposition": "return teams ;return #1 that had won at least one game this season ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that had won at least one game this season']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that had won at least one game this season"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that had won at least one game this season)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that had won at least one game this season)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3
                ],
                [
                    0,
                    4
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "team",
                "had",
                "not",
                "won",
                "a",
                "game",
                "this",
                "season",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    1,
                    3
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1040_097dfab8-9c68-4699-904e-d3d2a30aa99d",
        "question_text": "How many yards was the shortest field goal in the game?",
        "split": "train",
        "decomposition": "return yards of field goals in  the  game ;return shortest of #1",
        "program": [
            "SELECT['yards of field goals in the game']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals in the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals in the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "field",
                "goal",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3444_5fe8c9c2-fd98-4f4e-afd3-78c3082e363f",
        "question_text": "Which team did not score in the first half?",
        "split": "train",
        "decomposition": "return team that did not  score ;return #1 in  the  first half",
        "program": [
            "SELECT['team that did not score']",
            "FILTER['#1', 'in the first half']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "team that did not score"
            ],
            "in the first half"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team that did not score)"
            ],
            "GET_QUESTION_SPAN(in the first half)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(team that did not score)"
            ],
            "GET_QUESTION_SPAN(in the first half)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    2,
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "not",
                "score",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_ea45fe99-8b5f-4db1-8fd7-f8e78ac4f9e3",
        "question_text": "How many 6-yard touchdown passes did Brett Favre have?",
        "split": "dev",
        "decomposition": "return touchdown passes of  Brett Favre ;return #1 that are  6-yard ;return number of  #2",
        "program": [
            "SELECT['touchdown passes of Brett Favre']",
            "FILTER['#1', 'that are 6-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdown passes of Brett Favre"
                ],
                "that are 6-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Brett Favre)"
                ],
                "GET_QUESTION_SPAN(that are 6-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Brett Favre)"
                ],
                "GET_QUESTION_NUMBER(6)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6,
                    7,
                    9
                ],
                []
            ],
            "question_tokens": [
                "How",
                "many",
                "6-yard",
                "touchdown",
                "passes",
                "did",
                "Brett",
                "Favre",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6,
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1781_df490028-1951-4c98-859f-7a36da8bbcaf",
        "question_text": "How many yards, to two decimal places, were Kevin William's receptions on average?",
        "split": "train",
        "decomposition": "return yards of the  receptions of  Kevin William ;return the  average of #1 to two decimal places",
        "program": [
            "SELECT['yards of the receptions of Kevin William']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of the receptions of Kevin William"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the receptions of Kevin William)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the receptions of Kevin William)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    4,
                    9,
                    10,
                    11
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                ",",
                "to",
                "two",
                "decimal",
                "places",
                ",",
                "were",
                "Kevin",
                "William",
                "'s",
                "receptions",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    15
                ],
                [
                    9
                ],
                [
                    4,
                    10,
                    11
                ],
                [
                    12,
                    13,
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    10,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    4,
                    11
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1002_20f50d70-d527-4b81-b97f-4465bc7cc40d",
        "question_text": "How many 4 yard touch down passes did Joe Flacco make?",
        "split": "train",
        "decomposition": "return touch down passes of  Joe Flacco ;return #1 that are  4 yard ;return number of  #2",
        "program": [
            "SELECT['touch down passes of Joe Flacco']",
            "FILTER['#1', 'that are 4 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touch down passes of Joe Flacco"
                ],
                "that are 4 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touch down passes of Joe Flacco)"
                ],
                "GET_QUESTION_SPAN(that are 4 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touch down passes of Joe Flacco)"
                ],
                "GET_QUESTION_NUMBER(4)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    11
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "4",
                "yard",
                "touch",
                "down",
                "passes",
                "did",
                "Joe",
                "Flacco",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    5
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    8
                ],
                [
                    2
                ],
                [
                    11
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1220_a7befa53-7be9-4a7e-b3d4-622fa3337b43",
        "question_text": "Which team scored the most touchdowns?",
        "split": "train",
        "decomposition": "return teams ;return touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "most",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2684_fcf03aa4-9d7f-44ef-b37f-b81fa38783c2",
        "question_text": "How many percent of Ohioans were not employed in the professional and technical services sector?",
        "split": "train",
        "decomposition": "return percent of Ohioans that were employed in  the  professional and  technical services sector ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of Ohioans that were employed in the professional and technical services sector']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of Ohioans that were employed in the professional and technical services sector"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of Ohioans that were employed in the professional and technical services sector)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of Ohioans that were employed in the professional and technical services sector)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    11,
                    13,
                    14
                ],
                [
                    8,
                    9,
                    10,
                    12
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "Ohioans",
                "were",
                "not",
                "employed",
                "in",
                "the",
                "professional",
                "and",
                "technical",
                "services",
                "sector",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    7,
                    11,
                    13,
                    14
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    14
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1843_274b4b67-058f-4665-9219-97ace884b799",
        "question_text": "What was the second largest racial group in the city?",
        "split": "train",
        "decomposition": "return racial groups in  the  city ;return second largest of #1",
        "program": [
            "SELECT['racial groups in the city']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "racial groups in the city"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups in the city)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups in the city)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    0,
                    2,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "second",
                "largest",
                "racial",
                "group",
                "in",
                "the",
                "city",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5,
                    6
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1627_da7f7d0c-b41b-4d36-9af7-63d32825a55b",
        "question_text": "Which happened last, the signing of the treaty of the death of King Charles II?",
        "split": "train",
        "decomposition": "return when  was  the  signing of   the   treaty ;return when  was  the  death of   King Charles II ;return which is the  highest of   #1 ,  #2",
        "program": [
            "SELECT['when was the signing of the treaty']",
            "SELECT['when was the death of King Charles II']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the signing of the treaty"
            ],
            [
                "SELECT",
                "when was the death of King Charles II"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the signing of the treaty)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of King Charles II)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the signing of the treaty)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of King Charles II)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8,
                    11,
                    14
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    10,
                    12,
                    13
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "last",
                ",",
                "the",
                "signing",
                "of",
                "the",
                "treaty",
                "of",
                "the",
                "death",
                "of",
                "King",
                "Charles",
                "II",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    11
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    1,
                    2,
                    11,
                    14
                ],
                [
                    5,
                    8
                ],
                [],
                [],
                [
                    13
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    15
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    15
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2938_348590f0-2a0f-4d2a-884c-baa8dbebdf61",
        "question_text": "How many years passed when Moldova-Russia improved and then deteriorated?",
        "split": "train",
        "decomposition": "return years when  Moldova-Russia improved ;return years when  Moldova-Russia then deteriorated ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['years when Moldova-Russia improved']",
            "SELECT['years when Moldova-Russia then deteriorated']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years when Moldova-Russia improved"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "years when Moldova-Russia then deteriorated"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Moldova-Russia improved)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Moldova-Russia then deteriorated)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Moldova-Russia improved)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when Moldova-Russia then deteriorated)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    9
                ],
                [
                    1,
                    3,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "passed",
                "when",
                "Moldova",
                "-",
                "Russia",
                "improved",
                "and",
                "then",
                "deteriorated",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    9
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    5,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    9
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_153_027ac1ea-4f41-447e-bc7b-0d5eb892d8e6",
        "question_text": "How many more touchdown passes did Jon Kitna throw compared to everyone else?",
        "split": "dev",
        "decomposition": "return touchdown passes of Jon Kitna ;return touchdown passes of everyone else ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['touchdown passes of Jon Kitna']",
            "SELECT['touchdown passes of everyone else']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Jon Kitna"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of everyone else"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Jon Kitna)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of everyone else)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of Jon Kitna)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes of everyone else)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    3
                ],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdown",
                "passes",
                "did",
                "Jon",
                "Kitna",
                "throw",
                "compared",
                "to",
                "everyone",
                "else",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    8,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1811_279e8fd5-6a85-441f-9344-03f446765370",
        "question_text": "how many francs is the combined total pension for a single person and a couple prior to the raise?",
        "split": "dev",
        "decomposition": "return francs of pension for a single person prior to the  raise ;return francs of pension for a couple prior to the  raise ;return sum of #1 and  #2",
        "program": [
            "SELECT['francs of pension for a single person prior to the raise']",
            "SELECT['francs of pension for a couple prior to the raise']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "francs of pension for a single person prior to the raise"
            ],
            [
                "SELECT",
                "francs of pension for a couple prior to the raise"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(francs of pension for a single person prior to the raise)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(francs of pension for a couple prior to the raise)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(francs of pension for a single person prior to the raise)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(francs of pension for a couple prior to the raise)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    5,
                    6,
                    12
                ],
                [
                    0,
                    1,
                    7
                ],
                [
                    3,
                    4,
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11,
                    14,
                    16
                ],
                [
                    13,
                    17,
                    18
                ],
                [
                    15,
                    19
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "francs",
                "is",
                "the",
                "combined",
                "total",
                "pension",
                "for",
                "a",
                "single",
                "person",
                "and",
                "a",
                "couple",
                "prior",
                "to",
                "the",
                "raise",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5,
                    6,
                    12
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [
                    13
                ],
                [
                    15,
                    16
                ],
                [
                    14
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    12
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    11,
                    14,
                    16
                ],
                [
                    18
                ],
                [
                    15
                ],
                [
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    18
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    17,
                    18
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2597_4f58f353-a1e5-4ce3-8997-1eaeb5a78ee2",
        "question_text": "Which racial groups are smaller than 5%?",
        "split": "train",
        "decomposition": "return racial groups ;return #1 that are smaller than 5 %",
        "program": [
            "SELECT['racial groups']",
            "FILTER['#1', 'that are smaller than 5 %']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "racial groups"
            ],
            "that are smaller than 5 %"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups)"
            ],
            "GET_QUESTION_SPAN(that are smaller than 5 %)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups)"
            ],
            "GET_QUESTION_SPAN(that are smaller than 5 %)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "racial",
                "groups",
                "are",
                "smaller",
                "than",
                "5",
                "%",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1,
                    2
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_583_16817818-6cde-457e-8311-ffc5c8fcfcda",
        "question_text": "How many yards were gained on the three longest touchdown passes?",
        "split": "train",
        "decomposition": "return yards gained on touchdown passes ;return three longest of #1",
        "program": [
            "SELECT['yards gained on touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards gained on touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards gained on touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards gained on touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    8,
                    9
                ],
                [
                    4,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "gained",
                "on",
                "the",
                "three",
                "longest",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    2,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    10
                ],
                [],
                [
                    2
                ],
                [
                    8,
                    9
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2771_52d39a05-5f49-4b4d-b7a9-ac72c4711a51",
        "question_text": "How many points did Houston lead with by halftime?",
        "split": "train",
        "decomposition": "return points by halftime ;return points of Houston by halftime ;return the  sum of #1 ;return the  difference of #3 and  #2 ;return the  difference of #2 and  #4",
        "program": [
            "SELECT['points by halftime']",
            "SELECT['points of Houston by halftime']",
            "AGGREGATE['sum', '#1']",
            "ARITHMETIC['difference', '#3', '#2']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of Houston by halftime"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "points by halftime"
                    ]
                ],
                [
                    "SELECT",
                    "points of Houston by halftime"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Houston by halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points by halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Houston by halftime)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of Houston by halftime)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points by halftime)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of Houston by halftime)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Houston",
                "lead",
                "with",
                "by",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1604_576942fc-d94b-4bcd-beda-33fa99f2f8e8",
        "question_text": "What was the second longest touchdown of the second half?",
        "split": "train",
        "decomposition": "return touchdowns of the  second  half ;return second  longest of #1",
        "program": [
            "SELECT['touchdowns of the second half']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "touchdowns of the second half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the second half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the second half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    0,
                    2,
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "second",
                "longest",
                "touchdown",
                "of",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1685_b8e893a2-a30b-4846-bff2-7bfe76802c82",
        "question_text": "How many yards total did Mike Nugent kick for field goals?",
        "split": "train",
        "decomposition": "return yards of field goals of  Mike Nugent ;return the  sum of #1",
        "program": [
            "SELECT['yards of field goals of Mike Nugent']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of field goals of Mike Nugent"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Mike Nugent)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Mike Nugent)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "total",
                "did",
                "Mike",
                "Nugent",
                "kick",
                "for",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    9,
                    10
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5,
                    9
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    10
                ],
                [],
                [
                    8
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_4058_7e7d9268-75b1-4626-9035-3e825cf26df6",
        "question_text": "Were there more males or females in Copperbelt Province?",
        "split": "train",
        "decomposition": "return males in  Copperbelt Province ;return females in  Copperbelt Province ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['males in Copperbelt Province']",
            "SELECT['females in Copperbelt Province']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "males in Copperbelt Province"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "females in Copperbelt Province"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(males in Copperbelt Province)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(females in Copperbelt Province)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(males in Copperbelt Province)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(females in Copperbelt Province)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "more",
                "males",
                "or",
                "females",
                "in",
                "Copperbelt",
                "Province",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2274_bd38bf99-bbcf-4fb1-9672-8c7c873f2fc3",
        "question_text": "How many percent of the population did not practice Orthodox Christianity?",
        "split": "train",
        "decomposition": "return percent of the  population that practices Orthodox Christianity ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of the population that practices Orthodox Christianity']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of the population that practices Orthodox Christianity"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the population that practices Orthodox Christianity)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the population that practices Orthodox Christianity)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "population",
                "did",
                "not",
                "practice",
                "Orthodox",
                "Christianity",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2162_b93c971d-e880-4748-9524-634d97b11ed4",
        "question_text": "Which age group was the second smallest?",
        "split": "dev",
        "decomposition": "return age groups ;return second smallest of #1",
        "program": [
            "SELECT['age groups']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "age groups"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    4
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "age",
                "group",
                "was",
                "the",
                "second",
                "smallest",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2292_f4b58ae0-cfab-4d2d-90f5-ced946b64748",
        "question_text": "How many field goals of at least 40 yards were kicked in the first half?",
        "split": "train",
        "decomposition": "return first half field goals ;return yards of #1 ;return #1 where #2 is at least 40 ;return number of  #3",
        "program": [
            "SELECT['first half field goals']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "first half field goals"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "first half field goals"
                    ]
                ],
                "is at least 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(first half field goals)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(first half field goals)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "at",
                "least",
                "40",
                "yards",
                "were",
                "kicked",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    11,
                    13
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    11
                ],
                [],
                [
                    13,
                    14,
                    15
                ],
                [
                    8,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1926_f50176c8-5c7f-4956-bb22-f88f618d12a3",
        "question_text": "How long was the second longest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return second of  #1 ;return how long was #2",
        "program": [
            "SELECT['touchdown passes']",
            "PROJECT['second of #REF', '#1']",
            "PROJECT['how long was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "PROJECT",
                "second of #REF",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(second of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(second of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "the",
                "second",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5,
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3317_a2732616-861a-4206-95c9-3acabcf18523",
        "question_text": "How many punts were there in the first half?",
        "split": "train",
        "decomposition": "return punts that were there  in  the  first half ;return number of  #1",
        "program": [
            "SELECT['punts that were there in the first half']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "punts that were there in the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(punts that were there in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(punts that were there)"
                ],
                "GET_QUESTION_SPAN(in the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "punts",
                "were",
                "there",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1116_a16a9064-1b16-428d-bfc7-1a4f83d37267",
        "question_text": "How many years did Italy fight to keep control of Libya before signing the Treaty of Acroma?",
        "split": "train",
        "decomposition": "return years in  which Italy fight to keep control of Libya before signing the  Treaty of  Acroma ;return the  number of  #1",
        "program": [
            "SELECT['years in which Italy fight to keep control of Libya before signing the Treaty of Acroma']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years in which Italy fight to keep control of Libya before signing the Treaty of Acroma"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which Italy fight to keep control of Libya before signing the Treaty of Acroma)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which Italy fight to keep control of Libya before signing the Treaty of Acroma)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    6,
                    9,
                    10,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    4,
                    11,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "Italy",
                "fight",
                "to",
                "keep",
                "control",
                "of",
                "Libya",
                "before",
                "signing",
                "the",
                "Treaty",
                "of",
                "Acroma",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6,
                    8,
                    9,
                    10,
                    12
                ],
                [
                    7,
                    11,
                    13,
                    14,
                    15
                ],
                [],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    4
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1673_ce019923-52a6-4881-afaf-a6f7504dfa5a",
        "question_text": "How many yards long, to the nearest integer, were Matt Schaub's touchdown passes on average?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Matt Schaub ;return average of #1 to the  nearest integer",
        "program": [
            "SELECT['yards of touchdown passes of Matt Schaub']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of touchdown passes of Matt Schaub"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Matt Schaub)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes of Matt Schaub)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    13,
                    16,
                    17
                ],
                [
                    5,
                    6,
                    10,
                    11,
                    12,
                    15
                ],
                [
                    14,
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                ",",
                "to",
                "the",
                "nearest",
                "integer",
                ",",
                "were",
                "Matt",
                "Schaub",
                "'s",
                "touchdown",
                "passes",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    17
                ],
                [
                    10
                ],
                [
                    5,
                    6,
                    15
                ],
                [
                    11,
                    13,
                    14,
                    16
                ],
                [
                    12
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    10,
                    11,
                    14,
                    15
                ],
                [
                    2,
                    3,
                    4,
                    7,
                    8,
                    9,
                    13,
                    16,
                    17
                ],
                [
                    5,
                    6,
                    12
                ],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1222_f631fc80-ccc6-4f65-92a1-be1739ef8fbe",
        "question_text": "How many more total field goal yards did Nate Kaeding make than Taylor Mehlhaff?",
        "split": "dev",
        "decomposition": "return field goal yards of Nate Kaeding ;return field goal yards of Taylor Mehlhaff ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goal yards of Nate Kaeding']",
            "SELECT['field goal yards of Taylor Mehlhaff']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "field goal yards of Nate Kaeding"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "field goal yards of Taylor Mehlhaff"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal yards of Nate Kaeding)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal yards of Taylor Mehlhaff)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal yards of Nate Kaeding)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goal yards of Taylor Mehlhaff)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [
                    7,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "field",
                "goal",
                "yards",
                "did",
                "Nate",
                "Kaeding",
                "make",
                "than",
                "Taylor",
                "Mehlhaff",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11
                ],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2583_0e3ed038-8532-4cab-89d5-47be78d8ced7",
        "question_text": "Which areas each had less than 5% of refugees?",
        "split": "train",
        "decomposition": "return areas ;return % of refugees in  #1 ;return #1 where #2 is lower than 5 %",
        "program": [
            "SELECT['areas']",
            "PROJECT['% of refugees in #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 5 %']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "areas"
            ],
            [
                "PROJECT",
                "% of refugees in #REF",
                [
                    "SELECT",
                    "areas"
                ]
            ],
            "is lower than 5 %"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(areas)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(% of refugees in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 5 %)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(areas)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(% of refugees in #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is lower than 5 %)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4,
                    6,
                    9
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "areas",
                "each",
                "had",
                "less",
                "than",
                "5",
                "%",
                "of",
                "refugees",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    5,
                    7,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2315_d2680b8c-baee-4be7-b88c-86783103db18",
        "question_text": "How many of their last eight games did the Chargers score more than one touchdown?",
        "split": "train",
        "decomposition": "return last eight games of the  Chargers ;return touchdowns in  #1 ;return number of  #2 for each #1 ;return #1 where #3 is higher than one",
        "program": [
            "SELECT['last eight games of the Chargers']",
            "PROJECT['touchdowns in #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is higher than one']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "last eight games of the Chargers"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns in #REF",
                    [
                        "SELECT",
                        "last eight games of the Chargers"
                    ]
                ],
                [
                    "SELECT",
                    "last eight games of the Chargers"
                ]
            ],
            "is higher than one"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(last eight games of the Chargers)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than one)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(last eight games of the Chargers)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is higher than one)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [
                    5,
                    11
                ],
                [
                    9,
                    14
                ],
                [],
                [
                    10,
                    12,
                    13
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "their",
                "last",
                "eight",
                "games",
                "did",
                "the",
                "Chargers",
                "score",
                "more",
                "than",
                "one",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    11
                ],
                [
                    7
                ],
                [
                    14
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    12
                ],
                [],
                [
                    13
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    11
                ],
                [],
                [],
                [
                    14
                ],
                [
                    9
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    15
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1909_d845517a-fea6-48d9-b89e-cf9a5eb3be56",
        "question_text": "How many more tons were sank by the best method compared to the worst?",
        "split": "train",
        "decomposition": "return tons sank by the  best method ;return tons sank by the  worst method ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['tons sank by the best method']",
            "SELECT['tons sank by the worst method']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "tons sank by the best method"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "tons sank by the worst method"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons sank by the best method)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons sank by the worst method)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons sank by the best method)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(tons sank by the worst method)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "tons",
                "were",
                "sank",
                "by",
                "the",
                "best",
                "method",
                "compared",
                "to",
                "the",
                "worst",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1048_1003bb6f-c368-40c6-9b07-5008ffac6038",
        "question_text": "How many people was the maximum estimate of people who died in the riot?",
        "split": "dev",
        "decomposition": "return people who  died in  the  riot ;return people in  maximum estimate of #1 ;return number of  #2",
        "program": [
            "SELECT['people who died in the riot']",
            "PROJECT['people in maximum estimate of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "people in maximum estimate of #REF",
                [
                    "SELECT",
                    "people who died in the riot"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(people in maximum estimate of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who died in the riot)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(people in maximum estimate of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who died in the riot)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    12
                ],
                [
                    10
                ],
                [
                    7,
                    9,
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "was",
                "the",
                "maximum",
                "estimate",
                "of",
                "people",
                "who",
                "died",
                "in",
                "the",
                "riot",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    8
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    6,
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    6
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    7,
                    12
                ],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_964_953c4b80-c418-4ce0-b78a-e656291bf9c8",
        "question_text": "Which SAT sections had scores below 500?",
        "split": "train",
        "decomposition": "return the  SAT sections ;return the  scores of #1 ;return #1 where #2 is less than 500",
        "program": [
            "SELECT['the SAT sections']",
            "PROJECT['the scores of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is less than 500']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "the SAT sections"
            ],
            [
                "PROJECT",
                "the scores of #REF",
                [
                    "SELECT",
                    "the SAT sections"
                ]
            ],
            "is less than 500"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the SAT sections)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(the scores of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 500)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the SAT sections)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(the scores of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is less than 500)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "SAT",
                "sections",
                "had",
                "scores",
                "below",
                "500",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_195_a0e96d34-5108-4108-a4d0-625f14a7cf01",
        "question_text": "What war started last: World War I or the Russian Civil War?",
        "split": "train",
        "decomposition": "return when  did World War I start ;return when  did the  Russian Civil War start ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT['when did World War I start']",
            "SELECT['when did the Russian Civil War start']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did World War I start"
            ],
            [
                "SELECT",
                "when did the Russian Civil War start"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did World War I start)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russian Civil War start)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did World War I start)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russian Civil War start)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    1,
                    6,
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "war",
                "started",
                "last",
                ":",
                "World",
                "War",
                "I",
                "or",
                "the",
                "Russian",
                "Civil",
                "War",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    1,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    1,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1860_354675ed-a147-4b07-b41c-78c6cbdc9b82",
        "question_text": "How many percent of people were not between 15 and 19 years?",
        "split": "dev",
        "decomposition": "return percent of people that were between 15 and  19 years ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of people that were between 15 and 19 years']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of people that were between 15 and 19 years"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were between 15 and 19 years)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were between 15 and 19 years)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    8,
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "between",
                "15",
                "and",
                "19",
                "years",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    5,
                    7,
                    9
                ],
                [
                    11
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    8,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1653_2cc6336d-7ce8-4cf6-b187-6c03e42b99c2",
        "question_text": "Did Des V\u0153ux serve longer as the stipendiary magistrate or the Governor of Newfoundland?",
        "split": "train",
        "decomposition": "return how long Des V\u0153ux serve as stipendiary magistrate ;return how long Des V\u0153ux serve as the Governor of  Newfoundland ;return which is  highest of  #1 , #2",
        "program": [
            "SELECT['how long Des V\\u0153ux serve as stipendiary magistrate']",
            "SELECT['how long Des V\\u0153ux serve as the Governor of Newfoundland']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "how long Des V\u0153ux serve as stipendiary magistrate"
            ],
            [
                "SELECT",
                "how long Des V\u0153ux serve as the Governor of Newfoundland"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Des V\u0153ux serve as stipendiary magistrate)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Des V\u0153ux serve as the Governor of Newfoundland)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Des V\u0153ux serve as stipendiary magistrate)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Des V\u0153ux serve as the Governor of Newfoundland)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "Des",
                "V\u0153ux",
                "serve",
                "longer",
                "as",
                "the",
                "stipendiary",
                "magistrate",
                "or",
                "the",
                "Governor",
                "of",
                "Newfoundland",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0,
                    2,
                    3,
                    9
                ],
                [
                    4
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1245_d26e0e8a-4e35-47ef-bfdf-d7728551b29d",
        "question_text": "Is Ireland ranked lower in science or mathematics?",
        "split": "train",
        "decomposition": "return where Ireland is  ranked in science ;return where Ireland is  ranked in mathematics ;return which  is  lower of #1 ,  #2",
        "program": [
            "SELECT['where Ireland is ranked in science']",
            "SELECT['where Ireland is ranked in mathematics']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "where Ireland is ranked in science"
            ],
            [
                "SELECT",
                "where Ireland is ranked in mathematics"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where Ireland is ranked in science)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(where Ireland is ranked in mathematics)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where Ireland is ranked in science)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(where Ireland is ranked in mathematics)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    6
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "Is",
                "Ireland",
                "ranked",
                "lower",
                "in",
                "science",
                "or",
                "mathematics",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    3
                ],
                [
                    2
                ],
                [
                    1
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0,
                    1,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3929_41fd13f1-dcdd-4e6f-a412-721dcdf04da3",
        "question_text": "Did Eliot serve longer as Attach\u00e9 at Hanover or as 1st Paid Attach\u00e9 at Constantinople?",
        "split": "train",
        "decomposition": "return how long Eliot serve as  Attach\u00e9 at most Hanover ;return how long Eliot serve as  1st Paid Attach\u00e9 at Constantinople ;return which is  highest of  #1 , #2",
        "program": [
            "SELECT['how long Eliot serve as Attach\\xe9 at most Hanover']",
            "SELECT['how long Eliot serve as 1st Paid Attach\\xe9 at Constantinople']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "how long Eliot serve as Attach\u00e9 at most Hanover"
            ],
            [
                "SELECT",
                "how long Eliot serve as 1st Paid Attach\u00e9 at Constantinople"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Eliot serve as Attach\u00e9 at most Hanover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Eliot serve as 1st Paid Attach\u00e9 at Constantinople)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Eliot serve as Attach\u00e9 at most Hanover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(how long Eliot serve as 1st Paid Attach\u00e9 at Constantinople)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    8,
                    12
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    9,
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Did",
                "Eliot",
                "serve",
                "longer",
                "as",
                "Attach\u00e9",
                "at",
                "Hanover",
                "or",
                "as",
                "1st",
                "Paid",
                "Attach\u00e9",
                "at",
                "Constantinople",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    10
                ],
                [],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    5,
                    12
                ],
                [
                    4,
                    7
                ],
                [
                    6,
                    10
                ],
                [],
                [
                    9,
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3995_68524f89-f828-4346-a930-a5c0888f7ca0",
        "question_text": "What gender made up the fewest number of refugees?",
        "split": "train",
        "decomposition": "return genders ;return refugees of #1 ;return number of  #2 for each #1 ;return #1 where #3 is lowest",
        "program": [
            "SELECT['genders']",
            "PROJECT['refugees of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['min', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "genders"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "refugees of #REF",
                    [
                        "SELECT",
                        "genders"
                    ]
                ],
                [
                    "SELECT",
                    "genders"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(genders)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(refugees of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(genders)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(refugees of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    5
                ],
                [
                    0,
                    4,
                    7
                ],
                [],
                [
                    3,
                    6,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "gender",
                "made",
                "up",
                "the",
                "fewest",
                "number",
                "of",
                "refugees",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1642_d25c97cd-4334-4203-b4e3-2e38921dc42d",
        "question_text": "How many total yards of touchdowns did Jay Cutler have?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  Jay Cutler ;return sum of #1",
        "program": [
            "SELECT['yards of touchdowns of Jay Cutler']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdowns of Jay Cutler"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Jay Cutler)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of Jay Cutler)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    9
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "touchdowns",
                "did",
                "Jay",
                "Cutler",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1820_41d37a6a-aa84-4ad9-89cd-491c8170f541",
        "question_text": "What was the shortest TD pass of the third quarter?",
        "split": "train",
        "decomposition": "return TD passes of the  third quarter ;return the  shortest of #1",
        "program": [
            "SELECT['TD passes of the third quarter']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "TD passes of the third quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of the third quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(TD passes of the third quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "shortest",
                "TD",
                "pass",
                "of",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_786_17f8fd6a-aab5-449f-8daa-044ee66b9df6",
        "question_text": "Which quarterback had more touchdown passes in total?",
        "split": "train",
        "decomposition": "return quarterbacks ;return touchdown passes of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['touchdown passes of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdown passes of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "had",
                "more",
                "touchdown",
                "passes",
                "in",
                "total",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2078_3df60b95-6866-4774-a262-94cec073498e",
        "question_text": "What two players won six titles?",
        "split": "train",
        "decomposition": "return players ;return titles of #1 ;return number of  #2 for each #1 ;return #1 where #3 is six",
        "program": [
            "SELECT['players']",
            "PROJECT['titles of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is six']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "titles of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is six"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(titles of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is six)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(titles of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is six)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "What",
                "two",
                "players",
                "won",
                "six",
                "titles",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [],
                [
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1360_610a77f0-78ca-4ca1-a1cb-2c0a278be462",
        "question_text": "Which happened first, the signing of an alliance with Brandenburg, or the storming of Warsaw?",
        "split": "train",
        "decomposition": "return when  was  the  signing of an alliance with Brandenburg ;return when  was  the  storming of Warsaw ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the signing of an alliance with Brandenburg']",
            "SELECT['when was the storming of Warsaw']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the signing of an alliance with Brandenburg"
            ],
            [
                "SELECT",
                "when was the storming of Warsaw"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the signing of an alliance with Brandenburg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the storming of Warsaw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the signing of an alliance with Brandenburg)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the storming of Warsaw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    11,
                    12
                ],
                [
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "Which",
                "happened",
                "first",
                ",",
                "the",
                "signing",
                "of",
                "an",
                "alliance",
                "with",
                "Brandenburg",
                ",",
                "or",
                "the",
                "storming",
                "of",
                "Warsaw",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ],
                [
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    11,
                    12
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    16
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1021_f8d43ba3-89bf-4c31-b3b4-c4b24725c214",
        "question_text": "How many yards difference was Michael Pittman\u2019s last touchdown run compared to his first?",
        "split": "dev",
        "decomposition": "return yards of touchdown runs of  Michael Pittman ;return last of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown runs of Michael Pittman']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown runs of Michael Pittman"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown runs of Michael Pittman"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Michael Pittman)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Michael Pittman)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Michael Pittman)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown runs of Michael Pittman)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2,
                    4,
                    6
                ],
                [
                    5
                ],
                [
                    8
                ],
                [
                    7,
                    11,
                    12
                ],
                [
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "was",
                "Michael",
                "Pittman",
                "\u2019s",
                "last",
                "touchdown",
                "run",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [
                    7
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    9
                ],
                [
                    10,
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2450_798d4961-c561-421c-beca-9ea831bb7078",
        "question_text": "How many percent of the population was not below the poverty line?",
        "split": "train",
        "decomposition": "return percent below the  poverty line ;return difference of 100 and  #1",
        "program": [
            "SELECT['percent below the poverty line']",
            "PROJECT['difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "difference of 100 and #REF",
            [
                "SELECT",
                "percent below the poverty line"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent below the poverty line)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent below the poverty line)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [],
                [
                    4,
                    6,
                    9
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "population",
                "was",
                "not",
                "below",
                "the",
                "poverty",
                "line",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_594_dc935c43-645b-4a33-813d-c10e34136b46",
        "question_text": "How many days did the seige last?",
        "split": "train",
        "decomposition": "return days that the  seige lasts ;return the  number of  #1",
        "program": [
            "SELECT['days that the seige lasts']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "days that the seige lasts"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days that the seige lasts)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days that the seige lasts)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "did",
                "the",
                "seige",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1971_b16fe311-2cdb-41fa-9884-86205e579c0a",
        "question_text": "How many 40+ yard field goals were made?",
        "split": "train",
        "decomposition": "return yard of  field goals made ;return #1 that were 40+ yard ;return the number of  #2",
        "program": [
            "SELECT['yard of field goals made']",
            "FILTER['#1', 'that were 40+ yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yard of field goals made"
                ],
                "that were 40+ yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals made)"
                ],
                "GET_QUESTION_SPAN(that were 40+ yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yard of field goals made)"
                ],
                "GET_QUESTION_NUMBER(40+)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_406_b09a54dd-ca5a-42e7-a9e3-974fb9362c7a",
        "question_text": "Which field goals did Olindo Mare make?",
        "split": "train",
        "decomposition": "return field goals ;return #1 from  Olindo Mare",
        "program": [
            "SELECT['field goals']",
            "FILTER['#1', 'from Olindo Mare']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "field goals"
            ],
            "from Olindo Mare"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals)"
            ],
            "GET_QUESTION_SPAN(from Olindo Mare)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals)"
            ],
            "GET_QUESTION_SPAN(from Olindo Mare)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "field",
                "goals",
                "did",
                "Olindo",
                "Mare",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1727_6ff2f0f1-82e2-487b-a11d-88b4f24c55d6",
        "question_text": "Were there more yards in touchdown scoring plays or field goals?",
        "split": "train",
        "decomposition": "return yards of touchdown scorings ;return yards of field goals ;return sum of #1 ;return sum of #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of touchdown scorings']",
            "SELECT['yards of field goals']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown scorings"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown scorings)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown scorings)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "more",
                "yards",
                "in",
                "touchdown",
                "scoring",
                "plays",
                "or",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_87_f3ead95b-f375-45e2-9d09-f43fc89f7d0a",
        "question_text": "How many years did Speedtest.net use an RIA built with Adobe Flash?",
        "split": "train",
        "decomposition": "return years when  Speedtest.net use an RIA built with Adobe Flash ;return the  number of  #1",
        "program": [
            "SELECT['years when Speedtest.net use an RIA built with Adobe Flash']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when Speedtest.net use an RIA built with Adobe Flash"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when Speedtest.net use an RIA built with Adobe Flash)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when Speedtest.net use an RIA built with Adobe Flash)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "Speedtest.net",
                "use",
                "an",
                "RIA",
                "built",
                "with",
                "Adobe",
                "Flash",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1949_887b24fe-5b8a-45ea-bcb8-89873bf0d6fe",
        "question_text": "How long was Ricky Williams touchdown?",
        "split": "train",
        "decomposition": "return touchdown of  Ricky Williams ;return how long was #1",
        "program": [
            "SELECT['touchdown of Ricky Williams']",
            "PROJECT['how long was #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "how long was #REF",
            [
                "SELECT",
                "touchdown of Ricky Williams"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown of Ricky Williams)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(how long was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown of Ricky Williams)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "How",
                "long",
                "was",
                "Ricky",
                "Williams",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1
                ],
                [
                    5
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_680_5a347505-97ee-495e-a5d5-43a6f25b2f0c",
        "question_text": "How many total yards were Peterson's touchdowns combined?",
        "split": "train",
        "decomposition": "return yards of Peterson 's touchdowns ;return sum of #1",
        "program": [
            "SELECT[\"yards of Peterson 's touchdowns\"]",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of Peterson 's touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Peterson 's touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Peterson 's touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "were",
                "Peterson",
                "'s",
                "touchdowns",
                "combined",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_948_08c235be-17d0-450d-83b7-dcf8ccfb1ca3",
        "question_text": "How many more TD run yards did Lynch get than Russell?",
        "split": "train",
        "decomposition": "return yards of TD runs of  Lynch ;return yards of TD runs of  Russell ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of TD runs of Lynch']",
            "SELECT['yards of TD runs of Russell']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of TD runs of Lynch"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of TD runs of Russell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD runs of Lynch)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD runs of Russell)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD runs of Lynch)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD runs of Russell)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    5
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "TD",
                "run",
                "yards",
                "did",
                "Lynch",
                "get",
                "than",
                "Russell",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    4
                ],
                [],
                [
                    9
                ],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2082_f0b487a6-2fde-420e-b6f4-76dd27962d6b",
        "question_text": "How many incompletions did Joe Montana record?",
        "split": "train",
        "decomposition": "return incompletions that Joe Montana records ;return the  number of  #1",
        "program": [
            "SELECT['incompletions that Joe Montana records']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "incompletions that Joe Montana records"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incompletions that Joe Montana records)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incompletions that Joe Montana records)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "incompletions",
                "did",
                "Joe",
                "Montana",
                "record",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1127_48d1fd95-4133-4658-bf71-952660496af1",
        "question_text": "How many years did it take urban leaders and rural factions to take over most of Flanders?",
        "split": "train",
        "decomposition": "return when  urban leaders and  rural factions take over most of Flanders ;return number of  years #1 take",
        "program": [
            "SELECT['when urban leaders and rural factions take over most of Flanders']",
            "PROJECT['number of years #REF take', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "number of years #REF take",
            [
                "SELECT",
                "when urban leaders and rural factions take over most of Flanders"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(number of years #REF take)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when urban leaders and rural factions take over most of Flanders)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(did it take urban leaders and rural factions to take over most of Flanders?)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    12
                ],
                [
                    6,
                    9,
                    10,
                    11,
                    15
                ],
                [
                    8,
                    13,
                    14,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "it",
                "take",
                "urban",
                "leaders",
                "and",
                "rural",
                "factions",
                "to",
                "take",
                "over",
                "most",
                "of",
                "Flanders",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    12
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11,
                    13,
                    14,
                    15
                ],
                [],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    7,
                    12
                ],
                [
                    9,
                    10,
                    13
                ],
                [
                    6,
                    11,
                    14,
                    15
                ],
                [
                    8
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    16
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_882_c68f2a7b-3db3-41ba-96a8-528489108558",
        "question_text": "During the Reagan administration, what was the average first year raises for manufacturing workers?",
        "split": "train",
        "decomposition": "return first year raises of  manufacturing workers During the Reagan administration ;return the average of  #1",
        "program": [
            "SELECT['first year raises of manufacturing workers During the Reagan administration']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "first year raises of manufacturing workers During the Reagan administration"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first year raises of manufacturing workers During the Reagan administration)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(first year raises of manufacturing workers During the Reagan administration)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    8,
                    11,
                    13,
                    14
                ],
                [
                    1,
                    5,
                    6,
                    7,
                    10,
                    12
                ],
                [
                    9,
                    15
                ]
            ],
            "question_tokens": [
                "During",
                "the",
                "Reagan",
                "administration",
                ",",
                "what",
                "was",
                "the",
                "average",
                "first",
                "year",
                "raises",
                "for",
                "manufacturing",
                "workers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6,
                    10
                ],
                [
                    7
                ],
                [
                    9,
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    8,
                    11,
                    13,
                    14
                ],
                [
                    1,
                    6,
                    7,
                    10
                ],
                [
                    12
                ],
                [
                    9,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2861_df93dc6a-a605-4e11-97fd-3d98ab49e0ba",
        "question_text": "How many more abortions were done by medical abortion compared to those classified by instillation abortion?",
        "split": "train",
        "decomposition": "return abortions that were done by medical abortion  ;return abortions that were classified by instillation abortion  ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['abortions that were done by medical abortion']",
            "SELECT['abortions that were classified by instillation abortion']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "abortions that were done by medical abortion"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "abortions that were classified by instillation abortion"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(abortions that were done by medical abortion)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(abortions that were classified by instillation abortion)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(abortions that were done by medical abortion)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(abortions that were classified by instillation abortion)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    3,
                    6,
                    8,
                    11
                ],
                [
                    12
                ],
                [
                    10,
                    14
                ],
                [
                    13,
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "abortions",
                "were",
                "done",
                "by",
                "medical",
                "abortion",
                "compared",
                "to",
                "those",
                "classified",
                "by",
                "instillation",
                "abortion",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    12
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    3,
                    6,
                    8
                ],
                [],
                [
                    9
                ],
                [
                    12
                ],
                [
                    11
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    15
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_438_3561b914-5be2-47c0-afb1-cd2c20a56fc4",
        "question_text": "How many yards was John Kasay's shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  John Kasay ;return the  shortest of #1",
        "program": [
            "SELECT['yards of field goals of John Kasay']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of John Kasay"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of John Kasay)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "John",
                "Kasay",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1441_1b225ced-be3a-421f-bf30-17b2366da2c9",
        "question_text": "how many catches did marshall get?",
        "split": "train",
        "decomposition": "return catches that marshall did get ;return number of  #1",
        "program": [
            "SELECT['catches that marshall did get']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "catches that marshall did get"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(catches that marshall did get)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(catches that marshall did get)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "catches",
                "did",
                "marshall",
                "get",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1859_0521a1e3-700b-4dd7-ae27-1581488a20a2",
        "question_text": "Who scored the longest rushing touchdown?",
        "split": "train",
        "decomposition": "return the  longest rushing touchdown ;return who  scored #1",
        "program": [
            "SELECT['the longest rushing touchdown']",
            "PROJECT['who scored #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "SELECT",
                "the longest rushing touchdown"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the longest rushing touchdown)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the longest rushing touchdown)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "longest",
                "rushing",
                "touchdown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_422_e14d6b1f-67ad-4a87-9172-b506d77b985c",
        "question_text": "How many more total yards did the Giants have than the Redskins?",
        "split": "train",
        "decomposition": "return yards of the  Giants ;return yards of the  Redskins ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of the Giants']",
            "SELECT['yards of the Redskins']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the Giants"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of the Redskins"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Giants)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Redskins)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Giants)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the Redskins)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "total",
                "yards",
                "did",
                "the",
                "Giants",
                "have",
                "than",
                "the",
                "Redskins",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    7,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_2191_f19dd4b6-3063-48c1-adb8-739df0bdba4f",
        "question_text": "How many yards longer was Dan Carpenter's longest field goal than his shortest?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Dan Carpenter ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Dan Carpenter']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Dan Carpenter"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Dan Carpenter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Dan Carpenter)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    7,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    11
                ],
                [
                    5,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Dan",
                "Carpenter",
                "'s",
                "longest",
                "field",
                "goal",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [],
                [
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1319_953acb31-5d29-41db-849d-09f9c5710007",
        "question_text": "What event happened first, the Pachenga Monastery being raided by the Swedes, or the siege of Oreshek?",
        "split": "train",
        "decomposition": "return when  the Pachenga Monastery being raided by the   Swedes happened ;return when  the siege of Oreshek happened ;return which  happened first of #1 , #2",
        "program": [
            "SELECT['when the Pachenga Monastery being raided by the Swedes happened']",
            "SELECT['when the siege of Oreshek happened']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when the Pachenga Monastery being raided by the Swedes happened"
            ],
            [
                "SELECT",
                "when the siege of Oreshek happened"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Pachenga Monastery being raided by the Swedes happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the siege of Oreshek happened)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Pachenga Monastery being raided by the Swedes happened)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the siege of Oreshek happened)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    8,
                    13,
                    14
                ],
                [
                    5,
                    7,
                    9,
                    11
                ],
                [
                    10
                ],
                [
                    12,
                    15,
                    16,
                    17
                ],
                [
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "first",
                ",",
                "the",
                "Pachenga",
                "Monastery",
                "being",
                "raided",
                "by",
                "the",
                "Swedes",
                ",",
                "or",
                "the",
                "siege",
                "of",
                "Oreshek",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    13
                ],
                [
                    6
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    10
                ],
                [],
                [],
                [
                    12,
                    14,
                    16
                ],
                [
                    15,
                    17
                ],
                [
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    13,
                    14
                ],
                [
                    1,
                    2,
                    3,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12,
                    16
                ],
                [],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    18
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    18
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2640_4f05a336-ee7a-45d5-a8b2-e447d8d91fa3",
        "question_text": "How many yards was the shortest TD of the game?",
        "split": "train",
        "decomposition": "return yards of TDS of  the  game ;return the  shortest of #1",
        "program": [
            "SELECT['yards of TDS of the game']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of TDS of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of TDS of the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TDS of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "TD",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1829_1707acb3-8799-4fdc-bef0-d233a9ffffed",
        "question_text": "Who threw more touchdown passes, Kyle Orton or Matt Hasselbeck?",
        "split": "dev",
        "decomposition": "return touchdown passes that Kyle Orton threw ;return touchdown passes that Matt Hasselbeck threw ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes that Kyle Orton threw']",
            "SELECT['touchdown passes that Matt Hasselbeck threw']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Kyle Orton threw"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes that Matt Hasselbeck threw"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Kyle Orton threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Matt Hasselbeck threw)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Kyle Orton threw)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes that Matt Hasselbeck threw)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Kyle",
                "Orton",
                "or",
                "Matt",
                "Hasselbeck",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1891_469c4263-2178-49a9-8b33-892ad7771c5b",
        "question_text": "What was the longest field goal Kaeding made?",
        "split": "train",
        "decomposition": "return field goals that Kaeding made ;return the  longest of #1",
        "program": [
            "SELECT['field goals that Kaeding made']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "field goals that Kaeding made"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Kaeding made)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Kaeding made)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    2,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "longest",
                "field",
                "goal",
                "Kaeding",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [
                    2
                ],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    2,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1456_43297e2b-a90e-4011-beca-ec20d02a7407",
        "question_text": "How many years after the uprising in 1536 where many natives were killed did Archaeologists find their remains near Lima?",
        "split": "dev",
        "decomposition": "return year of the  uprising of  1536 where many  natives were killed ;return year Archaeologists did find their remains near Lima ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of the uprising of 1536 where many natives were killed']",
            "SELECT['year Archaeologists did find their remains near Lima']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the uprising of 1536 where many natives were killed"
            ],
            [
                "SELECT",
                "year Archaeologists did find their remains near Lima"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the uprising of 1536 where many natives were killed)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year Archaeologists did find their remains near Lima)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the uprising of 1536 where many natives were killed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year Archaeologists did find their remains near Lima)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    15,
                    16,
                    17
                ],
                [
                    18,
                    19,
                    20
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "uprising",
                "in",
                "1536",
                "where",
                "many",
                "natives",
                "were",
                "killed",
                "did",
                "Archaeologists",
                "find",
                "their",
                "remains",
                "near",
                "Lima",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    8,
                    12
                ],
                [
                    7,
                    10
                ],
                [
                    9,
                    11,
                    13
                ],
                [
                    14
                ],
                [
                    16
                ],
                [
                    15,
                    17,
                    18,
                    19
                ],
                [
                    20
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    9
                ],
                [
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    8,
                    10
                ],
                [
                    12
                ],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16,
                    17,
                    18
                ],
                [
                    19,
                    20
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    12
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    19
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    19
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    16,
                    19
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    19
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    20,
                    20
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_548_a18d5d6a-64e9-406e-b76b-fa1571805517",
        "question_text": "How many 35 yard field goals did Nugent kick?",
        "split": "train",
        "decomposition": "return field goals of  Nugent ;return #1 that are  35 yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Nugent']",
            "FILTER['#1', 'that are 35 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Nugent"
                ],
                "that are 35 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nugent)"
                ],
                "GET_QUESTION_SPAN(that are 35 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Nugent)"
                ],
                "GET_QUESTION_NUMBER(35)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "35",
                "yard",
                "field",
                "goals",
                "did",
                "Nugent",
                "kick",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    2,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_428_d7055557-892e-43a0-ae26-7eba3961e7f4",
        "question_text": "How many of the passes that Campbell thew were not caught?",
        "split": "train",
        "decomposition": "return the  passes that Campbell thew ;return #1 that were not  caught ;return number of  #1",
        "program": [
            "SELECT['the passes that Campbell thew']",
            "FILTER['#1', 'that were not caught']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "the passes that Campbell thew"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the passes that Campbell thew)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the passes that Campbell thew)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    5,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "passes",
                "that",
                "Campbell",
                "thew",
                "were",
                "not",
                "caught",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1219_454f9ff9-c396-495a-8db4-75abb34a630c",
        "question_text": "How many more yards of kicked field goals did Sebastian Janikowski have compared to Nate Kaeding?",
        "split": "train",
        "decomposition": "return yards of kicked field goals of  Sebastian Janikowski ;return yards of kicked field goals of  Nate Kaeding ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of kicked field goals of Sebastian Janikowski']",
            "SELECT['yards of kicked field goals of Nate Kaeding']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of kicked field goals of Sebastian Janikowski"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of kicked field goals of Nate Kaeding"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicked field goals of Sebastian Janikowski)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicked field goals of Nate Kaeding)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicked field goals of Sebastian Janikowski)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of kicked field goals of Nate Kaeding)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    12
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5,
                    9
                ],
                [
                    10
                ],
                [
                    8,
                    11
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "kicked",
                "field",
                "goals",
                "did",
                "Sebastian",
                "Janikowski",
                "have",
                "compared",
                "to",
                "Nate",
                "Kaeding",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    14
                ],
                [
                    13
                ],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    6
                ],
                [
                    3,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9,
                    10,
                    11,
                    12
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1117_05e993fb-e781-49ca-aec9-80e4be717200",
        "question_text": "How many internees survived through the closing of the camps in September, 1933?",
        "split": "train",
        "decomposition": "return closing of the  camps internee 1933 ;return internees that survived through #1 ;return number of  #2",
        "program": [
            "SELECT['closing of the camps internee 1933']",
            "PROJECT['internees that survived through #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "internees that survived through #REF",
                [
                    "SELECT",
                    "closing of the camps internee 1933"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(internees that survived through #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(closing of the camps internee 1933)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(internees that survived through #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(closing of the camps internee 1933)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    9
                ],
                [
                    4,
                    6,
                    7,
                    10,
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "internees",
                "survived",
                "through",
                "the",
                "closing",
                "of",
                "the",
                "camps",
                "in",
                "September",
                ",",
                "1933",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    8,
                    12
                ],
                [
                    10
                ],
                [
                    9,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    11
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    4,
                    6,
                    10,
                    12
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2614_10587148-ebb1-4f19-bb95-2b34330d8084",
        "question_text": "How many more percentage of black people in Newark County than white?",
        "split": "train",
        "decomposition": "return percentage of black people there  are in  Newark County ;return percentage of white people there  are in  Newark County ;return the  difference of #1 and  #2",
        "program": [
            "SELECT['percentage of black people there are in Newark County']",
            "SELECT['percentage of white people there are in Newark County']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of black people there are in Newark County"
            ],
            [
                "SELECT",
                "percentage of white people there are in Newark County"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of black people there are in Newark County)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of white people there are in Newark County)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of black people there are in Newark County)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of white people there are in Newark County)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "percentage",
                "of",
                "black",
                "people",
                "in",
                "Newark",
                "County",
                "than",
                "white",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    5,
                    6,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    11
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2170_467dc327-60ca-41b2-9eb1-945518b72edc",
        "question_text": "How many percent of people were not white-Hispanic?",
        "split": "dev",
        "decomposition": "return percent of people that were white-Hispanic ;return the  difference of 100 percent and  #1",
        "program": [
            "SELECT['percent of people that were white-Hispanic']",
            "PROJECT['the difference of 100 percent and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 percent and #REF",
            [
                "SELECT",
                "percent of people that were white-Hispanic"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 percent and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of people that were white-Hispanic)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of people that were white-Hispanic)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "white",
                "-",
                "Hispanic",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_627_379c0b02-5659-402e-a960-362258ac6120",
        "question_text": "How many field goals of 30 yards or more were kicked?",
        "split": "train",
        "decomposition": "return field goals ;return yards of #1 ;return #1 where #2 is at least 30 ;return number of  #3",
        "program": [
            "SELECT['field goals']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is at least 30']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "field goals"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "field goals"
                    ]
                ],
                "is at least 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is at least 30)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [
                    7,
                    11
                ],
                [
                    6,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "of",
                "30",
                "yards",
                "or",
                "more",
                "were",
                "kicked",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    8
                ],
                [],
                [
                    7
                ],
                [],
                [
                    6,
                    9,
                    10
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    9
                ],
                [
                    4,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [
                    6,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1214_423f44c6-036d-4699-bce1-cd8ff2a70a57",
        "question_text": "Which team kicked the most field goals?",
        "split": "train",
        "decomposition": "return teams ;return field goals of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['field goals of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "kicked",
                "the",
                "most",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_864_7dd84b21-939d-4a2e-b704-90cc947e60e1",
        "question_text": "Which area sent the most volunteers?",
        "split": "train",
        "decomposition": "return areas ;return volunteers sent from  #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['areas']",
            "PROJECT['volunteers sent from #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "areas"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "volunteers sent from #REF",
                    [
                        "SELECT",
                        "areas"
                    ]
                ],
                [
                    "SELECT",
                    "areas"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(areas)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(volunteers sent from #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(areas)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(volunteers sent from #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Which",
                "area",
                "sent",
                "the",
                "most",
                "volunteers",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    4
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1581_fa53858c-f085-4660-b6db-4693e7011017",
        "question_text": "in which quarter both teams did not score ?",
        "split": "train",
        "decomposition": "return quarters ;return #1 where at least one team score ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'where at least one team score']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "where at least one team score"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(where at least one team score)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(where at least one team score)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    6,
                    7
                ],
                [],
                [],
                [
                    0,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "in",
                "which",
                "quarter",
                "both",
                "teams",
                "did",
                "not",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    1,
                    6
                ],
                [],
                [],
                [
                    0,
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [],
                [
                    1,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    0,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2014_f36d79dc-4298-47be-925d-412620ff8ab6",
        "question_text": "Which linguistic minority is larger, Urdu or the Telugu language?",
        "split": "dev",
        "decomposition": "return largeness of linguistic minority Urdu language ;return largeness of linguistic minority Telugu language ;return which is highest of #1 ,  #2",
        "program": [
            "SELECT['largeness of linguistic minority Urdu language']",
            "SELECT['largeness of linguistic minority Telugu language']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "largeness of linguistic minority Urdu language"
            ],
            [
                "SELECT",
                "largeness of linguistic minority Telugu language"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(largeness of linguistic minority Urdu language)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(largeness of linguistic minority Telugu language)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(largeness of linguistic minority Urdu language)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(largeness of linguistic minority Telugu language)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    7,
                    10
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "linguistic",
                "minority",
                "is",
                "larger",
                ",",
                "Urdu",
                "or",
                "the",
                "Telugu",
                "language",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    5,
                    7,
                    10
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1473_ae273bc1-9248-4b76-a16c-2d7a85828d8f",
        "question_text": "What distance was the longest touchdown pass?",
        "split": "train",
        "decomposition": "return the  distances of touchdown passes ;return the  longest of #1",
        "program": [
            "SELECT['the distances of touchdown passes']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "the distances of touchdown passes"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the distances of touchdown passes)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the distances of touchdown passes)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "distance",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1446_3723df2d-f3e7-47c0-bf34-d6b7620ce243",
        "question_text": "How many points was the highest margin of victory in any of the games?",
        "split": "train",
        "decomposition": "return the  margins of victory in  the games in points ;return the  highest of #1",
        "program": [
            "SELECT['the margins of victory in the games in points']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "the margins of victory in the games in points"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the margins of victory in the games in points)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the margins of victory in the games in points)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    13
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    4,
                    7,
                    9,
                    11,
                    12
                ],
                [
                    8,
                    10,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "was",
                "the",
                "highest",
                "margin",
                "of",
                "victory",
                "in",
                "any",
                "of",
                "the",
                "games",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    13
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    6,
                    9,
                    10,
                    11
                ],
                [
                    8
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    13
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    7,
                    9,
                    11
                ],
                [],
                [
                    6,
                    8,
                    10,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2146_5ed50774-6c73-497c-9d37-68ce6b5f6842",
        "question_text": "Which was the second smallest age group?",
        "split": "train",
        "decomposition": "return age groups ;return the second smallest of #1",
        "program": [
            "SELECT['age groups']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "age groups"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(age groups)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    6
                ],
                [
                    0,
                    2,
                    5
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "was",
                "the",
                "second",
                "smallest",
                "age",
                "group",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    2
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    5,
                    6
                ],
                [
                    1,
                    3
                ],
                [
                    4
                ],
                [
                    2
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2176_0bdc1504-ddda-4dfb-8baa-4fcd76657056",
        "question_text": "Approximately how many more people live in Bangkok in 2018 compared to 2010?",
        "split": "dev",
        "decomposition": "return people who  live in  Bangkok in 2018 ;return people who  live in  Bangkok in 2010 ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['people who live in Bangkok in 2018']",
            "SELECT['people who live in Bangkok in 2010']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people who live in Bangkok in 2018"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people who live in Bangkok in 2010"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who live in Bangkok in 2018)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who live in Bangkok in 2010)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who live in Bangkok in 2018)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people who live in Bangkok in 2010)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    3,
                    4
                ],
                [
                    0,
                    1,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    8
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Approximately",
                "how",
                "many",
                "more",
                "people",
                "live",
                "in",
                "Bangkok",
                "in",
                "2018",
                "compared",
                "to",
                "2010",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2,
                    3
                ],
                [
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [
                    7,
                    9
                ],
                [],
                [],
                [
                    10,
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1027_43d9e3e7-51e0-4dfa-82dc-1317997c1fb4",
        "question_text": "For how many years was the Mongolian People's Republic a satellite state of the Soviet Union?",
        "split": "train",
        "decomposition": "return when  was  the Mongolian People 's Republic a  satellite state of the  Soviet Union ;return the years of #1 ;return the number of #2",
        "program": [
            "SELECT[\"when was the Mongolian People 's Republic a satellite state of the Soviet Union\"]",
            "PROJECT['the years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "the years of #REF",
                [
                    "SELECT",
                    "when was the Mongolian People 's Republic a satellite state of the Soviet Union"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the Mongolian People 's Republic a satellite state of the Soviet Union)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when was the Mongolian People 's Republic a satellite state of the Soviet Union)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    7,
                    8,
                    15
                ],
                [
                    0,
                    3,
                    4,
                    5,
                    6,
                    10,
                    14
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "For",
                "how",
                "many",
                "years",
                "was",
                "the",
                "Mongolian",
                "People",
                "'s",
                "Republic",
                "a",
                "satellite",
                "state",
                "of",
                "the",
                "Soviet",
                "Union",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    8
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [
                    9
                ],
                [
                    15,
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    7,
                    8,
                    15
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5,
                    10,
                    13,
                    14
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    9
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    16
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2287_a77b5779-1535-4303-8bd8-ddc3307c0e1a",
        "question_text": "How many 40+ yard field goals did Scobee make?",
        "split": "train",
        "decomposition": "return 40+ yard field goals ;return #1 that Scobee make ;return number of  #2",
        "program": [
            "SELECT['40+ yard field goals']",
            "FILTER['#1', 'that Scobee make']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "40+ yard field goals"
                ],
                "that Scobee make"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(40+ yard field goals)"
                ],
                "GET_QUESTION_SPAN(that Scobee make)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(40+ yard field goals)"
                ],
                "GET_QUESTION_SPAN(that Scobee make)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "40",
                "+",
                "yard",
                "field",
                "goals",
                "did",
                "Scobee",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1579_78c5304f-83ef-4ec8-bd91-7a6b7e785fda",
        "question_text": "How many years was the time span where Vest Recklinghausen was used as collateral?",
        "split": "train",
        "decomposition": "return years when  Vest Recklinghausen was  used as collateral ;return the  number of  #1",
        "program": [
            "SELECT['years when Vest Recklinghausen was used as collateral']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years when Vest Recklinghausen was used as collateral"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when Vest Recklinghausen was used as collateral)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years when Vest Recklinghausen was used as collateral)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    10,
                    12
                ],
                [
                    4,
                    8,
                    9,
                    11
                ],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "time",
                "span",
                "where",
                "Vest",
                "Recklinghausen",
                "was",
                "used",
                "as",
                "collateral",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    10
                ],
                [
                    4,
                    8,
                    11
                ],
                [
                    9,
                    12
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    8,
                    12
                ],
                [
                    4,
                    9,
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1748_89f3558f-3dd2-41a7-9f0a-65846acf01f1",
        "question_text": "Which city from the census is smaller: Ungheni or Cahul?",
        "split": "dev",
        "decomposition": "return size of Ungheni in  the  census ;return size of Cahul in  the  census ;return which is smaller of #1 ,  #2",
        "program": [
            "SELECT['size of Ungheni in the census']",
            "SELECT['size of Cahul in the census']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "size of Ungheni in the census"
            ],
            [
                "SELECT",
                "size of Cahul in the census"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of Ungheni in the census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of Cahul in the census)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of Ungheni in the census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of Cahul in the census)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    3
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "city",
                "from",
                "the",
                "census",
                "is",
                "smaller",
                ":",
                "Ungheni",
                "or",
                "Cahul",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2497_679a15df-49e3-44af-a3fe-1cd3982d9556",
        "question_text": "Approximately how many years did the churches built in 1909 survive?",
        "split": "train",
        "decomposition": "return the churches built in  1909 ;return the years that #1 survive ;return the number of  #2",
        "program": [
            "SELECT['the churches built in 1909']",
            "PROJECT['the years that #REF survive', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "the years that #REF survive",
                [
                    "SELECT",
                    "the churches built in 1909"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years that #REF survive)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the churches built in 1909)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the years that #REF survive)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the churches built in 1909)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    4,
                    7,
                    8
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Approximately",
                "how",
                "many",
                "years",
                "did",
                "the",
                "churches",
                "built",
                "in",
                "1909",
                "survive",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1302_1e0c29d8-45ae-4320-8d99-35f3838a3edc",
        "question_text": "What war started last: Russo-Crimean War or Smolensk War?",
        "split": "train",
        "decomposition": "return when  did the  Russo-Crimean War start ;return when  did the  Smolensk War start ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when did the Russo-Crimean War start']",
            "SELECT['when did the Smolensk War start']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did the Russo-Crimean War start"
            ],
            [
                "SELECT",
                "when did the Smolensk War start"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russo-Crimean War start)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Smolensk War start)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Russo-Crimean War start)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did the Smolensk War start)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    5,
                    9
                ],
                [
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    7
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "war",
                "started",
                "last",
                ":",
                "Russo",
                "-",
                "Crimean",
                "War",
                "or",
                "Smolensk",
                "War",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    1,
                    6
                ],
                [],
                [],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    9
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    1,
                    7,
                    8
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3655_bd2cd85c-e47f-484e-a89b-fb32d6dc86be",
        "question_text": "How many years did Pianosa host convicts?",
        "split": "train",
        "decomposition": "return Pianosa host convicts ;return years of #1 ;return number of  #2",
        "program": [
            "SELECT['Pianosa host convicts']",
            "PROJECT['years of #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years of #REF",
                [
                    "SELECT",
                    "Pianosa host convicts"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Pianosa host convicts)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Pianosa host convicts)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "Pianosa",
                "host",
                "convicts",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3001_2fd16ffe-75d0-4767-adef-2ef05178cfb5",
        "question_text": "How many more copies of the Hobbit sold in 2002 and 2003 than 2000 and 2001?",
        "split": "train",
        "decomposition": "return copies of the  Hobbit that sold in  2002 ;return copies of the  Hobbit that sold in  2003 ;return copies of the  Hobbit that sold in  2000 ;return copies of the  Hobbit that sold in  2001 ;return sum of #1 and  #2 ;return sum of #3 and  #4 ;return difference of #5 and  #6",
        "program": [
            "SELECT['copies of the Hobbit that sold in 2002']",
            "SELECT['copies of the Hobbit that sold in 2003']",
            "SELECT['copies of the Hobbit that sold in 2000']",
            "SELECT['copies of the Hobbit that sold in 2001']",
            "ARITHMETIC['sum', '#1', '#2']",
            "ARITHMETIC['sum', '#3', '#4']",
            "ARITHMETIC['difference', '#5', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "copies of the Hobbit that sold in 2002"
                ],
                [
                    "SELECT",
                    "copies of the Hobbit that sold in 2003"
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT",
                    "copies of the Hobbit that sold in 2000"
                ],
                [
                    "SELECT",
                    "copies of the Hobbit that sold in 2001"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2002)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2003)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2000)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2001)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2002)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2003)"
                    ]
                ]
            ],
            [
                "ARITHMETIC_sum",
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2000)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(copies of the Hobbit that sold in 2001)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "select",
            "arithmetic",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10,
                    14
                ],
                [
                    12
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "copies",
                "of",
                "the",
                "Hobbit",
                "sold",
                "in",
                "2002",
                "and",
                "2003",
                "than",
                "2000",
                "and",
                "2001",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10,
                    14
                ],
                [],
                [
                    12
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2291_cf5c9c8e-6700-4125-8265-867c46ba8977",
        "question_text": "Which player caught the ball to tie the game in the third quarter?",
        "split": "train",
        "decomposition": "return the  players that caught the   ball to tie the game ;return #1 in  the  third quarter",
        "program": [
            "SELECT['the players that caught the ball to tie the game']",
            "FILTER['#1', 'in the third quarter']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "the players that caught the ball to tie the game"
            ],
            "in the third quarter"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the players that caught the ball to tie the game)"
            ],
            "GET_QUESTION_SPAN(in the third quarter)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the players that caught the ball to tie the game)"
            ],
            "GET_QUESTION_SPAN(in the third quarter)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6,
                    9,
                    11,
                    12
                ],
                [
                    3,
                    5,
                    7,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "caught",
                "the",
                "ball",
                "to",
                "tie",
                "the",
                "game",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    5,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    8
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_253_d7dfc7c5-720a-4013-840c-10a32cffd2f4",
        "question_text": "How many years was the 841st Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment?",
        "split": "train",
        "decomposition": "return year of the  841st  Meria airport ;return year when  the  841st  Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment ;return the  difference of #2 and  #1",
        "program": [
            "SELECT['year of the 841st Meria airport']",
            "SELECT['year when the 841st Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year when the 841st Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment"
            ],
            [
                "SELECT",
                "year of the 841st Meria airport"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year when the 841st Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the 841st Meria airport)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year when the 841st Meria airport become 841st independent Guards Anti Submarine Helicopter Regiment)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the 841st Meria airport)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    8,
                    9,
                    11
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    7
                ],
                [
                    10,
                    12,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "was",
                "the",
                "841st",
                "Meria",
                "airport",
                "become",
                "841st",
                "independent",
                "Guards",
                "Anti",
                "Submarine",
                "Helicopter",
                "Regiment",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9,
                    10,
                    11,
                    13,
                    14
                ],
                [],
                [
                    12,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    8,
                    9
                ],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    15
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    15
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    15
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2014_f9e3115a-5514-4b99-b81f-1d476f03c5c1",
        "question_text": "Which player had more total yards, Hauschka or Janikowski?",
        "split": "train",
        "decomposition": "return yards of Hauschka ;return yards of Janikowski ;return the  sum of #1 ;return the  sum of #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['yards of Hauschka']",
            "SELECT['yards of Janikowski']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Hauschka"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of Janikowski"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Hauschka)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Janikowski)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Hauschka)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Janikowski)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "more",
                "total",
                "yards",
                ",",
                "Hauschka",
                "or",
                "Janikowski",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_545_6dba2abb-8261-4ae5-a950-eca736a4b92d",
        "question_text": "Which player scored more field goals, Matt Stover or Phil Dawson?",
        "split": "train",
        "decomposition": "return field goals of Matt Stover ;return field goals of Phil Dawson ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['field goals of Matt Stover']",
            "SELECT['field goals of Phil Dawson']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Matt Stover"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Phil Dawson"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Matt Stover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Phil Dawson)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Matt Stover)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Phil Dawson)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Matt",
                "Stover",
                "or",
                "Phil",
                "Dawson",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    11
                ],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10,
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2654_57b12d49-570d-4281-8ce8-d3c46ec2c506",
        "question_text": "How many more yards of field goals kicked in the first half by Shaun Suisham were there compared to field goals kicked by David Akers in the first half?",
        "split": "train",
        "decomposition": "return yards of field goals kicked by Shaun Suisham in  the  first half  ;return yards of field goals kicked by David Akers in  the  first half  ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals kicked by Shaun Suisham in the first half']",
            "SELECT['yards of field goals kicked by David Akers in the first half']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals kicked by Shaun Suisham in the first half"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals kicked by David Akers in the first half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked by Shaun Suisham in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals kicked by David Akers in the first half)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals kicked by Shaun Suisham)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals kicked by David Akers)"
                    ],
                    "GET_QUESTION_SPAN(in the first half)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    16,
                    17
                ],
                [
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ],
                [],
                [
                    13,
                    14,
                    19,
                    23,
                    24
                ],
                [
                    20,
                    21,
                    25,
                    27,
                    28
                ],
                [],
                [
                    22
                ],
                [
                    29
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "field",
                "goals",
                "kicked",
                "in",
                "the",
                "first",
                "half",
                "by",
                "Shaun",
                "Suisham",
                "were",
                "there",
                "compared",
                "to",
                "field",
                "goals",
                "kicked",
                "by",
                "David",
                "Akers",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    19,
                    20,
                    21,
                    28
                ],
                [],
                [
                    23
                ],
                [
                    22,
                    24
                ],
                [],
                [
                    27
                ],
                [],
                [],
                [
                    29
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    16
                ],
                [],
                [
                    3,
                    13
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [
                    15,
                    17
                ],
                [
                    14,
                    23,
                    24
                ],
                [
                    19,
                    20
                ],
                [
                    21,
                    25,
                    27,
                    28
                ],
                [],
                [],
                [],
                [
                    29
                ]
            ],
            "question_spans": [
                [
                    0,
                    14
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    28
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    28
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    28
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    28
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    28
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    24
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    24
                ],
                [
                    23,
                    23
                ],
                [
                    24,
                    24
                ],
                [
                    25,
                    25
                ],
                [
                    25,
                    28
                ],
                [
                    26,
                    28
                ],
                [
                    26,
                    26
                ],
                [
                    27,
                    27
                ],
                [
                    28,
                    28
                ],
                [
                    29,
                    29
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1904_046827e4-75c8-4573-865a-cd429b63eeef",
        "question_text": "For how many years was the ADF reduced in size, until it began growing again?",
        "split": "train",
        "decomposition": "return years when  the  ADF was  reduced in  size ;return the  year when  the ADF began growing again ;return the  lowest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['years when the ADF was reduced in size']",
            "SELECT['the year when the ADF began growing again']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "the year when the ADF began growing again"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "years when the ADF was reduced in size"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the year when the ADF began growing again)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(years when the ADF was reduced in size)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the year when the ADF began growing again)"
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(years when the ADF was reduced in size)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    11,
                    12,
                    13
                ],
                [
                    1,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    4
                ],
                [
                    10,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "For",
                "how",
                "many",
                "years",
                "was",
                "the",
                "ADF",
                "reduced",
                "in",
                "size",
                ",",
                "until",
                "it",
                "began",
                "growing",
                "again",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    12,
                    13
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    4
                ],
                [],
                [],
                [
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2375_dfccda2a-6b4c-4bfd-9ad1-ebb719c43e45",
        "question_text": "Which player threw more touchdown passes, Carson Palmer or Peyton Manning ?",
        "split": "train",
        "decomposition": "return touchdown passes of Carson Palmer ;return touchdown passes of Peyton Manning ;return the  number of  #1 ;return the  number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes of Carson Palmer']",
            "SELECT['touchdown passes of Peyton Manning']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Carson Palmer"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Peyton Manning"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Carson Palmer)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Peyton Manning)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Carson Palmer)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Peyton Manning)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Carson",
                "Palmer",
                "or",
                "Peyton",
                "Manning",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4
                ],
                [],
                [],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_558_d8ca6bda-d5b7-44c0-91d7-22428ff4734f",
        "question_text": "How many more yards of touchdown passes did Tony Romo make than Donovan McNabb?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Tony Romo ;return yards of touchdown passes of  Donovan McNabb ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of touchdown passes of Tony Romo']",
            "SELECT['yards of touchdown passes of Donovan McNabb']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown passes of Tony Romo"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of touchdown passes of Donovan McNabb"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Tony Romo)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Tony Romo)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes of Donovan McNabb)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    11,
                    12
                ],
                [
                    3,
                    6
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "touchdown",
                "passes",
                "did",
                "Tony",
                "Romo",
                "make",
                "than",
                "Donovan",
                "McNabb",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    12
                ],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    11,
                    12,
                    13
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1104_5d0dd9f7-9875-494a-971f-194ed12d280f",
        "question_text": "How many years after the Battle of Torches did the Ottomans head towards the eventual victory?",
        "split": "train",
        "decomposition": "return year of the  Battle of  Torches ;return year the  Ottomans did head towards the   eventual victory ;return difference of #1 and  #2",
        "program": [
            "SELECT['year of the Battle of Torches']",
            "SELECT['year the Ottomans did head towards the eventual victory']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year of the Battle of Torches"
            ],
            [
                "SELECT",
                "year the Ottomans did head towards the eventual victory"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year of the Battle of Torches)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year the Ottomans did head towards the eventual victory)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year of the Battle of Torches)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year the Ottomans did head towards the eventual victory)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [
                    4,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    10,
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "the",
                "Battle",
                "of",
                "Torches",
                "did",
                "the",
                "Ottomans",
                "head",
                "towards",
                "the",
                "eventual",
                "victory",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    11
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    12,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    15
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1196_16080b37-4cf0-4067-a5f9-640a5620be88",
        "question_text": "Which wave had fewer soldiers total, the first or second?",
        "split": "dev",
        "decomposition": "return soldiers in  the  first wave ;return soldiers in  the  second wave ;return number of  #1 ;return number of  #2 ;return which was  lowest of #3 ,  #4",
        "program": [
            "SELECT['soldiers in the first wave']",
            "SELECT['soldiers in the second wave']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "soldiers in the first wave"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "soldiers in the second wave"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers in the first wave)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers in the second wave)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers in the first wave)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(soldiers in the second wave)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    9
                ],
                [
                    5
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "wave",
                "had",
                "fewer",
                "soldiers",
                "total",
                ",",
                "the",
                "first",
                "or",
                "second",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2,
                    6,
                    8,
                    9
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1431_0e833792-8a14-400b-837a-e1d42599168e",
        "question_text": "How many more yards was the longest touchdown run compared with the shortest?",
        "split": "train",
        "decomposition": "return yards of the  longest touchdown ;return yards of the  shortest touchdown ;return difference of #1 and  #2",
        "program": [
            "SELECT['yards of the longest touchdown']",
            "SELECT['yards of the shortest touchdown']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of the longest touchdown"
            ],
            [
                "SELECT",
                "yards of the shortest touchdown"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the longest touchdown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the shortest touchdown)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the longest touchdown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of the shortest touchdown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    9,
                    12
                ],
                [
                    11
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "run",
                "compared",
                "with",
                "the",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    12
                ],
                [],
                [
                    10
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1316_f548401d-a665-42b2-b20f-2ee88cc01872",
        "question_text": "What happened first: kingdom of Sweden invading Poland or Vyhovsky defeating Trubetskoy's army?",
        "split": "dev",
        "decomposition": "return when  was  the  kingdom of Sweden invading Poland ;return when  was  Vyhovsky defeating Trubetskoy 's army ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the kingdom of Sweden invading Poland']",
            "SELECT[\"when was Vyhovsky defeating Trubetskoy 's army\"]",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the kingdom of Sweden invading Poland"
            ],
            [
                "SELECT",
                "when was Vyhovsky defeating Trubetskoy 's army"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the kingdom of Sweden invading Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Vyhovsky defeating Trubetskoy 's army)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the kingdom of Sweden invading Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Vyhovsky defeating Trubetskoy 's army)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    9,
                    11
                ],
                [
                    5,
                    7,
                    8
                ],
                [
                    4,
                    10
                ],
                [
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "kingdom",
                "of",
                "Sweden",
                "invading",
                "Poland",
                "or",
                "Vyhovsky",
                "defeating",
                "Trubetskoy",
                "'s",
                "army",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    4,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11,
                    14
                ],
                [
                    13
                ],
                [
                    12
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    9,
                    14
                ],
                [
                    1,
                    2,
                    6,
                    11
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    4,
                    10
                ],
                [
                    13
                ],
                [
                    12
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1216_2e82b6a6-8afa-4c30-8bf7-8bd101f9e16e",
        "question_text": "Which team scored more touchdowns in the fourth quarter?",
        "split": "dev",
        "decomposition": "return teams ;return touchdowns that #1 scored in  the  fourth quarter ;return the  number of  #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['touchdowns that #REF scored in the fourth quarter', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns that #REF scored in the fourth quarter",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns that #REF scored in the fourth quarter)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns that #REF scored in the fourth quarter)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4,
                    5,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "more",
                "touchdowns",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    4,
                    8
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1675_e446f30a-36a7-42d1-95cb-67caae833e73",
        "question_text": "How many more million people died in the 1918 flu pandemic compared to how many million Russians contracted malaria in 1923?",
        "split": "train",
        "decomposition": "return people that died in  the  1918 flu pandemic ;return Russians that contracted malaria in  1923 ;return the  number of  #1 in  million  ;return the  number of  #2 in  million  ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['people that died in the 1918 flu pandemic']",
            "SELECT['Russians that contracted malaria in 1923']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people that died in the 1918 flu pandemic"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Russians that contracted malaria in 1923"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died in the 1918 flu pandemic)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russians that contracted malaria in 1923)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people that died in the 1918 flu pandemic)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russians that contracted malaria in 1923)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    14,
                    15
                ],
                [
                    9,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    11,
                    12,
                    13,
                    17
                ],
                [
                    16,
                    18,
                    19
                ],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "million",
                "people",
                "died",
                "in",
                "the",
                "1918",
                "flu",
                "pandemic",
                "compared",
                "to",
                "how",
                "many",
                "million",
                "Russians",
                "contracted",
                "malaria",
                "in",
                "1923",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    11,
                    12,
                    14,
                    15
                ],
                [],
                [
                    16
                ],
                [
                    19
                ],
                [
                    17,
                    18
                ],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    13,
                    14
                ],
                [],
                [
                    2,
                    3,
                    4,
                    15
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    12
                ],
                [
                    16,
                    17
                ],
                [
                    18
                ],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    20
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    20
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    20
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    13,
                    20
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1893_2da16779-2db7-4adf-96f1-82fe9edfa2d2",
        "question_text": "Which age group is smaller: 25 to 44 or under the age of 18?",
        "split": "train",
        "decomposition": "return size of the  25 to 44 age  group ;return size of the  under the age  of  18 age group ;return which is smaller of #1 ,  #2",
        "program": [
            "SELECT['size of the 25 to 44 age group']",
            "SELECT['size of the under the age of 18 age group']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "size of the 25 to 44 age group"
            ],
            [
                "SELECT",
                "size of the under the age of 18 age group"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 25 to 44 age group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the under the age of 18 age group)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the 25 to 44 age group)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(size of the under the age of 18 age group)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    12
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    10,
                    11,
                    13
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "age",
                "group",
                "is",
                "smaller",
                ":",
                "25",
                "to",
                "44",
                "or",
                "under",
                "the",
                "age",
                "of",
                "18",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    12
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    12,
                    14
                ],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    14
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1757_c0c29b84-f776-4d5f-8aa9-33006a775856",
        "question_text": "Which quarter did Carney score his shortest field goal?",
        "split": "train",
        "decomposition": "return field goals of Carney ;return the  shortest of #1 ;return in  which quarter was  #2",
        "program": [
            "SELECT['field goals of Carney']",
            "AGGREGATE['min', '#1']",
            "PROJECT['in which quarter was #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "in which quarter was #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals of Carney"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carney)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(in which quarter was #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carney)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "quarter",
                "did",
                "Carney",
                "score",
                "his",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [],
                [],
                [
                    1
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_648_d3325f8d-c413-49b7-a215-62856eee8808",
        "question_text": "What battle started last: Battle of Vienna or second Battle of Moh\u00e1cs?",
        "split": "train",
        "decomposition": "return when  was  the Battle  of Vienna started ;return when  was  the second Battle  of Moh\u00e1cs started ;return which  was  last of #1 , #2",
        "program": [
            "SELECT['when was the Battle of Vienna started']",
            "SELECT['when was the second Battle of Moh\\xe1cs started']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the Battle of Vienna started"
            ],
            [
                "SELECT",
                "when was the second Battle of Moh\u00e1cs started"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Vienna started)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the second Battle of Moh\u00e1cs started)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Battle of Vienna started)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the second Battle of Moh\u00e1cs started)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8,
                    9,
                    10
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "battle",
                "started",
                "last",
                ":",
                "Battle",
                "of",
                "Vienna",
                "or",
                "second",
                "Battle",
                "of",
                "Moh\u00e1cs",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [
                    8,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    10
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1410_fc37e2f8-35b0-4421-8c31-7e0af19e8e66",
        "question_text": "How many more women and children were captured than men?",
        "split": "train",
        "decomposition": "return women that were captured ;return children that were captured ;return men that were captured ;return the  number of  #1 ;return the  number of  #2 ;return the  number of  #3 ;return the  sum of #4 and  #5 ;return the  difference of #7 and  #6",
        "program": [
            "SELECT['women that were captured']",
            "SELECT['children that were captured']",
            "SELECT['men that were captured']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#4', '#5']",
            "ARITHMETIC['difference', '#7', '#6']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "women that were captured"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "children that were captured"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "men that were captured"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(women that were captured)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(children that were captured)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that were captured)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "ARITHMETIC_sum",
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(women that were captured)"
                    ]
                ],
                [
                    "AGGREGATE_count",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(children that were captured)"
                    ]
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(men that were captured)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "select",
            "aggregate",
            "aggregate",
            "aggregate",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    6,
                    9
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "women",
                "and",
                "children",
                "were",
                "captured",
                "than",
                "men",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    9
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1084_467166f2-de71-4eef-b982-9e94283cb83d",
        "question_text": "How many were the 3500 local peasants forced to help?",
        "split": "train",
        "decomposition": "return who  the  3500 local peasants were forced to help ;return the  number of  #1",
        "program": [
            "SELECT['who the 3500 local peasants were forced to help']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "who the 3500 local peasants were forced to help"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who the 3500 local peasants were forced to help)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who the 3500 local peasants were forced to help)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    9
                ],
                [
                    5,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "were",
                "the",
                "3500",
                "local",
                "peasants",
                "forced",
                "to",
                "help",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    7,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_899_54a85589-3ffb-4ef2-ad92-0d93d4d21857",
        "question_text": "How many years did the Shang rule according to the Xia-Shang-Zhou Chronology Project?",
        "split": "train",
        "decomposition": "return years in  which the  Shang rule according to the Xia-Shang-Zhou Chronology Project ;return the  number of  #1",
        "program": [
            "SELECT['years in which the Shang rule according to the Xia-Shang-Zhou Chronology Project']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years in which the Shang rule according to the Xia-Shang-Zhou Chronology Project"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which the Shang rule according to the Xia-Shang-Zhou Chronology Project)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years in which the Shang rule according to the Xia-Shang-Zhou Chronology Project)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    12
                ],
                [
                    4,
                    7,
                    8,
                    9,
                    10,
                    11,
                    13,
                    14
                ],
                [
                    15,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "Shang",
                "rule",
                "according",
                "to",
                "the",
                "Xia",
                "-",
                "Shang",
                "-",
                "Zhou",
                "Chronology",
                "Project",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    12
                ],
                [],
                [
                    7,
                    8,
                    9,
                    10
                ],
                [
                    11,
                    13
                ],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    12
                ],
                [
                    6,
                    10,
                    11,
                    13
                ],
                [
                    4,
                    7,
                    8,
                    9
                ],
                [
                    14,
                    15
                ],
                [
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    8,
                    16
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    16
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2329_e9d5ae16-57f1-4269-b3a3-b28f6573dee8",
        "question_text": "How many passes did Jay Cutler make to Brandon Marshall?",
        "split": "train",
        "decomposition": "return passes that Jay Cutler make ;return #1 that was  to Brandon Marshall ;return number of  #2",
        "program": [
            "SELECT['passes that Jay Cutler make']",
            "FILTER['#1', 'that was to Brandon Marshall']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "passes that Jay Cutler make"
                ],
                "that was to Brandon Marshall"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Jay Cutler make)"
                ],
                "GET_QUESTION_SPAN(that was to Brandon Marshall)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passes that Jay Cutler make)"
                ],
                "GET_QUESTION_SPAN(that was to Brandon Marshall)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5,
                    7
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "passes",
                "did",
                "Jay",
                "Cutler",
                "make",
                "to",
                "Brandon",
                "Marshall",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    5,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1184_17bdcfb1-8ad9-46b5-8a3b-1f9769dfd60a",
        "question_text": "How many yards difference is there between Sebastian Janikowski's longest field goal and his shortest field goal?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Sebastian Janikowski ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Sebastian Janikowski']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Sebastian Janikowski"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Sebastian Janikowski"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Sebastian Janikowski)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    2,
                    9,
                    10
                ],
                [],
                [],
                [
                    13
                ],
                [
                    7,
                    8,
                    11,
                    12,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "difference",
                "is",
                "there",
                "between",
                "Sebastian",
                "Janikowski",
                "'s",
                "longest",
                "field",
                "goal",
                "and",
                "his",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    3,
                    10
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    11,
                    12,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    2,
                    7,
                    8
                ],
                [
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    11,
                    12,
                    14,
                    15,
                    16,
                    17
                ],
                [],
                [],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    17
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    17
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1299_f96f16a9-3320-4fba-9f1c-f85b3fdb25e0",
        "question_text": "How many Volga cities were founded to protect from invasions by the Nogai Horde?",
        "split": "train",
        "decomposition": "return Volga cities that were founded to protect from  invasions by the  Nogai Horde ;return number of  #1",
        "program": [
            "SELECT['Volga cities that were founded to protect from invasions by the Nogai Horde']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "Volga cities that were founded to protect from invasions by the Nogai Horde"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Volga cities that were founded to protect from invasions by the Nogai Horde)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Volga cities that were founded to protect from invasions by the Nogai Horde)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7,
                    9
                ],
                [
                    5,
                    6,
                    8,
                    11,
                    13
                ],
                [
                    10,
                    12,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "Volga",
                "cities",
                "were",
                "founded",
                "to",
                "protect",
                "from",
                "invasions",
                "by",
                "the",
                "Nogai",
                "Horde",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    5,
                    6,
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13,
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3,
                    7,
                    9
                ],
                [
                    5,
                    6,
                    8,
                    11
                ],
                [
                    10,
                    12,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    13
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2109_d1d709d5-9eca-4a11-9493-a5f40a13eacf",
        "question_text": "How many more yards of field goals did Barth make than brown?",
        "split": "train",
        "decomposition": "return yards of field goals of  Barth ;return yards of field goals of  brown ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals of Barth']",
            "SELECT['yards of field goals of brown']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Barth"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of brown"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Barth)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of brown)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Barth)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of brown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [
                    8
                ],
                [
                    6,
                    7,
                    9,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Barth",
                "make",
                "than",
                "brown",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    11
                ],
                [],
                [
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    8,
                    10
                ],
                [
                    7,
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1042_22c82b78-75f9-46a0-a9f8-b070e15b0960",
        "question_text": "How many days did the siege of Herceg Novi last?",
        "split": "dev",
        "decomposition": "return days of the  siege of  Herceg Novi ;return number of  #1",
        "program": [
            "SELECT['days of the siege of Herceg Novi']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "days of the siege of Herceg Novi"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days of the siege of Herceg Novi)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(days of the siege of Herceg Novi)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "did",
                "the",
                "siege",
                "of",
                "Herceg",
                "Novi",
                "last",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    6,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1434_65097a36-6626-4057-b567-09f093d43995",
        "question_text": "In which quarters did Orton and Marshall connect on a touchdown pass?",
        "split": "train",
        "decomposition": "return quarters ;return #1 where Orton and  Marshall connect on a touchdown pass",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'where Orton and Marshall connect on a touchdown pass']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "quarters"
            ],
            "where Orton and Marshall connect on a touchdown pass"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            "GET_QUESTION_SPAN(where Orton and Marshall connect on a touchdown pass)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            "GET_QUESTION_SPAN(where Orton and Marshall connect on a touchdown pass)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    7,
                    8,
                    9
                ],
                [
                    5,
                    6,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "In",
                "which",
                "quarters",
                "did",
                "Orton",
                "and",
                "Marshall",
                "connect",
                "on",
                "a",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    7,
                    8,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1309_4856fcf3-7079-4119-894c-ec3fdcfe51bd",
        "question_text": "How many fewer Russian soldiers remained in Manchuria after the Rebellion as originally were sent?",
        "split": "train",
        "decomposition": "return Russian soldiers that were originally sent to Manchuria ;return Russian soldiers that remained in  Manchuria after the  Rebellion ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #4 and  #3",
        "program": [
            "SELECT['Russian soldiers that were originally sent to Manchuria']",
            "SELECT['Russian soldiers that remained in Manchuria after the Rebellion']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#4', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Russian soldiers that remained in Manchuria after the Rebellion"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Russian soldiers that were originally sent to Manchuria"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian soldiers that remained in Manchuria after the Rebellion)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian soldiers that were originally sent to Manchuria)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian soldiers that remained in Manchuria after the Rebellion)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian soldiers that were originally sent to Manchuria)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    3,
                    5,
                    6,
                    9
                ],
                [
                    10
                ],
                [
                    12,
                    13
                ],
                [
                    11,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fewer",
                "Russian",
                "soldiers",
                "remained",
                "in",
                "Manchuria",
                "after",
                "the",
                "Rebellion",
                "as",
                "originally",
                "were",
                "sent",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [
                    3,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    3,
                    10
                ],
                [],
                [
                    13
                ],
                [
                    12
                ],
                [
                    11,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1926_2460bfcc-ab02-4095-9953-12f578eeeddc",
        "question_text": "How many points did Dirk Nowitzki average in the series?",
        "split": "train",
        "decomposition": "return points of Dirk Nowitzki in  the  series ;return the  average of #1",
        "program": [
            "SELECT['points of Dirk Nowitzki in the series']",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "points of Dirk Nowitzki in the series"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of Dirk Nowitzki in the series)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of Dirk Nowitzki in the series)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    5,
                    6
                ],
                [
                    2,
                    3,
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "Dirk",
                "Nowitzki",
                "average",
                "in",
                "the",
                "series",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    6
                ],
                [
                    3,
                    5
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_510_b391da00-882c-4c3a-9053-829af4cbb804",
        "question_text": "How many 37 yard field goals did Mason Crosby make?",
        "split": "train",
        "decomposition": "return field goals of  Mason Crosby ;return #1 that are  37 yard ;return number of  #2",
        "program": [
            "SELECT['field goals of Mason Crosby']",
            "FILTER['#1', 'that are 37 yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of Mason Crosby"
                ],
                "that are 37 yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mason Crosby)"
                ],
                "GET_QUESTION_SPAN(that are 37 yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Mason Crosby)"
                ],
                "GET_QUESTION_NUMBER(37)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    6
                ],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    10
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "37",
                "yard",
                "field",
                "goals",
                "did",
                "Mason",
                "Crosby",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [
                    4
                ],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    10
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2649_304d0a4a-d950-4683-a5b7-259596a1e587",
        "question_text": "How many more yards of field goals did Suisham have than Folk?",
        "split": "train",
        "decomposition": "return yards of field goals of  Suisham ;return sum of #1 ;return yards of field goals of  Folk ;return sum of #3 ;return difference of #2 and  #4",
        "program": [
            "SELECT['yards of field goals of Suisham']",
            "AGGREGATE['sum', '#1']",
            "SELECT['yards of field goals of Folk']",
            "AGGREGATE['sum', '#3']",
            "ARITHMETIC['difference', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Suisham"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals of Folk"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Folk)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Suisham)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Folk)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    4
                ],
                [],
                [
                    6,
                    7,
                    8,
                    9,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "of",
                "field",
                "goals",
                "did",
                "Suisham",
                "have",
                "than",
                "Folk",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [
                    3,
                    6
                ],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    7,
                    8,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2160_75db64d1-b332-4c06-bc9d-f5604d45349b",
        "question_text": "Which racial group was the second largest in the city?",
        "split": "train",
        "decomposition": "return racial groups in  the  city ;return the  size of #1 ;return #1 where #2 is the  second largest",
        "program": [
            "SELECT['racial groups in the city']",
            "PROJECT['the size of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is the second largest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "racial groups in the city"
            ],
            [
                "PROJECT",
                "the size of #REF",
                [
                    "SELECT",
                    "racial groups in the city"
                ]
            ],
            "is the second largest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups in the city)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(the size of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the second largest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(racial groups in the city)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(the size of #REF)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the second largest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    6,
                    9
                ],
                [],
                [
                    7
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "racial",
                "group",
                "was",
                "the",
                "second",
                "largest",
                "in",
                "the",
                "city",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    3
                ],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    9
                ],
                [],
                [
                    7
                ],
                [
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1896_e9e6cc8f-bcfb-49b9-ad6f-9a4360c3057e",
        "question_text": "What was the second shortest touchdown of the game?",
        "split": "train",
        "decomposition": "return touchdowns of the  game ;return the  second shortest of #1",
        "program": [
            "SELECT['touchdowns of the game']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "touchdowns of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "second",
                "shortest",
                "touchdown",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2456_256a7939-557b-425f-b311-f4e517fcbdd3",
        "question_text": "How many fewer US dollars was the Russian military budget in 2014 than it was be in 2015?",
        "split": "dev",
        "decomposition": "return Russian military budget in  US dollars in 2014 ;return Russian military budget in  US dollars in 2015 ;return difference of #1 and  #2",
        "program": [
            "SELECT['Russian military budget in US dollars in 2014']",
            "SELECT['Russian military budget in US dollars in 2015']",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "Russian military budget in US dollars in 2014"
            ],
            [
                "SELECT",
                "Russian military budget in US dollars in 2015"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian military budget in US dollars in 2014)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian military budget in US dollars in 2015)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian military budget in US dollars in 2014)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(Russian military budget in US dollars in 2015)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12,
                    13,
                    17
                ],
                [
                    14,
                    15,
                    16
                ],
                [
                    18
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fewer",
                "US",
                "dollars",
                "was",
                "the",
                "Russian",
                "military",
                "budget",
                "in",
                "2014",
                "than",
                "it",
                "was",
                "be",
                "in",
                "2015",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [
                    13,
                    14
                ],
                [],
                [
                    15,
                    16
                ],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    5,
                    14
                ],
                [],
                [
                    3
                ],
                [
                    8,
                    9
                ],
                [
                    7
                ],
                [],
                [
                    13
                ],
                [
                    11,
                    12,
                    17
                ],
                [],
                [
                    15
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    4
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    17
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    17
                ],
                [
                    14,
                    17
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_312_07f26f24-6df4-42e8-8a5a-aa899a4f1630",
        "question_text": "How many degrees are there between the highest, and the lowest temperature recorded at the Airport?",
        "split": "train",
        "decomposition": "return the  temperatures recorded at the   Airport ;return highest of #1 ;return lowest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['the temperatures recorded at the Airport']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "the temperatures recorded at the Airport"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "the temperatures recorded at the Airport"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the temperatures recorded at the Airport)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the temperatures recorded at the Airport)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the temperatures recorded at the Airport)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the temperatures recorded at the Airport)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    12,
                    13
                ],
                [
                    3,
                    11
                ],
                [
                    14,
                    16
                ],
                [
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "degrees",
                "are",
                "there",
                "between",
                "the",
                "highest",
                ",",
                "and",
                "the",
                "lowest",
                "temperature",
                "recorded",
                "at",
                "the",
                "Airport",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9,
                    13
                ],
                [],
                [
                    11
                ],
                [],
                [
                    16
                ],
                [
                    14
                ],
                [
                    12
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    12,
                    13
                ],
                [],
                [
                    11
                ],
                [
                    16
                ],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    2
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    16
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    16
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    16
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1385_d134a519-408d-4398-a012-b3ca8bd85d54",
        "question_text": "How many yards longer was Carson Palmer's third touchdown pass compared to his first?",
        "split": "train",
        "decomposition": "return yards of touchdown passes of  Carson Palmer ;return third of #1 ;return first of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Carson Palmer']",
            "PROJECT['third of #REF', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "PROJECT",
                "third of #REF",
                [
                    "SELECT",
                    "yards of touchdown passes of Carson Palmer"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes of Carson Palmer"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(third of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Carson Palmer)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Carson Palmer)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "PROJECT",
                    "GET_QUESTION_SPAN(third of #REF)",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Carson Palmer)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Carson Palmer)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    9,
                    10,
                    13,
                    14
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Carson",
                "Palmer",
                "'s",
                "third",
                "touchdown",
                "pass",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    4,
                    7,
                    9,
                    10,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    2,
                    4,
                    7,
                    10
                ],
                [
                    13,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3128_70e165be-690a-443d-b00e-be4d813a5b06",
        "question_text": "How many points did the Colts have at final?",
        "split": "train",
        "decomposition": "return points that the  Colts did have at final ;return sum of #1",
        "program": [
            "SELECT['points that the Colts did have at final']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points that the Colts did have at final"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Colts did have at final)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that the Colts did have at final)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Colts",
                "have",
                "at",
                "final",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1028_df1a8420-a891-4d78-aaa9-5b3fe466795b",
        "question_text": "How many field goals between 40 and 49 yards were made?",
        "split": "train",
        "decomposition": "return yards of field goals ;return #1 between 40 and  49 ;return number of  #2",
        "program": [
            "SELECT['yards of field goals']",
            "FILTER['#1', 'between 40 and 49']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals"
                ],
                "between 40 and 49"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(between 40 and 49)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ],
                "GET_QUESTION_SPAN(between 40 and 49)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "between",
                "40",
                "and",
                "49",
                "yards",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    10
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    10
                ],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1921_1a9b64d6-3ada-479a-97c8-a2bcac4ec032",
        "question_text": "Where there more families or households in the county?",
        "split": "train",
        "decomposition": "return families in  the  county ;return households in  the  county ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['families in the county']",
            "SELECT['households in the county']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "families in the county"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "households in the county"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(families in the county)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(households in the county)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(families in the county)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(households in the county)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Where",
                "there",
                "more",
                "families",
                "or",
                "households",
                "in",
                "the",
                "county",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    5,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    8
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_931_10dd887d-a576-4469-8124-94020d489054",
        "question_text": "What happened second: death of Martin Luther or the Peace of Passau?",
        "split": "train",
        "decomposition": "return when  was  the  death of Martin Luther ;return when  was  the  Peace of Passau ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was the death of Martin Luther']",
            "SELECT['when was the Peace of Passau']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was the death of Martin Luther"
            ],
            [
                "SELECT",
                "when was the Peace of Passau"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of Martin Luther)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Peace of Passau)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the death of Martin Luther)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Peace of Passau)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "second",
                ":",
                "death",
                "of",
                "Martin",
                "Luther",
                "or",
                "the",
                "Peace",
                "of",
                "Passau",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    8
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_934_bc520341-1de4-4bd4-bc6f-e6940aaef731",
        "question_text": "When was the mayor of Munster installed?",
        "split": "train",
        "decomposition": "return the  mayor of Munster ;return when  was  #1 installed",
        "program": [
            "SELECT['the mayor of Munster']",
            "PROJECT['when was #REF installed', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "when was #REF installed",
            [
                "SELECT",
                "the mayor of Munster"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(when was #REF installed)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the mayor of Munster)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(when was #REF installed)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the mayor of Munster)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    0,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "When",
                "was",
                "the",
                "mayor",
                "of",
                "Munster",
                "installed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2174_86656dc9-5a2a-4af2-8e9c-48e7e75e5c31",
        "question_text": "How many people was the race populating the second to least portion of the city made up of, in percentage?",
        "split": "train",
        "decomposition": "return percentages of the  city that races made up ;return the  second lowest of #1",
        "program": [
            "SELECT['percentages of the city that races made up']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "percentages of the city that races made up"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percentages of the city that races made up)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentages of the city that races made up)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6,
                    9,
                    20
                ],
                [
                    3,
                    8,
                    11
                ],
                [
                    4,
                    7,
                    12,
                    13,
                    15,
                    16,
                    17,
                    18,
                    19
                ],
                [
                    10,
                    14,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "was",
                "the",
                "race",
                "populating",
                "the",
                "second",
                "to",
                "least",
                "portion",
                "of",
                "the",
                "city",
                "made",
                "up",
                "of",
                ",",
                "in",
                "percentage",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    6,
                    9,
                    20
                ],
                [
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    16,
                    18
                ],
                [
                    10,
                    14,
                    15,
                    17,
                    19
                ],
                [],
                [],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    9,
                    20
                ],
                [
                    3,
                    8,
                    11
                ],
                [],
                [
                    10,
                    12,
                    16,
                    17,
                    18,
                    19
                ],
                [
                    14
                ],
                [
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    20
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    20
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2188_57b67f40-2e96-4028-afee-824865565ce1",
        "question_text": "In the county according to the 2000 census, which group is smaller: people or households?",
        "split": "dev",
        "decomposition": "return people in  the county according to the  2000 census ;return households in  the county according to the  2000 census ;return the number of #1 ;return the number of #2 ;return which  is  smaller of #3 , #4",
        "program": [
            "SELECT['people in the county according to the 2000 census']",
            "SELECT['households in the county according to the 2000 census']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "people in the county according to the 2000 census"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "households in the county according to the 2000 census"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in the county according to the 2000 census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(households in the county according to the 2000 census)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(people in the county according to the 2000 census)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(households in the county according to the 2000 census)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16
                ],
                [
                    1,
                    4,
                    5
                ],
                [],
                [],
                [
                    17
                ]
            ],
            "question_tokens": [
                "In",
                "the",
                "county",
                "according",
                "to",
                "the",
                "2000",
                "census",
                ",",
                "which",
                "group",
                "is",
                "smaller",
                ":",
                "people",
                "or",
                "households",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2,
                    3,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13,
                    16
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    15
                ],
                [],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    8,
                    15
                ],
                [
                    2,
                    6,
                    7,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    16
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    7
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1334_20fb51c3-f710-4cb4-a312-2e6a91f40720",
        "question_text": "How many yards were Jason Snelling's touchdowns on average?",
        "split": "train",
        "decomposition": "return yards of Jason Snelling 's touchdowns ;return average of #1",
        "program": [
            "SELECT[\"yards of Jason Snelling 's touchdowns\"]",
            "AGGREGATE['avg', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "yards of Jason Snelling 's touchdowns"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Jason Snelling 's touchdowns)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_avg",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Jason Snelling 's touchdowns)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8,
                    9
                ],
                [],
                [
                    7,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "were",
                "Jason",
                "Snelling",
                "'s",
                "touchdowns",
                "on",
                "average",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4,
                    7
                ],
                [
                    2,
                    5,
                    6,
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1605_0b50a8af-c042-41f8-8ddd-374ecb9c2859",
        "question_text": "Who died last: Wenceslas or Duke Magnus?",
        "split": "train",
        "decomposition": "return when  did Wenceslas die ;return when  did Duke Magnus die ;return which was  last of #1 ,  #2",
        "program": [
            "SELECT['when did Wenceslas die']",
            "SELECT['when did Duke Magnus die']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when did Wenceslas die"
            ],
            [
                "SELECT",
                "when did Duke Magnus die"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Wenceslas die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Duke Magnus die)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Wenceslas die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Duke Magnus die)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "died",
                "last",
                ":",
                "Wenceslas",
                "or",
                "Duke",
                "Magnus",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5
                ],
                [
                    1,
                    2,
                    3,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1265_f66b78c6-5538-4b52-b0bf-25d4da782f88",
        "question_text": "Which quarters did St Louis not score?",
        "split": "train",
        "decomposition": "return quarters ;return #1 that St Louis score in  ;return #1 besides  #2",
        "program": [
            "SELECT['quarters']",
            "FILTER['#1', 'that St Louis score in']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "quarters"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "quarters"
                ],
                "that St Louis score in"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(that St Louis score in)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(quarters)"
                ],
                "GET_QUESTION_SPAN(that St Louis score in)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    0
                ],
                [
                    4
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarters",
                "did",
                "St",
                "Louis",
                "not",
                "score",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    5
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [
                    1,
                    6
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    5,
                    6
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_102_4a9d736c-f81f-4c27-a939-803aa5b4de32",
        "question_text": "How many yards was Tomlinson's shortest touchdown run?",
        "split": "train",
        "decomposition": "return yards of Tomlinson 's touchdown runs ;return shortest of #1",
        "program": [
            "SELECT[\"yards of Tomlinson 's touchdown runs\"]",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of Tomlinson 's touchdown runs"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of Tomlinson 's touchdown runs)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Tomlinson 's touchdown runs)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Tomlinson",
                "'s",
                "shortest",
                "touchdown",
                "run",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    4,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_40_815fa8e3-5332-4ba1-895e-bd95b36aeb90",
        "question_text": "What happened first: failure to control Georgia government or Red Army created precedent for Bolsheviks?",
        "split": "train",
        "decomposition": "return when  the  Red Army has failure to control Georgia government ;return when  the  Red Army created precedent for Bolsheviks ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['when the Red Army has failure to control Georgia government']",
            "SELECT['when the Red Army created precedent for Bolsheviks']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when the Red Army has failure to control Georgia government"
            ],
            [
                "SELECT",
                "when the Red Army created precedent for Bolsheviks"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Red Army has failure to control Georgia government)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Red Army created precedent for Bolsheviks)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Red Army has failure to control Georgia government)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when the Red Army created precedent for Bolsheviks)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    9,
                    10,
                    12
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    11
                ],
                [
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "failure",
                "to",
                "control",
                "Georgia",
                "government",
                "or",
                "Red",
                "Army",
                "created",
                "precedent",
                "for",
                "Bolsheviks",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    10
                ],
                [
                    9,
                    11,
                    12
                ],
                [
                    14
                ],
                [
                    13,
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    7,
                    9
                ],
                [
                    1,
                    2,
                    4,
                    8,
                    12
                ],
                [
                    5,
                    6
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [
                    13,
                    14
                ],
                [
                    15,
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    4,
                    15
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    15
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2684_0f9c6b9c-3c0c-4aa1-bb5b-5002859fd5da",
        "question_text": "Which sector employs more Ohioans, trade or Government?",
        "split": "train",
        "decomposition": "return Ohioans that the  trade sector employs ;return Ohioans that the  Government sector employs ;return number of  #1 ;return number of  #2 ;return which is more of #1 ,  #2",
        "program": [
            "SELECT['Ohioans that the trade sector employs']",
            "SELECT['Ohioans that the Government sector employs']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "Ohioans that the trade sector employs"
            ],
            [
                "SELECT",
                "Ohioans that the Government sector employs"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Ohioans that the trade sector employs)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Ohioans that the Government sector employs)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Ohioans that the trade sector employs)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Ohioans that the Government sector employs)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "sector",
                "employs",
                "more",
                "Ohioans",
                ",",
                "trade",
                "or",
                "Government",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2779_1836ebd4-9bb3-47db-aabf-915196f1a82e",
        "question_text": "How many points were the Ravens behind at halftime?",
        "split": "train",
        "decomposition": "return points that the  Ravens were behind at halftime",
        "program": [
            "SELECT['points that the Ravens were behind at halftime']"
        ],
        "nested_expression": [
            "SELECT",
            "points that the Ravens were behind at halftime"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Ravens were behind at halftime)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Ravens were behind at halftime)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    7
                ],
                [
                    5,
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "were",
                "the",
                "Ravens",
                "behind",
                "at",
                "halftime",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2610_d51d5d20-9631-45e8-89d5-daa5c480344f",
        "question_text": "Which year did more voters in Dunklin County vote for the Missouri Constitutional Amendment 2, 2004 or 2006?",
        "split": "train",
        "decomposition": "return voters in  Dunklin County that vote for Missouri Constitutional Amendment 2 in 2004 ;return voters in  Dunklin County that vote for Missouri Constitutional Amendment 2 in 2006 ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2004']",
            "SELECT['voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2006']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2004"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2006"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2004)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2006)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2004)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(voters in Dunklin County that vote for Missouri Constitutional Amendment 2 in 2006)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4,
                    6,
                    15,
                    17
                ],
                [
                    2,
                    5,
                    7,
                    9,
                    10
                ],
                [
                    8,
                    11,
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    16,
                    18,
                    19
                ]
            ],
            "question_tokens": [
                "Which",
                "year",
                "did",
                "more",
                "voters",
                "in",
                "Dunklin",
                "County",
                "vote",
                "for",
                "the",
                "Missouri",
                "Constitutional",
                "Amendment",
                "2",
                ",",
                "2004",
                "or",
                "2006",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    6
                ],
                [],
                [
                    5,
                    9,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    12
                ],
                [
                    13,
                    14,
                    15
                ],
                [
                    17
                ],
                [
                    16,
                    18
                ],
                [
                    19
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    4,
                    15,
                    17
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    9,
                    11
                ],
                [
                    8,
                    12,
                    13
                ],
                [],
                [
                    14,
                    16
                ],
                [
                    18,
                    19
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    18
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    18
                ],
                [
                    9,
                    18
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    18
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2000_07453e0a-2951-4e80-b527-618cdb57f756",
        "question_text": "How many more yards was the longest touchdown pass compared with the shortest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    8,
                    14
                ],
                [],
                [
                    10
                ],
                [
                    9
                ],
                [
                    7,
                    12,
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "compared",
                "with",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [
                    3,
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    7,
                    8,
                    12,
                    13,
                    14
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    6,
                    7,
                    8,
                    14
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    13
                ],
                [
                    12
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3160_22aa8f6e-904a-4087-8ad5-0c5e45184131",
        "question_text": "Who caught the game winning TD pass?",
        "split": "train",
        "decomposition": "return the  game winning TD pass ;return who  caught #1",
        "program": [
            "SELECT['the game winning TD pass']",
            "PROJECT['who caught #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who caught #REF",
            [
                "SELECT",
                "the game winning TD pass"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the game winning TD pass)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who caught #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the game winning TD pass)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "the",
                "game",
                "winning",
                "TD",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1082_5c54003f-79c0-4eb1-ad94-33d15662b3bb",
        "question_text": "How many yards shorter was Joseph Addai's second touchdown run compared to his first?",
        "split": "train",
        "decomposition": "return yards of  Joseph Addai 's second touchdown run ;return yards of  Joseph Addai 's first touchdown run ;return the difference of  #1 and #2",
        "program": [
            "SELECT[\"yards of Joseph Addai 's second touchdown run\"]",
            "SELECT[\"yards of Joseph Addai 's first touchdown run\"]",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "yards of Joseph Addai 's second touchdown run"
            ],
            [
                "SELECT",
                "yards of Joseph Addai 's first touchdown run"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Joseph Addai 's second touchdown run)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Joseph Addai 's first touchdown run)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Joseph Addai 's second touchdown run)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of Joseph Addai 's first touchdown run)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    7
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11,
                    12,
                    13
                ],
                [],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "shorter",
                "was",
                "Joseph",
                "Addai",
                "'s",
                "second",
                "touchdown",
                "run",
                "compared",
                "to",
                "his",
                "first",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    10
                ],
                [],
                [
                    11
                ],
                [],
                [],
                [
                    12,
                    14
                ],
                [
                    13
                ],
                [],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10,
                    11,
                    12,
                    13
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2026_93ab66a4-94d7-4587-98de-b30121d0854d",
        "question_text": "How many 36-yard field goals did David Akers make?",
        "split": "train",
        "decomposition": "return field goals of  David Akers ;return #1 that are  36-yard ;return number of  #2",
        "program": [
            "SELECT['field goals of David Akers']",
            "FILTER['#1', 'that are 36-yard']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "field goals of David Akers"
                ],
                "that are 36-yard"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of David Akers)"
                ],
                "GET_QUESTION_SPAN(that are 36-yard)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_EQ",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of David Akers)"
                ],
                "GET_QUESTION_NUMBER(36)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4,
                    6
                ],
                [],
                [
                    9
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "36-yard",
                "field",
                "goals",
                "did",
                "David",
                "Akers",
                "make",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2086_40835a6b-afac-4b06-ba23-4a4c87261edd",
        "question_text": "How many more touchdowns did Neil ODonnell have compared to interceptions?",
        "split": "dev",
        "decomposition": "return touchdowns of Neil ODonnell ;return interceptions of Neil ODonnell ;return number of  #1 ;return number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns of Neil ODonnell']",
            "SELECT['interceptions of Neil ODonnell']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Neil ODonnell"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "interceptions of Neil ODonnell"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Neil ODonnell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(interceptions of Neil ODonnell)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Neil ODonnell)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(interceptions of Neil ODonnell)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "did",
                "Neil",
                "ODonnell",
                "have",
                "compared",
                "to",
                "interceptions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [
                    10
                ],
                [],
                [],
                [
                    9
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_30e30004-e6d0-4fa4-919d-6e5d3633221c",
        "question_text": "How many yards longer was Jay Cutler's longest touchdown pass than his shortest?",
        "split": "dev",
        "decomposition": "return yards of touchdown passes of  Jay Cutler ;return the  longest of #1 ;return the  shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes of Jay Cutler']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes of Jay Cutler"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes of Jay Cutler"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes of Jay Cutler)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    6,
                    7,
                    8,
                    10
                ],
                [],
                [],
                [
                    11
                ],
                [
                    5,
                    9,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Jay",
                "Cutler",
                "'s",
                "longest",
                "touchdown",
                "pass",
                "than",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    8
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    7,
                    9,
                    10,
                    12,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2586_e5c1fee0-9b03-483c-9552-73b818a9df78",
        "question_text": "How many yards longer was Nugent's longest field goal comapred to his shortest?",
        "split": "train",
        "decomposition": "return field goals of Nugent ;return the longest #1 ;return the shortest #1 ;return the difference of #2 and  #3",
        "program": [
            "SELECT['field goals of Nugent']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "field goals of Nugent"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "field goals of Nugent"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Nugent)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Nugent)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Nugent)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(field goals of Nugent)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Nugent",
                "'s",
                "longest",
                "field",
                "goal",
                "comapred",
                "to",
                "his",
                "shortest",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    8,
                    9,
                    12,
                    13
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2783_7f18b500-40f5-4ffd-b2ab-99677f673cbb",
        "question_text": "How many more passing yards did Cassel have than Bridgewater?",
        "split": "train",
        "decomposition": "return passing yards of Cassel ;return passing yards of Bridgewater ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['passing yards of Cassel']",
            "SELECT['passing yards of Bridgewater']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "passing yards of Cassel"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "passing yards of Bridgewater"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing yards of Cassel)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing yards of Bridgewater)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing yards of Cassel)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(passing yards of Bridgewater)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "passing",
                "yards",
                "did",
                "Cassel",
                "have",
                "than",
                "Bridgewater",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1499_6072acb3-8698-44d3-9ebe-2d8c91714eaa",
        "question_text": "How many more field goals did Kaeding have than Carpenter?",
        "split": "train",
        "decomposition": "return field goals of Kaeding ;return field goals of Carpenter ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['field goals of Kaeding']",
            "SELECT['field goals of Carpenter']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Kaeding"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals of Carpenter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kaeding)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carpenter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Kaeding)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Carpenter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "field",
                "goals",
                "did",
                "Kaeding",
                "have",
                "than",
                "Carpenter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    6,
                    7
                ],
                [],
                [],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3040_633d3719-fdec-4090-a5f3-132f4fcc7ced",
        "question_text": "who scored more point the viking or the 49ers?",
        "split": "train",
        "decomposition": "return points of the  vikings ;return points of the  49ers ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['points of the vikings']",
            "SELECT['points of the 49ers']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the vikings"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the 49ers"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the vikings)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the 49ers)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the vikings)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points of the 49ers)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "who",
                "scored",
                "more",
                "point",
                "the",
                "viking",
                "or",
                "the",
                "49ers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    2
                ],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_547_3f807d18-7ef4-4291-bd97-ae144a11581e",
        "question_text": "How many countries did people flee to?",
        "split": "train",
        "decomposition": "return countries that people flee to ;return number of  #1",
        "program": [
            "SELECT['countries that people flee to']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "countries that people flee to"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries that people flee to)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries that people flee to)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "countries",
                "did",
                "people",
                "flee",
                "to",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1055_cc685113-5dc7-4766-9915-4ba6516b1f86",
        "question_text": "What event happened first, Hyder Ali of Mysore capturing Calicut, or Tippu Sultan invading the Zamorin of Calicut's provice?",
        "split": "train",
        "decomposition": "return when  did  Hyder Ali of  Mysore capture Calicut  ;return when  did  Tippu Sultan invade the Zamorin of  Calicut  's provice ;return which is  the lowest of  #1 , #2",
        "program": [
            "SELECT['when did Hyder Ali of Mysore capture Calicut']",
            "SELECT[\"when did Tippu Sultan invade the Zamorin of Calicut 's provice\"]",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did Hyder Ali of Mysore capture Calicut"
            ],
            [
                "SELECT",
                "when did Tippu Sultan invade the Zamorin of Calicut 's provice"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Hyder Ali of Mysore capture Calicut)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Tippu Sultan invade the Zamorin of Calicut 's provice)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Hyder Ali of Mysore capture Calicut)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Tippu Sultan invade the Zamorin of Calicut 's provice)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    9,
                    11,
                    12
                ],
                [
                    6,
                    7,
                    8
                ],
                [
                    10,
                    13,
                    14
                ],
                [
                    15,
                    16,
                    17,
                    18,
                    20
                ],
                [
                    19,
                    21,
                    22
                ]
            ],
            "question_tokens": [
                "What",
                "event",
                "happened",
                "first",
                ",",
                "Hyder",
                "Ali",
                "of",
                "Mysore",
                "capturing",
                "Calicut",
                ",",
                "or",
                "Tippu",
                "Sultan",
                "invading",
                "the",
                "Zamorin",
                "of",
                "Calicut",
                "'s",
                "provice",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    13,
                    14
                ],
                [],
                [
                    15,
                    16
                ],
                [
                    18,
                    20
                ],
                [
                    17,
                    19
                ],
                [
                    21,
                    22
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    11,
                    12
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    6,
                    9
                ],
                [
                    8
                ],
                [
                    10,
                    13,
                    14
                ],
                [],
                [
                    15,
                    17,
                    20
                ],
                [
                    19
                ],
                [
                    21,
                    22
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    21
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    21
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    21
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    21
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    21
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    21
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    22,
                    22
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1998_3948c88e-2117-40c2-aa34-c6effb63dde8",
        "question_text": "Which team did the Jets play week 11?",
        "split": "train",
        "decomposition": "return which team did the  Jets play in  week 11",
        "program": [
            "SELECT['which team did the Jets play in week 11']"
        ],
        "nested_expression": [
            "SELECT",
            "which team did the Jets play in week 11"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(which team did the Jets play in week 11)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(which team did the Jets play in week 11)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    7
                ],
                [
                    5,
                    6,
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "the",
                "Jets",
                "play",
                "week",
                "11",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2295_0bfb3ccc-fff6-4b39-b251-b2b75451ac74",
        "question_text": "How many of the converted field goals were longer than 40 yards?",
        "split": "train",
        "decomposition": "return converted field goals ;return yards of #1 ;return #1 where #2 is higher than 40 ;return number of  #3",
        "program": [
            "SELECT['converted field goals']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 40']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "converted field goals"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "converted field goals"
                    ]
                ],
                "is higher than 40"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(converted field goals)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 40)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(converted field goals)"
                ],
                "GET_QUESTION_NUMBER(40)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    12
                ],
                [
                    7,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "converted",
                "field",
                "goals",
                "were",
                "longer",
                "than",
                "40",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    5,
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [],
                [],
                [
                    7,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    12
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2649_f68b2339-ee7f-4457-bc2d-b5ed9882e0a8",
        "question_text": "How many points did the Steleers win by?",
        "split": "train",
        "decomposition": "return points that the  Steleers win by",
        "program": [
            "SELECT['points that the Steleers win by']"
        ],
        "nested_expression": [
            "SELECT",
            "points that the Steleers win by"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Steleers win by)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the Steleers win by)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Steleers",
                "win",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3087_c78acc2f-9189-44b5-b17f-658fb9e704a9",
        "question_text": "What is the smallest religion in Greensboro?",
        "split": "train",
        "decomposition": "return religions in  Greensboro ;return smallest of #1",
        "program": [
            "SELECT['religions in Greensboro']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "religions in Greensboro"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions in Greensboro)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religions in Greensboro)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    3
                ],
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "What",
                "is",
                "the",
                "smallest",
                "religion",
                "in",
                "Greensboro",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2018_b65779f6-f281-4103-a901-1bbe845db37b",
        "question_text": "Which player won the match between Hewitt and Jo-Wilfried Tsonga?",
        "split": "train",
        "decomposition": "return the  match between Hewitt and  Jo-Wilfried Tsonga ;return if Hewitt won #1 ;return if Jo-Wilfried Tsonga won #1 ;return which is true of #2 ,  #3",
        "program": [
            "SELECT['the match between Hewitt and Jo-Wilfried Tsonga']",
            "BOOLEAN['#1', 'if Hewitt won #REF']",
            "BOOLEAN['#1', 'if Jo-Wilfried Tsonga won #REF']",
            "COMPARISON['true', '#2', '#3']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "the match between Hewitt and Jo-Wilfried Tsonga"
                ],
                "if Hewitt won #REF"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "the match between Hewitt and Jo-Wilfried Tsonga"
                ],
                "if Jo-Wilfried Tsonga won #REF"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the match between Hewitt and Jo-Wilfried Tsonga)"
                ],
                "GET_QUESTION_SPAN(if Hewitt won #REF)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the match between Hewitt and Jo-Wilfried Tsonga)"
                ],
                "GET_QUESTION_SPAN(if Jo-Wilfried Tsonga won #REF)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the match between Hewitt and Jo-Wilfried Tsonga)"
                ],
                "GET_QUESTION_SPAN(if Hewitt won #REF)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the match between Hewitt and Jo-Wilfried Tsonga)"
                ],
                "GET_QUESTION_SPAN(if Jo-Wilfried Tsonga won #REF)"
            ]
        ],
        "operators": [
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    4
                ],
                [
                    1,
                    2
                ],
                [],
                [],
                [
                    6,
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "won",
                "the",
                "match",
                "between",
                "Hewitt",
                "and",
                "Jo",
                "-",
                "Wilfried",
                "Tsonga",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    9
                ],
                [
                    8
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    11
                ],
                [
                    3,
                    11
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_511_8de4fd55-47b2-46a2-a750-035bdfbf958f",
        "question_text": "Which group was formed first the Latvian forces, or the Ingrian forces?",
        "split": "train",
        "decomposition": "return when  was  the Latvian forces  formed ;return when  was  the Ingrian forces  formed ;return which  was  first of #1 , #2",
        "program": [
            "SELECT['when was the Latvian forces formed']",
            "SELECT['when was the Ingrian forces formed']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Latvian forces formed"
            ],
            [
                "SELECT",
                "when was the Ingrian forces formed"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Latvian forces formed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Ingrian forces formed)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Latvian forces formed)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Ingrian forces formed)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    8,
                    9
                ],
                [
                    1,
                    2,
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "group",
                "was",
                "formed",
                "first",
                "the",
                "Latvian",
                "forces",
                ",",
                "or",
                "the",
                "Ingrian",
                "forces",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    4,
                    8
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7,
                    9,
                    10
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    1,
                    8,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_115_1a598038-7bd5-45bb-8272-cfc39611af2c",
        "question_text": "How many total yards of touchdowns did Tony Romo have?",
        "split": "train",
        "decomposition": "return yards of touchdowns that Tony Romo did have ;return sum of #1",
        "program": [
            "SELECT['yards of touchdowns that Tony Romo did have']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of touchdowns that Tony Romo did have"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns that Tony Romo did have)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns that Tony Romo did have)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "yards",
                "of",
                "touchdowns",
                "did",
                "Tony",
                "Romo",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    8
                ],
                [
                    4
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1527_3509977f-fa34-4164-b8ce-151867b8f14e",
        "question_text": "How many triple doubles has Johnson had in his career?",
        "split": "train",
        "decomposition": "return triple doubles that  Johnson has had in his career ;return the  number of  #1",
        "program": [
            "SELECT['triple doubles that Johnson has had in his career']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "triple doubles that Johnson has had in his career"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(triple doubles that Johnson has had in his career)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(triple doubles that Johnson has had in his career)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "triple",
                "doubles",
                "has",
                "Johnson",
                "had",
                "in",
                "his",
                "career",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    5,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    8
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    2,
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3228_26388e7b-6234-4d26-af34-f01149d9e4d3",
        "question_text": "Which team allowed the fewest points in the first half??",
        "split": "train",
        "decomposition": "return teams ;return first half points allowed of #1 ;return sum of #2 for each #1 ;return #1 where #3 is lowest",
        "program": [
            "SELECT['teams']",
            "PROJECT['first half points allowed of #REF', '#1']",
            "GROUP['sum', '#2', '#1']",
            "SUPERLATIVE['min', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_sum",
                [
                    "PROJECT",
                    "first half points allowed of #REF",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_sum",
                [
                    "PARTIAL_SELECT_NUM",
                    "GET_QUESTION_SPAN(first half points allowed of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(first half points allowed of #REF)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    5
                ],
                [
                    9,
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "allowed",
                "the",
                "fewest",
                "points",
                "in",
                "the",
                "first",
                "half",
                "?",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4
                ],
                [],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [],
                [
                    5
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    5
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2748_682921d2-0d05-432b-896e-a9d7ba5b241b",
        "question_text": "Who had two catching touchdowns for the Patriots?",
        "split": "train",
        "decomposition": "return catching touchdowns for the  Patriots ;return who  had #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is equal to two",
        "program": [
            "SELECT['catching touchdowns for the Patriots']",
            "PROJECT['who had #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is equal to two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "who had #REF",
                [
                    "SELECT",
                    "catching touchdowns for the Patriots"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "catching touchdowns for the Patriots"
                ],
                [
                    "PROJECT",
                    "who had #REF",
                    [
                        "SELECT",
                        "catching touchdowns for the Patriots"
                    ]
                ]
            ],
            "is equal to two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(catching touchdowns for the Patriots)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is equal to two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(catching touchdowns for the Patriots)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is equal to two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    7
                ],
                [],
                [
                    3
                ],
                [
                    2,
                    4,
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "two",
                "catching",
                "touchdowns",
                "for",
                "the",
                "Patriots",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2084_8dbbc549-ecbe-455e-8cd5-85a5857459b0",
        "question_text": "Who had more punt return yards, McLemore or Walker?",
        "split": "train",
        "decomposition": "return punt return yards of McLemore ;return punt return yards of Walker ;return sum of #1 ;return sum of #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['punt return yards of McLemore']",
            "SELECT['punt return yards of Walker']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "punt return yards of McLemore"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "punt return yards of Walker"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(punt return yards of McLemore)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(punt return yards of Walker)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_sum_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(punt return yards of McLemore)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(punt return yards of Walker)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "more",
                "punt",
                "return",
                "yards",
                ",",
                "McLemore",
                "or",
                "Walker",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    5
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [],
                [
                    4,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2195_fbdfa512-c63c-43c9-9dbf-0b30e932b250",
        "question_text": "How many more touchdowns were there than field goals?",
        "split": "train",
        "decomposition": "return touchdowns there  were ;return field goals there  were ;return the  number of  #1 ;return the  number of  #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['touchdowns there were']",
            "SELECT['field goals there were']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns there were"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals there were"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns there were)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals there were)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns there were)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals there were)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5,
                    6
                ],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "touchdowns",
                "were",
                "there",
                "than",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    2
                ],
                [],
                [
                    1,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    4
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2180_f80276ff-9e29-400f-a091-38af8b07969d",
        "question_text": "What scoring play was the last play of the game?",
        "split": "train",
        "decomposition": "return scoring play  ;return #1 that was  the  last play  of the game",
        "program": [
            "SELECT['scoring play']",
            "FILTER['#1', 'that was the last play of the game']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "scoring play"
            ],
            "that was the last play of the game"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(scoring play)"
            ],
            "GET_QUESTION_SPAN(that was the last play of the game)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(scoring play)"
            ],
            "GET_QUESTION_SPAN(that was the last play of the game)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1
                ],
                [
                    0,
                    3,
                    4,
                    7,
                    8
                ],
                [
                    2,
                    5,
                    6
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "scoring",
                "play",
                "was",
                "the",
                "last",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    2,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    3
                ],
                [
                    1
                ],
                [
                    4,
                    8
                ],
                [
                    7
                ],
                [
                    2,
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1320_6c733e1b-83c8-419b-8736-d0a2d7a7dfa9",
        "question_text": "How many yards did James Stewart accumulate on his first two touchdown runs?",
        "split": "train",
        "decomposition": "return yards of the  first two touchdown runs of  James Stewart ;return the  sum of #1",
        "program": [
            "SELECT['yards of the first two touchdown runs of James Stewart']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "yards of the first two touchdown runs of James Stewart"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the first two touchdown runs of James Stewart)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of the first two touchdown runs of James Stewart)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7,
                    10
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    9,
                    11,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "did",
                "James",
                "Stewart",
                "accumulate",
                "on",
                "his",
                "first",
                "two",
                "touchdown",
                "runs",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    6
                ],
                [],
                [
                    4,
                    7
                ],
                [
                    9,
                    10,
                    11
                ],
                [
                    5,
                    8
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    11
                ],
                [
                    2,
                    3,
                    6,
                    7,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    5
                ],
                [
                    9,
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1002_d8ee2dcc-91d9-4e9b-914c-f1dbd2b504e0",
        "question_text": "How many years after Pegu fell did the king die?",
        "split": "dev",
        "decomposition": "return year that Pegu fell ;return year that the  king did die ;return difference of #2 and  #1",
        "program": [
            "SELECT['year that Pegu fell']",
            "SELECT['year that the king did die']",
            "ARITHMETIC['difference', '#2', '#1']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "year that the king did die"
            ],
            [
                "SELECT",
                "year that Pegu fell"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that the king did die)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(year that Pegu fell)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Two_Events",
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that the king did die)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(year that Pegu fell)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "after",
                "Pegu",
                "fell",
                "did",
                "the",
                "king",
                "die",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    8
                ],
                [],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1446_3175605d-b1e6-4d3d-ad21-0f6d94ca4174",
        "question_text": "Which team did not score a field goal in the first half?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score a field goal in  the  first half ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score a field goal in the first half']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score a field goal in the first half"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score a field goal in the first half)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score a field goal in the first half)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    7
                ],
                [
                    0,
                    6,
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "did",
                "not",
                "score",
                "a",
                "field",
                "goal",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [
                    4,
                    6,
                    11
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    5
                ],
                [
                    1,
                    3,
                    4
                ],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    10,
                    11
                ],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    11
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_118_2600c432-ce93-4a17-b03c-716df6f775e0",
        "question_text": "What happened first: Eberhardt became a flag officer or gunnery officer?",
        "split": "train",
        "decomposition": "return when  Eberhardt became a flag officer  ;return when  Eberhardt became a gunnery officer  ;return which is  the lowest of  #1 , #2",
        "program": [
            "SELECT['when Eberhardt became a flag officer']",
            "SELECT['when Eberhardt became a gunnery officer']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when Eberhardt became a flag officer"
            ],
            [
                "SELECT",
                "when Eberhardt became a gunnery officer"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Eberhardt became a flag officer)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Eberhardt became a gunnery officer)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Eberhardt became a flag officer)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when Eberhardt became a gunnery officer)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "What",
                "happened",
                "first",
                ":",
                "Eberhardt",
                "became",
                "a",
                "flag",
                "officer",
                "or",
                "gunnery",
                "officer",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    6,
                    9
                ],
                [
                    1,
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_137_5e5dbd50-eb87-4ba4-9869-4201c15b9d67",
        "question_text": "Which team had more than 9 losses after the game?",
        "split": "train",
        "decomposition": "return teams ;return #1 that had more than 9 losses after the  game",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that had more than 9 losses after the game']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "teams"
            ],
            "that had more than 9 losses after the game"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that had more than 9 losses after the game)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that had more than 9 losses after the game)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "had",
                "more",
                "than",
                "9",
                "losses",
                "after",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    6,
                    7
                ],
                [],
                [
                    5
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2004_4bd0232f-ad7b-4140-b543-9bfa34d7caf5",
        "question_text": "How many points did the Astros win game four by?",
        "split": "dev",
        "decomposition": "return points of game four ;return the  sum of #1 ;return points of the  Astros in  game four ;return the  difference of #2 and  #3 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['points of game four']",
            "AGGREGATE['sum', '#1']",
            "SELECT['points of the Astros in game four']",
            "ARITHMETIC['difference', '#2', '#3']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "points of the Astros in game four"
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "points of game four"
                    ]
                ],
                [
                    "SELECT",
                    "points of the Astros in game four"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Astros in game four)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of game four)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Astros in game four)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Astros in game four)"
                ]
            ],
            [
                "ARITHMETIC_difference",
                [
                    "AGGREGATE_sum",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of game four)"
                    ]
                ],
                [
                    "SELECT_NUM",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(points of the Astros in game four)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "arithmetic",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Astros",
                "win",
                "game",
                "four",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_22_d9547e9b-3a9a-4878-a506-e54aa1d34873",
        "question_text": "Which team scored the most in the first half?",
        "split": "train",
        "decomposition": "return teams ;return #1 that scored the  most in  the first half",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that scored the most in the first half']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "teams"
            ],
            "that scored the most in the first half"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that scored the most in the first half)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            "GET_QUESTION_SPAN(that scored the most in the first half)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "most",
                "in",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2261_536bff58-b157-49fe-a62e-6af92e0cd9c0",
        "question_text": "Did the Saints score fewer points in the first quarter or the second half?",
        "split": "train",
        "decomposition": "return points the  Saints score in  the   first quarter ;return points the  Saints score in  the   second half ;return the  number of  #1 ;return the  number of  #2 ;return which is fewer of #3 ,  #4",
        "program": [
            "SELECT['points the Saints score in the first quarter']",
            "SELECT['points the Saints score in the second half']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "points the Saints score in the first quarter"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "points the Saints score in the second half"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Saints score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Saints score in the second half)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Saints score in the first quarter)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(points the Saints score in the second half)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    10
                ],
                [
                    1,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    2,
                    8,
                    9
                ],
                [
                    11
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "Saints",
                "score",
                "fewer",
                "points",
                "in",
                "the",
                "first",
                "quarter",
                "or",
                "the",
                "second",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    6,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11,
                    12
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    5
                ],
                [
                    0,
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    2,
                    9
                ],
                [],
                [],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    7,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_35_5e74feb7-ae7e-401b-84e2-51f6ed7ceeeb",
        "question_text": "How many total peasants were considered to be either injured or detained?",
        "split": "train",
        "decomposition": "return peasants that were considered to be injured ;return peasants that were considered to be detained ;return the  number of  #1 ;return the  number of  #2 ;return the  sum of #3 and  #4",
        "program": [
            "SELECT['peasants that were considered to be injured']",
            "SELECT['peasants that were considered to be detained']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "peasants that were considered to be injured"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "peasants that were considered to be detained"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(peasants that were considered to be injured)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(peasants that were considered to be detained)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(peasants that were considered to be injured)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(peasants that were considered to be detained)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    4,
                    8
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    7
                ],
                [],
                [
                    6,
                    11
                ],
                [
                    9
                ],
                [
                    10,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "peasants",
                "were",
                "considered",
                "to",
                "be",
                "either",
                "injured",
                "or",
                "detained",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    4,
                    8
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ],
                [],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4,
                    8
                ],
                [
                    3
                ],
                [
                    6
                ],
                [],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    11
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3434_c3998f36-5867-4ac7-b12a-ee2f6e90413f",
        "question_text": "How many yards was the longest touchdown pass over the shortest touchdown pass?",
        "split": "train",
        "decomposition": "return yards of touchdown passes ;return longest of #1 ;return shortest of #1 ;return difference of #2 and  #3",
        "program": [
            "SELECT['yards of touchdown passes']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of touchdown passes)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    7,
                    8,
                    12
                ],
                [],
                [],
                [],
                [
                    6,
                    10,
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "over",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    10,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    12
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    8,
                    11
                ],
                [
                    10
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1909_82b5cff5-ed79-4d97-be26-7eff55d1a61f",
        "question_text": "Which type of method sank the third most tons?",
        "split": "train",
        "decomposition": "return types of methods that sank tons ;return tons that #1 sank ;return the  number of  #2 for each #1 ;return #1 where #3 is the  third highest",
        "program": [
            "SELECT['types of methods that sank tons']",
            "PROJECT['tons that #REF sank', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the third highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "types of methods that sank tons"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "tons that #REF sank",
                    [
                        "SELECT",
                        "types of methods that sank tons"
                    ]
                ],
                [
                    "SELECT",
                    "types of methods that sank tons"
                ]
            ],
            "is the third highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(types of methods that sank tons)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(tons that #REF sank)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the third highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(types of methods that sank tons)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(tons that #REF sank)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the third highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "type",
                "of",
                "method",
                "sank",
                "the",
                "third",
                "most",
                "tons",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    3
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    7
                ],
                [
                    2
                ],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_688_5d5ff135-2e85-4cd5-a9d5-366553046abb",
        "question_text": "How many touchdowns were there under 10 yards?",
        "split": "train",
        "decomposition": "return touchdowns ;return #1 that  were under 10 yards ;return the  number of  #2",
        "program": [
            "SELECT['touchdowns']",
            "FILTER['#1', 'that were under 10 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "touchdowns"
                ],
                "that were under 10 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ],
                "GET_QUESTION_SPAN(that were under 10 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4
                ],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "were",
                "there",
                "under",
                "10",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [
                    2
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1664_ac5fcba8-ab3d-4813-8fc6-517e1d73be22",
        "question_text": "How many territories were promised to Romania?",
        "split": "train",
        "decomposition": "return territories that were promised to Romania ;return number of  #1",
        "program": [
            "SELECT['territories that were promised to Romania']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "territories that were promised to Romania"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(territories that were promised to Romania)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(territories that were promised to Romania)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "territories",
                "were",
                "promised",
                "to",
                "Romania",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_80_2a2cea9a-bd78-4e8c-abe2-e13fdc330048",
        "question_text": "How many of the masterminds were arrested?",
        "split": "train",
        "decomposition": "return the  masterminds that were arrested ;return number of  #1",
        "program": [
            "SELECT['the masterminds that were arrested']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "the masterminds that were arrested"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the masterminds that were arrested)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the masterminds that were arrested)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    6,
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "of",
                "the",
                "masterminds",
                "were",
                "arrested",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1233_23eddacc-2940-4d1f-961f-a0d769cd6ae3",
        "question_text": "How many touchdown passes over 30 yards were made?",
        "split": "dev",
        "decomposition": "return touchdown passes ;return yards of #1 ;return #1 where #2 is higher than 30 ;return number of  #3",
        "program": [
            "SELECT['touchdown passes']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is higher than 30']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "touchdown passes"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "touchdown passes"
                    ]
                ],
                "is higher than 30"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is higher than 30)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_GT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ],
                "GET_QUESTION_NUMBER(30)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4
                ],
                [],
                [
                    9
                ],
                [
                    5,
                    6,
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "over",
                "30",
                "yards",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    7
                ],
                [
                    4,
                    8
                ],
                [],
                [],
                [
                    9
                ],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1746_17b647b7-dade-44e6-b075-8c60e8b97b38",
        "question_text": "Did the army have less tank battalions or Infantry battalions?",
        "split": "dev",
        "decomposition": "return tank battalions of  the army ;return Infantry battalions of  the army ;return the number of  #1 ;return the number of  #2 ;return which is  less of  #3 , #4",
        "program": [
            "SELECT['tank battalions of the army']",
            "SELECT['Infantry battalions of the army']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "tank battalions of the army"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Infantry battalions of the army"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(tank battalions of the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Infantry battalions of the army)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(tank battalions of the army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Infantry battalions of the army)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    7
                ],
                [
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "Did",
                "the",
                "army",
                "have",
                "less",
                "tank",
                "battalions",
                "or",
                "Infantry",
                "battalions",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    4
                ],
                [],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    2,
                    7
                ],
                [
                    4
                ],
                [],
                [
                    3,
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_500_1329e5c4-d73c-45d9-b035-41bd3b6d735f",
        "question_text": "Which quarterback threw for the most touchdowns?",
        "split": "train",
        "decomposition": "return quarterbacks ;return touchdowns of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['quarterbacks']",
            "PROJECT['touchdowns of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "quarterbacks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdowns of #REF",
                    [
                        "SELECT",
                        "quarterbacks"
                    ]
                ],
                [
                    "SELECT",
                    "quarterbacks"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarterbacks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "quarterback",
                "threw",
                "for",
                "the",
                "most",
                "touchdowns",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0
                ],
                [
                    1,
                    5
                ],
                [],
                [
                    3
                ],
                [],
                [
                    2
                ],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3171_6d62efb8-7370-4b41-bae3-76d434219f5a",
        "question_text": "How many yards was the longest pass play of the game?",
        "split": "train",
        "decomposition": "return yards of pass plays of  the  game ;return the  longest of #1",
        "program": [
            "SELECT['yards of pass plays of the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of pass plays of the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of pass plays of the game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of pass plays of the game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "pass",
                "play",
                "of",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_527_b216a30c-1555-4d44-a1c8-483f8211bc26",
        "question_text": "How many yards long were the two longest touchdowns of the entire game?",
        "split": "train",
        "decomposition": "return yards of touchdowns of  the  entire game ;return the  two longest of #1",
        "program": [
            "SELECT['yards of touchdowns of the entire game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdowns of the entire game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of the entire game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns of the entire game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    2,
                    6,
                    7,
                    11
                ],
                [
                    0,
                    1,
                    4,
                    5,
                    9,
                    10
                ],
                [
                    3,
                    8,
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "long",
                "were",
                "the",
                "two",
                "longest",
                "touchdowns",
                "of",
                "the",
                "entire",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    5
                ],
                [
                    8,
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    3
                ],
                [
                    2
                ],
                [
                    6,
                    7,
                    11
                ],
                [
                    5,
                    9,
                    10
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1911_f3f702c7-c76e-485f-94e2-2d431e92bb05",
        "question_text": "How many percent of the Bolivian people are not Evangelicals?",
        "split": "train",
        "decomposition": "return percent of the  Bolivian people that are Evangelicals ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percent of the Bolivian people that are Evangelicals']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percent of the Bolivian people that are Evangelicals"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of the Bolivian people that are Evangelicals)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of the Bolivian people that are Evangelicals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    4
                ],
                [
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "Bolivian",
                "people",
                "are",
                "not",
                "Evangelicals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    8
                ],
                [],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    8
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_5_b9c29d2c-2866-4246-98ac-9206a50f08cc",
        "question_text": "how many points did the cardinals lead into the half?",
        "split": "train",
        "decomposition": "return points that the  cardinals did lead into the half",
        "program": [
            "SELECT['points that the cardinals did lead into the half']"
        ],
        "nested_expression": [
            "SELECT",
            "points that the cardinals did lead into the half"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the cardinals did lead into the half)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(points that the cardinals did lead into the half)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "how",
                "many",
                "points",
                "did",
                "the",
                "cardinals",
                "lead",
                "into",
                "the",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3,
                    6
                ],
                [
                    4,
                    5,
                    8
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3894_c03f68f1-a9af-4d01-9e76-8b5a21626908",
        "question_text": "Which certification do fewer copies need to be sold for, Double Platinum or diamond?",
        "split": "train",
        "decomposition": "return copies that need to be sold for Double Platinum certification ;return copies that need to be sold for diamond certification ;return number of  #1 ;return number of  #2 ;return which is lowest of #3 ,  #4",
        "program": [
            "SELECT['copies that need to be sold for Double Platinum certification']",
            "SELECT['copies that need to be sold for diamond certification']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['min', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "copies that need to be sold for Double Platinum certification"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "copies that need to be sold for diamond certification"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(copies that need to be sold for Double Platinum certification)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(copies that need to be sold for diamond certification)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(copies that need to be sold for Double Platinum certification)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(copies that need to be sold for diamond certification)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    8,
                    10,
                    13
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    9,
                    11,
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "Which",
                "certification",
                "do",
                "fewer",
                "copies",
                "need",
                "to",
                "be",
                "sold",
                "for",
                ",",
                "Double",
                "Platinum",
                "or",
                "diamond",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [
                    6,
                    7,
                    9
                ],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    13
                ],
                [
                    11,
                    12,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    8,
                    10,
                    13
                ],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    7,
                    9
                ],
                [],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    14
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    14
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_345_dae71810-c9ea-452f-8c88-aeb4479facd2",
        "question_text": "Did Elizabeth respond to Gebhard before or after the assassination of Prince William?",
        "split": "train",
        "decomposition": "return when  Elizabeth responds to Gebhard ;return when  was the assassination of  Prince William ;return if #1 was before #2 ;return if #1 was after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when Elizabeth responds to Gebhard']",
            "SELECT['when was the assassination of Prince William']",
            "BOOLEAN['#1', 'was before #2']",
            "BOOLEAN['#1', 'was after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Elizabeth responds to Gebhard"
                ],
                "was before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Elizabeth responds to Gebhard"
                ],
                "was after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Elizabeth responds to Gebhard)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Elizabeth responds to Gebhard)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Elizabeth responds to Gebhard)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Elizabeth responds to Gebhard)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [
                    6,
                    7,
                    9
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Did",
                "Elizabeth",
                "respond",
                "to",
                "Gebhard",
                "before",
                "or",
                "after",
                "the",
                "assassination",
                "of",
                "Prince",
                "William",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    11,
                    12
                ],
                [
                    9
                ],
                [],
                [],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    9
                ],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1453_1f3c43c5-a602-4c3c-9111-34e6ef9beaf1",
        "question_text": "How many people difference was it between the smallest and the largest estimates of Tenochtitlan's size?",
        "split": "train",
        "decomposition": "return estimates of the  size of  Tenochtitlan ;return the  largest of #1 ;return the  smallest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['estimates of the size of Tenochtitlan']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "estimates of the size of Tenochtitlan"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "estimates of the size of Tenochtitlan"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(estimates of the size of Tenochtitlan)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(estimates of the size of Tenochtitlan)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(estimates of the size of Tenochtitlan)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(estimates of the size of Tenochtitlan)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    11,
                    15
                ],
                [],
                [],
                [
                    9,
                    12
                ],
                [
                    8
                ],
                [],
                [
                    14,
                    16,
                    17
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "people",
                "difference",
                "was",
                "it",
                "between",
                "the",
                "smallest",
                "and",
                "the",
                "largest",
                "estimates",
                "of",
                "Tenochtitlan",
                "'s",
                "size",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [
                    3,
                    4,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [],
                [
                    8,
                    15
                ],
                [
                    12
                ],
                [],
                [],
                [
                    14
                ],
                [],
                [
                    16
                ],
                [
                    17
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    6
                ],
                [],
                [],
                [
                    4
                ],
                [
                    11,
                    15
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    12
                ],
                [],
                [
                    8
                ],
                [],
                [],
                [
                    14,
                    16,
                    17
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    16
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    16
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    16
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    16
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    14,
                    16
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    17,
                    17
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1932_ead74fd3-01c5-41cf-bd7f-4e4d527b303c",
        "question_text": "How many field goals did Hanson kick in the second quarter?",
        "split": "train",
        "decomposition": "return field goals of Hanson in  the  second quarter ;return the  number of  #1",
        "program": [
            "SELECT['field goals of Hanson in the second quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "field goals of Hanson in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals of Hanson in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals of Hanson)"
                ],
                "GET_QUESTION_SPAN(in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [
                    8
                ],
                [],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "did",
                "Hanson",
                "kick",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    6,
                    10
                ],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    9
                ],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    2
                ],
                [
                    5,
                    6,
                    7,
                    9,
                    10
                ],
                [],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2737_2b65d725-2a28-43d0-b608-03d17b531ad8",
        "question_text": "How many more made field goals were there than missed field goals?",
        "split": "train",
        "decomposition": "return made field goals ;return missed field goals ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['made field goals']",
            "SELECT['missed field goals']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "made field goals"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "missed field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(made field goals)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(missed field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(made field goals)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(missed field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    6,
                    9,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "made",
                "field",
                "goals",
                "were",
                "there",
                "than",
                "missed",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    5,
                    9,
                    10,
                    11
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    7
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [
                    6,
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1240_f9b600c2-1187-4a33-9fbd-93521c7fd006",
        "question_text": "How many TD passes were under 10 yards?",
        "split": "dev",
        "decomposition": "return TD passes ;return yards of #1 ;return #1 where #2 is lower than 10 ;return number of  #3",
        "program": [
            "SELECT['TD passes']",
            "PROJECT['yards of #REF', '#1']",
            "COMPARATIVE['#1', '#2', 'is lower than 10']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "TD passes"
                ],
                [
                    "PROJECT",
                    "yards of #REF",
                    [
                        "SELECT",
                        "TD passes"
                    ]
                ],
                "is lower than 10"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "COMPARATIVE",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ],
                [
                    "PARTIAL_GROUP_sum",
                    [
                        "PARTIAL_SELECT_NUM",
                        "GET_QUESTION_SPAN(yards of #REF)"
                    ]
                ],
                [
                    "CONDITION",
                    "GET_QUESTION_SPAN(is lower than 10)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER_NUM_LT",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(TD passes)"
                ],
                "GET_QUESTION_NUMBER(10)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "comparative",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    8
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "TD",
                "passes",
                "were",
                "under",
                "10",
                "yards",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_598_b5a2eace-6024-4422-9060-585295c6c95f",
        "question_text": "Did Faisal surrdender before or after the army went to Maysalun to defend the kingdom from French Advance?",
        "split": "train",
        "decomposition": "return when  Faisal surrdender ;return when  the army went to Maysalun to  defend the  kingdom from French Advance ;return if #1 was before #2 ;return if #1 was after #2 ;return which is true of #3 , #4",
        "program": [
            "SELECT['when Faisal surrdender']",
            "SELECT['when the army went to Maysalun to defend the kingdom from French Advance']",
            "BOOLEAN['#1', 'was before #2']",
            "BOOLEAN['#1', 'was after #2']",
            "COMPARISON['true', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Faisal surrdender"
                ],
                "was before #2"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "when Faisal surrdender"
                ],
                "was after #2"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Faisal surrdender)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Faisal surrdender)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_true",
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Faisal surrdender)"
                ],
                "GET_QUESTION_SPAN(was before #2)"
            ],
            [
                "BOOLEAN",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(when Faisal surrdender)"
                ],
                "GET_QUESTION_SPAN(was after #2)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "boolean",
            "boolean",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [
                    10,
                    12,
                    14
                ],
                [
                    11
                ],
                [
                    16
                ],
                [
                    17,
                    18
                ]
            ],
            "question_tokens": [
                "Did",
                "Faisal",
                "surrdender",
                "before",
                "or",
                "after",
                "the",
                "army",
                "went",
                "to",
                "Maysalun",
                "to",
                "defend",
                "the",
                "kingdom",
                "from",
                "French",
                "Advance",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    10,
                    12
                ],
                [],
                [],
                [],
                [
                    14
                ],
                [
                    16
                ],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    10,
                    12
                ],
                [
                    14
                ],
                [],
                [],
                [
                    17
                ],
                [
                    18
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    17
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    17
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    17
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    15,
                    17
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    18
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1076_0f39c55c-e0a7-45f1-8150-1081f325e8d4",
        "question_text": "How many field goals between 30 and 35 yards were made?",
        "split": "train",
        "decomposition": "return yards of field goals that were made ;return #1 between 30 and  35 yards ;return number of  #2",
        "program": [
            "SELECT['yards of field goals that were made']",
            "FILTER['#1', 'between 30 and 35 yards']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "yards of field goals that were made"
                ],
                "between 30 and 35 yards"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were made)"
                ],
                "GET_QUESTION_SPAN(between 30 and 35 yards)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals that were made)"
                ],
                "GET_QUESTION_SPAN(between 30 and 35 yards)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    9
                ],
                [
                    5,
                    7,
                    8,
                    10
                ],
                [
                    4
                ],
                [
                    6
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "field",
                "goals",
                "between",
                "30",
                "and",
                "35",
                "yards",
                "were",
                "made",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5,
                    10
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    8,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    10
                ],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1088_95acc222-e73d-4b09-a17d-c013a871aca0",
        "question_text": "Who threw the game winning TD?",
        "split": "train",
        "decomposition": "return the  game winning TD ;return who  threw #1",
        "program": [
            "SELECT['the game winning TD']",
            "PROJECT['who threw #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "who threw #REF",
            [
                "SELECT",
                "the game winning TD"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the game winning TD)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who threw #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the game winning TD)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "threw",
                "the",
                "game",
                "winning",
                "TD",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    4,
                    5
                ],
                [
                    3
                ],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5
                ],
                [
                    3
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1727_2b281ee4-441d-4f4d-b719-f57bdedcae31",
        "question_text": "How many touchdown passes took place in the fourth quarter?",
        "split": "train",
        "decomposition": "return touchdown pass that took place in  the  fourth quarter ;return number of  #1",
        "program": [
            "SELECT['touchdown pass that took place in the fourth quarter']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "touchdown pass that took place in the fourth quarter"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown pass that took place in the fourth quarter)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown pass that took place)"
                ],
                "GET_QUESTION_SPAN(in the fourth quarter)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3
                ],
                [
                    6,
                    8,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    2,
                    5
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdown",
                "passes",
                "took",
                "place",
                "in",
                "the",
                "fourth",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    3
                ],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [],
                [
                    6,
                    8,
                    9
                ],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2965_fffd1318-515e-402a-b04e-b43839e272dd",
        "question_text": "Did fewer Peterboroughs residents categorise themselves as Black British or White?",
        "split": "train",
        "decomposition": "return Peterboroughs residents who categorise themselves as Black British ;return number of  #1 ;return Peterboroughs residents who categorise themselves as White ;return number of  #3 ;return which is  lowest of  #2 , #4",
        "program": [
            "SELECT['Peterboroughs residents who categorise themselves as Black British']",
            "AGGREGATE['count', '#1']",
            "SELECT['Peterboroughs residents who categorise themselves as White']",
            "AGGREGATE['count', '#3']",
            "COMPARISON['min', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Peterboroughs residents who categorise themselves as Black British"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "Peterboroughs residents who categorise themselves as White"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Peterboroughs residents who categorise themselves as Black British)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Peterboroughs residents who categorise themselves as White)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(Peterboroughs residents who categorise themselves as Black British)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(Peterboroughs residents who categorise themselves as White)"
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    9
                ],
                [
                    6
                ],
                [
                    5
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "Did",
                "fewer",
                "Peterboroughs",
                "residents",
                "categorise",
                "themselves",
                "as",
                "Black",
                "British",
                "or",
                "White",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    2,
                    9
                ],
                [
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1563_21144d30-eced-4e5d-82a4-34369240e2f3",
        "question_text": "How many incomplete passes did Mark Sanchez have?",
        "split": "train",
        "decomposition": "return incomplete passes of Mark Sanchez ;return number of  #1",
        "program": [
            "SELECT['incomplete passes of Mark Sanchez']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "incomplete passes of Mark Sanchez"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes of Mark Sanchez)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(incomplete passes of Mark Sanchez)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    5
                ],
                [
                    3,
                    4,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "incomplete",
                "passes",
                "did",
                "Mark",
                "Sanchez",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    7
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2047_e533c943-e5a5-46d1-9bd9-70834d13a974",
        "question_text": "What was the longest touchdown pass in the game?",
        "split": "train",
        "decomposition": "return touchdown passes in  the  game ;return the  longest of #1",
        "program": [
            "SELECT['touchdown passes in the game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "touchdown passes in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes in the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes in the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    2,
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3,
                    4,
                    5
                ],
                [],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    2,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1516_91de0f9e-fe21-4c6b-b470-aceea39a0a9c",
        "question_text": "How many yards longer was Gould's longest field goal over his shortest one?",
        "split": "dev",
        "decomposition": "return yards of field goals of  Gould ;return longest of #1 ;return shortest of #1 ;return the  difference of #2 and  #3",
        "program": [
            "SELECT['yards of field goals of Gould']",
            "AGGREGATE['max', '#1']",
            "AGGREGATE['min', '#1']",
            "ARITHMETIC['difference', '#2', '#3']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "yards of field goals of Gould"
                ]
            ],
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "yards of field goals of Gould"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_max",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "AGGREGATE_min",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(yards of field goals of Gould)"
                    ]
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    10,
                    13
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "longer",
                "was",
                "Gould",
                "'s",
                "longest",
                "field",
                "goal",
                "over",
                "his",
                "shortest",
                "one",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [],
                [],
                [
                    13
                ],
                [],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    2,
                    4
                ],
                [
                    5,
                    6,
                    7,
                    13
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3293_a10f1ece-03f3-4bc2-806c-e44f8baceee9",
        "question_text": "How many times did the Browns lose opening games in a row?",
        "split": "train",
        "decomposition": "return opening games that the  Browns lose in  a row ;return the  number of  #1",
        "program": [
            "SELECT['opening games that the Browns lose in a row']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "opening games that the Browns lose in a row"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(opening games that the Browns lose in a row)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(opening games that the Browns lose in a row)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "times",
                "did",
                "the",
                "Browns",
                "lose",
                "opening",
                "games",
                "in",
                "a",
                "row",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2
                ],
                [
                    8
                ],
                [
                    3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    8
                ],
                [],
                [
                    4,
                    5,
                    7,
                    9,
                    10
                ],
                [
                    6,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    11
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    11
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2946_c3d2a575-3d93-4b48-b0f8-6bb4f172f77c",
        "question_text": "From what distance was more than one field goal attempted?",
        "split": "train",
        "decomposition": "return field goals attempted ;return distances of #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is more than one",
        "program": [
            "SELECT['field goals attempted']",
            "PROJECT['distances of #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is more than one']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "distances of #REF",
                [
                    "SELECT",
                    "field goals attempted"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "field goals attempted"
                ],
                [
                    "PROJECT",
                    "distances of #REF",
                    [
                        "SELECT",
                        "field goals attempted"
                    ]
                ]
            ],
            "is more than one"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(distances of #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals attempted)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is more than one)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(distances of #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals attempted)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is more than one)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2
                ],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    5,
                    6,
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "From",
                "what",
                "distance",
                "was",
                "more",
                "than",
                "one",
                "field",
                "goal",
                "attempted",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    6
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    5
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    5,
                    6
                ],
                [
                    9,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2286_60b0471d-4bf8-43d3-aec4-6f08fad65063",
        "question_text": "Which states have between 95 and 95.9% of professing Catholics?",
        "split": "train",
        "decomposition": "return states ;return #1 that have between 95 and  95.9 % of professing Catholics",
        "program": [
            "SELECT['states']",
            "FILTER['#1', 'that have between 95 and 95.9 % of professing Catholics']"
        ],
        "nested_expression": [
            "FILTER",
            [
                "SELECT",
                "states"
            ],
            "that have between 95 and 95.9 % of professing Catholics"
        ],
        "typed_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(states)"
            ],
            "GET_QUESTION_SPAN(that have between 95 and 95.9 % of professing Catholics)"
        ],
        "drop_nested_expression": [
            "FILTER",
            [
                "SELECT",
                "GET_QUESTION_SPAN(states)"
            ],
            "GET_QUESTION_SPAN(that have between 95 and 95.9 % of professing Catholics)"
        ],
        "operators": [
            "select",
            "filter"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    4,
                    7
                ],
                [
                    2,
                    3,
                    8
                ],
                [
                    5,
                    6,
                    9
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "Which",
                "states",
                "have",
                "between",
                "95",
                "and",
                "95.9",
                "%",
                "of",
                "professing",
                "Catholics",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    2,
                    4,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1149_dab8f551-904b-400a-8daa-cebda63e6c79",
        "question_text": "How many yards was the shortest touchdown pass completed by McNabb?",
        "split": "train",
        "decomposition": "return yards of touchdown passes completed by McNabb ;return shortest of #1",
        "program": [
            "SELECT['yards of touchdown passes completed by McNabb']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of touchdown passes completed by McNabb"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes completed by McNabb)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes completed by McNabb)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    10
                ],
                [
                    4
                ],
                [
                    8,
                    9,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "completed",
                "by",
                "McNabb",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    6,
                    10
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    9
                ],
                [
                    8,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1780_acc3543a-1aa7-4d4e-bcba-935c3c525ae4",
        "question_text": "How many combined rushing yards did Larry Brown and Charley Harraway have?",
        "split": "train",
        "decomposition": "return rushing yards of Larry Brown ;return rushing yards of Charley Harraway ;return sum of #1 and  #2",
        "program": [
            "SELECT['rushing yards of Larry Brown']",
            "SELECT['rushing yards of Charley Harraway']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "rushing yards of Larry Brown"
            ],
            [
                "SELECT",
                "rushing yards of Charley Harraway"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Larry Brown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Charley Harraway)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Larry Brown)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(rushing yards of Charley Harraway)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    8
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "combined",
                "rushing",
                "yards",
                "did",
                "Larry",
                "Brown",
                "and",
                "Charley",
                "Harraway",
                "have",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    8
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    11
                ],
                [
                    10
                ],
                [],
                [
                    9
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2170_a546a7ce-3869-48f8-96e7-20a9c005c759",
        "question_text": "Were there more self-identified Guyanese or Irish?",
        "split": "dev",
        "decomposition": "return self-identified Guyanese ;return self-identified Irish ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['self-identified Guyanese']",
            "SELECT['self-identified Irish']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "self-identified Guyanese"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "self-identified Irish"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified Guyanese)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified Irish)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified Guyanese)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(self-identified Irish)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Were",
                "there",
                "more",
                "self",
                "-",
                "identified",
                "Guyanese",
                "or",
                "Irish",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    7
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1875_ce4104be-fa8c-4b73-a7a3-91d2abb77903",
        "question_text": "Who had the first touchdown for the Texans?",
        "split": "train",
        "decomposition": "return touchdowns for the  Texans ;return first of #1 ;return who  had #2",
        "program": [
            "SELECT['touchdowns for the Texans']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who had #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who had #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdowns for the Texans"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns for the Texans)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who had #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns for the Texans)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "the",
                "first",
                "touchdown",
                "for",
                "the",
                "Texans",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    6
                ],
                [],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_3397_42b3f820-4d58-4346-a4bb-296e0540829e",
        "question_text": "How many total points were scored during the first half?",
        "split": "train",
        "decomposition": "return points that were scored during the  first half ;return sum of #1",
        "program": [
            "SELECT['points that were scored during the first half']",
            "AGGREGATE['sum', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "points that were scored during the first half"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that were scored during the first half)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "SELECT",
                "GET_QUESTION_SPAN(points that were scored during the first half)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    5
                ],
                [
                    3,
                    6,
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "points",
                "were",
                "scored",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2190_d086974c-bb86-4a57-9107-6e3f4b03ba6e",
        "question_text": "How many yards was the second shortest field goal during the first half?",
        "split": "train",
        "decomposition": "return yards of first half field goals ;return second shortest of #1",
        "program": [
            "SELECT['yards of first half field goals']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of first half field goals"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of first half field goals)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of first half field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8,
                    11
                ],
                [
                    4,
                    9,
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "second",
                "shortest",
                "field",
                "goal",
                "during",
                "the",
                "first",
                "half",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8,
                    11
                ],
                [
                    9
                ],
                [],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    12
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    12
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_562_2075140b-c43e-4f31-88c5-a36619ec5883",
        "question_text": "How many total wins for the season did both teams come into this game with?",
        "split": "train",
        "decomposition": "return teams ;return wins that #1 did come into this game with ;return sum of #2",
        "program": [
            "SELECT['teams']",
            "PROJECT['wins that #REF did come into this game with', '#1']",
            "AGGREGATE['sum', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "wins that #REF did come into this game with",
                [
                    "SELECT",
                    "teams"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(wins that #REF did come into this game with)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_sum",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(wins that #REF did come into this game with)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    8,
                    9
                ],
                [
                    5
                ],
                [
                    6,
                    10,
                    11
                ],
                [
                    3,
                    4
                ],
                [
                    12,
                    13,
                    14,
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "total",
                "wins",
                "for",
                "the",
                "season",
                "did",
                "both",
                "teams",
                "come",
                "into",
                "this",
                "game",
                "with",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    6,
                    12
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    3,
                    6,
                    8
                ],
                [
                    2,
                    7,
                    9
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    4,
                    10,
                    11,
                    12,
                    14
                ],
                [
                    13,
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    14
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2641_4699c8d4-1273-4e78-93f1-6a649baa985c",
        "question_text": "Which team failed to score in the second quarter?",
        "split": "train",
        "decomposition": "return teams ;return #1 that score in  the  second quarter ;return #1 besides  #2",
        "program": [
            "SELECT['teams']",
            "FILTER['#1', 'that score in the second quarter']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "teams"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "teams"
                ],
                "that score in the second quarter"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the second quarter)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(teams)"
                ],
                "GET_QUESTION_SPAN(that score in the second quarter)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    2,
                    4
                ],
                [
                    3
                ],
                [],
                [
                    0,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "failed",
                "to",
                "score",
                "in",
                "the",
                "second",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1,
                    2,
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    5,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1776_da4f9eae-3232-4c51-9e7c-d30f1a3a54c7",
        "question_text": "How many percent of the dwellings in Sydney are not owned with a mortgage?",
        "split": "train",
        "decomposition": "return the  dwellings in  Sydney ;return #1 that is owned with any mortgage ;return #1 besides  #2 ;return number of  #3 in  percents",
        "program": [
            "SELECT['the dwellings in Sydney']",
            "FILTER['#1', 'that is owned with any mortgage']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "the dwellings in Sydney"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "the dwellings in Sydney"
                    ],
                    "that is owned with any mortgage"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the dwellings in Sydney)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the dwellings in Sydney)"
                    ],
                    "GET_QUESTION_SPAN(that is owned with any mortgage)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the dwellings in Sydney)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(the dwellings in Sydney)"
                    ],
                    "GET_QUESTION_SPAN(that is owned with any mortgage)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    5,
                    9
                ],
                [
                    3,
                    7
                ],
                [],
                [
                    6,
                    10
                ],
                [
                    8,
                    12
                ],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "dwellings",
                "in",
                "Sydney",
                "are",
                "not",
                "owned",
                "with",
                "a",
                "mortgage",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    9
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    6,
                    10
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    8
                ],
                [],
                [],
                [
                    2,
                    5,
                    9
                ],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ],
                [
                    6
                ],
                [],
                [
                    11
                ],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    13
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    13
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_814_c56fe4e2-f20e-4b53-93f6-36b6a1f904c7",
        "question_text": "Which kicker had the longer field goal?",
        "split": "train",
        "decomposition": "return field goals ;return the  longer of #1 ;return the  kicker of #2",
        "program": [
            "SELECT['field goals']",
            "PROJECT['the longer of #REF', '#1']",
            "PROJECT['the kicker of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "the kicker of #REF",
            [
                "PROJECT",
                "the longer of #REF",
                [
                    "SELECT",
                    "field goals"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the kicker of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the kicker of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the longer of #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(field goals)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Which",
                "kicker",
                "had",
                "the",
                "longer",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [],
                [
                    7
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_740_4dc64c24-bafc-4c0f-8f3d-c91ddf9ffbfe",
        "question_text": "How many religious divide did the organisation cross?",
        "split": "train",
        "decomposition": "return religious divides that the  organisation crosses ;return number of  #1",
        "program": [
            "SELECT['religious divides that the organisation crosses']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "religious divides that the organisation crosses"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religious divides that the organisation crosses)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(religious divides that the organisation crosses)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    4
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    2,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "religious",
                "divide",
                "did",
                "the",
                "organisation",
                "cross",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1441_3f727365-294c-4a9b-bf98-06f845c0b761",
        "question_text": "Whose stadium did the Broncos go to play at?",
        "split": "train",
        "decomposition": "return where did the  Broncos go to play at ;return Whose stadium was  #1",
        "program": [
            "SELECT['where did the Broncos go to play at']",
            "PROJECT['Whose stadium was #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "Whose stadium was #REF",
            [
                "SELECT",
                "where did the Broncos go to play at"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(Whose stadium was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where did the Broncos go to play at)"
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(Whose stadium was #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(where did the Broncos go to play at)"
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4
                ],
                [
                    1
                ],
                [
                    2,
                    5,
                    6,
                    8
                ],
                [
                    7,
                    9
                ]
            ],
            "question_tokens": [
                "Whose",
                "stadium",
                "did",
                "the",
                "Broncos",
                "go",
                "to",
                "play",
                "at",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    1,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_184_0fa6cb09-1acf-4273-90af-7b861d3138b7",
        "question_text": "Who was sacked more, Pennington or Manning?",
        "split": "train",
        "decomposition": "return when  was  Pennington sacked ;return number of  #1 ;return when  was  Manning sacked ;return number of  #3 ;return which is highest of #2 ,  #4",
        "program": [
            "SELECT['when was Pennington sacked']",
            "AGGREGATE['count', '#1']",
            "SELECT['when was Manning sacked']",
            "AGGREGATE['count', '#3']",
            "COMPARISON['max', '#2', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "when was Pennington sacked"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "when was Manning sacked"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Pennington sacked)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Manning sacked)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Pennington sacked)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Manning sacked)"
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    6
                ],
                [
                    1
                ],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "was",
                "sacked",
                "more",
                ",",
                "Pennington",
                "or",
                "Manning",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    3
                ],
                [
                    1
                ],
                [],
                [],
                [
                    2,
                    5
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    5
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_2474_2916cf1b-3a53-451e-9174-8b3fa5c0ab70",
        "question_text": "Which player had more touchdowns, Craig or Rice?",
        "split": "dev",
        "decomposition": "return touchdowns of Craig ;return touchdowns of Rice ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['touchdowns of Craig']",
            "SELECT['touchdowns of Rice']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Craig"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdowns of Rice"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Craig)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Rice)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Craig)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdowns of Rice)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7
                ],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "had",
                "more",
                "touchdowns",
                ",",
                "Craig",
                "or",
                "Rice",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [
                    5
                ],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    5,
                    7
                ],
                [
                    1,
                    3,
                    4
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1223_c3fd3d93-861a-446a-a16b-fd64e89c5f0a",
        "question_text": "Who was King of Poland second: Wenceslaus II or John of Bohemia?",
        "split": "train",
        "decomposition": "return when  was  Wenceslaus II King of Poland ;return when  was  John of Bohemia King of  Poland ;return which is the  highest of #1 ,  #2",
        "program": [
            "SELECT['when was Wenceslaus II King of Poland']",
            "SELECT['when was John of Bohemia King of Poland']",
            "COMPARISON['max', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "when was Wenceslaus II King of Poland"
            ],
            [
                "SELECT",
                "when was John of Bohemia King of Poland"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Wenceslaus II King of Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was John of Bohemia King of Poland)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Wenceslaus II King of Poland)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was John of Bohemia King of Poland)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    5,
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    10,
                    11,
                    12
                ],
                [
                    13
                ]
            ],
            "question_tokens": [
                "Who",
                "was",
                "King",
                "of",
                "Poland",
                "second",
                ":",
                "Wenceslaus",
                "II",
                "or",
                "John",
                "of",
                "Bohemia",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [],
                [
                    7
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    8,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    2
                ],
                [
                    4,
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    12
                ],
                [
                    2,
                    12
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3546_50b54e5b-4174-46a6-8c11-cb4a887e5be5",
        "question_text": "How many percent of people were not born abroad?",
        "split": "train",
        "decomposition": "return people ;return #1 that were born abroad ;return #1 besides  #2 ;return number of  #3 in  percents",
        "program": [
            "SELECT['people']",
            "FILTER['#1', 'that were born abroad']",
            "DISCARD['#1', '#2']",
            "AGGREGATE['count', '#3']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "people"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "people"
                    ],
                    "that were born abroad"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people)"
                    ],
                    "GET_QUESTION_SPAN(that were born abroad)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "DISCARD",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(people)"
                ],
                [
                    "FILTER",
                    [
                        "SELECT",
                        "GET_QUESTION_SPAN(people)"
                    ],
                    "GET_QUESTION_SPAN(that were born abroad)"
                ]
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "people",
                "were",
                "not",
                "born",
                "abroad",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5
                ],
                [],
                [],
                [
                    2,
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_history_1450_7a2dc15d-dad5-4886-96f1-5d67686bad09",
        "question_text": "How many fighters did Diaz have with 49 soldiers and 34 porters and archers?",
        "split": "dev",
        "decomposition": "return fighters that Diaz did have with 49 soldiers and  34 porters and archers ;return number of  #1",
        "program": [
            "SELECT['fighters that Diaz did have with 49 soldiers and 34 porters and archers']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "fighters that Diaz did have with 49 soldiers and 34 porters and archers"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(fighters that Diaz did have with 49 soldiers and 34 porters and archers)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "SELECT",
                "GET_QUESTION_SPAN(fighters that Diaz did have with 49 soldiers and 34 porters and archers)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    4,
                    8,
                    9,
                    12,
                    13
                ],
                [
                    3,
                    5,
                    10,
                    11
                ],
                [
                    6,
                    7,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fighters",
                "did",
                "Diaz",
                "have",
                "with",
                "49",
                "soldiers",
                "and",
                "34",
                "porters",
                "and",
                "archers",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    4,
                    8,
                    9,
                    13
                ],
                [],
                [
                    5,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    11,
                    12
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5,
                    13
                ],
                [
                    8,
                    9,
                    12
                ],
                [
                    7,
                    10
                ],
                [
                    6,
                    11
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    13
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    13
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1353_c3496d43-5b7e-4a26-855b-f6d19429f05d",
        "question_text": "How many days was the battle planned for April 13, 1911 delayed?",
        "split": "train",
        "decomposition": "return the  battle that was  planned for April 13 ,  1911 ;return days that #1 was  delayed ;return the  number of  #2",
        "program": [
            "SELECT['the battle that was planned for April 13 , 1911']",
            "PROJECT['days that #REF was delayed', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "days that #REF was delayed",
                [
                    "SELECT",
                    "the battle that was planned for April 13 , 1911"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(days that #REF was delayed)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the battle that was planned for April 13 , 1911)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(days that #REF was delayed)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the battle that was planned for April 13 , 1911)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    6,
                    9
                ],
                [
                    7,
                    8,
                    10,
                    12
                ],
                [
                    11,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "days",
                "was",
                "the",
                "battle",
                "planned",
                "for",
                "April",
                "13",
                ",",
                "1911",
                "delayed",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    10,
                    12
                ],
                [
                    8,
                    9
                ],
                [
                    11
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [
                    3
                ],
                [
                    4
                ],
                [
                    6,
                    9
                ],
                [
                    5,
                    10,
                    12
                ],
                [
                    7,
                    8
                ],
                [
                    11,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    11
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1377_f8211828-aeaf-4b07-a012-375f90378413",
        "question_text": "Which three countries on the Security Council have not had any changes?",
        "split": "train",
        "decomposition": "return countries on the  Security Council ;return #1 that have had changes ;return #1 besides  #2",
        "program": [
            "SELECT['countries on the Security Council']",
            "FILTER['#1', 'that have had changes']",
            "DISCARD['#1', '#2']"
        ],
        "nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "countries on the Security Council"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "countries on the Security Council"
                ],
                "that have had changes"
            ]
        ],
        "typed_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries on the Security Council)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(countries on the Security Council)"
                ],
                "GET_QUESTION_SPAN(that have had changes)"
            ]
        ],
        "drop_nested_expression": [
            "DISCARD",
            [
                "SELECT",
                "GET_QUESTION_SPAN(countries on the Security Council)"
            ],
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(countries on the Security Council)"
                ],
                "GET_QUESTION_SPAN(that have had changes)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "discard"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    1,
                    8
                ],
                [
                    2,
                    3,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    0,
                    9
                ],
                [
                    7
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "three",
                "countries",
                "on",
                "the",
                "Security",
                "Council",
                "have",
                "not",
                "had",
                "any",
                "changes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    8
                ],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    5,
                    6
                ],
                [],
                [
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    2
                ],
                [
                    9
                ],
                [
                    1,
                    8
                ],
                [
                    3
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    6
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1473_da91d227-5f18-4558-9118-4bb7e424ab65",
        "question_text": "What distance were the two shortest touchdowns Matt Schaub threw?",
        "split": "train",
        "decomposition": "return touchdowns of Matt Schaub ;return two shortest of #1 ;return distance of #2",
        "program": [
            "SELECT['touchdowns of Matt Schaub']",
            "AGGREGATE['min', '#1']",
            "PROJECT['distance of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "distance of #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdowns of Matt Schaub"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(distance of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Matt Schaub)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(distance of #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of Matt Schaub)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    3,
                    4,
                    6,
                    9
                ],
                [
                    1
                ],
                [
                    5,
                    7,
                    8
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "distance",
                "were",
                "the",
                "two",
                "shortest",
                "touchdowns",
                "Matt",
                "Schaub",
                "threw",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    9
                ],
                [],
                [
                    2
                ],
                [
                    4,
                    5,
                    8
                ],
                [],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    2,
                    9
                ],
                [
                    3,
                    4,
                    6
                ],
                [],
                [
                    1,
                    8
                ],
                [
                    5,
                    7
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1473_c9971774-8504-4cca-9cd9-96a2273630b0",
        "question_text": "Which player threw more touchdown passes, Matt Schaub or Carson Palmer?",
        "split": "train",
        "decomposition": "return touchdown passes of Matt Schaub ;return touchdown passes of Carson Palmer ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes of Matt Schaub']",
            "SELECT['touchdown passes of Carson Palmer']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Matt Schaub"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Carson Palmer"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Matt Schaub)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Carson Palmer)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Matt Schaub)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Carson Palmer)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Matt",
                "Schaub",
                "or",
                "Carson",
                "Palmer",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    8
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    10,
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2481_721551a1-af89-4280-a52e-b13915dea6f9",
        "question_text": "How many more million people were poor in 2014 than 2015?",
        "split": "train",
        "decomposition": "return million people that were poor in  2014 ;return million people that were poor in  2015 ;return number of  #1 ;return number of  #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['million people that were poor in 2014']",
            "SELECT['million people that were poor in 2015']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "million people that were poor in 2014"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "million people that were poor in 2015"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million people that were poor in 2014)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million people that were poor in 2015)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million people that were poor in 2014)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(million people that were poor in 2015)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [
                    7
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "more",
                "million",
                "people",
                "were",
                "poor",
                "in",
                "2014",
                "than",
                "2015",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [],
                [],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6,
                    8,
                    9,
                    10
                ],
                [],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    0,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1022_03c00210-9d23-46f0-89c6-d67ae880fab8",
        "question_text": "How many troops in all made up the People's Liberation Army and the Burmese Army?",
        "split": "train",
        "decomposition": "return the  troops that made up the People 's Liberation Army  ;return the  troops that made up the Burmese Army  ;return number of  #1 ;return number of  #2 ;return sum of #3 and  #4",
        "program": [
            "SELECT[\"the troops that made up the People 's Liberation Army\"]",
            "SELECT['the troops that made up the Burmese Army']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "ARITHMETIC['sum', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the troops that made up the People 's Liberation Army"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "the troops that made up the Burmese Army"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that made up the People 's Liberation Army)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that made up the Burmese Army)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that made up the People 's Liberation Army)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the troops that made up the Burmese Army)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    11,
                    12,
                    15
                ],
                [
                    1
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [],
                [
                    8,
                    9,
                    10
                ],
                [
                    13,
                    14
                ],
                [
                    16
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "troops",
                "in",
                "all",
                "made",
                "up",
                "the",
                "People",
                "'s",
                "Liberation",
                "Army",
                "and",
                "the",
                "Burmese",
                "Army",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    12
                ],
                [],
                [],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    8,
                    9,
                    10,
                    11
                ],
                [],
                [
                    14
                ],
                [],
                [],
                [
                    15
                ],
                [
                    16
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    11,
                    12,
                    15
                ],
                [
                    4
                ],
                [
                    8
                ],
                [],
                [],
                [],
                [],
                [
                    9,
                    10
                ],
                [
                    14
                ],
                [],
                [
                    16
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    15
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    15
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    15
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1642_92ea55a2-4af4-4da3-a352-0c5dd6360fc9",
        "question_text": "Which team scored the most in the third quarter?",
        "split": "train",
        "decomposition": "return teams ;return when  #1 scored in  the  third quarter ;return the  number of  #2 for each #1 ;return #1 where #3 is the  highest",
        "program": [
            "SELECT['teams']",
            "PROJECT['when #REF scored in the third quarter', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "teams"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "when #REF scored in the third quarter",
                    [
                        "SELECT",
                        "teams"
                    ]
                ],
                [
                    "SELECT",
                    "teams"
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(when #REF scored in the third quarter)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(teams)"
            ],
            [
                "PARTIAL_SELECT_SINGLE_NUM",
                "GET_QUESTION_SPAN(when #REF scored in the third quarter)"
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    4
                ],
                [
                    7
                ],
                [
                    5
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "team",
                "scored",
                "the",
                "most",
                "in",
                "the",
                "third",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7
                ],
                [
                    5
                ],
                [
                    9
                ],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_844_9d7aaae4-08e9-4c5c-90dc-2b691e0a6838",
        "question_text": "Who caught the most touchdowns for Seattle?",
        "split": "train",
        "decomposition": "return touchdowns for Seattle ;return who  caught #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is the  highest",
        "program": [
            "SELECT['touchdowns for Seattle']",
            "PROJECT['who caught #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is the highest']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "who caught #REF",
                [
                    "SELECT",
                    "touchdowns for Seattle"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "touchdowns for Seattle"
                ],
                [
                    "PROJECT",
                    "who caught #REF",
                    [
                        "SELECT",
                        "touchdowns for Seattle"
                    ]
                ]
            ],
            "is the highest"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who caught #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns for Seattle)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who caught #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdowns for Seattle)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is the highest)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [],
                [],
                [
                    1,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "question_tokens": [
                "Who",
                "caught",
                "the",
                "most",
                "touchdowns",
                "for",
                "Seattle",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ]
            ]
        }
    },
    {
        "question_id": "DROP_dev_nfl_1222_eb02a495-08f1-4721-ab76-01e515b78aa0",
        "question_text": "Which player scored more field goals, Nate Kaeding or Taylor Mehlhaff?",
        "split": "dev",
        "decomposition": "return field goals that Nate Kaeding scored ;return field goals that Taylor Mehlhaff scored ;return number of  #1 ;return number of  #2 ;return which is more of #3 ,  #4",
        "program": [
            "SELECT['field goals that Nate Kaeding scored']",
            "SELECT['field goals that Taylor Mehlhaff scored']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Nate Kaeding scored"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "field goals that Taylor Mehlhaff scored"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nate Kaeding scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Taylor Mehlhaff scored)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Nate Kaeding scored)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(field goals that Taylor Mehlhaff scored)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    7,
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "scored",
                "more",
                "field",
                "goals",
                ",",
                "Nate",
                "Kaeding",
                "or",
                "Taylor",
                "Mehlhaff",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2445_a93fadc5-6c72-4eeb-b9f7-00447b21c13d",
        "question_text": "How many points did the Giants beat the Saints by?",
        "split": "train",
        "decomposition": "return points of the  Giants ;return points of the  Saints ;return sum of #1 ;return sum of #2 ;return difference of #3 and  #4",
        "program": [
            "SELECT['points of the Giants']",
            "SELECT['points of the Saints']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the Giants"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "points of the Saints"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Giants)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Saints)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Giants)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(points of the Saints)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    7
                ],
                [
                    8,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "points",
                "did",
                "the",
                "Giants",
                "beat",
                "the",
                "Saints",
                "by",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    3
                ],
                [
                    2
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ],
                [
                    8,
                    9
                ],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    9
                ],
                [
                    8,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_774_bb0baed7-86c9-43a5-b2f8-83402369e4c0",
        "question_text": "What even happened first, the Covenanter army defeating the royalist army, or the Covenanters being defeated at the Battle of Rullion?",
        "split": "train",
        "decomposition": "return when  did Covenanter army defeat the  royalist army  ;return when  was  Covenanters defeated at the  Battle of Rullion ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when did Covenanter army defeat the royalist army']",
            "SELECT['when was Covenanters defeated at the Battle of Rullion']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when did Covenanter army defeat the royalist army"
            ],
            [
                "SELECT",
                "when was Covenanters defeated at the Battle of Rullion"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Covenanter army defeat the royalist army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Covenanters defeated at the Battle of Rullion)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when did Covenanter army defeat the royalist army)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was Covenanters defeated at the Battle of Rullion)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    6,
                    8,
                    12,
                    13,
                    16,
                    20
                ],
                [
                    5,
                    7,
                    9,
                    10,
                    11
                ],
                [
                    15
                ],
                [
                    14,
                    17,
                    18,
                    19,
                    21
                ],
                [
                    22,
                    23
                ]
            ],
            "question_tokens": [
                "What",
                "even",
                "happened",
                "first",
                ",",
                "the",
                "Covenanter",
                "army",
                "defeating",
                "the",
                "royalist",
                "army",
                ",",
                "or",
                "the",
                "Covenanters",
                "being",
                "defeated",
                "at",
                "the",
                "Battle",
                "of",
                "Rullion",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    12,
                    16
                ],
                [
                    6
                ],
                [
                    7,
                    8,
                    11
                ],
                [
                    10,
                    13
                ],
                [
                    15
                ],
                [],
                [
                    20
                ],
                [
                    17,
                    18,
                    19,
                    21
                ],
                [],
                [
                    22,
                    23
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    4,
                    7,
                    11,
                    12,
                    13
                ],
                [
                    1,
                    2,
                    3,
                    6,
                    8,
                    16,
                    20
                ],
                [
                    10
                ],
                [],
                [
                    15
                ],
                [],
                [
                    17,
                    18
                ],
                [
                    22,
                    23
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    22
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    15
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    22
                ],
                [
                    17,
                    22
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    22
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    22
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ],
                [
                    21,
                    22
                ],
                [
                    22,
                    22
                ],
                [
                    23,
                    23
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3219_6359ee17-2e97-497a-aec0-10e1635ec07e",
        "question_text": "How many percentage points had Apple's market share decreased by in 2013 from 2012?",
        "split": "train",
        "decomposition": "return percentage of Apple 's market share in  2013 ;return percentage of Apple 's market shares in  2012 ;return difference of #1 and  #2",
        "program": [
            "SELECT[\"percentage of Apple 's market share in 2013\"]",
            "SELECT[\"percentage of Apple 's market shares in 2012\"]",
            "ARITHMETIC['difference', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT",
                "percentage of Apple 's market share in 2013"
            ],
            [
                "SELECT",
                "percentage of Apple 's market shares in 2012"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Apple 's market share in 2013)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Apple 's market shares in 2012)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Apple 's market share in 2013)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percentage of Apple 's market shares in 2012)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4
                ],
                [
                    10
                ],
                [
                    8,
                    9,
                    12,
                    14
                ],
                [
                    11,
                    13
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percentage",
                "points",
                "had",
                "Apple",
                "'s",
                "market",
                "share",
                "decreased",
                "by",
                "in",
                "2013",
                "from",
                "2012",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ],
                [
                    7,
                    9,
                    12
                ],
                [],
                [],
                [
                    10,
                    11
                ],
                [],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2
                ],
                [
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [],
                [
                    10
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    12,
                    14
                ],
                [],
                [],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    14
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    14
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    14
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1446_9929623b-1882-49cf-aa83-83f7267b5e07",
        "question_text": "How many yards was the interception that followed the 15 yard TD catch?",
        "split": "train",
        "decomposition": "return the  15 yard TD catch ;return the  interception that followed #1 ;return yards of #2",
        "program": [
            "SELECT['the 15 yard TD catch']",
            "PROJECT['the interception that followed #REF', '#1']",
            "PROJECT['yards of #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "yards of #REF",
            [
                "PROJECT",
                "the interception that followed #REF",
                [
                    "SELECT",
                    "the 15 yard TD catch"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(yards of #REF)",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the interception that followed #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 15 yard TD catch)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(the interception that followed #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 15 yard TD catch)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    6,
                    8,
                    11
                ],
                [
                    7,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "interception",
                "that",
                "followed",
                "the",
                "15",
                "yard",
                "TD",
                "catch",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    3
                ],
                [
                    6
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    8
                ],
                [
                    9,
                    10,
                    11
                ],
                [],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    12
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    6,
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    5,
                    7
                ],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_377_f55a0af4-6455-4fbd-b6bc-65065eeade4c",
        "question_text": "How many in all were in the Russian army and Left Bank Cossacks that were headed to Perekop in May 1687?",
        "split": "train",
        "decomposition": "return size of Russian army that was  headed to Perekop in   May 1687 ;return size of the  Left Bank Cossacks that were headed to Perekop in   May 1687 ;return sum of #1 and  #2",
        "program": [
            "SELECT['size of Russian army that was headed to Perekop in May 1687']",
            "SELECT['size of the Left Bank Cossacks that were headed to Perekop in May 1687']",
            "ARITHMETIC['sum', '#1', '#2']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT",
                "size of Russian army that was headed to Perekop in May 1687"
            ],
            [
                "SELECT",
                "size of the Left Bank Cossacks that were headed to Perekop in May 1687"
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(size of Russian army that was headed to Perekop in May 1687)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(size of the Left Bank Cossacks that were headed to Perekop in May 1687)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(size of Russian army that was headed to Perekop in May 1687)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(size of the Left Bank Cossacks that were headed to Perekop in May 1687)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    4,
                    9,
                    14
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    13
                ],
                [
                    11,
                    12,
                    15,
                    16,
                    17,
                    19
                ],
                [
                    18
                ],
                [
                    20,
                    21
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "in",
                "all",
                "were",
                "in",
                "the",
                "Russian",
                "army",
                "and",
                "Left",
                "Bank",
                "Cossacks",
                "that",
                "were",
                "headed",
                "to",
                "Perekop",
                "in",
                "May",
                "1687",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    4,
                    9
                ],
                [
                    3
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ],
                [
                    14
                ],
                [],
                [],
                [
                    18
                ],
                [
                    15,
                    17,
                    19
                ],
                [
                    20
                ],
                [
                    21
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    4,
                    9,
                    14
                ],
                [
                    3
                ],
                [
                    10,
                    11
                ],
                [
                    8
                ],
                [
                    7
                ],
                [],
                [],
                [
                    12,
                    15,
                    16,
                    17
                ],
                [],
                [
                    19
                ],
                [
                    20,
                    21
                ]
            ],
            "question_spans": [
                [
                    0,
                    3
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    20
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    20
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    20
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    20
                ],
                [
                    14,
                    14
                ],
                [
                    14,
                    20
                ],
                [
                    15,
                    20
                ],
                [
                    15,
                    15
                ],
                [
                    16,
                    16
                ],
                [
                    16,
                    17
                ],
                [
                    17,
                    17
                ],
                [
                    18,
                    20
                ],
                [
                    18,
                    18
                ],
                [
                    19,
                    19
                ],
                [
                    19,
                    20
                ],
                [
                    20,
                    20
                ],
                [
                    21,
                    21
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1895_308f92b5-eca1-4cd5-b1a2-9888781a292d",
        "question_text": "How many races made up no more than 1% of the population?",
        "split": "train",
        "decomposition": "return races ;return #1 that made up at most 1 % of the  population ;return the  number of  #2",
        "program": [
            "SELECT['races']",
            "FILTER['#1', 'that made up at most 1 % of the population']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "races"
                ],
                "that made up at most 1 % of the population"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(races)"
                ],
                "GET_QUESTION_SPAN(that made up at most 1 % of the population)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "FILTER",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(races)"
                ],
                "GET_QUESTION_SPAN(that made up at most 1 % of the population)"
            ]
        ],
        "operators": [
            "select",
            "filter",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    4,
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    5,
                    7
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "races",
                "made",
                "up",
                "no",
                "more",
                "than",
                "1",
                "%",
                "of",
                "the",
                "population",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    8
                ],
                [
                    5
                ],
                [
                    10,
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    3
                ],
                [
                    4,
                    8,
                    9
                ],
                [],
                [
                    5
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    12
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    12
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_453_cfbe95f5-999e-4e68-9029-0992ceaee93f",
        "question_text": "Which player threw more touchdown passes, Drew Brees or Byron Leftwich?",
        "split": "train",
        "decomposition": "return touchdown passes of Drew Brees ;return touchdown passes of Byron Leftwich ;return number of  #1 ;return number of  #2 ;return which is highest of #3 ,  #4",
        "program": [
            "SELECT['touchdown passes of Drew Brees']",
            "SELECT['touchdown passes of Byron Leftwich']",
            "AGGREGATE['count', '#1']",
            "AGGREGATE['count', '#2']",
            "COMPARISON['max', '#3', '#4']"
        ],
        "nested_expression": [
            "COMPARISON_max",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Drew Brees"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "touchdown passes of Byron Leftwich"
                ]
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Drew Brees)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Byron Leftwich)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_count_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Drew Brees)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(touchdown passes of Byron Leftwich)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    9
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "threw",
                "more",
                "touchdown",
                "passes",
                ",",
                "Drew",
                "Brees",
                "or",
                "Byron",
                "Leftwich",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    5
                ],
                [],
                [
                    6
                ],
                [
                    4,
                    7
                ],
                [],
                [
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    8
                ],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [],
                [
                    8
                ],
                [
                    7
                ],
                [
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    11
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1660_826b5f81-1688-470b-82cf-e41ec35bfe2e",
        "question_text": "Which occurred first, the Nivelle Offensive or a British attack at Passchendaele?",
        "split": "train",
        "decomposition": "return when  was  the  Nivelle Offensive ;return when  was  a British attack at most Passchendaele ;return which was  first of #1 ,  #2",
        "program": [
            "SELECT['when was the Nivelle Offensive']",
            "SELECT['when was a British attack at most Passchendaele']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "when was the Nivelle Offensive"
            ],
            [
                "SELECT",
                "when was a British attack at most Passchendaele"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Nivelle Offensive)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was a British attack at most Passchendaele)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_DATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was the Nivelle Offensive)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(when was a British attack at most Passchendaele)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    7,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [
                    8,
                    9,
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_tokens": [
                "Which",
                "occurred",
                "first",
                ",",
                "the",
                "Nivelle",
                "Offensive",
                "or",
                "a",
                "British",
                "attack",
                "at",
                "Passchendaele",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    12
                ],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    3,
                    7,
                    8
                ],
                [
                    1,
                    2,
                    10
                ],
                [
                    5
                ],
                [
                    6,
                    9
                ],
                [],
                [],
                [
                    11
                ],
                [
                    12,
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    12
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    12
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    12
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_221_6bcf8b87-7f6b-48e4-92aa-23a714c56a98",
        "question_text": "How many yards was the longest touchdown over the entire game?",
        "split": "train",
        "decomposition": "return yards of touchdowns over the  entire game ;return the  longest of #1",
        "program": [
            "SELECT['yards of touchdowns over the entire game']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdowns over the entire game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdowns over the entire game)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdowns over the entire game)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    10,
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "over",
                "the",
                "entire",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    7
                ],
                [
                    5,
                    6,
                    9
                ],
                [],
                [],
                [
                    10,
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_615_dbe5d4d0-7a43-47ab-9aaa-b1559f034b78",
        "question_text": "Which players made at least three field goals?",
        "split": "train",
        "decomposition": "return players ;return field goals of #1 ;return number of  #2 for each #1 ;return #1 where #3 is at least three",
        "program": [
            "SELECT['players']",
            "PROJECT['field goals of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is at least three']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ],
            "is at least three"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least three)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is at least three)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    5
                ],
                [
                    2,
                    3
                ],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Which",
                "players",
                "made",
                "at",
                "least",
                "three",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [],
                [],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [],
                [
                    0,
                    5
                ],
                [
                    1
                ],
                [],
                [
                    3
                ],
                [],
                [],
                [
                    4,
                    6
                ],
                [],
                [
                    7
                ],
                [],
                [],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1220_437abbde-29e2-4c84-86b1-640e89fa8df5",
        "question_text": "How many years span all of these events?",
        "split": "train",
        "decomposition": "return all of these events ;return years that span #1 ;return number of  #2",
        "program": [
            "SELECT['all of these events']",
            "PROJECT['years that span #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "years that span #REF",
                [
                    "SELECT",
                    "all of these events"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that span #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(all of these events)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(years that span #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(all of these events)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "span",
                "all",
                "of",
                "these",
                "events",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [
                    5
                ],
                [
                    6
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    6
                ],
                [],
                [],
                [
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_595_b2ae93a5-4ffb-4191-94d0-99db312308f4",
        "question_text": "How many members of Guy's family did Philip imprison?",
        "split": "train",
        "decomposition": "return members of Guy 's family that Philip imprison ;return number of  #1",
        "program": [
            "SELECT[\"members of Guy 's family that Philip imprison\"]",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "members of Guy 's family that Philip imprison"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(members of Guy 's family that Philip imprison)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(members of Guy 's family that Philip imprison)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    7
                ],
                [
                    3,
                    4,
                    5,
                    6,
                    8
                ],
                [
                    2,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "members",
                "of",
                "Guy",
                "'s",
                "family",
                "did",
                "Philip",
                "imprison",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [],
                [
                    3,
                    4,
                    5,
                    7,
                    8
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    7,
                    8
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2245_ee94b166-3609-46ae-a365-a01a39b7e65e",
        "question_text": "How many yards was the longest touchdown pass thrown?",
        "split": "train",
        "decomposition": "return yards of touchdown passes thrown ;return the  longest of #1",
        "program": [
            "SELECT['yards of touchdown passes thrown']",
            "AGGREGATE['max', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "yards of touchdown passes thrown"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of touchdown passes thrown)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_max",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of touchdown passes thrown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "the",
                "longest",
                "touchdown",
                "pass",
                "thrown",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7
                ],
                [],
                [],
                [],
                [],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1848_00683c95-f169-439b-9829-bbdba909340f",
        "question_text": "How many 50-yard field goals occurred in the game?",
        "split": "train",
        "decomposition": "return 50-yard field goals that occurred in  the  game ;return number of  #1",
        "program": [
            "SELECT['50-yard field goals that occurred in the game']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "50-yard field goals that occurred in the game"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(50-yard field goals that occurred in the game)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(50-yard field goals that occurred in the game)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "50-yard",
                "field",
                "goals",
                "occurred",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    4,
                    5
                ],
                [
                    6,
                    7
                ],
                [],
                [
                    8,
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1650_16f7e4df-cc59-452f-bc17-1948a1fd9040",
        "question_text": "Who had two touchdown catches for the Seahawks?",
        "split": "train",
        "decomposition": "return who  had touchdown catches for the  Seahawks ;return touchdown catches of #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['who had touchdown catches for the Seahawks']",
            "PROJECT['touchdown catches of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "who had touchdown catches for the Seahawks"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdown catches of #REF",
                    [
                        "SELECT",
                        "who had touchdown catches for the Seahawks"
                    ]
                ],
                [
                    "SELECT",
                    "who had touchdown catches for the Seahawks"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had touchdown catches for the Seahawks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown catches of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(who had touchdown catches for the Seahawks)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown catches of #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    7
                ],
                [
                    8
                ]
            ],
            "question_tokens": [
                "Who",
                "had",
                "two",
                "touchdown",
                "catches",
                "for",
                "the",
                "Seahawks",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    1,
                    2
                ],
                [
                    4
                ],
                [
                    3
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [],
                [
                    7
                ],
                [],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [],
                [
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    2
                ],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [],
                [
                    8
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_948_879c55f6-c8c4-4c4f-aca8-507c66a151ee",
        "question_text": "How many fewer field goal yards were there than TD pass yards total?",
        "split": "train",
        "decomposition": "return yards  of field goals ;return yards  of TD passes ;return the  sum of #1 ;return the  sum of #2 ;return the  difference of #3 and  #4",
        "program": [
            "SELECT['yards of field goals']",
            "SELECT['yards of TD passes']",
            "AGGREGATE['sum', '#1']",
            "AGGREGATE['sum', '#2']",
            "ARITHMETIC['difference', '#3', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of field goals"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "yards of TD passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals)"
                ]
            ],
            [
                "AGGREGATE_sum",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of TD passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "select",
            "aggregate",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    7,
                    8
                ],
                [
                    3,
                    4,
                    5,
                    6
                ],
                [],
                [
                    9,
                    10
                ],
                [
                    11,
                    12
                ],
                [],
                [
                    13
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "fewer",
                "field",
                "goal",
                "yards",
                "were",
                "there",
                "than",
                "TD",
                "pass",
                "yards",
                "total",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [],
                [
                    11,
                    12
                ],
                [],
                [],
                [],
                [
                    10
                ],
                [],
                [
                    13
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    7
                ],
                [
                    3,
                    4,
                    6
                ],
                [
                    5
                ],
                [],
                [],
                [],
                [
                    8,
                    9
                ],
                [
                    11,
                    12
                ],
                [],
                [],
                [
                    13
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    12
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    12
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    9,
                    12
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1930_a828a2d5-928f-4aee-9e49-cf59e770d309",
        "question_text": "Who scored the first touchdown of the game for Minnesota?",
        "split": "train",
        "decomposition": "return touchdowns of the  game for Minnesota ;return the  first of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdowns of the game for Minnesota']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdowns of the game for Minnesota"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game for Minnesota)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdowns of the game for Minnesota)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    6
                ],
                [],
                [
                    3,
                    4
                ],
                [
                    5,
                    8,
                    9
                ],
                [
                    7,
                    10
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "first",
                "touchdown",
                "of",
                "the",
                "game",
                "for",
                "Minnesota",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3
                ],
                [],
                [
                    4
                ],
                [],
                [
                    5,
                    6
                ],
                [
                    8
                ],
                [
                    7
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4,
                    5,
                    6
                ],
                [],
                [],
                [
                    3
                ],
                [],
                [
                    8,
                    9
                ],
                [
                    7,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2059_2735e175-c02f-4c81-97da-09c06dfbd5f1",
        "question_text": "What was the 49ers single play of the game",
        "split": "train",
        "decomposition": "return the  49ers single play of the game",
        "program": [
            "SELECT['the 49ers single play of the game']"
        ],
        "nested_expression": [
            "SELECT",
            "the 49ers single play of the game"
        ],
        "typed_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the 49ers single play of the game)"
        ],
        "drop_nested_expression": [
            "SELECT",
            "GET_QUESTION_SPAN(the 49ers single play of the game)"
        ],
        "operators": [
            "select"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    6,
                    7
                ],
                [
                    4,
                    5,
                    8
                ]
            ],
            "question_tokens": [
                "What",
                "was",
                "the",
                "49ers",
                "single",
                "play",
                "of",
                "the",
                "game"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1,
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    6,
                    7
                ],
                [
                    8
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    6,
                    7
                ],
                [
                    5
                ],
                [
                    4,
                    8
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    8
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_441_4aec6ae8-7453-495b-8e46-d50ea257580c",
        "question_text": "Which player was involved in the most touchdown passes?",
        "split": "train",
        "decomposition": "return players ;return touchdown passes involved in  of #1 ;return number of  #2 for each #1 ;return #1 where #3 is highest",
        "program": [
            "SELECT['players']",
            "PROJECT['touchdown passes involved in of #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "SUPERLATIVE['max', '#1', '#3']"
        ],
        "nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "players"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "touchdown passes involved in of #REF",
                    [
                        "SELECT",
                        "players"
                    ]
                ],
                [
                    "SELECT",
                    "players"
                ]
            ]
        ],
        "typed_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes involved in of #REF)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SUPERLATIVE_max",
            [
                "SELECT",
                "GET_QUESTION_SPAN(players)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(touchdown passes involved in of #REF)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "superlative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2,
                    3,
                    5
                ],
                [],
                [
                    1,
                    6
                ],
                [
                    4,
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "was",
                "involved",
                "in",
                "the",
                "most",
                "touchdown",
                "passes",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2
                ],
                [
                    3
                ],
                [
                    4
                ],
                [],
                [],
                [],
                [],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0,
                    1
                ],
                [
                    6
                ],
                [
                    3
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1946_3bf42d6b-d821-4a45-9dd7-a9c0050c0287",
        "question_text": "Who scored the shortest touchdown pass?",
        "split": "train",
        "decomposition": "return touchdown passes ;return the  shortest of #1 ;return who  scored #2",
        "program": [
            "SELECT['touchdown passes']",
            "AGGREGATE['min', '#1']",
            "PROJECT['who scored #REF', '#2']"
        ],
        "nested_expression": [
            "PROJECT",
            "who scored #REF",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "touchdown passes"
                ]
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(who scored #REF)",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(touchdown passes)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2
                ],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [
                    6
                ]
            ],
            "question_tokens": [
                "Who",
                "scored",
                "the",
                "shortest",
                "touchdown",
                "pass",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    4,
                    5
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    6
                ]
            ],
            "fastalign.grammar": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2,
                    4
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [],
                [],
                [
                    6
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_1297_41595148-263c-4b6e-87c4-39b1d43d4499",
        "question_text": "In what quarter did Phil Dawson kick two field goals?",
        "split": "train",
        "decomposition": "return quarters ;return field goals of Dawson in  #1 ;return the  number of  #2 for each #1 ;return #1 where #3 is two",
        "program": [
            "SELECT['quarters']",
            "PROJECT['field goals of Dawson in #REF', '#1']",
            "GROUP['count', '#2', '#1']",
            "COMPARATIVE['#1', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "quarters"
            ],
            [
                "GROUP_count",
                [
                    "PROJECT",
                    "field goals of Dawson in #REF",
                    [
                        "SELECT",
                        "quarters"
                    ]
                ],
                [
                    "SELECT",
                    "quarters"
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of Dawson in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(quarters)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(field goals of Dawson in #REF)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    3
                ],
                [],
                [
                    4,
                    5
                ],
                [
                    2,
                    7,
                    8,
                    9
                ],
                [
                    6
                ],
                [],
                [
                    10
                ]
            ],
            "question_tokens": [
                "In",
                "what",
                "quarter",
                "did",
                "Phil",
                "Dawson",
                "kick",
                "two",
                "field",
                "goals",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [],
                [],
                [],
                [],
                [
                    3
                ],
                [
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    8,
                    9
                ],
                [],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    1
                ],
                [
                    0
                ],
                [],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    7,
                    8
                ],
                [],
                [
                    2,
                    9
                ],
                [],
                [],
                [
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_878_c77d5c8e-6ee4-4894-849c-68739f045574",
        "question_text": "How many yards was Brown's shortest field goal?",
        "split": "train",
        "decomposition": "return yards of field goals of  Brown ;return the  shortest of #1",
        "program": [
            "SELECT['yards of field goals of Brown']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "yards of field goals of Brown"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(yards of field goals of Brown)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(yards of field goals of Brown)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    4
                ],
                [
                    9
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "yards",
                "was",
                "Brown",
                "'s",
                "shortest",
                "field",
                "goal",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [],
                [
                    2,
                    3,
                    5,
                    6,
                    7,
                    8
                ],
                [],
                [
                    4
                ],
                [],
                [],
                [],
                [
                    9
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4
                ],
                [],
                [
                    2,
                    3,
                    5
                ],
                [
                    6,
                    7,
                    8
                ],
                [],
                [],
                [
                    9
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_3281_d6d374a1-1a1b-4feb-a01d-16a2a9264c66",
        "question_text": "How many percent of the jobs in the tertiary sector were not in health care?",
        "split": "train",
        "decomposition": "return percent of jobs in  the  tertiary sector that were in health care ;return the  difference of 100 and  #1",
        "program": [
            "SELECT['percent of jobs in the tertiary sector that were in health care']",
            "PROJECT['the difference of 100 and #REF', '#1']"
        ],
        "nested_expression": [
            "PROJECT",
            "the difference of 100 and #REF",
            [
                "SELECT",
                "percent of jobs in the tertiary sector that were in health care"
            ]
        ],
        "typed_nested_expression": [
            "PROJECT",
            "GET_QUESTION_SPAN(the difference of 100 and #REF)",
            [
                "SELECT",
                "GET_QUESTION_SPAN(percent of jobs in the tertiary sector that were in health care)"
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_difference",
            "SELECT_IMPLICIT_NUM(100)",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(percent of jobs in the tertiary sector that were in health care)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    8,
                    10,
                    11
                ],
                [
                    9
                ],
                [
                    4,
                    6,
                    7,
                    12,
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "percent",
                "of",
                "the",
                "jobs",
                "in",
                "the",
                "tertiary",
                "sector",
                "were",
                "not",
                "in",
                "health",
                "care",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    5,
                    11
                ],
                [],
                [
                    10
                ],
                [
                    8
                ],
                [],
                [
                    12
                ],
                [
                    9
                ],
                [
                    13,
                    14
                ],
                [
                    15
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    8,
                    10,
                    11
                ],
                [],
                [
                    9
                ],
                [
                    12,
                    13
                ],
                [
                    14
                ],
                [
                    15
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    9
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    14
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ],
                [
                    12,
                    14
                ],
                [
                    13,
                    13
                ],
                [
                    13,
                    14
                ],
                [
                    14,
                    14
                ],
                [
                    15,
                    15
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1256_26108bf2-f7e6-4412-9bbd-da44ba15514d",
        "question_text": "How many minimum ducats fines were imposed on the guilds as punishment?",
        "split": "train",
        "decomposition": "return fines that were imposed on the  guilds as punishment in  ducats ;return the  minimum of #1",
        "program": [
            "SELECT['fines that were imposed on the guilds as punishment in ducats']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "fines that were imposed on the guilds as punishment in ducats"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(fines that were imposed on the guilds as punishment in ducats)"
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "AGGREGATE_min",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(fines that were imposed on the guilds as punishment in ducats)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    3,
                    5
                ],
                [
                    2,
                    4,
                    6,
                    9
                ],
                [
                    7,
                    8,
                    10
                ],
                [
                    11,
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "minimum",
                "ducats",
                "fines",
                "were",
                "imposed",
                "on",
                "the",
                "guilds",
                "as",
                "punishment",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    3
                ],
                [],
                [
                    2,
                    4
                ],
                [
                    5
                ],
                [],
                [
                    6,
                    7,
                    8,
                    10
                ],
                [
                    9
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    5
                ],
                [
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    6,
                    9
                ],
                [
                    7,
                    10
                ],
                [
                    11
                ],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    11
                ],
                [
                    6,
                    11
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_2087_2fe3a4d3-955c-4579-b331-8b41966ddbff",
        "question_text": "Which player got two 1-yard touchdown runs in the game?",
        "split": "train",
        "decomposition": "return 1-yard touchdown runs in  the  game ;return player of #1 ;return the  number of  #1 for each #2 ;return #2 where #3 is two",
        "program": [
            "SELECT['1-yard touchdown runs in the game']",
            "PROJECT['player of #REF', '#1']",
            "GROUP['count', '#1', '#2']",
            "COMPARATIVE['#2', '#3', 'is two']"
        ],
        "nested_expression": [
            "COMPARATIVE",
            [
                "PROJECT",
                "player of #REF",
                [
                    "SELECT",
                    "1-yard touchdown runs in the game"
                ]
            ],
            [
                "GROUP_count",
                [
                    "SELECT",
                    "1-yard touchdown runs in the game"
                ],
                [
                    "PROJECT",
                    "player of #REF",
                    [
                        "SELECT",
                        "1-yard touchdown runs in the game"
                    ]
                ]
            ],
            "is two"
        ],
        "typed_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(player of #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(1-yard touchdown runs in the game)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARATIVE",
            [
                "SELECT",
                "GET_QUESTION_SPAN(player of #REF)"
            ],
            [
                "PARTIAL_GROUP_count",
                [
                    "PARTIAL_PROJECT",
                    "GET_QUESTION_SPAN(1-yard touchdown runs in the game)"
                ]
            ],
            [
                "CONDITION",
                "GET_QUESTION_SPAN(is two)"
            ]
        ],
        "operators": [
            "select",
            "project",
            "group",
            "comparative"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0
                ],
                [
                    2
                ],
                [],
                [
                    1,
                    4
                ],
                [
                    3,
                    5,
                    7
                ],
                [
                    6
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "question_tokens": [
                "Which",
                "player",
                "got",
                "two",
                "1-yard",
                "touchdown",
                "runs",
                "in",
                "the",
                "game",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0
                ],
                [],
                [],
                [
                    2
                ],
                [],
                [],
                [
                    1,
                    3
                ],
                [],
                [
                    5
                ],
                [
                    4
                ],
                [
                    6
                ],
                [],
                [],
                [],
                [],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    2
                ],
                [
                    0
                ],
                [
                    1
                ],
                [],
                [],
                [
                    4
                ],
                [],
                [
                    3
                ],
                [],
                [
                    5
                ],
                [
                    6
                ],
                [
                    7
                ],
                [
                    9,
                    10
                ],
                []
            ],
            "question_spans": [
                [
                    0,
                    1
                ],
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1506_5d45ba76-f07b-4fd7-bd12-67e23114dc93",
        "question_text": "How many ex-prisoners and prison guards participated in the uprising?",
        "split": "train",
        "decomposition": "return ex-prisoners that participated in  uprising ;return number of  #1 ;return prison guards that participated in  uprising ;return number of  #3 ;return sum of #2 and  #4",
        "program": [
            "SELECT['ex-prisoners that participated in uprising']",
            "AGGREGATE['count', '#1']",
            "SELECT['prison guards that participated in uprising']",
            "AGGREGATE['count', '#3']",
            "ARITHMETIC['sum', '#2', '#4']"
        ],
        "nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "ex-prisoners that participated in uprising"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "prison guards that participated in uprising"
                ]
            ]
        ],
        "typed_nested_expression": [
            "ARITHMETIC_sum",
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(ex-prisoners that participated in uprising)"
                ]
            ],
            [
                "AGGREGATE_count",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(prison guards that participated in uprising)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "ARITHMETIC_sum",
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(ex-prisoners that participated in uprising)"
                ]
            ],
            [
                "SELECT_NUM",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(prison guards that participated in uprising)"
                ]
            ]
        ],
        "operators": [
            "select",
            "aggregate",
            "select",
            "aggregate",
            "arithmetic"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    2,
                    5,
                    7
                ],
                [
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    8
                ],
                [],
                [
                    9,
                    10,
                    11
                ],
                [
                    12
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "ex",
                "-",
                "prisoners",
                "and",
                "prison",
                "guards",
                "participated",
                "in",
                "the",
                "uprising",
                "?"
            ],
            "fastalign.seq2seq": [
                [],
                [
                    0,
                    1,
                    5
                ],
                [
                    2
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [],
                [
                    6
                ],
                [
                    7
                ],
                [],
                [],
                [],
                [
                    8,
                    9,
                    11
                ],
                [],
                [],
                [
                    12
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [
                    2,
                    5,
                    7
                ],
                [],
                [],
                [
                    3,
                    4
                ],
                [],
                [
                    6,
                    8
                ],
                [],
                [],
                [
                    11
                ],
                [],
                [
                    12
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    11
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    11
                ],
                [
                    10,
                    11
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    12,
                    12
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1115_528f710c-19e5-4345-983c-7bad01062164",
        "question_text": "How many years did the rule of Owen MacCarthy Reagh take?",
        "split": "train",
        "decomposition": "return years of the  rule of  Owen MacCarthy Reagh ;return number of  #1",
        "program": [
            "SELECT['years of the rule of Owen MacCarthy Reagh']",
            "AGGREGATE['count', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "years of the rule of Owen MacCarthy Reagh"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the rule of Owen MacCarthy Reagh)"
            ]
        ],
        "drop_nested_expression": [
            "Year_Diff_Single_Event",
            [
                "SELECT",
                "GET_QUESTION_SPAN(years of the rule of Owen MacCarthy Reagh)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1,
                    2,
                    3,
                    5,
                    7,
                    8,
                    10
                ],
                [
                    4,
                    6,
                    9
                ],
                [
                    11
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "years",
                "did",
                "the",
                "rule",
                "of",
                "Owen",
                "MacCarthy",
                "Reagh",
                "take",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1,
                    2,
                    3,
                    5,
                    10
                ],
                [],
                [
                    4,
                    6,
                    7
                ],
                [
                    8
                ],
                [
                    9
                ],
                [
                    11
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    2
                ],
                [
                    3,
                    10
                ],
                [
                    5,
                    7,
                    8,
                    9
                ],
                [
                    4,
                    6
                ],
                [],
                [
                    11
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_nfl_697_ec77e35f-0501-43fb-9df2-02f427fdcc62",
        "question_text": "How many touchdowns had Moss had before the 43-yard touchdown in the first quarter?",
        "split": "train",
        "decomposition": "return the 43-yard touchdown of Moss in  the  first quarter ;return touchdowns of Moss before #1 ;return the number of #2",
        "program": [
            "SELECT['the 43-yard touchdown of Moss in the first quarter']",
            "PROJECT['touchdowns of Moss before #REF', '#1']",
            "AGGREGATE['count', '#2']"
        ],
        "nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "touchdowns of Moss before #REF",
                [
                    "SELECT",
                    "the 43-yard touchdown of Moss in the first quarter"
                ]
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_count",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(touchdowns of Moss before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 43-yard touchdown of Moss in the first quarter)"
                ]
            ]
        ],
        "drop_nested_expression": [
            "SELECT_NUM",
            [
                "PROJECT",
                "GET_QUESTION_SPAN(touchdowns of Moss before #REF)",
                [
                    "SELECT",
                    "GET_QUESTION_SPAN(the 43-yard touchdown of Moss in the first quarter)"
                ]
            ]
        ],
        "operators": [
            "select",
            "project",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    1
                ],
                [
                    2,
                    3,
                    4,
                    5,
                    7,
                    9,
                    11
                ],
                [
                    6,
                    8
                ],
                [
                    10
                ],
                [
                    12,
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "How",
                "many",
                "touchdowns",
                "had",
                "Moss",
                "had",
                "before",
                "the",
                "43-yard",
                "touchdown",
                "in",
                "the",
                "first",
                "quarter",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0
                ],
                [
                    1
                ],
                [
                    2
                ],
                [
                    3,
                    5,
                    9
                ],
                [
                    4,
                    6
                ],
                [],
                [],
                [
                    8,
                    10,
                    12
                ],
                [],
                [
                    13
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [],
                [],
                [
                    3,
                    5
                ],
                [
                    2,
                    4,
                    6,
                    7,
                    8,
                    9,
                    11,
                    12
                ],
                [],
                [
                    10
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    13
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    13
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_1823_68912960-4568-487c-a3ee-b2a9db9fc611",
        "question_text": "Which month in 1973 had a lowest DM modification law, November or December?",
        "split": "train",
        "decomposition": "return modification of the DM in  the  law of  November 1973 ;return modification of the  DM in  the law of  December 1973 ;return which is the  lowest of #1 ,  #2",
        "program": [
            "SELECT['modification of the DM in the law of November 1973']",
            "SELECT['modification of the DM in the law of December 1973']",
            "COMPARISON['min', '#1', '#2']"
        ],
        "nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "modification of the DM in the law of November 1973"
            ],
            [
                "SELECT",
                "modification of the DM in the law of December 1973"
            ]
        ],
        "typed_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(modification of the DM in the law of November 1973)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(modification of the DM in the law of December 1973)"
            ]
        ],
        "drop_nested_expression": [
            "COMPARISON_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(modification of the DM in the law of November 1973)"
            ],
            [
                "SELECT",
                "GET_QUESTION_SPAN(modification of the DM in the law of December 1973)"
            ]
        ],
        "operators": [
            "select",
            "select",
            "comparison"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    0,
                    3,
                    4,
                    6,
                    10,
                    12
                ],
                [
                    1,
                    2,
                    5
                ],
                [
                    7,
                    8,
                    9,
                    11
                ],
                [],
                [
                    13,
                    14
                ]
            ],
            "question_tokens": [
                "Which",
                "month",
                "in",
                "1973",
                "had",
                "a",
                "lowest",
                "DM",
                "modification",
                "law",
                ",",
                "November",
                "or",
                "December",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    1
                ],
                [
                    0,
                    4
                ],
                [],
                [],
                [
                    2,
                    3,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ],
                [],
                [
                    10
                ],
                [
                    12,
                    13
                ],
                [
                    11
                ],
                [
                    14
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5,
                    10,
                    12
                ],
                [
                    3,
                    6
                ],
                [],
                [
                    7,
                    8
                ],
                [
                    9
                ],
                [],
                [
                    11,
                    13
                ],
                [
                    14
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    13
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    13
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    11,
                    11
                ],
                [
                    11,
                    13
                ],
                [
                    12,
                    12
                ],
                [
                    13,
                    13
                ],
                [
                    14,
                    14
                ]
            ]
        }
    },
    {
        "question_id": "DROP_train_history_2095_71e3f9f8-775d-4431-a1a6-bc3f00e776ad",
        "question_text": "What is the third smallest ethnic group living in Turkey?",
        "split": "train",
        "decomposition": "return the  ethnic groups living in Turkey ;return the  third smallest of #1",
        "program": [
            "SELECT['the ethnic groups living in Turkey']",
            "AGGREGATE['min', '#1']"
        ],
        "nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "the ethnic groups living in Turkey"
            ]
        ],
        "typed_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the ethnic groups living in Turkey)"
            ]
        ],
        "drop_nested_expression": [
            "AGGREGATE_min",
            [
                "SELECT",
                "GET_QUESTION_SPAN(the ethnic groups living in Turkey)"
            ]
        ],
        "operators": [
            "select",
            "aggregate"
        ],
        "extras": {
            "fastalign.seq2seq.inorder": [
                [
                    4,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    2,
                    8
                ],
                [
                    3,
                    7,
                    9,
                    10
                ]
            ],
            "question_tokens": [
                "What",
                "is",
                "the",
                "third",
                "smallest",
                "ethnic",
                "group",
                "living",
                "in",
                "Turkey",
                "?"
            ],
            "fastalign.seq2seq": [
                [
                    0,
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    6
                ],
                [],
                [
                    3,
                    7,
                    8
                ],
                [
                    9
                ],
                [
                    10
                ]
            ],
            "fastalign.grammar": [
                [
                    0,
                    1,
                    6
                ],
                [
                    5
                ],
                [
                    4
                ],
                [
                    2,
                    7,
                    8
                ],
                [],
                [
                    3,
                    9,
                    10
                ]
            ],
            "question_spans": [
                [
                    0,
                    0
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    10
                ]
            ]
        }
    }
]